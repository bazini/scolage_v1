<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 goto PFaev; t14Rf: if (is_php("\x35\56\x36")) { return; } goto EBApF; EBApF: if (!function_exists("\150\141\x73\150\x5f\145\x71\x75\141\154\163")) { function hash_equals($known_string, $user_string) { goto HXf1g; CzmDG: $diff = 0; goto s8Kr6; HXf1g: if (!is_string($known_string)) { trigger_error("\x68\x61\163\150\137\145\x71\165\x61\x6c\163\x28\51\x3a\x20\x45\170\x70\x65\x63\x74\x65\144\x20\153\156\x6f\x77\156\137\163\164\x72\151\156\147\x20\x74\157\40\x62\145\x20\141\40\x73\164\162\x69\156\x67\54\x20" . strtolower(gettype($known_string)) . "\40\147\151\166\145\156", E_USER_WARNING); return FALSE; } elseif (!is_string($user_string)) { trigger_error("\x68\141\163\150\x5f\x65\161\165\x61\x6c\x73\x28\51\72\40\105\x78\x70\145\143\164\145\144\40\x75\163\x65\162\137\x73\164\162\151\x6e\147\40\164\x6f\x20\142\145\40\x61\40\163\x74\162\x69\156\147\54\x20" . strtolower(gettype($user_string)) . "\40\147\x69\x76\145\x6e", E_USER_WARNING); return FALSE; } elseif (($length = strlen($known_string)) !== strlen($user_string)) { return FALSE; } goto CzmDG; ceNno: return $diff === 0; goto rKbIq; s8Kr6: for ($i = 0; $i < $length; $i++) { $diff |= ord($known_string[$i]) ^ ord($user_string[$i]); } goto ceNno; rKbIq: } } goto wTV7x; PFaev: defined("\102\x41\123\105\x50\101\124\x48") or exit("\x4e\x6f\40\x64\151\x72\145\x63\x74\x20\163\143\x72\151\160\x74\40\141\x63\x63\145\163\x73\40\141\154\x6c\157\167\145\x64"); goto t14Rf; wTV7x: if (is_php("\x35\56\x35")) { return; } goto iF2pO; iF2pO: if (!function_exists("\x68\x61\x73\x68\x5f\160\x62\x6b\144\x66\x32")) { function hash_pbkdf2($algo, $password, $salt, $iterations, $length = 0, $raw_output = FALSE) { goto icx2H; icx2H: if (!in_array(strtolower($algo), hash_algos(), TRUE)) { trigger_error("\150\x61\x73\x68\x5f\160\x62\x6b\x64\146\62\50\x29\72\40\125\156\153\x6e\157\167\x6e\x20\150\x61\x73\x68\x69\156\147\x20\141\x6c\147\157\x72\151\164\150\x6d\x3a\x20" . $algo, E_USER_WARNING); return FALSE; } goto yQje7; zUP2X: if (!$raw_output) { $hash = bin2hex($hash); } goto LenSA; yQje7: if (($type = gettype($iterations)) !== "\x69\x6e\164\x65\x67\x65\x72") { if ($type === "\x6f\142\152\145\143\164" && method_exists($iterations, "\x5f\137\x74\157\123\164\162\x69\x6e\x67")) { $iterations = (string) $iterations; } if (is_string($iterations) && is_numeric($iterations)) { $iterations = (int) $iterations; } else { trigger_error("\150\x61\x73\x68\137\x70\x62\x6b\x64\x66\x32\x28\51\40\145\170\160\145\x63\164\x73\40\x70\141\162\141\155\145\x74\145\x72\40\64\40\x74\x6f\x20\142\x65\x20\154\x6f\x6e\147\54\x20" . $type . "\40\147\151\x76\145\x6e", E_USER_WARNING); return NULL; } } goto pK5Xn; bkqpW: $hash_length = defined("\115\x42\137\x4f\126\x45\x52\114\117\x41\104\x5f\x53\x54\122\111\x4e\x47") ? mb_strlen(hash($algo, NULL, TRUE), "\x38\x62\x69\x74") : strlen(hash($algo, NULL, TRUE)); goto F0iLQ; F0iLQ: empty($length) && ($length = $hash_length); goto Y9AEu; s_1lx: $hash = ''; goto YCT8n; LenSA: return defined("\115\x42\x5f\117\x56\x45\122\114\x4f\x41\x44\x5f\x53\x54\122\111\x4e\107") ? mb_substr($hash, 0, $length, "\x38\x62\151\164") : substr($hash, 0, $length); goto iR8Ew; Y9AEu: static $block_sizes; goto DmcQA; YCT8n: for ($bc = (int) ceil($length / $hash_length), $bi = 1; $bi <= $bc; $bi++) { $key = $derived_key = hash_hmac($algo, $salt . pack("\116", $bi), $password, TRUE); for ($i = 1; $i < $iterations; $i++) { $derived_key ^= $key = hash_hmac($algo, $key, $password, TRUE); } $hash .= $derived_key; } goto zUP2X; CLVu6: if (($type = gettype($length)) !== "\x69\x6e\164\145\x67\145\x72") { if ($type === "\157\x62\152\145\143\x74" && method_exists($length, "\137\x5f\164\157\123\x74\x72\151\x6e\147")) { $length = (string) $length; } if (is_string($length) && is_numeric($length)) { $length = (int) $length; } else { trigger_error("\150\x61\x73\x68\137\x70\x62\x6b\144\146\x32\x28\51\40\145\x78\160\145\x63\x74\x73\40\x70\141\x72\x61\155\x65\x74\x65\x72\x20\65\40\164\157\40\x62\145\40\x6c\157\x6e\147\x2c\40" . $type . "\40\147\x69\166\145\x6e", E_USER_WARNING); return NULL; } } goto y8uD2; y8uD2: if ($length < 0) { trigger_error("\150\x61\163\x68\137\x70\142\x6b\144\x66\x32\50\x29\x3a\x20\x4c\x65\156\x67\x74\x68\40\x6d\165\x73\x74\x20\142\145\40\147\162\145\141\164\145\x72\x20\x74\150\141\x6e\x20\157\162\x20\x65\161\x75\141\154\40\164\x6f\x20\60\72\40" . $length, E_USER_WARNING); return FALSE; } goto bkqpW; LUfNR: if (isset($block_sizes[$algo], $password[$block_sizes[$algo]])) { $password = hash($algo, $password, TRUE); } goto s_1lx; pK5Xn: if ($iterations < 1) { trigger_error("\150\x61\163\150\137\160\x62\x6b\144\x66\62\50\51\72\x20\x49\164\145\162\141\164\x69\x6f\x6e\x73\40\155\165\163\x74\40\x62\145\x20\x61\40\160\157\163\x69\164\x69\x76\145\40\x69\156\164\x65\x67\x65\162\72\40" . $iterations, E_USER_WARNING); return FALSE; } goto CLVu6; DmcQA: empty($block_sizes) && ($block_sizes = array("\x67\x6f\163\164" => 32, "\x68\x61\x76\141\x6c\x31\x32\70\54\x33" => 128, "\x68\141\x76\141\154\x31\66\60\x2c\63" => 128, "\x68\x61\x76\x61\154\61\71\x32\x2c\x33" => 128, "\x68\141\x76\141\154\x32\x32\x34\x2c\x33" => 128, "\x68\141\166\141\154\x32\x35\x36\x2c\x33" => 128, "\x68\141\166\141\x6c\61\62\x38\x2c\x34" => 128, "\150\141\x76\141\x6c\x31\66\x30\54\64" => 128, "\150\x61\x76\141\x6c\x31\71\62\x2c\x34" => 128, "\150\141\x76\x61\154\62\62\x34\54\x34" => 128, "\x68\x61\166\141\x6c\62\x35\x36\54\x34" => 128, "\150\x61\166\x61\154\61\x32\x38\x2c\65" => 128, "\150\x61\166\141\154\61\66\60\54\65" => 128, "\x68\x61\x76\141\154\x31\71\62\54\65" => 128, "\x68\x61\166\141\154\62\62\x34\54\65" => 128, "\150\x61\166\141\154\x32\65\66\x2c\x35" => 128, "\x6d\144\x32" => 16, "\155\144\64" => 64, "\x6d\x64\65" => 64, "\x72\151\x70\145\x6d\x64\61\62\x38" => 64, "\162\151\160\145\155\144\61\x36\60" => 64, "\162\151\160\145\x6d\x64\62\65\66" => 64, "\162\151\x70\x65\x6d\x64\63\x32\60" => 64, "\163\141\154\163\141\61\60" => 64, "\163\141\154\x73\141\62\60" => 64, "\163\150\141\61" => 64, "\163\150\141\62\x32\64" => 64, "\x73\x68\x61\x32\65\66" => 64, "\x73\150\141\63\70\64" => 128, "\163\150\x61\65\x31\62" => 128, "\x73\x6e\145\146\162\165" => 32, "\x73\156\x65\x66\x72\x75\x32\65\x36" => 32, "\x74\151\147\x65\x72\61\x32\x38\x2c\x33" => 64, "\164\x69\x67\145\x72\x31\66\x30\x2c\63" => 64, "\x74\x69\x67\x65\x72\61\71\x32\x2c\x33" => 64, "\164\x69\x67\145\x72\x31\62\x38\x2c\64" => 64, "\164\151\x67\x65\162\x31\66\60\54\x34" => 64, "\x74\x69\147\x65\162\x31\71\x32\x2c\x34" => 64, "\167\x68\x69\x72\154\160\x6f\157\x6c" => 64)); goto LUfNR; iR8Ew: } }
