<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\x53\105\120\101\x54\x48") or exit("\116\x6f\40\144\151\x72\x65\143\x74\40\x73\x63\x72\x69\160\164\x20\x61\x63\143\x65\163\163\40\x61\154\x6c\157\x77\x65\144"); class CI_Input { protected $ip_address = FALSE; protected $_allow_get_array = TRUE; protected $_standardize_newlines; protected $_enable_xss = FALSE; protected $_enable_csrf = FALSE; protected $headers = array(); protected $_raw_input_stream; protected $_input_stream; protected $security; protected $uni; public function __construct() { goto xw9xl; tUBWf: if ($this->_enable_csrf === TRUE && !is_cli()) { $this->security->csrf_verify(); } goto nUCJR; nUCJR: log_message("\151\x6e\146\157", "\111\x6e\160\165\x74\40\x43\154\141\163\163\x20\111\156\x69\164\x69\141\154\x69\x7a\x65\144"); goto p4FNx; a10yI: if (UTF8_ENABLED === TRUE) { $this->uni =& load_class("\x55\164\x66\70", "\x63\x6f\162\145"); } goto qdPms; xw9xl: $this->_allow_get_array = config_item("\x61\x6c\154\157\x77\137\x67\x65\x74\x5f\141\162\x72\x61\171") !== FALSE; goto z2ybo; qdPms: $this->_sanitize_globals(); goto tUBWf; h2g9F: $this->_standardize_newlines = (bool) config_item("\163\164\x61\156\x64\141\162\x64\x69\172\145\137\156\x65\x77\x6c\x69\x6e\x65\x73"); goto cIDrs; gsZjv: $this->_enable_csrf = config_item("\x63\x73\x72\146\x5f\160\162\x6f\164\145\143\x74\x69\157\156") === TRUE; goto h2g9F; z2ybo: $this->_enable_xss = config_item("\x67\154\x6f\142\x61\154\137\x78\x73\x73\137\146\x69\x6c\x74\145\x72\151\156\x67") === TRUE; goto gsZjv; cIDrs: $this->security =& load_class("\123\x65\143\165\162\x69\164\x79", "\x63\x6f\162\x65"); goto a10yI; p4FNx: } protected function _fetch_from_array(&$array, $index = NULL, $xss_clean = NULL) { goto b93FJ; AExhI: return $xss_clean === TRUE ? $this->security->xss_clean($value) : $value; goto VzbZx; Cwxmr: if (isset($array[$index])) { $value = $array[$index]; } elseif (($count = preg_match_all("\x2f\x28\77\72\x5e\x5b\x5e\x5c\133\135\53\51\x7c\134\133\x5b\x5e\135\x5d\52\x5c\135\57", $index, $matches)) > 1) { $value = $array; for ($i = 0; $i < $count; $i++) { $key = trim($matches[0][$i], "\x5b\135"); if ($key === '') { break; } if (isset($value[$key])) { $value = $value[$key]; } else { return NULL; } } } else { return NULL; } goto AExhI; aMBJE: if (is_array($index)) { goto RSQUp; tFMrP: foreach ($index as $key) { $output[$key] = $this->_fetch_from_array($array, $key, $xss_clean); } goto jZQDx; jZQDx: return $output; goto OmTte; RSQUp: $output = array(); goto tFMrP; OmTte: } goto Cwxmr; b93FJ: is_bool($xss_clean) or $xss_clean = $this->_enable_xss; goto G32Tc; G32Tc: isset($index) or $index = array_keys($array); goto aMBJE; VzbZx: } public function get($index = NULL, $xss_clean = NULL) { return $this->_fetch_from_array($_GET, $index, $xss_clean); } public function post($index = NULL, $xss_clean = NULL) { return $this->_fetch_from_array($_POST, $index, $xss_clean); } public function post_get($index, $xss_clean = NULL) { return isset($_POST[$index]) ? $this->post($index, $xss_clean) : $this->get($index, $xss_clean); } public function get_post($index, $xss_clean = NULL) { return isset($_GET[$index]) ? $this->get($index, $xss_clean) : $this->post($index, $xss_clean); } public function cookie($index = NULL, $xss_clean = NULL) { return $this->_fetch_from_array($_COOKIE, $index, $xss_clean); } public function server($index, $xss_clean = NULL) { return $this->_fetch_from_array($_SERVER, $index, $xss_clean); } public function input_stream($index = NULL, $xss_clean = NULL) { if (!is_array($this->_input_stream)) { parse_str($this->raw_input_stream, $this->_input_stream); is_array($this->_input_stream) or $this->_input_stream = array(); } return $this->_fetch_from_array($this->_input_stream, $index, $xss_clean); } public function set_cookie($name, $value = '', $expire = '', $domain = '', $path = "\57", $prefix = '', $secure = NULL, $httponly = NULL) { goto bCi1X; bCi1X: if (is_array($name)) { foreach (array("\x76\x61\x6c\165\x65", "\x65\170\x70\151\162\x65", "\x64\x6f\155\x61\151\156", "\x70\x61\x74\x68", "\x70\162\x65\x66\151\170", "\163\145\143\x75\162\x65", "\150\x74\164\x70\x6f\156\154\171", "\156\141\155\x65") as $item) { if (isset($name[$item])) { ${$item} = $name[$item]; } } } goto vnyFN; TYOSk: setcookie($prefix . $name, $value, $expire, $path, $domain, $secure, $httponly); goto pPAy2; baAv7: $secure = $secure === NULL && config_item("\x63\x6f\157\153\x69\x65\137\163\x65\143\165\x72\145") !== NULL ? (bool) config_item("\143\x6f\157\153\x69\145\x5f\163\145\x63\165\x72\x65") : (bool) $secure; goto uSzym; nGYfk: if ($path === "\57" && config_item("\x63\157\x6f\153\151\x65\x5f\x70\141\164\x68") !== "\x2f") { $path = config_item("\x63\x6f\157\x6b\151\145\137\x70\x61\x74\x68"); } goto baAv7; t6788: if (!is_numeric($expire)) { $expire = time() - 86500; } else { $expire = $expire > 0 ? time() + $expire : 0; } goto TYOSk; vnyFN: if ($prefix === '' && config_item("\143\157\x6f\x6b\x69\145\x5f\x70\x72\145\x66\x69\x78") !== '') { $prefix = config_item("\143\x6f\x6f\153\x69\145\x5f\160\x72\x65\x66\151\170"); } goto LHgWa; uSzym: $httponly = $httponly === NULL && config_item("\x63\157\x6f\153\x69\145\137\x68\164\164\x70\157\156\154\x79") !== NULL ? (bool) config_item("\143\x6f\x6f\153\151\x65\137\x68\x74\164\160\x6f\156\154\x79") : (bool) $httponly; goto t6788; LHgWa: if ($domain == '' && config_item("\143\157\157\x6b\151\145\137\144\x6f\155\x61\151\x6e") != '') { $domain = config_item("\143\x6f\x6f\x6b\151\x65\x5f\144\x6f\x6d\x61\x69\x6e"); } goto nGYfk; pPAy2: } public function ip_address() { goto tCEL3; sMIOI: if (!empty($proxy_ips) && !is_array($proxy_ips)) { $proxy_ips = explode("\x2c", str_replace("\x20", '', $proxy_ips)); } goto TaZWV; ux7WQ: $proxy_ips = config_item("\x70\x72\157\x78\x79\137\151\x70\163"); goto sMIOI; EIrae: if (!$this->valid_ip($this->ip_address)) { return $this->ip_address = "\x30\x2e\x30\56\x30\56\60"; } goto tYddo; tYddo: return $this->ip_address; goto O1mPd; tCEL3: if ($this->ip_address !== FALSE) { return $this->ip_address; } goto ux7WQ; pF5nY: if ($proxy_ips) { foreach (array("\x48\x54\x54\120\137\x58\137\x46\x4f\122\x57\x41\122\104\105\x44\x5f\106\x4f\x52", "\x48\x54\124\x50\x5f\103\x4c\111\x45\116\124\x5f\x49\x50", "\110\124\124\120\137\130\137\103\x4c\x49\x45\116\124\x5f\x49\x50", "\x48\124\x54\120\137\x58\x5f\x43\x4c\125\123\x54\x45\x52\x5f\x43\x4c\x49\105\x4e\124\137\x49\120") as $header) { if (($spoof = $this->server($header)) !== NULL) { sscanf($spoof, "\45\x5b\x5e\x2c\x5d", $spoof); if (!$this->valid_ip($spoof)) { $spoof = NULL; } else { break; } } } if ($spoof) { for ($i = 0, $c = count($proxy_ips); $i < $c; $i++) { if (strpos($proxy_ips[$i], "\x2f") === FALSE) { if ($proxy_ips[$i] === $this->ip_address) { $this->ip_address = $spoof; break; } continue; } isset($separator) or $separator = $this->valid_ip($this->ip_address, "\151\160\x76\x36") ? "\72" : "\x2e"; if (strpos($proxy_ips[$i], $separator) === FALSE) { continue; } if (!isset($ip, $sprintf)) { if ($separator === "\72") { goto QvvOL; tpFtg: for ($j = 0; $j < 8; $j++) { $ip[$j] = intval($ip[$j], 16); } goto zMgvb; zMgvb: $sprintf = "\x25\60\61\x36\x62\45\60\x31\x36\x62\x25\x30\x31\66\x62\x25\60\61\66\142\45\x30\x31\x36\142\x25\x30\x31\66\142\45\60\x31\66\142\45\x30\x31\66\x62"; goto sph2u; QvvOL: $ip = explode("\72", str_replace("\72\x3a", str_repeat("\72", 9 - substr_count($this->ip_address, "\72")), $this->ip_address)); goto tpFtg; sph2u: } else { $ip = explode("\56", $this->ip_address); $sprintf = "\x25\x30\70\x62\x25\x30\x38\142\x25\x30\70\x62\x25\x30\70\x62"; } $ip = vsprintf($sprintf, $ip); } sscanf($proxy_ips[$i], "\45\x5b\x5e\57\x5d\57\x25\144", $netaddr, $masklen); if ($separator === "\x3a") { $netaddr = explode("\x3a", str_replace("\x3a\x3a", str_repeat("\x3a", 9 - substr_count($netaddr, "\x3a")), $netaddr)); for ($j = 0; $j < 8; $j++) { $netaddr[$j] = intval($netaddr[$j], 16); } } else { $netaddr = explode("\x2e", $netaddr); } if (strncmp($ip, vsprintf($sprintf, $netaddr), $masklen) === 0) { $this->ip_address = $spoof; break; } } } } goto EIrae; TaZWV: $this->ip_address = $this->server("\x52\105\115\117\x54\105\x5f\101\x44\104\122"); goto pF5nY; O1mPd: } public function valid_ip($ip, $which = '') { switch (strtolower($which)) { case "\x69\160\166\64": $which = FILTER_FLAG_IPV4; break; case "\x69\x70\x76\66": $which = FILTER_FLAG_IPV6; break; default: $which = NULL; break; } return (bool) filter_var($ip, FILTER_VALIDATE_IP, $which); } public function user_agent($xss_clean = NULL) { return $this->_fetch_from_array($_SERVER, "\110\x54\x54\120\137\125\x53\105\122\x5f\x41\107\x45\116\x54", $xss_clean); } protected function _sanitize_globals() { goto PocDQ; PocDQ: if ($this->_allow_get_array === FALSE) { $_GET = array(); } elseif (is_array($_GET)) { foreach ($_GET as $key => $val) { $_GET[$this->_clean_input_keys($key)] = $this->_clean_input_data($val); } } goto AIAUE; i_dkg: $_SERVER["\x50\110\x50\137\123\x45\114\106"] = strip_tags($_SERVER["\x50\110\x50\137\123\x45\114\106"]); goto v7kns; v7kns: log_message("\144\145\x62\x75\147", "\107\x6c\x6f\x62\141\154\x20\120\117\x53\x54\x2c\x20\x47\x45\x54\40\141\156\x64\40\103\117\117\113\111\x45\40\144\x61\164\141\x20\163\x61\156\x69\164\151\172\145\x64"); goto u7gpM; AIAUE: if (is_array($_POST)) { foreach ($_POST as $key => $val) { $_POST[$this->_clean_input_keys($key)] = $this->_clean_input_data($val); } } goto EUAMF; EUAMF: if (is_array($_COOKIE)) { unset($_COOKIE["\44\126\145\x72\163\151\x6f\156"], $_COOKIE["\44\x50\141\x74\x68"], $_COOKIE["\x24\x44\x6f\x6d\x61\151\x6e"]); foreach ($_COOKIE as $key => $val) { if (($cookie_key = $this->_clean_input_keys($key)) !== FALSE) { $_COOKIE[$cookie_key] = $this->_clean_input_data($val); } else { unset($_COOKIE[$key]); } } } goto i_dkg; u7gpM: } protected function _clean_input_data($str) { goto Q65gD; Dkf_h: $str = remove_invisible_characters($str, FALSE); goto PROst; Q65gD: if (is_array($str)) { goto BHT1G; eCcN2: return $new_array; goto xTWBp; BHT1G: $new_array = array(); goto Z1Jv1; Z1Jv1: foreach (array_keys($str) as $key) { $new_array[$this->_clean_input_keys($key)] = $this->_clean_input_data($str[$key]); } goto eCcN2; xTWBp: } goto drwxy; dGkAl: return $str; goto BZYux; xdwqG: if (UTF8_ENABLED === TRUE) { $str = $this->uni->clean_string($str); } goto Dkf_h; PROst: if ($this->_standardize_newlines === TRUE) { return preg_replace("\57\50\x3f\72\134\x72\134\x6e\x7c\x5b\134\162\134\156\x5d\x29\x2f", PHP_EOL, $str); } goto dGkAl; drwxy: if (!is_php("\x35\x2e\64") && get_magic_quotes_gpc()) { $str = stripslashes($str); } goto xdwqG; BZYux: } protected function _clean_input_keys($str, $fatal = TRUE) { goto GB36m; OEnqL: if (UTF8_ENABLED === TRUE) { return $this->uni->clean_string($str); } goto DqmLm; GB36m: if (!preg_match("\x2f\136\x5b\141\x2d\172\60\55\71\72\137\x5c\x2f\174\55\x5d\53\x24\57\151", $str)) { if ($fatal === TRUE) { return FALSE; } else { goto K3zi3; vx35l: exit(7); goto iG337; rEB_x: echo "\104\x69\163\x61\x6c\154\157\x77\145\144\x20\x4b\145\x79\40\103\x68\141\x72\x61\x63\x74\145\162\163\56"; goto vx35l; K3zi3: set_status_header(503); goto rEB_x; iG337: } } goto OEnqL; DqmLm: return $str; goto McPIp; McPIp: } public function request_headers($xss_clean = FALSE) { goto PvrY9; mNQuN: return $this->_fetch_from_array($this->headers, NULL, $xss_clean); goto r9xky; OYpA4: if (function_exists("\x61\160\x61\143\x68\145\137\162\145\x71\x75\145\163\164\137\x68\x65\x61\x64\x65\x72\163")) { $this->headers = apache_request_headers(); } else { isset($_SERVER["\x43\x4f\116\x54\105\116\x54\137\124\131\x50\x45"]) && ($this->headers["\103\157\156\164\145\x6e\x74\x2d\x54\171\x70\x65"] = $_SERVER["\103\x4f\116\124\x45\116\x54\137\x54\131\x50\105"]); foreach ($_SERVER as $key => $val) { if (sscanf($key, "\110\x54\124\x50\137\45\x73", $header) === 1) { goto QGoVs; UyBda: $this->headers[$header] = $_SERVER[$key]; goto xnz7q; YSDbT: $header = str_replace("\40", "\55", ucwords($header)); goto UyBda; QGoVs: $header = str_replace("\137", "\x20", strtolower($header)); goto YSDbT; xnz7q: } } } goto mNQuN; PvrY9: if (!empty($this->headers)) { return $this->_fetch_from_array($this->headers, NULL, $xss_clean); } goto OYpA4; r9xky: } public function get_request_header($index, $xss_clean = FALSE) { goto emi00; nvXeC: if (!isset($headers[$index])) { return NULL; } goto bMgK8; OO9or: $index = strtolower($index); goto nvXeC; cKfS2: if (!isset($headers)) { empty($this->headers) && $this->request_headers(); foreach ($this->headers as $key => $value) { $headers[strtolower($key)] = $value; } } goto OO9or; bMgK8: return $xss_clean === TRUE ? $this->security->xss_clean($headers[$index]) : $headers[$index]; goto w_JLi; emi00: static $headers; goto cKfS2; w_JLi: } public function is_ajax_request() { return !empty($_SERVER["\x48\124\x54\x50\x5f\130\137\122\105\121\x55\x45\x53\x54\x45\104\137\x57\x49\x54\x48"]) && strtolower($_SERVER["\110\x54\x54\x50\137\130\x5f\122\105\x51\125\105\x53\x54\x45\104\137\x57\111\x54\110"]) === "\x78\155\154\x68\164\164\x70\162\145\161\165\145\x73\x74"; } public function is_cli_request() { return is_cli(); } public function method($upper = FALSE) { return $upper ? strtoupper($this->server("\x52\105\x51\x55\x45\x53\124\x5f\x4d\105\124\x48\117\x44")) : strtolower($this->server("\x52\x45\x51\x55\x45\123\x54\137\115\105\x54\x48\117\x44")); } public function __get($name) { if ($name === "\x72\141\x77\137\x69\x6e\160\x75\x74\x5f\163\164\x72\145\x61\155") { isset($this->_raw_input_stream) or $this->_raw_input_stream = file_get_contents("\160\x68\160\x3a\x2f\57\151\156\x70\x75\x74"); return $this->_raw_input_stream; } elseif ($name === "\x69\x70\x5f\x61\x64\144\162\x65\x73\x73") { return $this->ip_address; } } }
