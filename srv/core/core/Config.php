<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\123\105\120\x41\124\x48") or exit("\116\157\x20\144\151\162\145\x63\164\40\x73\x63\162\151\x70\164\x20\141\x63\x63\145\x73\x73\x20\x61\x6c\x6c\157\x77\145\x64"); class CI_Config { public $config = array(); public $is_loaded = array(); public $_config_paths = array(APPPATH); public function __construct() { goto seLuA; seLuA: $this->config =& get_config(); goto Z6PJk; Z6PJk: if (empty($this->config["\142\141\x73\x65\137\165\x72\x6c"])) { if (isset($_SERVER["\123\x45\122\126\x45\122\137\x41\104\104\x52"])) { if (strpos($_SERVER["\x53\105\x52\126\105\122\x5f\101\104\x44\x52"], "\x3a") !== FALSE) { $server_addr = "\x5b" . $_SERVER["\123\x45\x52\126\105\122\x5f\x41\104\x44\x52"] . "\x5d"; } else { $server_addr = $_SERVER["\x53\x45\x52\x56\105\122\x5f\x41\104\x44\x52"]; } $base_url = (is_https() ? "\150\x74\x74\x70\x73" : "\x68\164\x74\x70") . "\x3a\57\x2f" . $server_addr . substr($_SERVER["\123\103\122\x49\x50\x54\x5f\x4e\x41\x4d\x45"], 0, strpos($_SERVER["\x53\x43\x52\x49\120\124\x5f\116\101\115\x45"], basename($_SERVER["\123\103\122\111\x50\124\137\x46\111\x4c\105\116\101\115\x45"]))); } else { $base_url = "\x68\x74\x74\160\x3a\x2f\57\154\157\x63\141\x6c\x68\x6f\163\164\x2f"; } $this->set_item("\142\x61\x73\145\137\165\162\154", $base_url); } goto Z8OA6; Z8OA6: log_message("\151\156\x66\157", "\103\157\156\x66\x69\x67\40\x43\x6c\x61\163\x73\40\x49\156\151\164\151\x61\154\151\x7a\145\x64"); goto vwtS1; vwtS1: } public function load($file = '', $use_sections = FALSE, $fail_gracefully = FALSE) { goto teDJc; ZenoK: foreach ($this->_config_paths as $path) { foreach (array($file, ENVIRONMENT . DIRECTORY_SEPARATOR . $file) as $location) { goto gI0r_; VSE8X: if (in_array($file_path, $this->is_loaded, TRUE)) { return TRUE; } goto mZHHE; mZHHE: if (!file_exists($file_path)) { continue; } goto b0027; Twm8v: $config = NULL; goto iKGP5; JBbgo: if (!isset($config) or !is_array($config)) { if ($fail_gracefully === TRUE) { return FALSE; } show_error("\131\157\x75\x72\40" . $file_path . "\40\x66\x69\x6c\x65\40\x64\157\x65\163\40\156\x6f\164\40\141\x70\160\145\141\x72\40\x74\157\40\x63\157\156\164\141\x69\x6e\40\141\x20\166\x61\154\151\144\40\x63\x6f\156\146\151\147\165\x72\x61\x74\x69\x6f\x6e\x20\x61\162\162\141\171\56"); } goto G8myT; b0027: include $file_path; goto JBbgo; G8myT: if ($use_sections === TRUE) { $this->config[$file] = isset($this->config[$file]) ? array_merge($this->config[$file], $config) : $config; } else { $this->config = array_merge($this->config, $config); } goto iM4ku; JYlSm: log_message("\x64\145\x62\165\x67", "\x43\x6f\x6e\x66\151\147\40\146\151\154\145\x20\x6c\x6f\141\144\x65\x64\x3a\40" . $file_path); goto DIfgy; iKGP5: $loaded = TRUE; goto JYlSm; iM4ku: $this->is_loaded[] = $file_path; goto Twm8v; gI0r_: $file_path = $path . "\x63\x6f\156\146\x69\x67\57" . $location . "\x2e\160\150\160"; goto VSE8X; DIfgy: } } goto NWxQf; NWxQf: if ($loaded === TRUE) { return TRUE; } elseif ($fail_gracefully === TRUE) { return FALSE; } goto SOb5N; qo5H7: $loaded = FALSE; goto ZenoK; teDJc: $file = $file === '' ? "\143\157\156\x66\x69\x67" : str_replace("\56\x70\150\160", '', $file); goto qo5H7; SOb5N: show_error("\124\150\145\x20\x63\x6f\x6e\x66\x69\147\x75\162\141\164\151\157\156\x20\146\x69\154\145\x20" . $file . "\56\x70\x68\160\40\x64\x6f\145\x73\x20\x6e\157\164\x20\x65\x78\151\163\x74\56"); goto kJR5d; kJR5d: } public function item($item, $index = '') { if ($index == '') { return isset($this->config[$item]) ? $this->config[$item] : NULL; } return isset($this->config[$index], $this->config[$index][$item]) ? $this->config[$index][$item] : NULL; } public function slash_item($item) { if (!isset($this->config[$item])) { return NULL; } elseif (trim($this->config[$item]) === '') { return ''; } return rtrim($this->config[$item], "\x2f") . "\57"; } public function site_url($uri = '', $protocol = NULL) { goto wlPeg; FJTSD: if (empty($uri)) { return $base_url . $this->item("\151\156\x64\145\170\x5f\160\141\147\x65"); } goto PEB2o; wlPeg: $base_url = $this->slash_item("\x62\141\163\145\137\165\x72\x6c"); goto bTVMK; aKc1Q: if ($this->item("\145\x6e\141\142\x6c\145\137\x71\165\x65\162\x79\x5f\x73\x74\x72\x69\156\147\x73") === FALSE) { goto sK959; sK959: $suffix = isset($this->config["\165\162\x6c\x5f\163\165\x66\146\151\170"]) ? $this->config["\165\x72\154\x5f\163\165\146\146\151\170"] : ''; goto HUIJ1; HUIJ1: if ($suffix !== '') { if (($offset = strpos($uri, "\77")) !== FALSE) { $uri = substr($uri, 0, $offset) . $suffix . substr($uri, $offset); } else { $uri .= $suffix; } } goto D3oKP; D3oKP: return $base_url . $this->slash_item("\151\156\x64\x65\170\137\160\141\147\145") . $uri; goto aGMop; aGMop: } elseif (strpos($uri, "\x3f") === FALSE) { $uri = "\x3f" . $uri; } goto Blb_j; PEB2o: $uri = $this->_uri_string($uri); goto aKc1Q; Blb_j: return $base_url . $this->item("\151\156\x64\145\x78\x5f\160\141\147\145") . $uri; goto WebRm; bTVMK: if (isset($protocol)) { if ($protocol === '') { $base_url = substr($base_url, strpos($base_url, "\57\x2f")); } else { $base_url = $protocol . substr($base_url, strpos($base_url, "\x3a\57\x2f")); } } goto FJTSD; WebRm: } public function base_url($uri = '', $protocol = NULL) { goto MNUAE; f_9qC: return $base_url . $this->_uri_string($uri); goto V6PVP; MNUAE: $base_url = $this->slash_item("\x62\141\163\x65\x5f\x75\162\154"); goto o0EAI; o0EAI: if (isset($protocol)) { if ($protocol === '') { $base_url = substr($base_url, strpos($base_url, "\57\57")); } else { $base_url = $protocol . substr($base_url, strpos($base_url, "\72\57\57")); } } goto f_9qC; V6PVP: } protected function _uri_string($uri) { if ($this->item("\x65\156\141\142\x6c\x65\137\161\x75\x65\162\x79\137\x73\x74\162\x69\x6e\x67\163") === FALSE) { is_array($uri) && ($uri = implode("\x2f", $uri)); return ltrim($uri, "\57"); } elseif (is_array($uri)) { return http_build_query($uri); } return $uri; } public function system_url() { $x = explode("\57", preg_replace("\x7c\x2f\52\x28\x2e\53\x3f\51\x2f\x2a\x24\174", "\134\61", BASEPATH)); return $this->slash_item("\x62\141\x73\145\x5f\165\162\x6c") . end($x) . "\57"; } public function set_item($item, $value) { $this->config[$item] = $value; } }
