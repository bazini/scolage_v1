<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\x53\x45\120\x41\x54\110") or exit("\116\157\x20\x64\x69\162\x65\143\164\40\x73\143\162\151\160\x74\x20\x61\x63\x63\145\x73\163\x20\141\x6c\x6c\157\x77\145\144"); class CI_URI { public $keyval = array(); public $uri_string = ''; public $segments = array(); public $rsegments = array(); protected $_permitted_uri_chars; public function __construct() { goto YUp6Q; fo07f: log_message("\151\x6e\x66\x6f", "\125\122\111\40\103\x6c\x61\163\x73\40\111\156\x69\164\151\141\154\x69\x7a\x65\144"); goto TTo8y; b5t41: if (is_cli() or $this->config->item("\145\156\x61\142\154\x65\137\x71\x75\145\162\x79\137\163\164\162\x69\156\147\163") !== TRUE) { goto iXxg5; HzlhF: $this->_set_uri_string($uri); goto CQwm8; po_Ug: if (is_cli()) { $uri = $this->_parse_argv(); } else { goto jH4gu; jH4gu: $protocol = $this->config->item("\165\x72\151\x5f\x70\162\157\x74\x6f\143\x6f\x6c"); goto J6p9h; J6p9h: empty($protocol) && ($protocol = "\122\105\121\125\x45\x53\x54\137\x55\122\111"); goto Z2K9W; Z2K9W: switch ($protocol) { case "\101\x55\x54\x4f": case "\x52\105\x51\x55\105\x53\x54\x5f\x55\x52\111": $uri = $this->_parse_request_uri(); break; case "\x51\x55\x45\x52\131\x5f\x53\124\x52\111\116\107": $uri = $this->_parse_query_string(); break; case "\120\x41\124\x48\x5f\x49\116\106\x4f": default: $uri = isset($_SERVER[$protocol]) ? $_SERVER[$protocol] : $this->_parse_request_uri(); break; } goto mXlMe; mXlMe: } goto HzlhF; iXxg5: $this->_permitted_uri_chars = $this->config->item("\160\x65\162\x6d\151\x74\x74\145\144\x5f\x75\162\x69\137\143\150\x61\162\x73"); goto po_Ug; CQwm8: } goto fo07f; YUp6Q: $this->config =& load_class("\x43\x6f\x6e\146\151\x67", "\x63\x6f\x72\x65"); goto b5t41; TTo8y: } protected function _set_uri_string($str) { $this->uri_string = trim(remove_invisible_characters($str, FALSE), "\57"); if ($this->uri_string !== '') { goto lrVU8; RW9lB: $this->segments[0] = NULL; goto Dx33b; Dx33b: foreach (explode("\57", trim($this->uri_string, "\x2f")) as $val) { goto lfmKG; wOdxh: if ($val !== '') { $this->segments[] = $val; } goto vDJt3; oNyxm: $this->filter_uri($val); goto wOdxh; lfmKG: $val = trim($val); goto oNyxm; vDJt3: } goto B0m1o; lrVU8: if (($suffix = (string) $this->config->item("\x75\162\x6c\137\x73\165\x66\x66\151\x78")) !== '') { $slen = strlen($suffix); if (substr($this->uri_string, -$slen) === $suffix) { $this->uri_string = substr($this->uri_string, 0, -$slen); } } goto RW9lB; B0m1o: unset($this->segments[0]); goto vBrDa; vBrDa: } } protected function _parse_request_uri() { goto tT1n0; TFFUJ: $uri = isset($uri["\160\141\164\x68"]) ? $uri["\160\x61\164\150"] : ''; goto YHGp9; xBjL7: if (trim($uri, "\57") === '' && strncmp($query, "\x2f", 1) === 0) { goto sZWqB; WSFAI: $_SERVER["\121\125\x45\122\131\x5f\123\x54\122\x49\116\107"] = isset($query[1]) ? $query[1] : ''; goto vjs7J; C46a0: $uri = $query[0]; goto WSFAI; sZWqB: $query = explode("\x3f", $query, 2); goto C46a0; vjs7J: } else { $_SERVER["\x51\x55\x45\x52\x59\137\x53\124\122\111\116\x47"] = $query; } goto CRXQz; inik2: $query = isset($uri["\161\165\x65\x72\171"]) ? $uri["\x71\x75\x65\162\171"] : ''; goto TFFUJ; tT1n0: if (!isset($_SERVER["\x52\105\121\x55\x45\123\124\x5f\125\122\111"], $_SERVER["\x53\103\x52\x49\120\124\137\x4e\x41\115\105"])) { return ''; } goto hAf17; A8vFp: if ($uri === "\x2f" or $uri === '') { return "\57"; } goto cDTEI; hAf17: $uri = parse_url("\x68\x74\164\160\72\57\x2f\x64\165\x6d\155\x79" . $_SERVER["\x52\105\x51\x55\105\x53\x54\x5f\x55\122\x49"]); goto inik2; YHGp9: if (isset($_SERVER["\x53\103\x52\111\x50\x54\x5f\x4e\101\x4d\x45"][0])) { if (strpos($uri, $_SERVER["\x53\x43\x52\111\120\x54\137\x4e\101\115\x45"]) === 0) { $uri = (string) substr($uri, strlen($_SERVER["\123\x43\x52\111\120\124\x5f\116\x41\115\x45"])); } elseif (strpos($uri, dirname($_SERVER["\x53\103\122\111\x50\x54\137\x4e\x41\x4d\105"])) === 0) { $uri = (string) substr($uri, strlen(dirname($_SERVER["\123\x43\x52\x49\120\124\x5f\116\101\x4d\x45"]))); } } goto xBjL7; cDTEI: return $this->_remove_relative_directory($uri); goto K1ChL; CRXQz: parse_str($_SERVER["\121\125\105\x52\x59\x5f\123\124\122\x49\x4e\x47"], $_GET); goto A8vFp; K1ChL: } protected function _parse_query_string() { goto TDtXD; NYUwH: if (trim($uri, "\57") === '') { return ''; } elseif (strncmp($uri, "\x2f", 1) === 0) { goto ZWFmu; pEpoo: $uri = $uri[0]; goto H4ZO9; ZWFmu: $uri = explode("\x3f", $uri, 2); goto oIKM8; oIKM8: $_SERVER["\121\x55\x45\122\x59\x5f\123\x54\122\x49\116\x47"] = isset($uri[1]) ? $uri[1] : ''; goto pEpoo; H4ZO9: } goto KlzGg; TDtXD: $uri = isset($_SERVER["\121\125\x45\x52\131\137\x53\124\122\x49\116\x47"]) ? $_SERVER["\x51\x55\x45\122\131\x5f\x53\x54\x52\111\x4e\107"] : @getenv("\121\x55\x45\122\x59\x5f\x53\124\122\x49\116\x47"); goto NYUwH; KlzGg: parse_str($_SERVER["\121\125\x45\122\131\137\x53\124\122\x49\x4e\x47"], $_GET); goto NfYGX; NfYGX: return $this->_remove_relative_directory($uri); goto bKN4r; bKN4r: } protected function _parse_argv() { $args = array_slice($_SERVER["\x61\162\x67\x76"], 1); return $args ? implode("\57", $args) : ''; } protected function _remove_relative_directory($uri) { goto PnmaX; xWrzO: while ($tok !== FALSE) { if ((!empty($tok) or $tok === "\60") && $tok !== "\56\x2e") { $uris[] = $tok; } $tok = strtok("\57"); } goto uLvsm; uLvsm: return implode("\57", $uris); goto oefLD; F4cgH: $tok = strtok($uri, "\57"); goto xWrzO; PnmaX: $uris = array(); goto F4cgH; oefLD: } public function filter_uri(&$str) { if (!empty($str) && !empty($this->_permitted_uri_chars) && !preg_match("\57\136\133" . $this->_permitted_uri_chars . "\x5d\53\x24\x2f\x69" . (UTF8_ENABLED ? "\x75" : ''), $str)) { show_error("\124\150\x65\40\125\122\111\40\x79\x6f\165\x20\163\x75\142\x6d\x69\x74\164\145\x64\x20\x68\141\x73\40\144\151\x73\141\x6c\x6c\157\167\x65\x64\x20\143\150\141\162\x61\x63\x74\145\x72\x73\56", 400); } } public function segment($n, $no_result = NULL) { return isset($this->segments[$n]) ? $this->segments[$n] : $no_result; } public function rsegment($n, $no_result = NULL) { return isset($this->rsegments[$n]) ? $this->rsegments[$n] : $no_result; } public function uri_to_assoc($n = 3, $default = array()) { return $this->_uri_to_assoc($n, $default, "\163\145\x67\x6d\145\156\164"); } public function ruri_to_assoc($n = 3, $default = array()) { return $this->_uri_to_assoc($n, $default, "\162\x73\145\147\155\x65\x6e\164"); } protected function _uri_to_assoc($n = 3, $default = array(), $which = "\163\x65\147\155\145\156\x74") { goto k2rA6; ohhat: if (isset($this->keyval[$which], $this->keyval[$which][$n])) { return $this->keyval[$which][$n]; } goto zHKmn; xQIDJ: $this->keyval[$which][$n] = $retval; goto Hraqz; Hraqz: return $retval; goto NWdZu; fIjV6: $lastval = ''; goto uu33Q; C8q2n: $segment_array = "{$which}\137\141\x72\x72\141\171"; goto X1dLm; jrSTl: if (count($default) > 0) { foreach ($default as $val) { if (!array_key_exists($val, $retval)) { $retval[$val] = NULL; } } } goto JfO9w; X1dLm: if ($this->{$total_segments}() < $n) { return count($default) === 0 ? array() : array_fill_keys($default, NULL); } goto oVsgX; zHKmn: $total_segments = "\x74\157\164\x61\154\137{$which}\x73"; goto C8q2n; oVsgX: $segments = array_slice($this->{$segment_array}(), $n - 1); goto zh2V3; jE0DV: foreach ($segments as $seg) { if ($i % 2) { $retval[$lastval] = $seg; } else { $retval[$seg] = NULL; $lastval = $seg; } $i++; } goto jrSTl; JfO9w: isset($this->keyval[$which]) or $this->keyval[$which] = array(); goto xQIDJ; k2rA6: if (!is_numeric($n)) { return $default; } goto ohhat; zh2V3: $i = 0; goto fIjV6; uu33Q: $retval = array(); goto jE0DV; NWdZu: } public function assoc_to_uri($array) { goto XEPbe; XEPbe: $temp = array(); goto OuZRf; Dmq07: return implode("\57", $temp); goto iXKiz; OuZRf: foreach ((array) $array as $key => $val) { $temp[] = $key; $temp[] = $val; } goto Dmq07; iXKiz: } public function slash_segment($n, $where = "\164\x72\x61\151\154\x69\156\147") { return $this->_slash_segment($n, $where, "\x73\x65\x67\x6d\x65\156\x74"); } public function slash_rsegment($n, $where = "\x74\x72\141\x69\x6c\x69\156\x67") { return $this->_slash_segment($n, $where, "\x72\163\145\147\x6d\x65\156\x74"); } protected function _slash_segment($n, $where = "\x74\162\x61\151\x6c\151\156\x67", $which = "\x73\145\147\x6d\x65\x6e\x74") { goto r2QbD; WrzTW: if ($where === "\x74\x72\141\x69\x6c\151\156\x67") { $leading = ''; } elseif ($where === "\x6c\145\x61\144\x69\x6e\147") { $trailing = ''; } goto lyGL5; lyGL5: return $leading . $this->{$which}($n) . $trailing; goto Ge2Em; r2QbD: $leading = $trailing = "\x2f"; goto WrzTW; Ge2Em: } public function segment_array() { return $this->segments; } public function rsegment_array() { return $this->rsegments; } public function total_segments() { return count($this->segments); } public function total_rsegments() { return count($this->rsegments); } public function uri_string() { return $this->uri_string; } public function ruri_string() { return ltrim(load_class("\122\x6f\x75\x74\145\x72", "\143\x6f\162\x65")->directory, "\57") . implode("\x2f", $this->rsegments); } }
