<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:17              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 goto nhbIJ; iizL6: if (!function_exists("\x75\x6e\144\x65\162\x73\x63\157\x72\145")) { function underscore($str) { return preg_replace("\x2f\x5b\134\163\x5d\53\x2f", "\137", trim(MB_ENABLED ? mb_strtolower($str) : strtolower($str))); } } goto NNU1r; pkZQW: if (!function_exists("\143\141\155\x65\x6c\151\172\x65")) { function camelize($str) { return strtolower($str[0]) . substr(str_replace("\40", '', ucwords(preg_replace("\x2f\x5b\x5c\163\x5f\135\53\57", "\x20", $str))), 1); } } goto iizL6; tAsGg: if (!function_exists("\x70\154\165\162\x61\154")) { function plural($str) { goto Gh_R1; ueIjh: if (!word_is_countable($result)) { return $result; } goto MJgzs; xIttW: return $result; goto F_Ahe; MJgzs: $plural_rules = array("\57\50\x71\165\151\172\x29\x24\57" => "\134\61\172\x65\x73", "\57\136\50\x6f\x78\51\x24\x2f" => "\x5c\61\x5c\62\145\156", "\x2f\x28\133\155\174\154\x5d\51\x6f\x75\163\145\44\57" => "\x5c\61\151\x63\145", "\x2f\x28\155\141\x74\x72\x7c\x76\x65\x72\164\174\x69\156\144\x29\x69\170\174\145\x78\44\57" => "\134\61\151\143\145\163", "\57\50\x78\174\143\x68\174\x73\x73\174\163\150\51\x24\57" => "\x5c\61\145\x73", "\57\50\133\x5e\x61\x65\x69\157\165\171\135\x7c\161\x75\51\171\44\57" => "\x5c\x31\151\x65\x73", "\x2f\50\x68\151\166\x65\51\44\57" => "\134\x31\x73", "\x2f\50\x3f\x3a\50\133\136\146\x5d\51\146\x65\x7c\x28\x5b\154\x72\x5d\51\x66\51\44\57" => "\x5c\x31\134\x32\166\x65\x73", "\x2f\x73\x69\163\44\x2f" => "\163\x65\x73", "\x2f\x28\133\164\x69\135\51\x75\155\x24\57" => "\x5c\x31\141", "\x2f\x28\x70\51\145\x72\x73\157\x6e\44\x2f" => "\x5c\x31\145\157\160\154\145", "\x2f\x28\155\x29\x61\x6e\x24\57" => "\134\61\x65\156", "\x2f\50\143\x29\x68\x69\x6c\144\x24\57" => "\134\61\x68\151\x6c\144\162\145\x6e", "\57\x28\x62\165\146\146\x61\x6c\x7c\x74\x6f\x6d\x61\x74\x29\157\44\57" => "\x5c\61\x5c\x32\157\x65\163", "\57\50\142\x75\174\143\141\x6d\160\165\51\163\44\57" => "\x5c\61\134\62\163\145\163", "\57\50\141\x6c\x69\141\x73\x7c\x73\x74\141\x74\x75\163\174\166\x69\x72\165\x73\x29\x24\57" => "\x5c\61\145\163", "\57\x28\x6f\143\x74\157\x70\51\165\x73\44\57" => "\x5c\x31\x69", "\x2f\x28\141\170\174\143\x72\x69\163\x7c\x74\x65\x73\164\51\151\x73\44\57" => "\x5c\61\x65\163", "\x2f\x73\x24\x2f" => "\x73", "\x2f\x24\x2f" => "\x73"); goto ThWbH; ThWbH: foreach ($plural_rules as $rule => $replacement) { if (preg_match($rule, $result)) { $result = preg_replace($rule, $replacement, $result); break; } } goto xIttW; Gh_R1: $result = strval($str); goto ueIjh; F_Ahe: } } goto pkZQW; nhbIJ: defined("\102\101\x53\105\120\x41\x54\110") or exit("\116\x6f\x20\144\x69\162\145\x63\164\x20\163\x63\x72\151\160\x74\40\x61\143\143\x65\x73\163\40\141\154\154\157\x77\x65\x64"); goto TOhtH; TOhtH: if (!function_exists("\x73\x69\x6e\x67\x75\154\141\162")) { function singular($str) { goto IVaBo; NiJc3: $singular_rules = array("\x2f\50\155\x61\164\162\x29\x69\x63\x65\x73\x24\x2f" => "\x5c\61\151\170", "\x2f\50\x76\145\162\164\174\x69\156\x64\x29\151\143\x65\x73\44\x2f" => "\x5c\x31\145\x78", "\57\x5e\x28\157\x78\51\x65\156\x2f" => "\x5c\61", "\x2f\50\x61\154\x69\141\x73\51\145\x73\44\x2f" => "\x5c\x31", "\57\50\x5b\157\x63\x74\157\x70\x7c\x76\151\162\x5d\x29\151\x24\x2f" => "\134\x31\x75\163", "\x2f\x28\x63\x72\x69\x73\x7c\141\170\174\164\145\163\164\x29\x65\163\44\57" => "\134\61\151\163", "\x2f\x28\x73\150\157\145\x29\163\x24\57" => "\134\x31", "\57\50\157\x29\x65\x73\x24\57" => "\x5c\61", "\57\x28\142\x75\x73\x7c\x63\141\x6d\160\165\x73\x29\145\163\x24\57" => "\x5c\61", "\x2f\50\x5b\155\x7c\x6c\x5d\x29\151\x63\x65\x24\57" => "\134\x31\157\165\163\145", "\57\50\x78\174\x63\x68\174\163\163\174\163\x68\51\x65\x73\x24\x2f" => "\x5c\x31", "\57\50\x6d\51\157\x76\x69\x65\163\x24\x2f" => "\x5c\x31\134\62\157\166\151\x65", "\x2f\x28\163\x29\145\162\151\145\x73\x24\57" => "\x5c\x31\134\x32\x65\x72\x69\x65\x73", "\57\50\133\136\141\x65\x69\x6f\165\171\x5d\x7c\x71\x75\51\151\x65\163\44\x2f" => "\x5c\61\171", "\x2f\50\133\154\x72\135\51\x76\x65\163\44\57" => "\x5c\61\x66", "\57\50\x74\x69\x76\145\51\x73\44\57" => "\134\x31", "\57\50\150\151\166\145\x29\163\44\57" => "\x5c\61", "\57\50\133\136\x66\x5d\51\166\x65\163\44\x2f" => "\x5c\x31\x66\145", "\x2f\x28\136\x61\x6e\141\154\x79\x29\163\x65\x73\x24\x2f" => "\x5c\x31\x73\151\163", "\57\50\50\141\x29\156\141\154\x79\x7c\50\x62\x29\x61\174\50\x64\51\151\x61\147\156\x6f\x7c\x28\x70\51\x61\x72\x65\x6e\164\150\145\x7c\50\x70\51\x72\x6f\x67\156\x6f\x7c\50\163\x29\171\x6e\x6f\160\174\50\x74\x29\x68\x65\x29\x73\145\x73\44\x2f" => "\x5c\61\134\x32\163\151\x73", "\57\x28\133\164\151\135\x29\x61\44\57" => "\134\61\x75\x6d", "\x2f\50\x70\x29\x65\x6f\x70\x6c\145\x24\57" => "\x5c\61\x5c\x32\145\x72\163\157\156", "\x2f\50\x6d\51\x65\156\x24\57" => "\134\61\x61\156", "\57\x28\x73\x29\x74\x61\164\x75\163\x65\163\44\57" => "\x5c\x31\x5c\x32\164\141\164\165\163", "\57\x28\x63\51\x68\x69\x6c\144\162\x65\156\44\x2f" => "\x5c\x31\134\x32\150\151\154\x64", "\57\x28\156\x29\x65\167\x73\x24\57" => "\x5c\61\x5c\x32\x65\x77\163", "\57\50\x71\x75\151\172\51\172\x65\163\x24\57" => "\134\61", "\x2f\x28\x5b\136\165\163\135\x29\163\44\57" => "\x5c\61"); goto XiivQ; XiivQ: foreach ($singular_rules as $rule => $replacement) { if (preg_match($rule, $result)) { $result = preg_replace($rule, $replacement, $result); break; } } goto eKbi2; Y1LG7: if (!word_is_countable($result)) { return $result; } goto NiJc3; IVaBo: $result = strval($str); goto Y1LG7; eKbi2: return $result; goto obS7d; obS7d: } } goto tAsGg; OUjaw: if (!function_exists("\167\x6f\162\144\x5f\x69\x73\x5f\143\157\x75\156\164\x61\x62\154\145")) { function word_is_countable($word) { return !in_array(strtolower($word), array("\x61\165\x64\x69\x6f", "\142\151\x73\x6f\x6e", "\x63\x68\141\163\163\x69\x73", "\x63\x6f\x6d\x70\145\156\x73\x61\x74\x69\157\156", "\143\157\x72\145\157\x70\163\x69\x73", "\x64\x61\x74\141", "\144\145\x65\x72", "\x65\x64\x75\x63\x61\x74\x69\x6f\x6e", "\x65\x6d\157\x6a\151", "\x65\161\165\151\160\155\x65\x6e\164", "\146\x69\163\150", "\146\165\162\x6e\151\164\165\162\x65", "\x67\x6f\x6c\x64", "\151\x6e\146\x6f\162\x6d\x61\x74\x69\x6f\156", "\x6b\x6e\157\x77\154\x65\x64\x67\x65", "\x6c\157\x76\x65", "\x72\141\x69\156", "\155\x6f\x6e\x65\171", "\x6d\x6f\157\x73\145", "\156\165\x74\x72\x69\164\x69\157\156", "\157\146\x66\x73\x70\x72\151\156\x67", "\x70\154\x61\x6e\x6b\164\157\x6e", "\x70\x6f\153\145\155\157\x6e", "\160\157\x6c\151\143\x65", "\x72\x69\143\145", "\x73\145\x72\x69\x65\163", "\x73\x68\145\x65\x70", "\x73\160\x65\x63\151\x65\x73", "\x73\x77\151\156\145", "\x74\x72\x61\x66\146\151\x63", "\167\150\x65\141\x74")); } } goto lmngo; NNU1r: if (!function_exists("\150\x75\155\x61\156\x69\172\x65")) { function humanize($str, $separator = "\137") { return ucwords(preg_replace("\57\133" . preg_quote($separator) . "\135\x2b\x2f", "\x20", trim(MB_ENABLED ? mb_strtolower($str) : strtolower($str)))); } } goto OUjaw; lmngo: if (!function_exists("\151\x73\137\x63\x6f\165\156\x74\x61\142\x6c\x65")) { function is_countable($word) { trigger_error("\x69\x73\x5f\x63\x6f\x75\156\164\141\142\154\145\x28\51\x20\x69\163\40\141\x20\x6e\x61\164\x69\x76\x65\40\x50\110\x50\x20\146\165\x6e\x63\164\x69\157\156\40\163\151\x6e\x63\145\x20\166\145\162\x73\x69\157\x6e\40\67\56\63\56\x30\x3b\40\165\163\145\40\167\x6f\x72\x64\137\151\163\137\x63\157\x75\x6e\x74\x61\x62\x6c\x65\x28\x29\x20\151\156\163\164\145\x61\x64", E_USER_WARNING); return word_is_countable($word); } }
