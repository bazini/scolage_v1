<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:17              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 goto ttk5L; nBC73: if (!function_exists("\x67\x6d\x74\x5f\164\x6f\x5f\154\x6f\143\x61\154")) { function gmt_to_local($time = '', $timezone = "\x55\124\x43", $dst = FALSE) { goto IQ4ZY; IQ4ZY: if ($time === '') { return now(); } goto BEVp4; BEVp4: $time += timezones($timezone) * 3600; goto roMF2; roMF2: return $dst === TRUE ? $time + 3600 : $time; goto rEeVv; rEeVv: } } goto TULEO; mHtAF: if (!function_exists("\x6c\x6f\143\141\x6c\x5f\164\157\137\147\155\x74")) { function local_to_gmt($time = '') { if ($time === '') { $time = time(); } return mktime(gmdate("\x47", $time), gmdate("\x69", $time), gmdate("\163", $time), gmdate("\156", $time), gmdate("\x6a", $time), gmdate("\131", $time)); } } goto nBC73; eOiew: if (!function_exists("\x74\151\x6d\x65\x7a\x6f\156\145\163")) { function timezones($tz = '') { goto d3hv_; uXik9: if ($tz === '') { return $zones; } goto Yn2AS; d3hv_: $zones = array("\125\115\61\62" => -12, "\125\x4d\x31\x31" => -11, "\x55\115\61\60" => -10, "\x55\115\71\65" => -9.5, "\125\x4d\71" => -9, "\x55\115\x38" => -8, "\125\115\67" => -7, "\125\115\x36" => -6, "\x55\115\x35" => -5, "\x55\115\64\x35" => -4.5, "\x55\x4d\x34" => -4, "\125\x4d\63\65" => -3.5, "\125\x4d\x33" => -3, "\125\x4d\x32" => -2, "\125\115\61" => -1, "\125\x54\x43" => 0, "\125\120\x31" => +1, "\x55\120\x32" => +2, "\125\x50\63" => +3, "\125\120\x33\65" => +3.5, "\x55\x50\x34" => +4, "\125\120\64\x35" => +4.5, "\125\x50\x35" => +5, "\125\x50\65\65" => +5.5, "\125\x50\x35\67\x35" => +5.75, "\125\x50\66" => +6, "\125\x50\66\x35" => +6.5, "\125\x50\67" => +7, "\125\120\70" => +8, "\x55\x50\x38\x37\x35" => +8.75, "\125\x50\x39" => +9, "\125\x50\71\x35" => +9.5, "\125\120\61\60" => +10, "\125\x50\61\x30\x35" => +10.5, "\x55\120\x31\61" => +11, "\125\120\x31\61\65" => +11.5, "\125\x50\61\x32" => +12, "\125\x50\61\62\x37\x35" => +12.75, "\125\x50\x31\x33" => +13, "\x55\x50\x31\x34" => +14); goto uXik9; Yn2AS: return isset($zones[$tz]) ? $zones[$tz] : 0; goto YQp_w; YQp_w: } } goto apaUE; T73m7: if (!function_exists("\x75\156\151\x78\x5f\x74\x6f\137\x68\165\155\x61\x6e")) { function unix_to_human($time = '', $seconds = FALSE, $fmt = "\x75\x73") { goto g6U5I; vBLsV: if ($seconds) { $r .= "\72" . date("\x73", $time); } goto sca6l; sca6l: if ($fmt === "\165\x73") { return $r . "\x20" . date("\101", $time); } goto tDFoG; g6U5I: $r = date("\131", $time) . "\55" . date("\155", $time) . "\55" . date("\x64", $time) . "\x20"; goto HgEYF; tDFoG: return $r; goto mFQlr; HgEYF: if ($fmt === "\x75\163") { $r .= date("\x68", $time) . "\x3a" . date("\x69", $time); } else { $r .= date("\110", $time) . "\72" . date("\151", $time); } goto vBLsV; mFQlr: } } goto Cvs7m; Y3wbt: if (!function_exists("\156\x6f\x77")) { function now($timezone = NULL) { goto TeCoq; l5C4M: $datetime = new DateTime("\156\x6f\x77", new DateTimeZone($timezone)); goto vSX16; TeCoq: if (empty($timezone)) { $timezone = config_item("\164\x69\x6d\145\137\x72\145\146\x65\x72\145\x6e\143\145"); } goto T5tNg; MZ34q: return mktime($hour, $minute, $second, $month, $day, $year); goto Fdi0a; T5tNg: if ($timezone === "\154\x6f\x63\141\154" or $timezone === date_default_timezone_get()) { return time(); } goto l5C4M; vSX16: sscanf($datetime->format("\x6a\55\x6e\55\131\40\x47\72\151\72\x73"), "\x25\x64\x2d\45\x64\x2d\x25\144\x20\45\144\x3a\45\144\x3a\x25\x64", $day, $month, $year, $hour, $minute, $second); goto MZ34q; Fdi0a: } } goto X1M7F; Cvs7m: if (!function_exists("\x68\x75\x6d\141\x6e\x5f\x74\x6f\137\165\x6e\x69\x78")) { function human_to_unix($datestr = '') { goto G0gZR; bjQIU: isset($sec) or $sec = 0; goto Rx9Sm; Rx9Sm: if (isset($ampm)) { $ampm = strtolower($ampm); if ($ampm[0] === "\x70" && $hour < 12) { $hour += 12; } elseif ($ampm[0] === "\141" && $hour === 12) { $hour = 0; } } goto GW3Tf; nKO68: $datestr = preg_replace("\57\134\60\64\x30\53\57", "\40", trim($datestr)); goto ONL62; ONL62: if (!preg_match("\x2f\136\x28\134\144\x7b\62\x7d\174\x5c\x64\x7b\64\175\x29\x5c\55\133\60\55\71\x5d\x7b\x31\x2c\x32\175\134\x2d\133\60\55\71\x5d\173\61\54\62\175\x5c\163\x5b\60\x2d\71\x5d\173\x31\x2c\x32\175\72\133\x30\55\71\x5d\173\61\54\62\x7d\x28\77\72\x3a\x5b\60\x2d\x39\x5d\173\61\x2c\x32\x7d\51\x3f\50\77\72\134\x73\133\x41\120\x5d\x4d\51\77\x24\x2f\151", $datestr)) { return FALSE; } goto OWcDM; G0gZR: if ($datestr === '') { return FALSE; } goto nKO68; Cevuw: sscanf($time, "\x25\144\x3a\45\x64\72\45\x64", $hour, $min, $sec); goto bjQIU; OWcDM: sscanf($datestr, "\45\144\x2d\x25\x64\55\45\144\40\45\x73\x20\45\163", $year, $month, $day, $time, $ampm); goto Cevuw; GW3Tf: return mktime($hour, $min, $sec, $month, $day, $year); goto pvFt1; pvFt1: } } goto XAVh7; XAVh7: if (!function_exists("\x6e\151\143\x65\x5f\x64\x61\x74\145")) { function nice_date($bad_date = '', $format = FALSE) { goto Unlxq; Unlxq: if (empty($bad_date)) { return "\x55\x6e\x6b\x6e\x6f\167\x6e"; } elseif (empty($format)) { $format = "\125"; } goto IT2Ex; fC0UA: if (preg_match("\57\136\x28\134\x64\173\x31\x2c\x32\x7d\51\55\50\134\144\173\61\x2c\62\x7d\51\x2d\50\x5c\x64\173\64\x7d\x29\44\57\x69", $bad_date, $matches)) { return date($format, strtotime($matches[3] . "\x2d" . $matches[1] . "\x2d" . $matches[2])); } goto Clw7O; nb7b4: if (preg_match("\x2f\x5e\x5c\144\x7b\x38\175\x24\x2f\151", $bad_date, $matches)) { return DateTime::createFromFormat("\131\x6d\144", $bad_date)->format($format); } goto fC0UA; z4YcG: return date($format, strtotime($bad_date)); goto dmCnV; Clw7O: if (date("\125", strtotime($bad_date)) === "\60") { return "\111\x6e\x76\x61\x6c\x69\x64\40\x44\x61\x74\x65"; } goto z4YcG; IT2Ex: if (preg_match("\57\136\x5c\144\x7b\x36\175\x24\57\x69", $bad_date)) { if (in_array(substr($bad_date, 0, 2), array("\x31\71", "\x32\60"))) { $year = substr($bad_date, 0, 4); $month = substr($bad_date, 4, 2); } else { $month = substr($bad_date, 0, 2); $year = substr($bad_date, 2, 4); } return date($format, strtotime($year . "\55" . $month . "\x2d\60\61")); } goto nb7b4; dmCnV: } } goto gs7uB; N93al: if (!function_exists("\x73\x74\141\x6e\144\141\x72\x64\x5f\x64\x61\x74\145")) { function standard_date($fmt = "\x44\x41\124\x45\x5f\x52\x46\103\x38\x32\62", $time = NULL) { goto L9pJ3; cu_lL: return date(constant($fmt), $time); goto qU8eb; L9pJ3: if (empty($time)) { $time = now(); } goto Zd_Kz; Zd_Kz: if (strpos($fmt, "\104\x41\x54\105\x5f") !== 0 or defined($fmt) === FALSE) { return FALSE; } goto cu_lL; qU8eb: } } goto DuU9f; DuU9f: if (!function_exists("\164\x69\x6d\145\163\160\x61\156")) { function timespan($seconds = 1, $time = '', $units = 7) { goto OO9jf; GJOx2: is_numeric($time) or $time = time(); goto zBJH_; SnZ36: $CI->lang->load("\144\x61\x74\145"); goto QyUwN; HcsXB: if (count($str) < $units && ($years > 0 or $months > 0)) { if ($months > 0) { $str[] = $months . "\x20" . $CI->lang->line($months > 1 ? "\x64\141\164\145\x5f\x6d\157\156\164\150\163" : "\x64\141\x74\145\137\x6d\157\x6e\x74\150"); } $seconds -= $months * 2629743; } goto ig9SN; kuD1A: $months = floor($seconds / 2629743); goto HcsXB; hjZs4: if (count($str) < $units && ($months > 0 or $weeks > 0 or $days > 0)) { if ($days > 0) { $str[] = $days . "\x20" . $CI->lang->line($days > 1 ? "\144\x61\164\x65\x5f\144\x61\x79\x73" : "\144\x61\164\145\x5f\144\x61\x79"); } $seconds -= $days * 86400; } goto bnCE9; ig9SN: $weeks = floor($seconds / 604800); goto JLVux; NvZ4C: $years = floor($seconds / 31557600); goto qSo_F; e8Ojp: if (count($str) < $units && ($days > 0 or $hours > 0)) { if ($hours > 0) { $str[] = $hours . "\40" . $CI->lang->line($hours > 1 ? "\x64\141\164\145\137\150\157\165\162\163" : "\144\x61\x74\x65\x5f\150\157\x75\x72"); } $seconds -= $hours * 3600; } goto Xp6VE; P2qzl: $seconds -= $years * 31557600; goto kuD1A; uX7xv: return implode("\54\40", $str); goto i1Pji; Xp6VE: $minutes = floor($seconds / 60); goto CzBDv; bnCE9: $hours = floor($seconds / 3600); goto e8Ojp; JLVux: if (count($str) < $units && ($years > 0 or $months > 0 or $weeks > 0)) { if ($weeks > 0) { $str[] = $weeks . "\x20" . $CI->lang->line($weeks > 1 ? "\x64\x61\164\x65\x5f\x77\145\145\x6b\x73" : "\144\x61\164\145\x5f\x77\145\x65\x6b"); } $seconds -= $weeks * 604800; } goto u2ify; Pnp4k: if (count($str) === 0) { $str[] = $seconds . "\x20" . $CI->lang->line($seconds > 1 ? "\x64\141\164\145\x5f\x73\145\x63\x6f\x6e\144\x73" : "\x64\x61\x74\145\x5f\x73\x65\x63\157\156\x64"); } goto uX7xv; Ea1xQ: $seconds = $time <= $seconds ? 1 : $time - $seconds; goto U9JpQ; U9JpQ: $str = array(); goto NvZ4C; qSo_F: if ($years > 0) { $str[] = $years . "\40" . $CI->lang->line($years > 1 ? "\x64\x61\164\x65\x5f\171\x65\x61\x72\163" : "\x64\x61\x74\x65\137\x79\145\x61\x72"); } goto P2qzl; CzBDv: if (count($str) < $units && ($days > 0 or $hours > 0 or $minutes > 0)) { if ($minutes > 0) { $str[] = $minutes . "\x20" . $CI->lang->line($minutes > 1 ? "\x64\141\x74\145\x5f\x6d\x69\156\x75\x74\x65\x73" : "\144\x61\164\145\137\155\x69\156\165\x74\x65"); } $seconds -= $minutes * 60; } goto Pnp4k; u2ify: $days = floor($seconds / 86400); goto hjZs4; OO9jf: $CI =& get_instance(); goto SnZ36; QyUwN: is_numeric($seconds) or $seconds = 1; goto GJOx2; zBJH_: is_numeric($units) or $units = 7; goto Ea1xQ; i1Pji: } } goto pyyqu; X1M7F: if (!function_exists("\155\x64\x61\x74\x65")) { function mdate($datestr = '', $time = '') { goto nU2gc; nU2gc: if ($datestr === '') { return ''; } elseif (empty($time)) { $time = now(); } goto GW4Br; H5R2D: return date($datestr, $time); goto gKeTN; GW4Br: $datestr = str_replace("\45\134", '', preg_replace("\57\x28\133\x61\x2d\172\x5d\x2b\77\51\x7b\x31\175\x2f\151", "\x5c\x5c\134\x31", $datestr)); goto H5R2D; gKeTN: } } goto N93al; TULEO: if (!function_exists("\x6d\171\x73\x71\x6c\x5f\164\157\x5f\x75\156\x69\x78")) { function mysql_to_unix($time = '') { $time = str_replace(array("\x2d", "\x3a", "\40"), '', $time); return mktime(substr($time, 8, 2), substr($time, 10, 2), substr($time, 12, 2), substr($time, 4, 2), substr($time, 6, 2), substr($time, 0, 4)); } } goto T73m7; gs7uB: if (!function_exists("\164\x69\x6d\x65\x7a\157\156\x65\137\155\x65\x6e\165")) { function timezone_menu($default = "\x55\124\x43", $class = '', $name = "\x74\x69\x6d\x65\x7a\157\156\x65\x73", $attributes = '') { goto qTuF6; qTuF6: $CI =& get_instance(); goto WDT9R; U51Ky: if ($class !== '') { $menu .= "\x20\143\154\x61\x73\163\75\x22" . $class . "\42"; } goto CnaQl; CnaQl: $menu .= _stringify_attributes($attributes) . "\x3e\12"; goto dKBDW; dKBDW: foreach (timezones() as $key => $val) { $selected = $default === $key ? "\40\x73\x65\x6c\145\143\x74\145\x64\x3d\42\x73\x65\x6c\145\x63\x74\x65\144\x22" : ''; $menu .= "\74\x6f\x70\164\x69\x6f\x6e\x20\166\141\154\x75\145\x3d\x22" . $key . "\x22" . $selected . "\x3e" . $CI->lang->line($key) . "\74\x2f\157\x70\164\151\x6f\x6e\x3e\xa"; } goto a03iO; WDT9R: $CI->lang->load("\x64\141\x74\145"); goto Lu_62; xK385: $menu = "\74\163\145\x6c\x65\x63\164\x20\x6e\141\155\145\75\42" . $name . "\42"; goto U51Ky; a03iO: return $menu . "\x3c\57\x73\145\154\x65\x63\164\x3e"; goto gl2x_; Lu_62: $default = $default === "\107\115\x54" ? "\125\124\103" : $default; goto xK385; gl2x_: } } goto eOiew; ttk5L: defined("\x42\x41\x53\105\x50\x41\124\110") or exit("\116\x6f\40\144\151\162\145\x63\164\x20\163\143\x72\151\x70\164\x20\x61\x63\x63\x65\x73\x73\x20\x61\x6c\x6c\157\167\145\x64"); goto Y3wbt; pyyqu: if (!function_exists("\x64\141\x79\x73\137\x69\156\x5f\155\x6f\x6e\x74\x68")) { function days_in_month($month = 0, $year = '') { goto xzC7o; VBahc: $days_in_month = array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31); goto jJH9Z; xzC7o: if ($month < 1 or $month > 12) { return 0; } elseif (!is_numeric($year) or strlen($year) !== 4) { $year = date("\x59"); } goto nGIcS; jJH9Z: return $days_in_month[$month - 1]; goto RVr1S; xB9GE: if ($year >= 1970) { return (int) date("\x74", mktime(12, 0, 0, $month, 1, $year)); } goto gxQvm; gxQvm: if ($month == 2) { if ($year % 400 === 0 or $year % 4 === 0 && $year % 100 !== 0) { return 29; } } goto VBahc; nGIcS: if (defined("\x43\101\114\137\107\122\105\x47\x4f\x52\x49\101\116")) { return cal_days_in_month(CAL_GREGORIAN, $month, $year); } goto xB9GE; RVr1S: } } goto mHtAF; apaUE: if (!function_exists("\x64\141\x74\x65\x5f\x72\x61\x6e\147\145")) { function date_range($unix_start = '', $mixed = '', $is_unix = TRUE, $format = "\131\x2d\155\x2d\144") { goto geqz5; mItZ1: if ($is_unix && ($unix_start == $mixed or date($format, $unix_start) === date($format, $mixed))) { return array(date($format, $unix_start)); } goto f00cS; mgwSF: return $range; goto HNKls; ryVAS: $from = new DateTime(); goto pN7pe; vFM0w: foreach ($period as $date) { $range[] = $date->format($format); } goto ukTfT; geqz5: if ($unix_start == '' or $mixed == '' or $format == '') { return FALSE; } goto n0Gk4; aLFdT: $period = new DatePeriod($from, new DateInterval("\x50\x31\x44"), $arg); goto vFM0w; uGb7s: if (!ctype_digit((string) $unix_start) && ($unix_start = @strtotime($unix_start)) === FALSE or !ctype_digit((string) $mixed) && ($is_unix === FALSE or ($mixed = @strtotime($mixed)) === FALSE) or $is_unix === TRUE && $mixed < $unix_start) { return FALSE; } goto mItZ1; f00cS: $range = array(); goto ryVAS; ukTfT: if (!is_int($arg) && $range[count($range) - 1] !== $arg->format($format)) { $range[] = $arg->format($format); } goto mgwSF; n0Gk4: $is_unix = !(!$is_unix or $is_unix === "\144\x61\171\163"); goto uGb7s; Znm2j: if ($is_unix) { $arg = new DateTime(); $arg->setTimestamp($mixed); } else { $arg = (int) $mixed; } goto aLFdT; pN7pe: $from->setTimestamp($unix_start); goto Znm2j; HNKls: } }
