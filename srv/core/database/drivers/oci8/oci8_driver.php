<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\x53\x45\x50\101\124\110") or exit("\x4e\157\x20\x64\x69\162\145\x63\164\40\x73\x63\x72\151\x70\x74\40\x61\143\143\145\163\163\x20\x61\154\x6c\157\x77\145\144"); class CI_DB_oci8_driver extends CI_DB { public $dbdriver = "\x6f\x63\151\x38"; public $stmt_id; public $curs_id; public $commit_mode = OCI_COMMIT_ON_SUCCESS; public $limit_used = FALSE; protected $_reset_stmt_id = TRUE; protected $_reserved_identifiers = array("\x2a", "\x72\x6f\167\x6e\165\x6d"); protected $_random_keyword = array("\x41\x53\103", "\101\x53\x43"); protected $_count_string = "\x53\105\x4c\105\x43\124\40\103\117\125\x4e\x54\x28\x31\x29\x20\101\x53\40"; public function __construct($params) { goto mb21I; r3KVu: $this->dsn = str_replace(array("\xa", "\xd", "\11", "\x20"), '', $this->dsn); goto TdSaN; YWzXd: if (preg_match($valid_dsns["\145\143"], $this->hostname) or preg_match($valid_dsns["\x69\156"], $this->hostname)) { $this->dsn = $this->hostname; return; } goto aQOaM; i3wKt: $this->dsn = ''; goto A3Pod; TdSaN: if ($this->dsn !== '') { foreach ($valid_dsns as $regexp) { if (preg_match($regexp, $this->dsn)) { return; } } } goto Y4zPp; C0uHS: $valid_dsns = array("\x74\x6e\x73" => "\x2f\x5e\x5c\x28\x44\x45\123\x43\x52\x49\120\124\x49\117\x4e\x3d\x28\x5c\50\x2e\x2b\x5c\51\51\x7b\62\x2c\x7d\134\x29\44\x2f", "\145\143" => "\57\x5e\50\134\x2f\134\x2f\x29\x3f\133\x61\55\x7a\60\x2d\x39\56\72\x5f\x2d\135\53\50\72\133\x31\55\71\x5d\133\60\55\x39\135\173\x30\54\64\x7d\51\77\50\x5c\57\133\141\x2d\x7a\x30\55\x39\x24\137\135\x2b\51\x3f\x28\x3a\x5b\136\x5c\57\x5d\x29\77\50\x5c\57\x5b\x61\55\x7a\x30\55\71\44\x5f\x5d\53\51\77\x24\x2f\151", "\151\x6e" => "\x2f\x5e\x5b\x61\x2d\172\x30\55\71\44\137\135\53\44\x2f\x69"); goto r3KVu; l8Q7z: foreach ($valid_dsns as $regexp) { if (preg_match($regexp, $this->database)) { return; } } goto i3wKt; aQOaM: $this->database = str_replace(array("\xa", "\15", "\x9", "\x20"), '', $this->database); goto l8Q7z; mbSzq: if (preg_match($valid_dsns["\164\156\x73"], $this->hostname)) { $this->dsn = $this->hostname; return; } elseif ($this->hostname !== '' && strpos($this->hostname, "\57") === FALSE && strpos($this->hostname, "\x3a") === FALSE && (!empty($this->port) && ctype_digit($this->port) or $this->database !== '')) { $this->dsn = $this->hostname . (!empty($this->port) && ctype_digit($this->port) ? "\x3a" . $this->port : '') . ($this->database !== '' ? "\x2f" . ltrim($this->database, "\x2f") : ''); if (preg_match($valid_dsns["\145\143"], $this->dsn)) { return; } } goto YWzXd; Y4zPp: $this->hostname = str_replace(array("\xa", "\15", "\11", "\x20"), '', $this->hostname); goto mbSzq; mb21I: parent::__construct($params); goto C0uHS; A3Pod: } public function db_connect($persistent = FALSE) { $func = $persistent === TRUE ? "\157\143\151\137\160\x63\157\156\x6e\x65\143\x74" : "\157\x63\151\x5f\x63\x6f\156\156\145\x63\x74"; return empty($this->char_set) ? $func($this->username, $this->password, $this->dsn) : $func($this->username, $this->password, $this->dsn, $this->char_set); } public function version() { goto HK2lz; bqPdA: if (!$this->conn_id or ($version_string = oci_server_version($this->conn_id)) === FALSE) { return FALSE; } elseif (preg_match("\x23\122\x65\154\145\141\163\x65\x5c\x73\x28\134\x64\x2b\50\77\72\x5c\x2e\x5c\144\x2b\51\53\x29\43", $version_string, $match)) { return $this->data_cache["\x76\x65\162\163\x69\157\156"] = $match[1]; } goto J74c0; HK2lz: if (isset($this->data_cache["\x76\x65\x72\x73\151\157\x6e"])) { return $this->data_cache["\x76\145\x72\x73\x69\157\156"]; } goto bqPdA; J74c0: return FALSE; goto KCOiJ; KCOiJ: } protected function _execute($sql) { goto A_NR_; ngR9t: oci_set_prefetch($this->stmt_id, 1000); goto DmxWD; A_NR_: if ($this->_reset_stmt_id === TRUE) { $this->stmt_id = oci_parse($this->conn_id, $sql); } goto ngR9t; DmxWD: return oci_execute($this->stmt_id, $this->commit_mode); goto JT5kZ; JT5kZ: } public function get_cursor() { return $this->curs_id = oci_new_cursor($this->conn_id); } public function stored_procedure($package, $procedure, array $params) { goto SigVE; Yl33M: $sql = "\x42\105\107\111\x4e\40" . $package . "\x2e" . $procedure . "\x28"; goto SE3rV; JwSQ0: $this->_reset_stmt_id = TRUE; goto LC2eT; gA4hO: $this->stmt_id = oci_parse($this->conn_id, $sql); goto gwS3h; kPE8T: $this->_reset_stmt_id = FALSE; goto gA4hO; Oa18n: foreach ($params as $param) { $sql .= $param["\156\141\155\x65"] . "\x2c"; if (isset($param["\x74\x79\x70\145"]) && $param["\164\x79\160\145"] === OCI_B_CURSOR) { $have_cursor = TRUE; } } goto fC0EQ; gwS3h: $this->_bind_params($params); goto XJoGn; SigVE: if ($package === '' or $procedure === '') { log_message("\x65\162\162\157\162", "\111\156\x76\x61\154\x69\144\x20\x71\x75\145\162\171\x3a\40" . $package . "\56" . $procedure); return $this->db_debug ? $this->display_error("\x64\142\x5f\151\156\x76\x61\x6c\151\144\137\x71\x75\x65\162\171") : FALSE; } goto Yl33M; SE3rV: $have_cursor = FALSE; goto Oa18n; XJoGn: $result = $this->query($sql, FALSE, $have_cursor); goto JwSQ0; LC2eT: return $result; goto xC_i6; fC0EQ: $sql = trim($sql, "\54") . "\x29\x3b\40\x45\x4e\x44\73"; goto kPE8T; xC_i6: } protected function _bind_params($params) { if (!is_array($params) or !is_resource($this->stmt_id)) { return; } foreach ($params as $param) { foreach (array("\x6e\141\155\145", "\x76\x61\x6c\x75\x65", "\x74\x79\160\145", "\x6c\x65\x6e\x67\164\x68") as $val) { if (!isset($param[$val])) { $param[$val] = ''; } } oci_bind_by_name($this->stmt_id, $param["\156\x61\x6d\x65"], $param["\166\141\x6c\165\x65"], $param["\154\145\x6e\147\164\x68"], $param["\164\x79\x70\x65"]); } } protected function _trans_begin() { $this->commit_mode = OCI_NO_AUTO_COMMIT; return TRUE; } protected function _trans_commit() { $this->commit_mode = OCI_COMMIT_ON_SUCCESS; return oci_commit($this->conn_id); } protected function _trans_rollback() { $this->commit_mode = OCI_COMMIT_ON_SUCCESS; return oci_rollback($this->conn_id); } public function affected_rows() { return oci_num_rows($this->stmt_id); } public function insert_id() { return $this->display_error("\144\142\137\165\x6e\163\x75\x70\160\157\162\x74\x65\x64\137\146\165\156\x63\164\151\157\156"); } protected function _list_tables($prefix_limit = FALSE) { goto EmjmQ; kCgRx: return $sql; goto fDlW1; EmjmQ: $sql = "\123\105\x4c\x45\x43\x54\40\x22\x54\x41\102\114\x45\x5f\x4e\x41\x4d\x45\x22\40\106\x52\117\115\x20\x22\x41\x4c\x4c\x5f\124\x41\102\114\105\123\42"; goto PMVKl; PMVKl: if ($prefix_limit !== FALSE && $this->dbprefix !== '') { return $sql . "\40\127\x48\105\122\105\40\x22\124\x41\x42\x4c\x45\137\x4e\x41\115\105\x22\40\114\111\x4b\x45\40\47" . $this->escape_like_str($this->dbprefix) . "\x25\47\x20" . sprintf($this->_like_escape_str, $this->_like_escape_chr); } goto kCgRx; fDlW1: } protected function _list_columns($table = '') { if (strpos($table, "\x2e") !== FALSE) { sscanf($table, "\x25\x5b\x5e\56\x5d\56\x25\x73", $owner, $table); } else { $owner = $this->username; } return "\123\x45\114\x45\x43\124\40\x43\x4f\x4c\x55\115\x4e\x5f\116\101\115\x45\x20\106\122\x4f\x4d\40\x41\x4c\x4c\x5f\124\101\102\137\x43\117\114\125\x4d\x4e\x53\12\x9\11\x9\x57\110\x45\122\105\40\x55\x50\x50\x45\x52\x28\117\x57\x4e\x45\x52\51\40\x3d\x20" . $this->escape(strtoupper($owner)) . "\xa\x9\11\11\x9\101\116\104\40\125\x50\120\x45\122\x28\124\x41\x42\114\105\x5f\116\101\x4d\x45\51\40\75\40" . $this->escape(strtoupper($table)); } public function field_data($table) { goto V3R7b; V3R7b: if (strpos($table, "\56") !== FALSE) { sscanf($table, "\45\x5b\x5e\x2e\135\56\45\x73", $owner, $table); } else { $owner = $this->username; } goto t6Fmw; Q5Jgx: return $retval; goto AdKdl; t6Fmw: $sql = "\x53\x45\x4c\105\103\x54\x20\103\117\114\x55\115\x4e\x5f\116\101\x4d\105\x2c\x20\x44\x41\124\x41\x5f\124\131\x50\105\54\x20\x43\x48\x41\122\x5f\114\105\x4e\x47\x54\110\54\x20\104\101\124\x41\x5f\120\122\x45\x43\111\123\x49\x4f\116\54\x20\104\x41\124\x41\x5f\x4c\105\116\x47\x54\x48\54\40\104\x41\124\x41\137\x44\x45\106\101\x55\x4c\x54\x2c\40\116\125\114\114\101\x42\114\x45\xa\x9\11\11\x46\122\117\115\40\x41\x4c\x4c\x5f\124\101\x42\137\103\x4f\114\x55\x4d\116\x53\12\x9\11\11\x57\x48\105\x52\x45\40\125\x50\120\x45\122\x28\117\127\x4e\105\x52\51\x20\75\x20" . $this->escape(strtoupper($owner)) . "\12\x9\11\11\11\x41\116\104\x20\x55\120\x50\105\122\x28\124\101\x42\x4c\105\137\x4e\101\115\105\x29\40\75\x20" . $this->escape(strtoupper($table)); goto Ps6wo; zGVr3: $query = $query->result_object(); goto zpXLm; gl5fE: for ($i = 0, $c = count($query); $i < $c; $i++) { $retval[$i] = new stdClass(); $retval[$i]->name = $query[$i]->COLUMN_NAME; $retval[$i]->type = $query[$i]->DATA_TYPE; $length = $query[$i]->CHAR_LENGTH > 0 ? $query[$i]->CHAR_LENGTH : $query[$i]->DATA_PRECISION; if ($length === NULL) { $length = $query[$i]->DATA_LENGTH; } $retval[$i]->max_length = $length; $default = $query[$i]->DATA_DEFAULT; if ($default === NULL && $query[$i]->NULLABLE === "\x4e") { $default = ''; } $retval[$i]->default = $default; } goto Q5Jgx; zpXLm: $retval = array(); goto gl5fE; Ps6wo: if (($query = $this->query($sql)) === FALSE) { return FALSE; } goto zGVr3; AdKdl: } public function error() { if (is_resource($this->curs_id)) { $error = oci_error($this->curs_id); } elseif (is_resource($this->stmt_id)) { $error = oci_error($this->stmt_id); } elseif (is_resource($this->conn_id)) { $error = oci_error($this->conn_id); } else { $error = oci_error(); } return is_array($error) ? $error : array("\143\x6f\144\145" => '', "\155\145\163\163\141\x67\x65" => ''); } protected function _insert_batch($table, $keys, $values) { goto z8CUS; MUZfe: $sql = "\111\116\123\105\122\124\40\101\x4c\114\12"; goto Q8EEP; uBKSE: return $sql . "\x53\x45\x4c\105\103\x54\40\52\x20\106\122\x4f\115\40\144\165\141\154"; goto EkRUU; z8CUS: $keys = implode("\54\x20", $keys); goto MUZfe; Q8EEP: for ($i = 0, $c = count($values); $i < $c; $i++) { $sql .= "\11\111\116\124\117\40" . $table . "\x20\x28" . $keys . "\51\x20\x56\x41\x4c\x55\105\x53\x20" . $values[$i] . "\xa"; } goto uBKSE; EkRUU: } protected function _truncate($table) { return "\x54\122\x55\116\103\101\124\105\40\124\101\102\114\x45\40" . $table; } protected function _delete($table) { if ($this->qb_limit) { $this->where("\162\x6f\167\156\165\x6d\40\74\75\x20", $this->qb_limit, FALSE); $this->qb_limit = FALSE; } return parent::_delete($table); } protected function _limit($sql) { goto y0v_Z; J_par: return "\x53\105\x4c\x45\x43\124\x20\52\40\106\x52\x4f\115\x20\x28\123\105\x4c\x45\x43\124\x20\x69\156\156\x65\162\x5f\x71\165\x65\x72\x79\56\x2a\x2c\x20\162\157\167\x6e\x75\155\x20\162\156\165\x6d\40\x46\122\117\x4d\x20\x28" . $sql . "\x29\x20\x69\x6e\x6e\145\x72\137\161\x75\145\162\171\40\x57\x48\x45\x52\105\40\x72\157\x77\x6e\165\155\40\x3c\x20" . ($this->qb_offset + $this->qb_limit + 1) . "\51" . ($this->qb_offset ? "\x20\x57\110\x45\x52\x45\x20\162\156\x75\155\x20\x3e\x3d\x20" . ($this->qb_offset + 1) : ''); goto Z9rWf; Wqkh0: $this->limit_used = TRUE; goto J_par; y0v_Z: if (version_compare($this->version(), "\61\62\x2e\61", "\76\x3d")) { empty($this->qb_orderby) && ($sql .= "\x20\117\122\x44\105\x52\40\102\x59\x20\61"); return $sql . "\x20\117\x46\106\x53\105\124\40" . (int) $this->qb_offset . "\x20\122\x4f\127\123\40\106\105\x54\103\110\40\116\x45\130\x54\40" . $this->qb_limit . "\40\122\117\x57\x53\x20\x4f\116\x4c\x59"; } goto Wqkh0; Z9rWf: } protected function _close() { oci_close($this->conn_id); } protected function _reset_select() { $this->limit_used = FALSE; parent::_reset_select(); } }
