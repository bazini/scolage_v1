<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\123\105\x50\101\124\110") or exit("\x4e\x6f\40\144\x69\162\x65\143\164\x20\x73\143\162\151\160\164\40\141\x63\x63\145\163\163\x20\x61\x6c\x6c\x6f\x77\145\144"); class CI_DB_sqlite3_forge extends CI_DB_forge { protected $_unsigned = FALSE; protected $_null = "\116\x55\114\x4c"; public function __construct(&$db) { parent::__construct($db); if (version_compare($this->db->version(), "\x33\56\63", "\74")) { $this->_create_table_if = FALSE; $this->_drop_table_if = FALSE; } } public function create_database($db_name) { return TRUE; } public function drop_database($db_name) { if (file_exists($this->db->database)) { goto HQXW2; el4sU: return TRUE; goto N04SL; HQXW2: $this->db->close(); goto bPw8J; bPw8J: if (!@unlink($this->db->database)) { return $this->db->db_debug ? $this->db->display_error("\144\142\137\165\x6e\141\x62\154\145\137\164\157\x5f\144\x72\157\160") : FALSE; } elseif (!empty($this->db->data_cache["\144\142\x5f\156\x61\155\145\x73"])) { $key = array_search(strtolower($this->db->database), array_map("\x73\x74\162\x74\x6f\x6c\157\x77\145\162", $this->db->data_cache["\144\142\x5f\x6e\x61\155\x65\x73"]), TRUE); if ($key !== FALSE) { unset($this->db->data_cache["\144\142\x5f\x6e\141\x6d\x65\163"][$key]); } } goto el4sU; N04SL: } return $this->db->db_debug ? $this->db->display_error("\144\x62\x5f\x75\x6e\141\x62\x6c\145\137\x74\157\137\x64\x72\x6f\160") : FALSE; } protected function _alter_table($alter_type, $table, $field) { if ($alter_type === "\x44\122\117\x50" or $alter_type === "\x43\x48\x41\x4e\x47\105") { return FALSE; } return parent::_alter_table($alter_type, $table, $field); } protected function _process_column($field) { return $this->db->escape_identifiers($field["\x6e\x61\x6d\145"]) . "\40" . $field["\164\x79\x70\x65"] . $field["\x61\165\x74\157\x5f\151\x6e\x63\x72\145\155\x65\x6e\x74"] . $field["\156\x75\x6c\x6c"] . $field["\165\156\151\161\x75\x65"] . $field["\144\145\x66\x61\165\x6c\164"]; } protected function _attr_type(&$attributes) { switch (strtoupper($attributes["\x54\131\120\x45"])) { case "\x45\x4e\x55\x4d": case "\x53\x45\x54": $attributes["\124\131\x50\x45"] = "\x54\105\x58\x54"; return; default: return; } } protected function _attr_auto_increment(&$attributes, &$field) { if (!empty($attributes["\101\125\x54\x4f\137\x49\116\103\x52\x45\x4d\x45\x4e\x54"]) && $attributes["\x41\125\x54\117\x5f\111\116\103\122\x45\115\x45\116\124"] === TRUE && stripos($field["\x74\x79\x70\145"], "\151\156\x74") !== FALSE) { goto T99FD; u8YCg: $this->primary_keys = array(); goto jRubX; UUCIK: $field["\156\x75\x6c\154"] = ''; goto R4GfW; R4GfW: $field["\165\x6e\x69\161\165\145"] = ''; goto BEY_F; T99FD: $field["\164\x79\x70\145"] = "\111\116\x54\105\107\105\x52\40\120\x52\x49\x4d\x41\122\x59\x20\x4b\x45\x59"; goto p3jBH; BEY_F: $field["\x61\x75\x74\x6f\137\151\156\143\162\x65\x6d\x65\156\164"] = "\x20\101\x55\x54\x4f\111\116\103\122\105\x4d\x45\116\x54"; goto u8YCg; p3jBH: $field["\x64\x65\146\141\x75\x6c\164"] = ''; goto UUCIK; jRubX: } } }
