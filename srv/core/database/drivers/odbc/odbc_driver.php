<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\x53\x45\120\101\x54\x48") or exit("\116\157\x20\x64\x69\x72\x65\143\x74\x20\x73\143\162\x69\x70\164\40\x61\x63\x63\145\x73\163\x20\x61\x6c\154\157\167\145\144"); class CI_DB_odbc_driver extends CI_DB_driver { public $dbdriver = "\157\144\x62\143"; public $schema = "\x70\x75\x62\x6c\x69\143"; protected $_escape_char = ''; protected $_like_escape_str = "\x20\173\x65\163\x63\141\x70\x65\40\47\x25\163\47\175\40"; protected $_random_keyword = array("\x52\x4e\x44\x28\51", "\122\116\x44\50\x25\x64\51"); private $odbc_result; private $binds = array(); public function __construct($params) { parent::__construct($params); if (empty($this->dsn)) { $this->dsn = $this->hostname; } } public function db_connect($persistent = FALSE) { return $persistent === TRUE ? odbc_pconnect($this->dsn, $this->username, $this->password) : odbc_connect($this->dsn, $this->username, $this->password); } public function compile_binds($sql, $binds) { goto RQiA0; T0zIY: if (FALSE !== ($this->odbc_result = odbc_prepare($this->conn_id, $sql))) { $this->binds = array_values($binds); } goto oKhxE; CuW7k: if ($c = preg_match_all("\x2f\47\x5b\136\x27\135\x2a\47\174\42\133\x5e\42\x5d\52\x22\57\x69", $sql, $matches)) { $c = preg_match_all("\57" . preg_quote($this->bind_marker, "\x2f") . "\57\x69", str_replace($matches[0], str_replace($this->bind_marker, str_repeat("\x20", $ml), $matches[0]), $sql, $c), $matches, PREG_OFFSET_CAPTURE); if ($bind_count !== $c) { return $sql; } } elseif (($c = preg_match_all("\x2f" . preg_quote($this->bind_marker, "\x2f") . "\57\x69", $sql, $matches, PREG_OFFSET_CAPTURE)) !== $bind_count) { return $sql; } goto mF5LF; mF5LF: if ($this->bind_marker !== "\x3f") { do { $c--; $sql = substr_replace($sql, "\77", $matches[0][$c][1], $ml); } while ($c !== 0); } goto T0zIY; fGhfa: $ml = strlen($this->bind_marker); goto CuW7k; oKhxE: return $sql; goto x2yJ6; RQiA0: if (empty($binds) or empty($this->bind_marker) or strpos($sql, $this->bind_marker) === FALSE) { return $sql; } elseif (!is_array($binds)) { $binds = array($binds); $bind_count = 1; } else { $binds = array_values($binds); $bind_count = count($binds); } goto fGhfa; x2yJ6: } protected function _execute($sql) { goto QltXG; rhbCK: return $success; goto TW_K3; ak5Fo: $this->odbc_result = NULL; goto yEsvs; Xb4Wm: if (TRUE === ($success = odbc_execute($this->odbc_result, $this->binds))) { $this->is_write_type($sql) or $success = $this->odbc_result; } goto ak5Fo; yEsvs: $this->binds = array(); goto rhbCK; QltXG: if (!isset($this->odbc_result)) { return odbc_exec($this->conn_id, $sql); } elseif ($this->odbc_result === FALSE) { return FALSE; } goto Xb4Wm; TW_K3: } protected function _trans_begin() { return odbc_autocommit($this->conn_id, FALSE); } protected function _trans_commit() { if (odbc_commit($this->conn_id)) { odbc_autocommit($this->conn_id, TRUE); return TRUE; } return FALSE; } protected function _trans_rollback() { if (odbc_rollback($this->conn_id)) { odbc_autocommit($this->conn_id, TRUE); return TRUE; } return FALSE; } public function is_write_type($sql) { if (preg_match("\43\136\50\x49\116\x53\105\122\x54\174\125\120\104\101\124\x45\x29\x2e\52\122\105\x54\x55\122\x4e\111\116\x47\134\163\56\x2b\50\134\54\x5c\163\x3f\x2e\x2b\51\52\x24\x23\151\163", $sql)) { return FALSE; } return parent::is_write_type($sql); } protected function _escape_str($str) { $this->display_error("\x64\x62\x5f\x75\156\163\x75\x70\160\157\162\164\x65\x64\x5f\x66\x65\141\x74\x75\162\x65"); } public function affected_rows() { return odbc_num_rows($this->result_id); } public function insert_id() { return $this->db_debug ? $this->display_error("\x64\x62\137\x75\x6e\163\x75\160\160\x6f\x72\x74\145\144\x5f\x66\x65\141\164\x75\x72\x65") : FALSE; } protected function _list_tables($prefix_limit = FALSE) { goto tpLcB; OyzMF: return $sql; goto nw143; IOzxf: if ($prefix_limit !== FALSE && $this->dbprefix !== '') { return $sql . "\40\101\x4e\x44\40\x74\141\142\154\145\137\x6e\141\155\x65\40\x4c\111\x4b\105\x20\47" . $this->escape_like_str($this->dbprefix) . "\45\47\40" . sprintf($this->_like_escape_str, $this->_like_escape_chr); } goto OyzMF; tpLcB: $sql = "\x53\x45\114\x45\x43\x54\x20\x74\141\142\x6c\x65\x5f\x6e\x61\x6d\x65\40\x46\122\117\x4d\x20\x69\x6e\x66\x6f\x72\155\141\164\151\157\x6e\x5f\x73\143\x68\145\155\141\x2e\x74\141\142\154\145\163\40\127\110\x45\122\105\40\164\x61\x62\154\x65\137\x73\143\x68\145\x6d\x61\40\75\40\47" . $this->schema . "\x27"; goto IOzxf; nw143: } protected function _list_columns($table = '') { return "\123\110\x4f\x57\x20\103\x4f\x4c\x55\x4d\x4e\123\40\x46\122\117\x4d\40" . $table; } protected function _field_data($table) { return "\x53\x45\114\105\x43\x54\40\124\x4f\x50\x20\x31\x20\x46\x52\117\115\40" . $table; } public function error() { return array("\143\157\x64\145" => odbc_error($this->conn_id), "\155\x65\x73\163\141\147\x65" => odbc_errormsg($this->conn_id)); } protected function _close() { odbc_close($this->conn_id); } }
