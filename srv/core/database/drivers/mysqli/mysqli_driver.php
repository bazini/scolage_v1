<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\123\105\120\x41\x54\x48") or exit("\116\157\x20\144\151\x72\x65\143\164\x20\x73\143\162\151\160\164\40\x61\143\143\145\x73\163\40\x61\154\154\x6f\x77\145\144"); class CI_DB_mysqli_driver extends CI_DB { public $dbdriver = "\155\x79\x73\161\154\151"; public $compress = FALSE; public $delete_hack = TRUE; public $stricton; protected $_escape_char = "\x60"; protected $_mysqli; public function db_connect($persistent = FALSE) { goto cviwF; WpdTx: if (is_array($this->encrypt)) { goto XsLXB; A10D7: empty($this->encrypt["\163\x73\x6c\x5f\x63\151\x70\x68\145\x72"]) or $ssl["\x63\x69\x70\150\x65\x72"] = $this->encrypt["\163\x73\x6c\x5f\x63\151\160\x68\145\x72"]; goto d99pN; d99pN: if (isset($this->encrypt["\163\x73\x6c\137\x76\145\162\x69\x66\x79"])) { $client_flags |= MYSQLI_CLIENT_SSL; if ($this->encrypt["\163\x73\x6c\137\166\145\x72\151\x66\x79"]) { defined("\x4d\x59\123\x51\114\x49\137\117\120\x54\137\x53\x53\x4c\137\126\x45\122\x49\x46\131\x5f\x53\105\x52\126\x45\122\x5f\103\x45\122\124") && $this->_mysqli->options(MYSQLI_OPT_SSL_VERIFY_SERVER_CERT, TRUE); } elseif (defined("\x4d\x59\123\x51\x4c\x49\137\103\x4c\111\x45\x4e\x54\x5f\x53\123\x4c\x5f\x44\x4f\116\x54\x5f\126\105\x52\x49\x46\131\137\123\x45\x52\126\x45\x52\137\103\x45\x52\x54")) { $client_flags |= MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT; } } goto UYcvP; XTHzY: empty($this->encrypt["\163\163\154\137\143\145\x72\x74"]) or $ssl["\143\x65\x72\164"] = $this->encrypt["\163\163\154\x5f\x63\145\x72\164"]; goto LJGIt; L1QYP: empty($this->encrypt["\x73\x73\x6c\x5f\143\x61\160\x61\x74\x68"]) or $ssl["\143\x61\160\x61\x74\150"] = $this->encrypt["\163\x73\154\137\x63\141\160\141\x74\x68"]; goto A10D7; XsLXB: $ssl = array(); goto dKwpn; LJGIt: empty($this->encrypt["\163\x73\x6c\x5f\143\141"]) or $ssl["\143\141"] = $this->encrypt["\x73\x73\154\137\x63\141"]; goto L1QYP; UYcvP: if (!empty($ssl)) { $client_flags |= MYSQLI_CLIENT_SSL; $this->_mysqli->ssl_set(isset($ssl["\x6b\x65\171"]) ? $ssl["\x6b\x65\x79"] : NULL, isset($ssl["\143\145\162\x74"]) ? $ssl["\x63\145\162\x74"] : NULL, isset($ssl["\143\141"]) ? $ssl["\x63\x61"] : NULL, isset($ssl["\143\x61\160\x61\164\150"]) ? $ssl["\x63\x61\160\x61\x74\150"] : NULL, isset($ssl["\143\151\x70\x68\145\162"]) ? $ssl["\143\x69\160\x68\145\162"] : NULL); } goto oKnQ7; dKwpn: empty($this->encrypt["\163\163\154\x5f\153\x65\171"]) or $ssl["\x6b\145\171"] = $this->encrypt["\x73\163\x6c\x5f\153\x65\x79"]; goto XTHzY; oKnQ7: } goto wBYCg; vC73K: $client_flags = $this->compress === TRUE ? MYSQLI_CLIENT_COMPRESS : 0; goto lwwDX; RyNqO: if (isset($this->stricton)) { if ($this->stricton) { $this->_mysqli->options(MYSQLI_INIT_COMMAND, "\x53\105\x54\x20\123\x45\x53\123\111\x4f\116\x20\x73\161\x6c\x5f\x6d\x6f\144\x65\40\75\x20\103\x4f\116\x43\101\124\50\x40\x40\x73\161\154\x5f\155\157\x64\145\x2c\x20\42\54\42\54\40\x22\x53\x54\x52\111\103\x54\x5f\x41\114\114\137\x54\101\102\x4c\x45\x53\42\51"); } else { $this->_mysqli->options(MYSQLI_INIT_COMMAND, "\123\105\x54\40\x53\105\123\x53\x49\x4f\x4e\40\x73\161\154\x5f\x6d\157\x64\145\x20\x3d\12\x9\11\11\x9\11\122\105\x50\x4c\101\x43\x45\x28\122\105\120\114\x41\x43\105\50\122\105\120\114\x41\103\x45\x28\122\105\x50\114\101\x43\105\50\122\x45\120\x4c\x41\x43\x45\x28\x52\x45\x50\x4c\x41\x43\x45\50\12\11\x9\x9\11\11\100\100\x73\x71\x6c\x5f\155\157\144\x65\x2c\xa\11\11\11\11\11\x22\123\124\122\x49\x43\124\x5f\x41\114\x4c\137\124\x41\102\x4c\x45\123\x2c\x22\54\40\x22\x22\x29\54\12\11\11\11\11\11\x22\54\x53\x54\x52\111\103\x54\137\x41\114\114\137\x54\101\x42\x4c\105\123\x22\x2c\x20\x22\42\x29\x2c\12\11\x9\x9\11\11\42\x53\x54\122\111\103\x54\x5f\101\x4c\114\x5f\x54\101\x42\x4c\105\x53\x22\54\x20\x22\42\x29\x2c\xa\11\x9\11\11\x9\42\123\x54\122\x49\103\x54\x5f\124\122\101\x4e\123\x5f\124\101\102\x4c\105\123\54\x22\54\40\x22\42\x29\x2c\xa\x9\11\x9\x9\x9\x22\x2c\123\124\x52\111\x43\124\x5f\x54\x52\101\116\x53\137\124\x41\102\114\105\x53\x22\54\40\x22\42\51\x2c\12\11\11\x9\11\x9\x22\x53\124\x52\x49\103\x54\x5f\x54\x52\x41\116\x53\x5f\x54\x41\102\x4c\x45\123\x22\x2c\x20\42\42\51"); } } goto WpdTx; lwwDX: $this->_mysqli = mysqli_init(); goto EbChq; sok9j: return FALSE; goto l31_B; cviwF: if ($this->hostname[0] === "\57") { goto ATgKL; alSTv: $port = NULL; goto CY6oJ; CY6oJ: $socket = $this->hostname; goto XZWWF; ATgKL: $hostname = NULL; goto alSTv; XZWWF: } else { goto hfCC5; ARRVR: $socket = NULL; goto lyiZV; Y9z2W: $port = empty($this->port) ? NULL : $this->port; goto ARRVR; hfCC5: $hostname = $persistent === TRUE ? "\160\72" . $this->hostname : $this->hostname; goto Y9z2W; lyiZV: } goto vC73K; wBYCg: if ($this->_mysqli->real_connect($hostname, $this->username, $this->password, $this->database, $port, $socket, $client_flags)) { if ($client_flags & MYSQLI_CLIENT_SSL && version_compare($this->_mysqli->client_info, "\x35\x2e\67\x2e\63", "\x3c\x3d") && empty($this->_mysqli->query("\123\x48\117\x57\x20\x53\124\x41\124\x55\123\x20\x4c\111\x4b\x45\x20\47\163\x73\154\x5f\143\151\x70\150\x65\x72\47")->fetch_object()->Value)) { goto OAxW5; uzlR7: $message = "\x4d\x79\x53\x51\114\x69\x20\167\141\163\x20\143\x6f\156\x66\151\x67\165\162\x65\x64\40\x66\x6f\x72\x20\141\156\40\123\123\114\40\x63\157\x6e\x6e\145\143\164\x69\x6f\x6e\54\x20\x62\x75\164\x20\147\x6f\x74\x20\x61\x6e\x20\x75\156\145\156\143\x72\x79\x70\164\145\x64\x20\143\157\x6e\156\x65\x63\164\x69\157\156\x20\151\x6e\x73\x74\x65\x61\144\41"; goto Cs0GF; PGhFg: return $this->db_debug ? $this->display_error($message, '', TRUE) : FALSE; goto qm13B; OAxW5: $this->_mysqli->close(); goto uzlR7; Cs0GF: log_message("\x65\x72\x72\157\x72", $message); goto PGhFg; qm13B: } return $this->_mysqli; } goto sok9j; EbChq: $this->_mysqli->options(MYSQLI_OPT_CONNECT_TIMEOUT, 10); goto RyNqO; l31_B: } public function reconnect() { if ($this->conn_id !== FALSE && $this->conn_id->ping() === FALSE) { $this->conn_id = FALSE; } } public function db_select($database = '') { goto i9BTt; i9BTt: if ($database === '') { $database = $this->database; } goto P6IHb; P6IHb: if ($this->conn_id->select_db($database)) { goto mTVMi; mTVMi: $this->database = $database; goto ompzt; ompzt: $this->data_cache = array(); goto xyRjy; xyRjy: return TRUE; goto SSXsa; SSXsa: } goto c3Vjq; c3Vjq: return FALSE; goto bYiAn; bYiAn: } protected function _db_set_charset($charset) { return $this->conn_id->set_charset($charset); } public function version() { if (isset($this->data_cache["\166\x65\x72\163\x69\157\x6e"])) { return $this->data_cache["\166\145\x72\x73\x69\x6f\x6e"]; } return $this->data_cache["\x76\x65\162\163\151\157\x6e"] = $this->conn_id->server_info; } protected function _execute($sql) { return $this->conn_id->query($this->_prep_query($sql)); } protected function _prep_query($sql) { if ($this->delete_hack === TRUE && preg_match("\x2f\136\134\163\52\104\105\114\x45\124\x45\134\163\x2b\x46\122\117\115\x5c\163\x2b\x28\134\x53\x2b\51\x5c\163\x2a\44\x2f\151", $sql)) { return trim($sql) . "\x20\127\x48\x45\x52\105\x20\x31\75\x31"; } return $sql; } protected function _trans_begin() { $this->conn_id->autocommit(FALSE); return is_php("\65\56\65") ? $this->conn_id->begin_transaction() : $this->simple_query("\x53\124\101\122\124\x20\x54\x52\x41\x4e\123\101\x43\x54\111\117\x4e"); } protected function _trans_commit() { if ($this->conn_id->commit()) { $this->conn_id->autocommit(TRUE); return TRUE; } return FALSE; } protected function _trans_rollback() { if ($this->conn_id->rollback()) { $this->conn_id->autocommit(TRUE); return TRUE; } return FALSE; } protected function _escape_str($str) { return $this->conn_id->real_escape_string($str); } public function affected_rows() { return $this->conn_id->affected_rows; } public function insert_id() { return $this->conn_id->insert_id; } protected function _list_tables($prefix_limit = FALSE) { goto LeDtV; LeDtV: $sql = "\x53\x48\117\127\40\124\101\x42\114\x45\x53\40\x46\x52\x4f\115\x20" . $this->_escape_char . $this->database . $this->_escape_char; goto QpZ0N; tulRQ: return $sql; goto Dp6fR; QpZ0N: if ($prefix_limit !== FALSE && $this->dbprefix !== '') { return $sql . "\x20\x4c\x49\x4b\x45\x20\47" . $this->escape_like_str($this->dbprefix) . "\45\47"; } goto tulRQ; Dp6fR: } protected function _list_columns($table = '') { return "\123\110\117\127\x20\x43\117\114\125\115\116\x53\x20\x46\122\x4f\115\40" . $this->protect_identifiers($table, TRUE, NULL, FALSE); } public function field_data($table) { goto ctByL; nf34s: for ($i = 0, $c = count($query); $i < $c; $i++) { $retval[$i] = new stdClass(); $retval[$i]->name = $query[$i]->Field; sscanf($query[$i]->Type, "\x25\x5b\141\x2d\172\x5d\x28\45\144\x29", $retval[$i]->type, $retval[$i]->max_length); $retval[$i]->default = $query[$i]->Default; $retval[$i]->primary_key = (int) ($query[$i]->Key === "\x50\x52\111"); } goto u_jvG; xnHxM: $query = $query->result_object(); goto F4gH1; F4gH1: $retval = array(); goto nf34s; ctByL: if (($query = $this->query("\123\x48\117\127\x20\103\x4f\114\x55\115\116\123\40\106\122\x4f\x4d\x20" . $this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE) { return FALSE; } goto xnHxM; u_jvG: return $retval; goto d7CEh; d7CEh: } public function error() { if (!empty($this->_mysqli->connect_errno)) { return array("\143\x6f\144\x65" => $this->_mysqli->connect_errno, "\x6d\145\163\163\x61\147\145" => $this->_mysqli->connect_error); } return array("\143\x6f\x64\x65" => $this->conn_id->errno, "\155\145\163\163\x61\147\145" => $this->conn_id->error); } protected function _from_tables() { if (!empty($this->qb_join) && count($this->qb_from) > 1) { return "\50" . implode("\54\x20", $this->qb_from) . "\51"; } return implode("\x2c\x20", $this->qb_from); } protected function _close() { $this->conn_id->close(); } }
