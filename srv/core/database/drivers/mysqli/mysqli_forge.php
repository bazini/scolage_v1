<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\x41\x53\x45\120\x41\124\110") or exit("\x4e\x6f\40\144\151\162\145\143\164\x20\163\143\x72\x69\x70\x74\x20\x61\x63\143\x65\163\163\40\x61\154\x6c\157\167\x65\x64"); class CI_DB_mysqli_forge extends CI_DB_forge { protected $_create_database = "\x43\x52\105\101\124\x45\40\x44\x41\x54\101\102\101\123\x45\x20\45\x73\x20\x43\x48\101\x52\x41\x43\124\x45\x52\40\x53\x45\x54\40\x25\163\40\x43\x4f\114\114\101\124\105\40\45\x73"; protected $_create_table_keys = TRUE; protected $_unsigned = array("\x54\111\x4e\131\111\x4e\124", "\123\x4d\101\114\114\x49\116\x54", "\115\x45\104\x49\x55\x4d\111\x4e\124", "\111\x4e\124", "\x49\x4e\x54\x45\107\105\122", "\102\111\107\111\116\x54", "\x52\x45\x41\114", "\x44\x4f\125\x42\114\x45", "\104\x4f\x55\x42\114\x45\x20\x50\122\105\103\111\123\111\x4f\x4e", "\x46\x4c\117\x41\124", "\104\x45\x43\x49\115\x41\x4c", "\x4e\125\x4d\105\x52\x49\x43"); protected $_null = "\116\125\x4c\x4c"; protected function _create_table_attr($attributes) { goto ZbMJh; jioej: return $sql; goto oLm1Q; MRoua: if (!empty($this->db->char_set) && !strpos($sql, "\x43\110\101\122\101\103\x54\105\122\x20\123\x45\x54") && !strpos($sql, "\x43\110\x41\122\x53\105\124")) { $sql .= "\40\104\x45\106\x41\125\x4c\124\x20\103\x48\x41\x52\x41\103\124\x45\x52\40\123\105\124\x20\x3d\40" . $this->db->char_set; } goto RiyAG; fxQ4X: foreach (array_keys($attributes) as $key) { if (is_string($key)) { $sql .= "\40" . strtoupper($key) . "\x20\75\40" . $attributes[$key]; } } goto MRoua; ZbMJh: $sql = ''; goto fxQ4X; RiyAG: if (!empty($this->db->dbcollat) && !strpos($sql, "\103\117\x4c\x4c\101\x54\x45")) { $sql .= "\40\x43\x4f\x4c\114\101\124\105\40\x3d\40" . $this->db->dbcollat; } goto jioej; oLm1Q: } protected function _alter_table($alter_type, $table, $field) { goto KfrTA; IBhRb: return array($sql . implode("\x2c", $field)); goto MIlR2; ZZkDZ: for ($i = 0, $c = count($field); $i < $c; $i++) { if ($field[$i]["\137\154\151\164\x65\162\141\x6c"] !== FALSE) { $field[$i] = $alter_type === "\x41\x44\x44" ? "\xa\x9\101\x44\104\x20" . $field[$i]["\137\154\151\x74\145\x72\141\x6c"] : "\12\11\x4d\117\x44\111\x46\x59\40" . $field[$i]["\x5f\154\x69\x74\145\162\x61\x6c"]; } else { if ($alter_type === "\x41\104\x44") { $field[$i]["\x5f\154\151\x74\145\x72\x61\x6c"] = "\xa\x9\x41\x44\x44\x20"; } else { $field[$i]["\x5f\x6c\x69\164\x65\162\141\x6c"] = empty($field[$i]["\156\145\167\x5f\156\141\155\x65"]) ? "\xa\11\x4d\x4f\104\111\106\131\40" : "\xa\11\x43\x48\101\116\x47\105\40"; } $field[$i] = $field[$i]["\x5f\154\151\164\145\x72\141\x6c"] . $this->_process_column($field[$i]); } } goto IBhRb; l5gSM: $sql = "\x41\x4c\x54\105\x52\x20\x54\x41\x42\x4c\x45\x20" . $this->db->escape_identifiers($table); goto ZZkDZ; KfrTA: if ($alter_type === "\x44\122\x4f\120") { return parent::_alter_table($alter_type, $table, $field); } goto l5gSM; MIlR2: } protected function _process_column($field) { goto boiB1; boiB1: $extra_clause = isset($field["\x61\x66\164\x65\x72"]) ? "\x20\101\x46\124\x45\122\x20" . $this->db->escape_identifiers($field["\141\x66\x74\145\162"]) : ''; goto SbXDt; jhu_z: return $this->db->escape_identifiers($field["\x6e\141\155\x65"]) . (empty($field["\x6e\x65\x77\137\x6e\x61\x6d\145"]) ? '' : "\40" . $this->db->escape_identifiers($field["\156\145\167\x5f\x6e\141\x6d\145"])) . "\40" . $field["\x74\171\x70\x65"] . $field["\154\145\x6e\147\164\150"] . $field["\165\156\163\151\x67\156\145\144"] . $field["\156\165\154\154"] . $field["\144\x65\146\141\165\154\x74"] . $field["\x61\165\x74\157\x5f\x69\156\x63\x72\x65\155\145\x6e\x74"] . $field["\165\x6e\x69\161\165\145"] . (empty($field["\x63\x6f\155\155\145\x6e\x74"]) ? '' : "\40\103\x4f\115\115\105\116\x54\x20" . $field["\x63\x6f\x6d\x6d\145\x6e\164"]) . $extra_clause; goto LyXAM; SbXDt: if (empty($extra_clause) && isset($field["\x66\151\162\163\164"]) && $field["\x66\151\x72\x73\164"] === TRUE) { $extra_clause = "\x20\x46\111\x52\123\124"; } goto jhu_z; LyXAM: } protected function _process_indexes($table) { goto T4_X9; t9nx0: return $sql; goto h0afn; ZLNHO: $this->keys = array(); goto t9nx0; HxKXz: for ($i = 0, $c = count($this->keys); $i < $c; $i++) { if (is_array($this->keys[$i])) { for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++) { if (!isset($this->fields[$this->keys[$i][$i2]])) { unset($this->keys[$i][$i2]); continue; } } } elseif (!isset($this->fields[$this->keys[$i]])) { unset($this->keys[$i]); continue; } is_array($this->keys[$i]) or $this->keys[$i] = array($this->keys[$i]); $sql .= "\54\12\x9\113\x45\x59\x20" . $this->db->escape_identifiers(implode("\137", $this->keys[$i])) . "\x20\50" . implode("\54\40", $this->db->escape_identifiers($this->keys[$i])) . "\51"; } goto ZLNHO; T4_X9: $sql = ''; goto HxKXz; h0afn: } }
