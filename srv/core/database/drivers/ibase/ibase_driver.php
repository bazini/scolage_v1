<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\101\123\x45\120\101\124\x48") or exit("\x4e\x6f\x20\x64\x69\162\x65\x63\x74\40\163\143\x72\151\160\164\x20\x61\143\143\145\163\x73\x20\141\154\154\157\x77\145\x64"); class CI_DB_ibase_driver extends CI_DB { public $dbdriver = "\151\x62\x61\163\145"; protected $_random_keyword = array("\122\x41\116\104\50\51", "\x52\101\116\104\50\51"); protected $_ibase_trans; public function db_connect($persistent = FALSE) { return $persistent === TRUE ? ibase_pconnect($this->hostname . "\72" . $this->database, $this->username, $this->password, $this->char_set) : ibase_connect($this->hostname . "\x3a" . $this->database, $this->username, $this->password, $this->char_set); } public function version() { goto wDlcl; SkpTH: return FALSE; goto FWgiw; wDlcl: if (isset($this->data_cache["\166\x65\x72\163\151\157\156"])) { return $this->data_cache["\166\x65\162\x73\151\157\x6e"]; } goto evvbz; evvbz: if ($service = ibase_service_attach($this->hostname, $this->username, $this->password)) { goto J37gp; I1spz: return $this->data_cache["\166\x65\x72\x73\151\x6f\x6e"]; goto U8A27; MtoXY: ibase_service_detach($service); goto I1spz; J37gp: $this->data_cache["\166\145\x72\163\151\x6f\156"] = ibase_server_info($service, IBASE_SVC_SERVER_VERSION); goto MtoXY; U8A27: } goto SkpTH; FWgiw: } protected function _execute($sql) { return ibase_query(isset($this->_ibase_trans) ? $this->_ibase_trans : $this->conn_id, $sql); } protected function _trans_begin() { goto leX2i; xmYG9: $this->_ibase_trans = $trans_handle; goto pJTk5; pJTk5: return TRUE; goto lh00r; leX2i: if (($trans_handle = ibase_trans($this->conn_id)) === FALSE) { return FALSE; } goto xmYG9; lh00r: } protected function _trans_commit() { if (ibase_commit($this->_ibase_trans)) { $this->_ibase_trans = NULL; return TRUE; } return FALSE; } protected function _trans_rollback() { if (ibase_rollback($this->_ibase_trans)) { $this->_ibase_trans = NULL; return TRUE; } return FALSE; } public function affected_rows() { return ibase_affected_rows($this->conn_id); } public function insert_id($generator_name, $inc_by = 0) { return ibase_gen_id("\42" . $generator_name . "\x22", $inc_by); } protected function _list_tables($prefix_limit = FALSE) { goto b1Hq3; b1Hq3: $sql = "\x53\x45\x4c\x45\103\x54\x20\x54\122\x49\115\x28\42\x52\x44\x42\44\122\105\x4c\101\x54\x49\x4f\x4e\137\x4e\101\x4d\x45\42\51\x20\x41\x53\x20\x54\101\x42\114\x45\137\x4e\101\115\105\40\x46\122\117\115\x20\x22\x52\104\x42\44\122\105\114\101\124\111\117\116\x53\42\40\x57\110\105\x52\x45\x20\42\122\x44\102\44\x52\x45\114\101\124\111\117\116\137\x4e\x41\115\x45\x22\x20\x4e\117\124\x20\114\111\x4b\105\x20\x27\122\104\102\x24\x25\x27\x20\101\x4e\104\x20\42\122\104\102\44\x52\x45\114\101\124\111\x4f\x4e\x5f\116\x41\x4d\105\42\x20\116\x4f\124\x20\x4c\x49\113\x45\40\x27\115\x4f\x4e\x24\45\x27"; goto AGzVh; HOPqY: return $sql; goto mIUsQ; AGzVh: if ($prefix_limit !== FALSE && $this->dbprefix !== '') { return $sql . "\x20\101\x4e\x44\x20\x54\x52\111\x4d\x28\x22\122\x44\102\44\x52\x45\x4c\101\124\111\x4f\116\x5f\x4e\101\x4d\x45\42\51\x20\x41\x53\40\124\101\x42\x4c\x45\137\x4e\101\x4d\x45\40\x4c\111\x4b\105\x20\47" . $this->escape_like_str($this->dbprefix) . "\x25\x27\40" . sprintf($this->_like_escape_str, $this->_like_escape_chr); } goto HOPqY; mIUsQ: } protected function _list_columns($table = '') { return "\123\x45\114\x45\103\124\40\124\122\111\x4d\x28\x22\122\x44\x42\x24\x46\111\105\114\104\137\x4e\x41\x4d\x45\42\x29\40\x41\x53\40\x43\117\x4c\x55\115\116\137\116\101\115\105\x20\106\122\117\115\x20\42\x52\104\x42\x24\x52\x45\x4c\101\124\111\x4f\x4e\137\106\x49\105\114\x44\x53\x22\40\x57\x48\x45\122\105\x20\x22\122\x44\x42\x24\122\x45\x4c\x41\x54\111\x4f\116\x5f\116\x41\x4d\105\x22\40\x3d\40" . $this->escape($table); } public function field_data($table) { $sql = "\123\105\x4c\105\103\124\x20\x22\x72\146\x69\145\x6c\144\163\x22\56\42\x52\x44\x42\44\106\x49\105\x4c\x44\137\116\101\x4d\105\42\40\101\x53\x20\x22\156\141\155\145\x22\x2c\xa\11\x9\11\11\103\101\123\x45\40\42\146\151\x65\154\x64\x73\42\x2e\x22\x52\104\102\44\106\x49\x45\x4c\x44\x5f\x54\x59\x50\105\x22\xa\x9\x9\11\x9\x9\x57\110\105\116\40\67\40\124\x48\x45\x4e\40\x27\x53\115\x41\x4c\x4c\111\116\x54\x27\12\11\11\x9\x9\x9\127\x48\105\116\40\70\40\124\110\105\x4e\40\47\x49\x4e\x54\x45\x47\x45\x52\47\xa\x9\x9\11\11\x9\x57\x48\x45\x4e\x20\x39\40\124\x48\x45\x4e\40\47\121\125\x41\x44\x27\xa\x9\x9\11\11\x9\127\x48\105\116\x20\x31\60\x20\x54\110\x45\x4e\40\47\x46\x4c\117\101\x54\x27\12\x9\x9\x9\11\11\127\x48\x45\116\x20\61\61\x20\124\110\x45\x4e\x20\x27\104\x46\114\x4f\101\x54\47\xa\11\x9\11\x9\11\x57\x48\105\x4e\40\x31\62\40\124\110\x45\x4e\x20\x27\x44\x41\124\x45\x27\12\x9\x9\x9\11\x9\x57\x48\x45\116\x20\x31\x33\x20\x54\110\105\116\x20\47\124\111\x4d\105\x27\xa\x9\11\11\11\x9\x57\x48\x45\116\x20\61\64\x20\124\110\x45\116\x20\x27\x43\110\x41\122\47\12\x9\11\11\11\x9\x57\110\105\x4e\40\x31\66\40\x54\110\x45\116\40\47\111\116\x54\66\64\47\12\x9\x9\11\x9\x9\127\110\x45\x4e\x20\x32\67\40\x54\110\x45\x4e\40\47\x44\x4f\125\x42\x4c\105\x27\12\x9\x9\11\x9\x9\127\110\x45\x4e\x20\x33\x35\x20\124\110\x45\x4e\x20\x27\x54\111\115\x45\x53\x54\x41\115\x50\x27\12\11\x9\11\11\x9\127\110\105\116\40\63\67\40\x54\110\x45\116\40\47\x56\x41\122\103\110\x41\x52\x27\12\11\x9\11\11\x9\127\x48\x45\116\x20\64\60\x20\124\110\x45\x4e\40\x27\x43\x53\x54\x52\111\x4e\107\x27\xa\x9\11\11\11\x9\x57\110\x45\x4e\x20\x32\x36\61\40\124\110\x45\x4e\40\x27\102\x4c\x4f\102\x27\xa\x9\11\x9\11\11\x45\114\123\x45\x20\116\x55\114\x4c\xa\x9\11\x9\11\x45\x4e\x44\x20\x41\x53\40\42\x74\171\x70\x65\x22\x2c\12\11\11\x9\x9\42\x66\x69\145\x6c\144\x73\42\x2e\x22\122\104\102\x24\x46\x49\x45\114\x44\137\114\x45\x4e\x47\124\110\42\40\x41\123\x20\x22\155\141\x78\137\154\x65\156\147\164\x68\x22\x2c\12\x9\x9\x9\x9\42\x72\x66\x69\145\154\144\163\x22\56\42\x52\104\102\x24\x44\105\106\x41\125\114\124\x5f\126\101\x4c\x55\x45\42\x20\x41\123\40\42\144\x65\x66\141\x75\x6c\x74\x22\xa\11\11\x9\106\x52\117\115\x20\42\122\104\102\x24\x52\105\x4c\x41\x54\x49\117\116\x5f\x46\x49\105\114\x44\123\x22\40\x22\162\146\151\145\154\x64\x73\x22\xa\11\x9\11\x9\112\x4f\111\116\x20\42\x52\x44\102\x24\106\111\x45\114\x44\123\x22\40\x22\146\151\145\154\144\163\x22\40\x4f\116\x20\42\x72\146\151\x65\x6c\x64\163\x22\x2e\42\x52\x44\102\x24\106\x49\x45\x4c\x44\137\x53\117\125\122\103\x45\x22\40\75\x20\42\x66\x69\145\x6c\x64\x73\x22\x2e\42\122\x44\x42\x24\106\111\105\114\104\x5f\116\101\115\105\x22\xa\11\x9\x9\x57\110\105\x52\x45\40\42\x72\x66\151\x65\x6c\x64\163\42\56\42\122\x44\102\x24\x52\x45\114\x41\x54\111\117\116\x5f\x4e\x41\x4d\x45\42\x20\75\40" . $this->escape($table) . "\xa\11\x9\11\x4f\x52\x44\105\122\x20\102\x59\x20\x22\162\146\x69\145\x6c\144\163\x22\x2e\42\122\x44\102\44\x46\111\x45\x4c\x44\137\120\117\x53\x49\x54\x49\117\116\x22"; return ($query = $this->query($sql)) !== FALSE ? $query->result_object() : FALSE; } public function error() { return array("\x63\x6f\x64\145" => ibase_errcode(), "\155\x65\163\163\141\x67\145" => ibase_errmsg()); } protected function _update($table, $values) { $this->qb_limit = FALSE; return parent::_update($table, $values); } protected function _truncate($table) { return "\x44\105\x4c\105\x54\x45\x20\x46\122\x4f\x4d\x20" . $table; } protected function _delete($table) { $this->qb_limit = FALSE; return parent::_delete($table); } protected function _limit($sql) { if (stripos($this->version(), "\146\x69\x72\x65\x62\x69\162\x64") !== FALSE) { $select = "\106\x49\x52\x53\x54\x20" . $this->qb_limit . ($this->qb_offset ? "\40\x53\113\x49\x50\40" . $this->qb_offset : ''); } else { $select = "\x52\x4f\x57\123\40" . ($this->qb_offset ? $this->qb_offset . "\x20\x54\x4f\40" . ($this->qb_limit + $this->qb_offset) : $this->qb_limit); } return preg_replace("\140\x53\105\x4c\105\x43\x54\x60\x69", "\123\105\114\105\x43\124\x20" . $select, $sql, 1); } protected function _insert_batch($table, $keys, $values) { return $this->db_debug ? $this->display_error("\144\x62\x5f\165\156\x73\x75\160\x70\157\162\x74\145\x64\137\x66\x65\x61\x74\x75\162\145") : FALSE; } protected function _close() { ibase_close($this->conn_id); } }
