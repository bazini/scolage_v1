<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\123\x45\x50\101\124\x48") or exit("\x4e\x6f\40\x64\x69\162\145\x63\164\40\163\x63\x72\151\x70\x74\x20\141\143\x63\x65\x73\x73\x20\x61\x6c\x6c\x6f\167\x65\144"); class CI_DB_mysql_driver extends CI_DB { public $dbdriver = "\x6d\x79\163\x71\154"; public $compress = FALSE; public $delete_hack = TRUE; public $stricton; protected $_escape_char = "\x60"; public function __construct($params) { parent::__construct($params); if (!empty($this->port)) { $this->hostname .= "\x3a" . $this->port; } } public function db_connect($persistent = FALSE) { goto EBUs0; qYyNN: $this->conn_id = $persistent === TRUE ? mysql_pconnect($this->hostname, $this->username, $this->password, $client_flags) : mysql_connect($this->hostname, $this->username, $this->password, TRUE, $client_flags); goto dCPt7; dCPt7: if ($this->database !== '' && !$this->db_select()) { log_message("\145\162\162\157\x72", "\x55\156\x61\x62\154\x65\40\164\x6f\x20\x73\x65\154\145\143\164\40\144\141\164\141\142\141\163\x65\x3a\40" . $this->database); return $this->db_debug === TRUE ? $this->display_error("\144\x62\137\165\156\141\142\154\x65\x5f\x74\x6f\x5f\163\145\x6c\x65\143\164", $this->database) : FALSE; } goto FWA2X; owWZB: return $this->conn_id; goto UNx7U; EBUs0: $client_flags = $this->compress === FALSE ? 0 : MYSQL_CLIENT_COMPRESS; goto MkJaF; MkJaF: if ($this->encrypt === TRUE) { $client_flags = $client_flags | MYSQL_CLIENT_SSL; } goto qYyNN; FWA2X: if (isset($this->stricton) && is_resource($this->conn_id)) { if ($this->stricton) { $this->simple_query("\x53\105\x54\x20\x53\105\x53\x53\111\x4f\x4e\x20\163\161\154\x5f\x6d\x6f\x64\x65\x20\x3d\40\103\117\x4e\x43\x41\x54\50\x40\100\163\x71\x6c\137\x6d\x6f\144\x65\54\40\x22\x2c\42\54\40\42\x53\x54\x52\x49\103\x54\x5f\101\x4c\x4c\x5f\124\x41\x42\114\105\x53\x22\51"); } else { $this->simple_query("\123\105\x54\x20\x53\105\123\123\x49\x4f\x4e\40\163\161\154\137\155\x6f\x64\145\x20\x3d\xa\x9\x9\x9\11\11\x52\105\x50\114\101\103\x45\50\122\x45\x50\x4c\x41\103\x45\x28\x52\x45\120\x4c\101\x43\x45\50\122\105\x50\114\x41\103\105\x28\x52\105\120\x4c\x41\x43\x45\x28\122\x45\120\x4c\101\x43\x45\x28\xa\x9\11\x9\x9\11\x40\100\x73\161\154\x5f\x6d\x6f\144\x65\54\12\11\11\x9\x9\11\x22\x53\x54\x52\x49\x43\124\137\x41\114\114\x5f\x54\101\x42\x4c\105\123\54\42\x2c\40\x22\42\x29\54\12\11\x9\11\x9\11\42\54\x53\x54\122\111\x43\124\137\101\114\114\137\124\101\102\114\105\x53\x22\54\x20\x22\x22\x29\54\12\11\x9\x9\x9\11\42\x53\x54\122\x49\103\124\137\x41\x4c\x4c\137\124\101\102\x4c\x45\123\x22\x2c\40\42\x22\x29\x2c\xa\11\11\x9\11\x9\x22\x53\x54\x52\x49\103\124\137\124\x52\x41\x4e\123\x5f\x54\101\x42\x4c\105\x53\54\x22\54\x20\x22\x22\x29\54\12\x9\x9\x9\x9\x9\x22\x2c\x53\124\122\x49\x43\x54\x5f\124\122\x41\116\123\x5f\x54\x41\102\x4c\105\123\x22\54\x20\x22\42\51\54\xa\11\11\x9\11\x9\42\x53\x54\122\x49\103\124\137\x54\x52\101\116\123\x5f\124\x41\x42\114\105\123\x22\54\40\42\x22\51"); } } goto owWZB; UNx7U: } public function reconnect() { if (mysql_ping($this->conn_id) === FALSE) { $this->conn_id = FALSE; } } public function db_select($database = '') { goto dUwD5; xuGOI: return FALSE; goto vsKmi; PH7GG: if (mysql_select_db($database, $this->conn_id)) { goto W5T24; TgbEn: $this->data_cache = array(); goto YcDw1; W5T24: $this->database = $database; goto TgbEn; YcDw1: return TRUE; goto Nk20x; Nk20x: } goto xuGOI; dUwD5: if ($database === '') { $database = $this->database; } goto PH7GG; vsKmi: } protected function _db_set_charset($charset) { return mysql_set_charset($charset, $this->conn_id); } public function version() { goto sdj8D; H9wbC: return $this->data_cache["\x76\145\x72\x73\x69\x6f\x6e"] = $version; goto HTF4v; vc2Ah: if (!$this->conn_id or ($version = mysql_get_server_info($this->conn_id)) === FALSE) { return FALSE; } goto H9wbC; sdj8D: if (isset($this->data_cache["\166\145\162\163\151\x6f\x6e"])) { return $this->data_cache["\166\145\162\163\151\x6f\x6e"]; } goto vc2Ah; HTF4v: } protected function _execute($sql) { return mysql_query($this->_prep_query($sql), $this->conn_id); } protected function _prep_query($sql) { if ($this->delete_hack === TRUE && preg_match("\x2f\136\134\163\52\104\x45\114\105\x54\x45\x5c\x73\53\x46\x52\x4f\115\x5c\x73\x2b\x28\x5c\123\x2b\51\x5c\163\52\44\x2f\151", $sql)) { return trim($sql) . "\40\x57\110\x45\x52\x45\x20\x31\75\61"; } return $sql; } protected function _trans_begin() { $this->simple_query("\x53\x45\124\40\x41\x55\124\x4f\103\117\x4d\x4d\111\124\75\x30"); return $this->simple_query("\123\x54\x41\122\124\x20\x54\x52\x41\116\x53\x41\x43\x54\x49\x4f\x4e"); } protected function _trans_commit() { if ($this->simple_query("\103\x4f\115\115\x49\x54")) { $this->simple_query("\123\x45\124\x20\101\125\124\x4f\103\x4f\x4d\x4d\111\124\75\x31"); return TRUE; } return FALSE; } protected function _trans_rollback() { if ($this->simple_query("\122\x4f\114\x4c\102\101\103\x4b")) { $this->simple_query("\x53\x45\124\40\x41\x55\124\x4f\x43\117\x4d\x4d\111\x54\75\61"); return TRUE; } return FALSE; } protected function _escape_str($str) { return mysql_real_escape_string($str, $this->conn_id); } public function affected_rows() { return mysql_affected_rows($this->conn_id); } public function insert_id() { return mysql_insert_id($this->conn_id); } protected function _list_tables($prefix_limit = FALSE) { goto hB32b; hB32b: $sql = "\x53\110\x4f\127\40\x54\x41\102\x4c\x45\123\x20\106\x52\x4f\x4d\x20" . $this->_escape_char . $this->database . $this->_escape_char; goto HU4e5; HU4e5: if ($prefix_limit !== FALSE && $this->dbprefix !== '') { return $sql . "\40\x4c\111\113\105\x20\47" . $this->escape_like_str($this->dbprefix) . "\x25\x27"; } goto ESBSU; ESBSU: return $sql; goto s4K55; s4K55: } protected function _list_columns($table = '') { return "\x53\110\117\x57\40\103\117\x4c\125\115\116\123\x20\x46\122\x4f\x4d\40" . $this->protect_identifiers($table, TRUE, NULL, FALSE); } public function field_data($table) { goto AE8ri; vKCwr: for ($i = 0, $c = count($query); $i < $c; $i++) { $retval[$i] = new stdClass(); $retval[$i]->name = $query[$i]->Field; sscanf($query[$i]->Type, "\x25\133\141\x2d\x7a\x5d\50\x25\x64\51", $retval[$i]->type, $retval[$i]->max_length); $retval[$i]->default = $query[$i]->Default; $retval[$i]->primary_key = (int) ($query[$i]->Key === "\120\x52\111"); } goto JsiX3; AE8ri: if (($query = $this->query("\x53\x48\117\x57\x20\x43\x4f\x4c\x55\115\x4e\123\x20\x46\122\x4f\115\x20" . $this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE) { return FALSE; } goto hAX4_; JsiX3: return $retval; goto WL3wX; GuUsM: $retval = array(); goto vKCwr; hAX4_: $query = $query->result_object(); goto GuUsM; WL3wX: } public function error() { return array("\x63\x6f\144\145" => mysql_errno($this->conn_id), "\x6d\145\163\163\141\147\x65" => mysql_error($this->conn_id)); } protected function _from_tables() { if (!empty($this->qb_join) && count($this->qb_from) > 1) { return "\x28" . implode("\54\40", $this->qb_from) . "\x29"; } return implode("\54\40", $this->qb_from); } protected function _close() { @mysql_close($this->conn_id); } }
