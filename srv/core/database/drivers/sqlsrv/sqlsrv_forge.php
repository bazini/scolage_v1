<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\101\123\105\120\x41\124\x48") or exit("\x4e\x6f\40\144\x69\x72\145\x63\164\40\x73\x63\162\151\160\x74\x20\141\x63\143\x65\x73\163\40\141\154\x6c\157\x77\145\x64"); class CI_DB_sqlsrv_forge extends CI_DB_forge { protected $_create_table_if = "\111\x46\x20\x4e\x4f\124\x20\105\x58\x49\123\x54\x53\x20\x28\123\105\114\105\103\x54\x20\x2a\40\106\x52\117\115\40\163\171\163\x6f\142\152\x65\143\x74\x73\x20\x57\110\x45\x52\105\40\x49\x44\40\x3d\x20\x6f\x62\x6a\x65\143\x74\137\151\144\50\x4e\47\x25\163\x27\51\40\x41\x4e\x44\x20\117\102\x4a\x45\x43\x54\120\122\117\x50\x45\122\x54\131\x28\151\x64\x2c\40\116\47\x49\163\125\163\x65\162\124\141\x62\154\x65\x27\x29\x20\x3d\40\x31\x29\xa\x43\x52\105\x41\x54\105\40\124\x41\x42\x4c\x45"; protected $_drop_table_if = "\111\x46\40\105\130\111\123\x54\x53\x20\x28\x53\x45\x4c\105\x43\x54\x20\x2a\x20\x46\x52\117\x4d\40\x73\x79\x73\x6f\142\x6a\x65\143\164\x73\40\x57\110\x45\x52\x45\40\111\x44\x20\75\40\x6f\142\x6a\x65\x63\x74\x5f\151\x64\50\x4e\x27\45\163\47\51\40\x41\x4e\x44\40\117\102\112\x45\103\x54\120\122\x4f\x50\105\122\124\x59\50\151\144\x2c\x20\x4e\x27\111\x73\125\163\145\162\124\x61\142\x6c\145\x27\51\40\x3d\40\x31\x29\12\x44\122\117\x50\40\x54\x41\x42\114\105"; protected $_unsigned = array("\x54\111\x4e\131\111\116\x54" => "\123\x4d\x41\x4c\114\111\x4e\x54", "\x53\115\x41\x4c\x4c\111\116\124" => "\111\116\124", "\x49\116\x54" => "\102\111\107\x49\116\x54", "\x52\x45\x41\x4c" => "\x46\x4c\x4f\101\x54"); protected function _alter_table($alter_type, $table, $field) { goto alKBs; ZgXLL: $sql = "\101\x4c\x54\x45\122\x20\124\x41\102\114\x45\40" . $this->db->escape_identifiers($table) . "\40\101\x4c\x54\x45\122\x20\x43\117\x4c\125\x4d\x4e\x20"; goto J9c5M; alKBs: if (in_array($alter_type, array("\x41\104\104", "\x44\x52\117\120"), TRUE)) { return parent::_alter_table($alter_type, $table, $field); } goto ZgXLL; lOlaa: return $sqls; goto iD2GP; Lnw5A: for ($i = 0, $c = count($field); $i < $c; $i++) { $sqls[] = $sql . $this->_process_column($field[$i]); } goto lOlaa; J9c5M: $sqls = array(); goto Lnw5A; iD2GP: } protected function _attr_type(&$attributes) { if (isset($attributes["\x43\117\x4e\x53\x54\x52\x41\111\116\x54"]) && strpos($attributes["\124\x59\x50\x45"], "\111\116\x54") !== FALSE) { unset($attributes["\x43\x4f\116\x53\124\122\x41\111\116\x54"]); } switch (strtoupper($attributes["\124\x59\120\105"])) { case "\x4d\x45\104\x49\125\x4d\111\116\x54": goto h9Tl6; f80cq: return; goto cRwwa; h9Tl6: $attributes["\x54\x59\120\105"] = "\x49\116\124\x45\x47\105\x52"; goto g2fY5; g2fY5: $attributes["\x55\116\x53\111\107\x4e\x45\104"] = FALSE; goto f80cq; cRwwa: case "\111\x4e\124\x45\107\x45\122": $attributes["\124\131\120\105"] = "\111\x4e\x54"; return; default: return; } } protected function _attr_auto_increment(&$attributes, &$field) { if (!empty($attributes["\x41\x55\124\117\137\111\x4e\103\122\x45\115\x45\x4e\124"]) && $attributes["\101\x55\x54\x4f\137\111\x4e\103\x52\x45\x4d\105\x4e\124"] === TRUE && stripos($field["\164\171\x70\145"], "\x69\156\x74") !== FALSE) { $field["\141\165\x74\x6f\x5f\x69\156\x63\x72\145\x6d\145\156\x74"] = "\x20\111\104\x45\x4e\124\111\x54\131\50\x31\54\x31\x29"; } } }
