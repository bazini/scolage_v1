<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\123\105\x50\x41\x54\x48") or exit("\116\157\x20\144\x69\162\145\143\x74\40\163\143\162\x69\160\164\40\141\143\143\145\x73\163\40\141\154\x6c\x6f\x77\145\144"); class CI_DB_pdo_oci_forge extends CI_DB_pdo_forge { protected $_create_database = FALSE; protected $_create_table_if = FALSE; protected $_drop_database = FALSE; protected $_unsigned = FALSE; protected $_null = "\x4e\x55\114\114"; protected function _alter_table($alter_type, $table, $field) { goto ICQrh; GA7CD: array_unshift($sqls, $sql); goto jQ6jE; ICQrh: if ($alter_type === "\x44\122\117\x50") { return parent::_alter_table($alter_type, $table, $field); } elseif ($alter_type === "\x43\110\101\116\x47\x45") { $alter_type = "\115\x4f\104\111\x46\131"; } goto K9dH8; K1uIK: $sql .= count($field) === 1 ? $field[0] : "\50" . implode("\x2c", $field) . "\51"; goto GA7CD; XH9sd: $sql .= "\40" . $alter_type . "\x20"; goto K1uIK; b0Njt: for ($i = 0, $c = count($field); $i < $c; $i++) { if ($field[$i]["\137\x6c\151\164\x65\162\x61\x6c"] !== FALSE) { $field[$i] = "\12\11" . $field[$i]["\137\x6c\151\164\x65\x72\x61\x6c"]; } else { goto iJcYE; iJcYE: $field[$i]["\x5f\x6c\x69\x74\145\162\x61\x6c"] = "\xa\x9" . $this->_process_column($field[$i]); goto OFBoC; rCqsi: if ($alter_type === "\x4d\x4f\x44\111\106\x59" && !empty($field[$i]["\x6e\x65\x77\x5f\156\x61\x6d\145"])) { $sqls[] = $sql . "\x20\x52\105\x4e\x41\x4d\105\x20\103\x4f\114\125\115\116\x20" . $this->db->escape_identifiers($field[$i]["\156\141\155\x65"]) . "\x20\x54\x4f\40" . $this->db->escape_identifiers($field[$i]["\156\145\x77\137\x6e\141\x6d\145"]); } goto kzMdS; OFBoC: if (!empty($field[$i]["\143\157\x6d\155\x65\x6e\x74"])) { $sqls[] = "\x43\x4f\x4d\x4d\x45\116\x54\x20\117\116\40\x43\x4f\x4c\x55\x4d\x4e\40" . $this->db->escape_identifiers($table) . "\x2e" . $this->db->escape_identifiers($field[$i]["\156\141\155\145"]) . "\40\111\x53\x20" . $field[$i]["\x63\x6f\155\x6d\x65\x6e\x74"]; } goto rCqsi; kzMdS: } } goto XH9sd; Lnks1: $sqls = array(); goto b0Njt; K9dH8: $sql = "\x41\x4c\x54\x45\122\x20\124\101\102\x4c\105\40" . $this->db->escape_identifiers($table); goto Lnks1; jQ6jE: return $sql; goto MJEHH; MJEHH: } protected function _attr_auto_increment(&$attributes, &$field) { } protected function _attr_type(&$attributes) { switch (strtoupper($attributes["\x54\131\120\105"])) { case "\x54\x49\116\x59\111\x4e\124": $attributes["\x54\131\x50\x45"] = "\x4e\x55\115\102\105\x52"; return; case "\115\105\x44\111\125\115\111\116\x54": $attributes["\x54\131\120\x45"] = "\116\125\115\102\105\122"; return; case "\111\x4e\124": $attributes["\x54\131\x50\105"] = "\116\125\x4d\102\105\122"; return; case "\102\111\x47\x49\x4e\x54": $attributes["\124\131\120\105"] = "\x4e\x55\x4d\x42\105\122"; return; default: return; } } }
