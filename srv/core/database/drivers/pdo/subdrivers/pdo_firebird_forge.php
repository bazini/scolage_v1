<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\101\123\x45\x50\x41\124\x48") or exit("\x4e\x6f\40\144\x69\162\145\x63\164\40\x73\143\x72\x69\x70\164\x20\141\143\x63\145\x73\163\x20\x61\x6c\x6c\157\167\145\144"); class CI_DB_pdo_firebird_forge extends CI_DB_pdo_forge { protected $_rename_table = FALSE; protected $_unsigned = array("\x53\x4d\101\x4c\114\x49\x4e\124" => "\x49\x4e\x54\105\x47\105\122", "\111\116\124\105\107\x45\122" => "\111\x4e\x54\x36\x34", "\106\x4c\117\101\124" => "\104\x4f\x55\x42\114\105\40\x50\122\x45\x43\111\123\x49\117\x4e"); protected $_null = "\116\x55\x4c\x4c"; public function create_database($db_name) { empty($this->db->hostname) or $db_name = $this->hostname . "\72" . $db_name; return parent::create_database("\42" . $db_name . "\42"); } public function drop_database($db_name) { if (!ibase_drop_db($this->conn_id)) { return $this->db->db_debug ? $this->db->display_error("\x64\x62\137\x75\x6e\141\142\154\x65\137\x74\157\x5f\x64\x72\x6f\160") : FALSE; } elseif (!empty($this->db->data_cache["\144\142\137\156\141\155\145\163"])) { $key = array_search(strtolower($this->db->database), array_map("\163\164\162\x74\x6f\x6c\x6f\x77\x65\162", $this->db->data_cache["\144\142\137\156\x61\x6d\145\163"]), TRUE); if ($key !== FALSE) { unset($this->db->data_cache["\x64\x62\x5f\x6e\141\155\145\163"][$key]); } } return TRUE; } protected function _alter_table($alter_type, $table, $field) { goto UpMFv; yet07: for ($i = 0, $c = count($field); $i < $c; $i++) { if ($field[$i]["\x5f\x6c\151\x74\x65\x72\141\154"] !== FALSE) { return FALSE; } if (isset($field[$i]["\164\x79\x70\145"])) { $sqls[] = $sql . "\x20\101\114\124\x45\x52\x20\x43\x4f\x4c\125\115\116\x20" . $this->db->escape_identifiers($field[$i]["\x6e\141\155\x65"]) . "\x20\124\x59\120\x45\40" . $field[$i]["\x74\171\160\145"] . $field[$i]["\154\x65\x6e\147\x74\x68"]; } if (!empty($field[$i]["\144\145\x66\141\x75\154\164"])) { $sqls[] = $sql . "\40\x41\114\124\x45\x52\x20\103\x4f\114\x55\x4d\x4e\40" . $this->db->escape_identifiers($field[$i]["\156\141\x6d\145"]) . "\40\123\x45\x54\40" . $field[$i]["\144\145\x66\141\165\x6c\x74"]; } if (isset($field[$i]["\x6e\165\x6c\154"])) { $sqls[] = "\125\120\104\x41\124\105\x20\x22\x52\104\x42\44\122\x45\x4c\x41\x54\x49\117\x4e\137\x46\111\105\114\x44\x53\42\x20\x53\x45\x54\40\x22\x52\104\x42\x24\116\x55\x4c\114\137\x46\x4c\x41\107\42\x20\75\x20" . ($field[$i]["\156\x75\154\154"] === TRUE ? "\x4e\125\114\x4c" : "\x31") . "\x20\127\x48\x45\x52\x45\40\x22\122\104\102\44\106\111\105\x4c\x44\137\x4e\x41\115\105\42\x20\75\40" . $this->db->escape($field[$i]["\156\x61\x6d\x65"]) . "\x20\101\x4e\x44\40\x22\x52\x44\102\x24\122\105\114\x41\124\111\117\x4e\x5f\116\101\115\x45\x22\40\x3d\x20" . $this->db->escape($table); } if (!empty($field[$i]["\156\x65\167\137\156\x61\155\x65"])) { $sqls[] = $sql . "\x20\x41\114\124\105\x52\x20\x43\x4f\x4c\125\x4d\116\40" . $this->db->escape_identifiers($field[$i]["\156\x61\155\x65"]) . "\x20\x54\117\40" . $this->db->escape_identifiers($field[$i]["\156\x65\x77\x5f\156\x61\x6d\x65"]); } } goto Gcjt6; R4vty: $sql = "\101\114\x54\105\x52\40\x54\x41\x42\x4c\x45\x20" . $this->db->escape_identifiers($table); goto CnqAd; CnqAd: $sqls = array(); goto yet07; UpMFv: if (in_array($alter_type, array("\104\122\x4f\120", "\101\x44\104"), TRUE)) { return parent::_alter_table($alter_type, $table, $field); } goto R4vty; Gcjt6: return $sqls; goto H9_oO; H9_oO: } protected function _process_column($field) { return $this->db->escape_identifiers($field["\x6e\141\x6d\x65"]) . "\40" . $field["\164\x79\x70\x65"] . $field["\x6c\145\156\147\164\150"] . $field["\x6e\x75\x6c\x6c"] . $field["\165\x6e\151\x71\x75\145"] . $field["\x64\145\x66\x61\165\x6c\164"]; } protected function _attr_type(&$attributes) { switch (strtoupper($attributes["\x54\131\120\x45"])) { case "\124\x49\x4e\131\x49\x4e\x54": goto ZGaIT; ZGaIT: $attributes["\124\131\x50\105"] = "\123\115\101\x4c\x4c\111\x4e\x54"; goto imlcg; imlcg: $attributes["\125\116\123\111\107\116\x45\104"] = FALSE; goto AVbu1; AVbu1: return; goto xFakD; xFakD: case "\x4d\105\104\x49\125\115\111\x4e\124": goto jPYOM; jPYOM: $attributes["\x54\x59\x50\105"] = "\111\116\124\x45\x47\x45\x52"; goto CrY5g; CrY5g: $attributes["\125\116\123\111\x47\x4e\105\x44"] = FALSE; goto hnuP0; hnuP0: return; goto DC61l; DC61l: case "\111\116\124": $attributes["\x54\x59\x50\x45"] = "\111\116\124\x45\x47\x45\122"; return; case "\x42\x49\x47\x49\x4e\124": $attributes["\124\x59\x50\105"] = "\x49\x4e\124\66\64"; return; default: return; } } protected function _attr_auto_increment(&$attributes, &$field) { } }
