<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\101\123\x45\120\x41\x54\x48") or exit("\x4e\x6f\40\x64\x69\162\145\143\164\40\x73\143\x72\x69\160\x74\x20\141\143\x63\145\163\x73\x20\141\x6c\x6c\157\167\145\x64"); class CI_DB_pdo_4d_driver extends CI_DB_pdo_driver { public $subdriver = "\x34\144"; protected $_escape_char = array("\133", "\135"); public function __construct($params) { parent::__construct($params); if (empty($this->dsn)) { goto y3QUN; nCX42: empty($this->port) or $this->dsn .= "\x3b\160\157\162\x74\x3d" . $this->port; goto nLWdo; y3QUN: $this->dsn = "\64\x44\x3a\150\157\x73\x74\75" . (empty($this->hostname) ? "\61\62\x37\x2e\60\x2e\60\x2e\x31" : $this->hostname); goto nCX42; nLWdo: empty($this->database) or $this->dsn .= "\73\x64\142\x6e\141\x6d\x65\x3d" . $this->database; goto Kqied; Kqied: empty($this->char_set) or $this->dsn .= "\73\x63\150\x61\162\x73\145\164\x3d" . $this->char_set; goto n7E4H; n7E4H: } elseif (!empty($this->char_set) && strpos($this->dsn, "\x63\150\141\x72\x73\x65\164\75", 3) === FALSE) { $this->dsn .= "\x3b\x63\150\141\162\x73\x65\x74\x3d" . $this->char_set; } } protected function _list_tables($prefix_limit = FALSE) { goto cpFmE; XDPm8: return $sql; goto jqnw2; cpFmE: $sql = "\123\x45\114\105\x43\x54\40" . $this->escape_identifiers("\x54\x41\102\x4c\105\x5f\116\101\115\x45") . "\40\106\122\117\x4d\40" . $this->escape_identifiers("\x5f\125\x53\x45\122\x5f\124\101\x42\x4c\105\123"); goto m2VIl; m2VIl: if ($prefix_limit === TRUE && $this->dbprefix !== '') { $sql .= "\x20\127\110\x45\122\105\40" . $this->escape_identifiers("\124\101\x42\x4c\x45\137\x4e\x41\115\x45") . "\x20\114\111\x4b\x45\40\47" . $this->escape_like_str($this->dbprefix) . "\45\47\x20" . sprintf($this->_like_escape_str, $this->_like_escape_chr); } goto XDPm8; jqnw2: } protected function _list_columns($table = '') { return "\123\x45\x4c\x45\103\124\x20" . $this->escape_identifiers("\x43\x4f\114\x55\115\116\137\x4e\101\115\105") . "\x20\106\122\x4f\115\40" . $this->escape_identifiers("\x5f\x55\x53\x45\122\x5f\x43\117\x4c\x55\x4d\x4e\123") . "\x20\x57\x48\x45\x52\x45\40" . $this->escape_identifiers("\124\x41\x42\114\x45\137\x4e\x41\115\105") . "\40\x3d\40" . $this->escape($table); } protected function _field_data($table) { return "\123\x45\114\x45\x43\124\x20\52\x20\106\x52\x4f\x4d\40" . $this->protect_identifiers($table, TRUE, NULL, FALSE) . "\x20\x4c\111\x4d\x49\x54\40\61"; } protected function _update($table, $values) { goto IheeQ; IheeQ: $this->qb_limit = FALSE; goto l1UGz; e3HGK: return parent::_update($table, $values); goto rriKr; l1UGz: $this->qb_orderby = array(); goto e3HGK; rriKr: } protected function _delete($table) { $this->qb_limit = FALSE; return parent::_delete($table); } protected function _limit($sql) { return $sql . "\40\114\x49\115\x49\124\x20" . $this->qb_limit . ($this->qb_offset ? "\x20\x4f\x46\106\x53\105\124\40" . $this->qb_offset : ''); } }
