<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\101\123\105\120\x41\124\x48") or exit("\116\157\40\x64\151\162\x65\x63\x74\x20\163\x63\162\151\160\x74\x20\141\x63\143\x65\x73\x73\40\141\x6c\154\157\x77\x65\x64"); class CI_DB_pdo_sqlsrv_forge extends CI_DB_pdo_forge { protected $_create_table_if = "\111\106\x20\x4e\x4f\124\40\105\130\111\123\124\x53\x20\50\123\105\x4c\105\x43\x54\40\52\40\106\122\x4f\x4d\40\163\171\163\157\142\152\x65\143\164\x73\40\x57\110\x45\122\105\x20\111\x44\x20\x3d\40\x6f\142\152\145\143\x74\137\151\144\x28\x4e\x27\x25\x73\47\x29\40\101\x4e\x44\40\x4f\102\112\105\103\124\x50\122\x4f\x50\x45\x52\124\131\x28\151\144\x2c\x20\116\47\x49\x73\125\163\x65\162\x54\141\142\x6c\145\47\x29\40\x3d\40\61\x29\xa\103\x52\x45\101\x54\105\x20\x54\x41\x42\114\105"; protected $_drop_table_if = "\x49\x46\40\x45\x58\111\x53\x54\123\40\50\123\x45\x4c\x45\103\124\40\52\40\x46\x52\x4f\x4d\x20\163\x79\x73\x6f\x62\x6a\x65\143\164\163\40\x57\110\x45\122\x45\40\x49\x44\x20\75\40\157\142\152\x65\143\x74\x5f\x69\x64\x28\116\x27\45\163\x27\51\x20\x41\x4e\104\x20\x4f\102\112\x45\103\x54\120\122\117\x50\105\x52\124\x59\50\151\144\54\x20\x4e\47\111\x73\x55\163\145\x72\x54\141\142\154\x65\x27\51\40\x3d\x20\x31\x29\xa\104\x52\x4f\120\x20\x54\101\102\x4c\105"; protected $_unsigned = array("\124\111\116\x59\x49\116\x54" => "\x53\x4d\101\114\x4c\x49\x4e\124", "\123\115\101\x4c\114\x49\x4e\124" => "\x49\116\124", "\x49\116\124" => "\x42\111\x47\x49\116\124", "\x52\105\x41\114" => "\106\114\117\101\124"); protected function _alter_table($alter_type, $table, $field) { goto OnzgB; dTuzd: for ($i = 0, $c = count($field); $i < $c; $i++) { $sqls[] = $sql . $this->_process_column($field[$i]); } goto zQYsD; OnzgB: if (in_array($alter_type, array("\101\104\x44", "\x44\x52\117\120"), TRUE)) { return parent::_alter_table($alter_type, $table, $field); } goto Ag8Sv; Ag8Sv: $sql = "\x41\x4c\x54\x45\x52\40\x54\101\102\x4c\x45\40" . $this->db->escape_identifiers($table) . "\x20\x41\114\x54\x45\x52\x20\103\117\114\125\x4d\116\40"; goto w3wrm; zQYsD: return $sqls; goto pr_cy; w3wrm: $sqls = array(); goto dTuzd; pr_cy: } protected function _attr_type(&$attributes) { if (isset($attributes["\103\x4f\x4e\123\x54\x52\x41\x49\116\124"]) && strpos($attributes["\x54\x59\120\x45"], "\x49\x4e\124") !== FALSE) { unset($attributes["\103\x4f\116\x53\124\x52\101\111\x4e\x54"]); } switch (strtoupper($attributes["\x54\x59\120\105"])) { case "\x4d\x45\x44\x49\x55\115\x49\116\124": goto wNUbn; btZpX: return; goto CbjMn; wNUbn: $attributes["\x54\131\x50\x45"] = "\x49\x4e\x54\105\x47\105\122"; goto kAXLl; kAXLl: $attributes["\x55\116\123\111\107\116\105\104"] = FALSE; goto btZpX; CbjMn: case "\x49\116\124\105\x47\x45\122": $attributes["\x54\131\x50\105"] = "\x49\116\x54"; return; default: return; } } protected function _attr_auto_increment(&$attributes, &$field) { if (!empty($attributes["\101\x55\x54\117\x5f\x49\x4e\x43\x52\x45\115\x45\x4e\124"]) && $attributes["\x41\x55\124\x4f\137\111\x4e\103\122\105\115\105\116\124"] === TRUE && stripos($field["\164\171\160\x65"], "\151\156\164") !== FALSE) { $field["\141\x75\164\157\137\x69\x6e\x63\162\x65\155\145\x6e\x74"] = "\x20\x49\104\x45\x4e\x54\111\124\131\x28\x31\54\61\51"; } } }
