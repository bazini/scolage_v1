<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\101\x53\105\x50\101\124\110") or exit("\116\x6f\x20\144\x69\x72\x65\143\164\40\163\x63\162\151\160\x74\40\141\x63\143\x65\x73\x73\x20\x61\154\x6c\157\x77\145\x64"); class CI_DB_pdo_mysql_forge extends CI_DB_pdo_forge { protected $_create_database = "\x43\x52\x45\101\x54\105\40\104\x41\x54\101\x42\101\x53\x45\40\45\163\x20\103\x48\x41\x52\101\103\x54\x45\122\40\x53\x45\124\x20\45\x73\x20\x43\117\x4c\x4c\x41\124\x45\x20\45\x73"; protected $_create_table_if = "\103\122\105\101\x54\105\x20\124\101\102\114\x45\40\111\x46\40\116\x4f\124\40\x45\x58\111\x53\124\x53"; protected $_create_table_keys = TRUE; protected $_drop_table_if = "\104\122\x4f\x50\x20\x54\x41\x42\114\105\x20\111\x46\x20\x45\130\x49\x53\x54\x53"; protected $_unsigned = array("\x54\x49\x4e\x59\x49\x4e\124", "\123\115\x41\x4c\114\111\x4e\124", "\x4d\105\104\111\x55\x4d\x49\116\124", "\x49\x4e\x54", "\111\116\124\x45\x47\x45\x52", "\102\x49\107\x49\x4e\x54", "\x52\x45\101\114", "\x44\117\125\102\x4c\105", "\104\x4f\125\x42\x4c\105\x20\120\122\105\x43\111\x53\111\117\x4e", "\106\114\117\x41\x54", "\x44\x45\x43\111\x4d\x41\x4c", "\x4e\x55\x4d\105\122\111\103"); protected $_null = "\x4e\125\114\x4c"; protected function _create_table_attr($attributes) { goto hUlug; hUlug: $sql = ''; goto qMqmZ; B9kBD: return $sql; goto Y3J7Y; qMqmZ: foreach (array_keys($attributes) as $key) { if (is_string($key)) { $sql .= "\40" . strtoupper($key) . "\40\x3d\40" . $attributes[$key]; } } goto W2Hbt; mbjzl: if (!empty($this->db->dbcollat) && !strpos($sql, "\x43\117\114\114\x41\x54\x45")) { $sql .= "\40\x43\117\114\114\101\124\105\x20\x3d\x20" . $this->db->dbcollat; } goto B9kBD; W2Hbt: if (!empty($this->db->char_set) && !strpos($sql, "\103\110\101\x52\x41\103\x54\105\122\40\123\105\x54") && !strpos($sql, "\103\x48\101\122\123\x45\124")) { $sql .= "\40\104\x45\x46\x41\x55\114\x54\x20\x43\110\101\x52\101\103\124\105\122\x20\123\105\124\x20\75\40" . $this->db->char_set; } goto mbjzl; Y3J7Y: } protected function _alter_table($alter_type, $table, $field) { goto YLY2e; YLY2e: if ($alter_type === "\x44\x52\x4f\x50") { return parent::_alter_table($alter_type, $table, $field); } goto axEBZ; iz7gg: return array($sql . implode("\x2c", $field)); goto Q4AMk; axEBZ: $sql = "\101\x4c\124\105\122\40\x54\x41\102\114\105\40" . $this->db->escape_identifiers($table); goto XRHWd; XRHWd: for ($i = 0, $c = count($field); $i < $c; $i++) { if ($field[$i]["\x5f\154\x69\164\145\162\141\154"] !== FALSE) { $field[$i] = $alter_type === "\101\x44\104" ? "\xa\11\x41\104\x44\x20" . $field[$i]["\137\154\151\164\145\162\141\154"] : "\xa\11\x4d\x4f\104\x49\106\x59\x20" . $field[$i]["\137\x6c\151\x74\x65\x72\141\x6c"]; } else { if ($alter_type === "\101\x44\x44") { $field[$i]["\137\154\151\x74\145\x72\x61\154"] = "\xa\x9\x41\104\x44\x20"; } else { $field[$i]["\x5f\x6c\x69\x74\x65\x72\x61\154"] = empty($field[$i]["\156\x65\167\137\156\141\155\x65"]) ? "\12\x9\115\x4f\104\x49\x46\x59\x20" : "\12\11\x43\110\101\116\107\x45\40"; } $field[$i] = $field[$i]["\137\154\x69\164\x65\162\x61\154"] . $this->_process_column($field[$i]); } } goto iz7gg; Q4AMk: } protected function _process_column($field) { goto vjJH0; BgWvd: return $this->db->escape_identifiers($field["\156\x61\x6d\145"]) . (empty($field["\156\x65\x77\137\x6e\141\x6d\145"]) ? '' : "\x20" . $this->db->escape_identifiers($field["\x6e\x65\x77\x5f\156\141\155\x65"])) . "\x20" . $field["\x74\x79\x70\145"] . $field["\x6c\145\156\147\x74\x68"] . $field["\165\156\x73\x69\147\156\x65\x64"] . $field["\x6e\x75\154\x6c"] . $field["\144\x65\x66\141\165\154\164"] . $field["\141\165\164\x6f\137\x69\x6e\143\x72\145\x6d\145\x6e\164"] . $field["\x75\156\151\x71\165\145"] . (empty($field["\143\x6f\155\155\x65\156\x74"]) ? '' : "\x20\x43\117\x4d\x4d\105\x4e\x54\x20" . $field["\143\157\x6d\155\145\x6e\x74"]) . $extra_clause; goto pGMLX; IkgBI: if (empty($extra_clause) && isset($field["\146\x69\162\163\x74"]) && $field["\x66\x69\162\x73\x74"] === TRUE) { $extra_clause = "\x20\106\x49\x52\123\124"; } goto BgWvd; vjJH0: $extra_clause = isset($field["\141\x66\164\145\x72"]) ? "\x20\x41\x46\x54\x45\122\40" . $this->db->escape_identifiers($field["\141\x66\164\145\162"]) : ''; goto IkgBI; pGMLX: } protected function _process_indexes($table) { goto tX__R; ebrun: for ($i = 0, $c = count($this->keys); $i < $c; $i++) { if (is_array($this->keys[$i])) { for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++) { if (!isset($this->fields[$this->keys[$i][$i2]])) { unset($this->keys[$i][$i2]); continue; } } } elseif (!isset($this->fields[$this->keys[$i]])) { unset($this->keys[$i]); continue; } is_array($this->keys[$i]) or $this->keys[$i] = array($this->keys[$i]); $sql .= "\54\xa\x9\113\105\131\x20" . $this->db->escape_identifiers(implode("\x5f", $this->keys[$i])) . "\40\50" . implode("\x2c\x20", $this->db->escape_identifiers($this->keys[$i])) . "\51"; } goto xXvXD; GKFg5: return $sql; goto AOn3k; tX__R: $sql = ''; goto ebrun; xXvXD: $this->keys = array(); goto GKFg5; AOn3k: } }
