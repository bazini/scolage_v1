<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\101\x53\x45\120\101\124\110") or exit("\x4e\x6f\x20\144\x69\162\145\143\164\40\x73\143\x72\x69\x70\164\x20\x61\x63\x63\145\x73\163\40\141\154\154\157\x77\145\x64"); class CI_DB_pdo_informix_forge extends CI_DB_pdo_forge { protected $_rename_table = "\122\x45\x4e\101\x4d\x45\x20\x54\x41\102\114\x45\40\x25\163\x20\x54\117\40\x25\163"; protected $_unsigned = array("\x53\x4d\x41\114\114\x49\x4e\124" => "\111\x4e\x54\105\107\105\x52", "\x49\116\x54" => "\102\111\x47\111\116\124", "\111\116\x54\105\107\x45\122" => "\x42\111\107\x49\116\124", "\x52\105\x41\x4c" => "\x44\117\125\x42\x4c\105\40\x50\x52\x45\103\x49\123\x49\x4f\x4e", "\x53\115\101\x4c\x4c\106\114\x4f\x41\x54" => "\104\x4f\125\x42\x4c\105\x20\x50\x52\105\103\x49\x53\x49\x4f\116"); protected $_default = "\54\40"; protected function _alter_table($alter_type, $table, $field) { if ($alter_type === "\x43\x48\x41\116\x47\105") { $alter_type = "\x4d\x4f\x44\x49\x46\x59"; } return parent::_alter_table($alter_type, $table, $field); } protected function _attr_type(&$attributes) { switch (strtoupper($attributes["\x54\131\x50\x45"])) { case "\124\111\116\x59\x49\x4e\x54": goto o9OT4; Heihy: $attributes["\x55\116\123\111\107\116\x45\104"] = FALSE; goto HWOzP; o9OT4: $attributes["\x54\x59\x50\x45"] = "\x53\115\x41\x4c\x4c\x49\x4e\x54"; goto Heihy; HWOzP: return; goto QGVCU; QGVCU: case "\x4d\x45\104\111\x55\115\111\x4e\124": goto knwl5; i9ISg: return; goto BSDdV; knwl5: $attributes["\124\131\120\x45"] = "\x49\116\x54\x45\107\x45\x52"; goto p2TdC; p2TdC: $attributes["\x55\x4e\123\111\107\116\x45\x44"] = FALSE; goto i9ISg; BSDdV: case "\102\x59\124\105": case "\124\105\x58\x54": case "\102\114\117\x42": case "\103\114\x4f\x42": goto uLQBT; ubO3j: return; goto nyhxR; uLQBT: $attributes["\125\x4e\x49\x51\x55\105"] = FALSE; goto JXBUI; JXBUI: if (isset($attributes["\x44\x45\x46\101\x55\x4c\124"])) { unset($attributes["\x44\x45\x46\x41\125\x4c\x54"]); } goto ubO3j; nyhxR: default: return; } } protected function _attr_unique(&$attributes, &$field) { if (!empty($attributes["\125\116\111\121\x55\x45"]) && $attributes["\125\x4e\111\x51\125\x45"] === TRUE) { $field["\165\x6e\151\x71\x75\x65"] = "\x20\125\116\111\x51\x55\105\40\x43\117\116\x53\x54\x52\101\x49\116\x54\40" . $this->db->escape_identifiers($field["\156\141\155\145"]); } } protected function _attr_auto_increment(&$attributes, &$field) { } }
