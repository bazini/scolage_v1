<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\x41\x53\105\x50\101\x54\110") or exit("\116\157\x20\x64\x69\x72\145\x63\164\x20\163\x63\162\151\160\164\40\141\143\143\x65\163\163\40\x61\154\154\x6f\167\145\144"); class CI_DB_pdo_cubrid_driver extends CI_DB_pdo_driver { public $subdriver = "\143\165\x62\x72\151\x64"; protected $_escape_char = "\140"; protected $_random_keyword = array("\122\x41\x4e\104\x4f\x4d\x28\x29", "\122\101\x4e\104\117\115\x28\x25\144\51"); public function __construct($params) { parent::__construct($params); if (empty($this->dsn)) { goto cM_5W; T3XZt: empty($this->port) or $this->dsn .= "\73\160\x6f\162\164\x3d" . $this->port; goto PvM7r; PvM7r: empty($this->database) or $this->dsn .= "\x3b\x64\142\156\x61\155\x65\75" . $this->database; goto Zy1HK; cM_5W: $this->dsn = "\143\165\x62\162\x69\144\72\150\157\x73\164\x3d" . (empty($this->hostname) ? "\x31\62\x37\x2e\x30\x2e\60\56\61" : $this->hostname); goto T3XZt; Zy1HK: empty($this->char_set) or $this->dsn .= "\x3b\x63\150\141\x72\163\145\x74\75" . $this->char_set; goto ICEGS; ICEGS: } } protected function _list_tables($prefix_limit = FALSE) { goto CGqVT; CGqVT: $sql = "\x53\110\117\x57\40\124\x41\x42\x4c\x45\123"; goto Mxftv; Mxftv: if ($prefix_limit === TRUE && $this->dbprefix !== '') { return $sql . "\x20\114\x49\x4b\105\x20\x27" . $this->escape_like_str($this->dbprefix) . "\45\x27"; } goto FEvZf; FEvZf: return $sql; goto FXa4r; FXa4r: } protected function _list_columns($table = '') { return "\123\x48\117\127\40\103\x4f\114\125\x4d\116\x53\40\106\122\x4f\115\40" . $this->protect_identifiers($table, TRUE, NULL, FALSE); } public function field_data($table) { goto Mel5b; slgnQ: $query = $query->result_object(); goto MQKpy; Mel5b: if (($query = $this->query("\123\x48\x4f\127\40\x43\117\114\x55\115\116\x53\40\106\122\117\115\40" . $this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE) { return FALSE; } goto slgnQ; bx7YL: for ($i = 0, $c = count($query); $i < $c; $i++) { $retval[$i] = new stdClass(); $retval[$i]->name = $query[$i]->Field; sscanf($query[$i]->Type, "\x25\133\141\55\x7a\135\50\45\x64\51", $retval[$i]->type, $retval[$i]->max_length); $retval[$i]->default = $query[$i]->Default; $retval[$i]->primary_key = (int) ($query[$i]->Key === "\x50\x52\111"); } goto he1A7; he1A7: return $retval; goto x5Lru; MQKpy: $retval = array(); goto bx7YL; x5Lru: } protected function _truncate($table) { return "\x54\x52\x55\x4e\103\x41\124\x45\40" . $table; } protected function _from_tables() { if (!empty($this->qb_join) && count($this->qb_from) > 1) { return "\50" . implode("\x2c\40", $this->qb_from) . "\x29"; } return implode("\x2c\40", $this->qb_from); } }
