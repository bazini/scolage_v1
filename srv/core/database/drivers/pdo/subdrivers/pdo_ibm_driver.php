<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\x53\105\120\101\x54\x48") or exit("\x4e\x6f\x20\144\x69\162\145\143\x74\40\163\x63\162\151\x70\164\x20\x61\x63\x63\145\163\163\x20\141\x6c\x6c\x6f\x77\x65\144"); class CI_DB_pdo_ibm_driver extends CI_DB_pdo_driver { public $subdriver = "\151\142\x6d"; public function __construct($params) { parent::__construct($params); if (empty($this->dsn)) { goto MDXk4; daWcZ: $this->dsn .= "\x50\x52\117\124\117\x43\x4f\x4c\x3d" . (isset($this->PROTOCOL) ? $this->PROTOCOL . "\x3b" : "\124\x43\x50\111\120\73"); goto nSVoi; t_Sq_: $this->dsn .= "\104\x52\x49\126\x45\x52\75" . (isset($this->DRIVER) ? "\x7b" . $this->DRIVER . "\175" : "\x7b\x49\x42\x4d\40\104\x42\62\x20\117\x44\102\103\40\104\x52\x49\126\105\122\x7d") . "\73"; goto sXYrC; jrV7T: if (isset($this->PORT)) { $this->dsn .= "\120\x4f\x52\x54\x3d" . $this->port . "\73"; } elseif (!empty($this->port)) { $this->dsn .= "\73\120\x4f\x52\124\x3d" . $this->port . "\73"; } goto daWcZ; sXYrC: if (isset($this->DATABASE)) { $this->dsn .= "\104\x41\124\101\102\x41\123\x45\x3d" . $this->DATABASE . "\x3b"; } elseif (!empty($this->database)) { $this->dsn .= "\104\x41\x54\101\x42\101\123\105\x3d" . $this->database . "\73"; } goto q_Wor; kIrYy: if (empty($this->hostname) && empty($this->HOSTNAME) && empty($this->port) && empty($this->PORT)) { if (isset($this->DSN)) { $this->dsn .= "\x44\x53\116\x3d" . $this->DSN; } elseif (!empty($this->database)) { $this->dsn .= "\104\x53\116\x3d" . $this->database; } return; } goto t_Sq_; MDXk4: $this->dsn = "\151\142\155\72"; goto kIrYy; q_Wor: if (isset($this->HOSTNAME)) { $this->dsn .= "\x48\117\123\124\116\101\115\x45\x3d" . $this->HOSTNAME . "\73"; } else { $this->dsn .= "\x48\117\x53\x54\116\101\x4d\x45\x3d" . (empty($this->hostname) ? "\61\62\67\56\x30\56\x30\x2e\x31\x3b" : $this->hostname . "\x3b"); } goto jrV7T; nSVoi: } } protected function _list_tables($prefix_limit = FALSE) { goto NFlNs; yx1wK: if ($prefix_limit === TRUE && $this->dbprefix !== '') { $sql .= "\40\x41\116\104\x20\x22\x74\x61\142\x6e\x61\x6d\145\42\40\114\111\113\x45\40\x27" . $this->escape_like_str($this->dbprefix) . "\x25\47\40" . sprintf($this->_like_escape_str, $this->_like_escape_chr); } goto zaFPt; NFlNs: $sql = "\123\x45\x4c\105\103\124\40\x22\164\x61\x62\x6e\141\x6d\x65\42\x20\x46\122\117\x4d\x20\42\163\x79\x73\x63\141\164\x22\x2e\x22\x74\141\x62\x6c\x65\x73\42\xa\11\11\11\127\110\105\122\x45\x20\42\164\171\x70\x65\42\40\x3d\40\47\124\47\x20\x41\116\x44\x20\x4c\x4f\127\x45\x52\50\x22\x74\x61\142\163\143\150\145\x6d\x61\x22\x29\40\75\x20" . $this->escape(strtolower($this->database)); goto yx1wK; zaFPt: return $sql; goto rWThj; rWThj: } protected function _list_columns($table = '') { return "\x53\105\x4c\x45\x43\x54\x20\x22\x63\157\154\156\x61\x6d\x65\x22\40\x46\122\117\115\40\42\x73\171\x73\143\141\x74\x22\x2e\42\x63\157\154\165\x6d\x6e\x73\42\xa\11\11\11\127\x48\105\x52\105\40\114\x4f\x57\x45\x52\x28\x22\x74\141\x62\x73\143\x68\x65\x6d\141\42\x29\40\x3d\x20" . $this->escape(strtolower($this->database)) . "\12\x9\11\11\x9\x41\x4e\104\x20\x4c\117\127\x45\x52\x28\42\x74\x61\x62\x6e\x61\155\x65\x22\x29\40\x3d\40" . $this->escape(strtolower($table)); } public function field_data($table) { $sql = "\123\x45\x4c\105\103\124\x20\x22\143\157\x6c\x6e\141\x6d\x65\x22\40\101\123\40\42\156\x61\x6d\145\42\x2c\40\42\x74\x79\160\145\156\141\155\145\x22\x20\101\123\x20\x22\164\171\x70\145\42\x2c\x20\42\144\145\146\x61\x75\x6c\x74\x22\40\101\123\40\x22\x64\x65\x66\141\x75\154\x74\42\x2c\40\x22\154\x65\x6e\x67\x74\150\42\40\x41\123\40\x22\155\141\170\137\154\145\x6e\x67\164\x68\42\x2c\12\x9\11\x9\11\x43\101\123\x45\x20\x22\x6b\x65\x79\163\x65\x71\42\x20\127\110\105\x4e\40\x4e\125\114\x4c\40\x54\x48\x45\116\x20\x30\40\105\x4c\123\105\40\61\40\105\116\104\40\101\123\40\42\x70\x72\151\x6d\141\162\x79\x5f\x6b\145\x79\x22\12\x9\11\x9\106\122\117\115\40\42\x73\x79\163\143\141\164\x22\x2e\42\x63\157\x6c\x75\x6d\x6e\163\x22\xa\x9\x9\11\127\110\105\x52\x45\x20\x4c\117\x57\105\x52\50\x22\x74\x61\x62\x73\143\x68\x65\x6d\x61\x22\x29\40\x3d\x20" . $this->escape(strtolower($this->database)) . "\xa\x9\11\11\x9\101\x4e\104\40\x4c\117\x57\x45\x52\50\42\x74\x61\x62\156\141\155\145\42\51\x20\x3d\40" . $this->escape(strtolower($table)) . "\12\11\11\11\x4f\x52\x44\x45\122\40\x42\x59\x20\x22\143\157\154\156\x6f\x22"; return ($query = $this->query($sql)) !== FALSE ? $query->result_object() : FALSE; } protected function _update($table, $values) { goto iJTgA; Tn0LX: return parent::_update($table, $values); goto ER8YG; QZA1Z: $this->qb_orderby = array(); goto Tn0LX; iJTgA: $this->qb_limit = FALSE; goto QZA1Z; ER8YG: } protected function _delete($table) { $this->qb_limit = FALSE; return parent::_delete($table); } protected function _limit($sql) { $sql .= "\40\x46\x45\124\103\x48\40\106\x49\x52\123\x54\40" . ($this->qb_limit + $this->qb_offset) . "\40\x52\117\x57\123\40\x4f\x4e\x4c\x59"; return $this->qb_offset ? "\x53\x45\114\105\x43\x54\40\52\x20\x46\x52\x4f\115\40\50" . $sql . "\51\x20\127\x48\105\x52\105\x20\162\157\x77\156\x75\155\x20\x3e\x20" . $this->qb_offset : $sql; } }
