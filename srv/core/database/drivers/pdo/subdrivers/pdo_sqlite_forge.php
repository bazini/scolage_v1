<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\x53\105\x50\x41\x54\110") or exit("\116\157\40\144\x69\x72\x65\143\164\40\x73\143\x72\x69\x70\164\40\x61\x63\143\145\x73\x73\x20\x61\154\154\157\167\145\144"); class CI_DB_pdo_sqlite_forge extends CI_DB_pdo_forge { protected $_create_table_if = "\103\x52\105\101\x54\105\x20\x54\101\102\114\105\40\111\106\x20\x4e\117\x54\x20\x45\x58\x49\123\124\x53"; protected $_drop_table_if = "\x44\122\117\120\40\x54\101\x42\x4c\105\x20\111\x46\x20\x45\130\x49\123\x54\x53"; protected $_unsigned = FALSE; protected $_null = "\x4e\125\x4c\x4c"; public function __construct(&$db) { parent::__construct($db); if (version_compare($this->db->version(), "\x33\x2e\63", "\74")) { $this->_create_table_if = FALSE; $this->_drop_table_if = FALSE; } } public function create_database($db_name) { return TRUE; } public function drop_database($db_name) { if (file_exists($this->db->database)) { goto QXPfd; QXPfd: $this->db->close(); goto bjqK9; bjqK9: if (!@unlink($this->db->database)) { return $this->db->db_debug ? $this->db->display_error("\144\x62\x5f\165\x6e\141\x62\x6c\x65\x5f\x74\157\x5f\144\x72\157\x70") : FALSE; } elseif (!empty($this->db->data_cache["\x64\142\x5f\156\141\155\145\x73"])) { $key = array_search(strtolower($this->db->database), array_map("\x73\164\x72\x74\x6f\154\x6f\167\145\x72", $this->db->data_cache["\144\x62\137\156\x61\155\145\x73"]), TRUE); if ($key !== FALSE) { unset($this->db->data_cache["\x64\142\x5f\x6e\141\x6d\x65\163"][$key]); } } goto zt7y_; zt7y_: return TRUE; goto FLiyD; FLiyD: } return $this->db->db_debug ? $this->db->display_error("\144\x62\137\x75\156\141\142\154\x65\x5f\164\157\137\x64\x72\157\160") : FALSE; } protected function _alter_table($alter_type, $table, $field) { if ($alter_type === "\104\122\117\120" or $alter_type === "\103\110\x41\116\x47\105") { return FALSE; } return parent::_alter_table($alter_type, $table, $field); } protected function _process_column($field) { return $this->db->escape_identifiers($field["\156\x61\x6d\x65"]) . "\x20" . $field["\x74\171\x70\x65"] . $field["\141\165\x74\157\x5f\151\x6e\x63\x72\x65\x6d\145\156\x74"] . $field["\156\x75\x6c\154"] . $field["\165\156\151\161\x75\x65"] . $field["\x64\x65\146\141\x75\x6c\164"]; } protected function _attr_type(&$attributes) { switch (strtoupper($attributes["\x54\x59\120\105"])) { case "\x45\x4e\x55\115": case "\123\x45\x54": $attributes["\124\x59\x50\x45"] = "\x54\x45\130\x54"; return; default: return; } } protected function _attr_auto_increment(&$attributes, &$field) { if (!empty($attributes["\x41\125\124\117\137\111\x4e\103\122\x45\115\x45\116\124"]) && $attributes["\101\x55\x54\117\137\111\116\x43\x52\x45\x4d\105\x4e\x54"] === TRUE && stripos($field["\x74\x79\x70\x65"], "\151\156\x74") !== FALSE) { goto j0zfL; OS5M8: $this->primary_keys = array(); goto OJsew; V3uql: $field["\156\x75\x6c\154"] = ''; goto D0aX6; D0aX6: $field["\165\x6e\x69\161\x75\145"] = ''; goto dcIKl; j0zfL: $field["\164\171\160\145"] = "\111\116\x54\105\107\105\x52\40\x50\x52\111\x4d\x41\122\131\40\x4b\105\131"; goto FeNmG; FeNmG: $field["\x64\145\x66\141\x75\x6c\x74"] = ''; goto V3uql; dcIKl: $field["\x61\x75\164\157\137\151\x6e\x63\162\x65\x6d\145\x6e\x74"] = "\x20\x41\125\124\x4f\111\116\x43\x52\105\x4d\105\116\x54"; goto OS5M8; OJsew: } } }
