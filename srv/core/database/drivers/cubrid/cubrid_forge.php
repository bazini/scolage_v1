<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\x41\x53\105\x50\101\124\x48") or exit("\116\157\40\x64\x69\x72\x65\143\164\40\163\x63\x72\151\160\164\40\141\x63\x63\145\x73\163\40\141\x6c\154\x6f\x77\x65\144"); class CI_DB_cubrid_forge extends CI_DB_forge { protected $_create_database = FALSE; protected $_create_table_keys = TRUE; protected $_drop_database = FALSE; protected $_create_table_if = FALSE; protected $_unsigned = array("\x53\x48\x4f\122\x54" => "\111\116\x54\x45\x47\x45\x52", "\123\x4d\x41\114\x4c\111\x4e\x54" => "\111\x4e\124\x45\107\x45\x52", "\x49\x4e\124" => "\102\111\107\111\x4e\124", "\111\x4e\x54\105\x47\105\x52" => "\x42\x49\x47\111\116\124", "\102\x49\107\x49\x4e\x54" => "\116\125\115\x45\x52\x49\103", "\106\x4c\x4f\x41\124" => "\104\x4f\x55\102\114\105", "\122\105\x41\114" => "\x44\x4f\x55\102\114\105"); protected function _alter_table($alter_type, $table, $field) { goto xwXh0; zOUPd: $sqls = array(); goto T12Rv; qtZ9u: $sql = "\x41\x4c\x54\105\x52\x20\124\101\102\114\105\x20" . $this->db->escape_identifiers($table); goto zOUPd; Zwajm: return $sqls; goto pHNEQ; xwXh0: if (in_array($alter_type, array("\104\x52\117\120", "\x41\104\x44"), TRUE)) { return parent::_alter_table($alter_type, $table, $field); } goto qtZ9u; T12Rv: for ($i = 0, $c = count($field); $i < $c; $i++) { if ($field[$i]["\137\x6c\151\164\145\162\x61\154"] !== FALSE) { $sqls[] = $sql . "\x20\103\x48\101\x4e\107\105\40" . $field[$i]["\137\x6c\x69\x74\145\162\141\154"]; } else { $alter_type = empty($field[$i]["\156\145\167\x5f\x6e\x61\155\x65"]) ? "\40\115\117\104\111\106\131\40" : "\x20\x43\x48\x41\x4e\107\105\x20"; $sqls[] = $sql . $alter_type . $this->_process_column($field[$i]); } } goto Zwajm; pHNEQ: } protected function _process_column($field) { goto IKcvq; TeR7i: if (empty($extra_clause) && isset($field["\x66\151\x72\163\164"]) && $field["\x66\x69\x72\x73\x74"] === TRUE) { $extra_clause = "\x20\106\x49\x52\123\x54"; } goto YVuuI; YVuuI: return $this->db->escape_identifiers($field["\156\141\x6d\x65"]) . (empty($field["\156\145\x77\x5f\x6e\x61\x6d\145"]) ? '' : "\40" . $this->db->escape_identifiers($field["\156\x65\x77\x5f\x6e\141\x6d\x65"])) . "\40" . $field["\x74\x79\x70\x65"] . $field["\x6c\x65\x6e\147\164\150"] . $field["\165\x6e\163\151\147\x6e\145\x64"] . $field["\x6e\165\154\x6c"] . $field["\144\x65\x66\x61\165\154\x74"] . $field["\141\x75\x74\157\x5f\x69\x6e\x63\162\x65\x6d\145\x6e\x74"] . $field["\165\x6e\x69\161\x75\145"] . $extra_clause; goto I6BQn; IKcvq: $extra_clause = isset($field["\141\x66\x74\145\162"]) ? "\40\101\x46\x54\105\122\40" . $this->db->escape_identifiers($field["\141\x66\164\145\x72"]) : ''; goto TeR7i; I6BQn: } protected function _attr_type(&$attributes) { switch (strtoupper($attributes["\x54\x59\x50\105"])) { case "\x54\111\x4e\x59\111\116\124": goto tUfVr; ELdQm: return; goto jhqOB; tUfVr: $attributes["\124\x59\x50\105"] = "\x53\115\x41\x4c\114\x49\116\124"; goto TJi6c; TJi6c: $attributes["\125\x4e\123\x49\x47\116\x45\104"] = FALSE; goto ELdQm; jhqOB: case "\115\x45\104\x49\x55\x4d\111\x4e\x54": goto ucvND; ucvND: $attributes["\x54\x59\120\105"] = "\111\116\x54\105\107\x45\x52"; goto GQsN4; GQsN4: $attributes["\x55\116\123\x49\x47\116\105\x44"] = FALSE; goto k7Ml7; k7Ml7: return; goto VnY_l; VnY_l: case "\114\117\116\107\x54\105\130\124": $attributes["\x54\131\120\x45"] = "\123\x54\122\x49\x4e\x47"; return; default: return; } } protected function _process_indexes($table) { goto HoJBi; HoJBi: $sql = ''; goto AdWLq; obA9L: return $sql; goto pZ6Px; nbk9D: $this->keys = array(); goto obA9L; AdWLq: for ($i = 0, $c = count($this->keys); $i < $c; $i++) { if (is_array($this->keys[$i])) { for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++) { if (!isset($this->fields[$this->keys[$i][$i2]])) { unset($this->keys[$i][$i2]); continue; } } } elseif (!isset($this->fields[$this->keys[$i]])) { unset($this->keys[$i]); continue; } is_array($this->keys[$i]) or $this->keys[$i] = array($this->keys[$i]); $sql .= "\x2c\12\x9\x4b\x45\x59\40" . $this->db->escape_identifiers(implode("\137", $this->keys[$i])) . "\40\50" . implode("\x2c\x20", $this->db->escape_identifiers($this->keys[$i])) . "\51"; } goto nbk9D; pZ6Px: } }
