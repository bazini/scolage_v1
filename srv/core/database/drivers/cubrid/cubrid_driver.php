<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\x53\x45\x50\x41\124\110") or exit("\x4e\157\40\x64\151\x72\x65\x63\x74\x20\163\x63\x72\151\160\x74\x20\x61\x63\x63\x65\x73\x73\40\x61\x6c\154\x6f\167\145\x64"); class CI_DB_cubrid_driver extends CI_DB { public $dbdriver = "\143\x75\x62\162\x69\x64"; public $auto_commit = TRUE; protected $_escape_char = "\x60"; protected $_random_keyword = array("\122\x41\x4e\104\x4f\x4d\x28\51", "\122\x41\x4e\x44\117\115\x28\x25\144\x29"); public function __construct($params) { parent::__construct($params); if (preg_match("\x2f\136\103\125\102\122\111\104\x3a\133\x5e\72\x5d\x2b\x28\x3a\133\60\x2d\71\135\133\x31\x2d\71\x5d\x7b\60\x2c\64\x7d\x29\77\x3a\133\x5e\72\x5d\53\72\x5b\136\72\135\x2a\72\x5b\136\x3a\x5d\52\72\x28\x5c\77\x2e\53\x29\77\44\57", $this->dsn, $matches)) { if (stripos($matches[2], "\141\x75\164\x6f\143\x6f\155\155\151\164\x3d\157\x66\x66") !== FALSE) { $this->auto_commit = FALSE; } } else { empty($this->port) or $this->port = 33000; } } public function db_connect($persistent = FALSE) { goto QtQS6; QtQS6: if (preg_match("\x2f\136\x43\x55\x42\122\111\x44\72\x5b\136\72\x5d\x2b\x28\x3a\133\x30\x2d\71\x5d\x5b\61\55\x39\135\173\x30\x2c\x34\x7d\51\x3f\72\x5b\136\x3a\x5d\53\72\50\133\x5e\x3a\135\52\x29\x3a\50\x5b\136\x3a\x5d\52\x29\x3a\50\134\x3f\56\53\51\77\44\57", $this->dsn, $matches)) { $func = $persistent !== TRUE ? "\143\165\142\x72\x69\x64\x5f\143\x6f\x6e\x6e\145\x63\164\x5f\x77\151\164\150\137\x75\162\154" : "\x63\165\x62\162\151\144\137\x70\x63\x6f\x6e\156\x65\x63\164\x5f\x77\151\x74\x68\x5f\x75\x72\154"; return $matches[2] === '' && $matches[3] === '' && $this->username !== '' && $this->password !== '' ? $func($this->dsn, $this->username, $this->password) : $func($this->dsn); } goto KYqEM; KYqEM: $func = $persistent !== TRUE ? "\143\165\142\162\151\144\137\143\157\156\156\145\143\x74" : "\143\x75\x62\162\x69\144\137\x70\143\x6f\156\x6e\x65\143\164"; goto oJeam; oJeam: return $this->username !== '' ? $func($this->hostname, $this->port, $this->database, $this->username, $this->password) : $func($this->hostname, $this->port, $this->database); goto uWo2Y; uWo2Y: } public function reconnect() { if (cubrid_ping($this->conn_id) === FALSE) { $this->conn_id = FALSE; } } public function version() { if (isset($this->data_cache["\166\x65\162\163\151\x6f\x6e"])) { return $this->data_cache["\166\x65\x72\163\151\x6f\156"]; } return (!$this->conn_id or ($version = cubrid_get_server_info($this->conn_id)) === FALSE) ? FALSE : ($this->data_cache["\x76\145\x72\163\x69\x6f\x6e"] = $version); } protected function _execute($sql) { return cubrid_query($sql, $this->conn_id); } protected function _trans_begin() { if (($autocommit = cubrid_get_autocommit($this->conn_id)) === NULL) { return FALSE; } elseif ($autocommit === TRUE) { return cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_FALSE); } return TRUE; } protected function _trans_commit() { goto S3Eks; GbbKW: return TRUE; goto Fgtzm; WALfi: if ($this->auto_commit && !cubrid_get_autocommit($this->conn_id)) { return cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_TRUE); } goto GbbKW; S3Eks: if (!cubrid_commit($this->conn_id)) { return FALSE; } goto WALfi; Fgtzm: } protected function _trans_rollback() { goto Xu9cc; Z05Yj: return TRUE; goto psRgX; Xu9cc: if (!cubrid_rollback($this->conn_id)) { return FALSE; } goto FNFF9; FNFF9: if ($this->auto_commit && !cubrid_get_autocommit($this->conn_id)) { cubrid_set_autocommit($this->conn_id, CUBRID_AUTOCOMMIT_TRUE); } goto Z05Yj; psRgX: } protected function _escape_str($str) { return cubrid_real_escape_string($str, $this->conn_id); } public function affected_rows() { return cubrid_affected_rows(); } public function insert_id() { return cubrid_insert_id($this->conn_id); } protected function _list_tables($prefix_limit = FALSE) { goto wt260; DsYCU: if ($prefix_limit !== FALSE && $this->dbprefix !== '') { return $sql . "\x20\114\x49\113\105\x20\x27" . $this->escape_like_str($this->dbprefix) . "\45\47"; } goto jaJvA; jaJvA: return $sql; goto wV7cf; wt260: $sql = "\123\x48\x4f\127\40\124\x41\x42\x4c\105\x53"; goto DsYCU; wV7cf: } protected function _list_columns($table = '') { return "\123\x48\x4f\127\40\x43\117\114\125\x4d\x4e\x53\40\106\x52\x4f\115\x20" . $this->protect_identifiers($table, TRUE, NULL, FALSE); } public function field_data($table) { goto mEg02; yyeBK: $retval = array(); goto tcc1Q; tcc1Q: for ($i = 0, $c = count($query); $i < $c; $i++) { $retval[$i] = new stdClass(); $retval[$i]->name = $query[$i]->Field; sscanf($query[$i]->Type, "\x25\133\141\55\172\135\50\45\144\51", $retval[$i]->type, $retval[$i]->max_length); $retval[$i]->default = $query[$i]->Default; $retval[$i]->primary_key = (int) ($query[$i]->Key === "\x50\122\x49"); } goto wwOIz; YrVh8: $query = $query->result_object(); goto yyeBK; mEg02: if (($query = $this->query("\123\110\x4f\x57\40\103\117\114\x55\x4d\116\x53\40\106\x52\x4f\115\40" . $this->protect_identifiers($table, TRUE, NULL, FALSE))) === FALSE) { return FALSE; } goto YrVh8; wwOIz: return $retval; goto yg9qm; yg9qm: } public function error() { return array("\143\x6f\x64\145" => cubrid_errno($this->conn_id), "\155\145\x73\163\x61\x67\145" => cubrid_error($this->conn_id)); } protected function _from_tables() { if (!empty($this->qb_join) && count($this->qb_from) > 1) { return "\x28" . implode("\54\40", $this->qb_from) . "\x29"; } return implode("\x2c\40", $this->qb_from); } protected function _close() { cubrid_close($this->conn_id); } }
