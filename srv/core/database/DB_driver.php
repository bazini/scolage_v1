<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\101\x53\x45\x50\x41\x54\110") or exit("\116\x6f\x20\144\151\x72\145\143\x74\40\x73\143\162\151\x70\164\40\x61\143\143\x65\163\x73\40\141\x6c\x6c\x6f\x77\x65\x64"); abstract class CI_DB_driver { public $dsn; public $username; public $password; public $hostname; public $database; public $dbdriver = "\155\171\x73\x71\x6c\x69"; public $subdriver; public $dbprefix = ''; public $char_set = "\x75\164\x66\70"; public $dbcollat = "\x75\164\146\70\x5f\147\145\x6e\145\x72\x61\x6c\137\x63\151"; public $encrypt = FALSE; public $swap_pre = ''; public $port = NULL; public $pconnect = FALSE; public $conn_id = FALSE; public $result_id = FALSE; public $db_debug = FALSE; public $benchmark = 0; public $query_count = 0; public $bind_marker = "\x3f"; public $save_queries = TRUE; public $queries = array(); public $query_times = array(); public $data_cache = array(); public $trans_enabled = TRUE; public $trans_strict = TRUE; protected $_trans_depth = 0; protected $_trans_status = TRUE; protected $_trans_failure = FALSE; public $cache_on = FALSE; public $cachedir = ''; public $cache_autodel = FALSE; public $CACHE; protected $_protect_identifiers = TRUE; protected $_reserved_identifiers = array("\52"); protected $_escape_char = "\x22"; protected $_like_escape_str = "\x20\x45\x53\103\101\x50\105\x20\47\45\x73\47\x20"; protected $_like_escape_chr = "\41"; protected $_random_keyword = array("\x52\x41\x4e\104\x28\x29", "\x52\101\116\x44\50\45\144\51"); protected $_count_string = "\x53\x45\114\105\103\124\40\x43\117\125\x4e\124\50\52\x29\40\101\123\x20"; public function __construct($params) { if (is_array($params)) { foreach ($params as $key => $val) { $this->{$key} = $val; } } log_message("\151\x6e\x66\157", "\x44\x61\164\141\x62\141\x73\x65\40\104\162\x69\166\145\x72\x20\103\154\x61\x73\x73\x20\111\156\x69\x74\151\141\154\151\172\x65\x64"); } public function initialize() { goto k6kRx; ToBqv: if (!$this->conn_id) { if (!empty($this->failover) && is_array($this->failover)) { foreach ($this->failover as $failover) { goto C2vxl; czRF9: $this->conn_id = $this->db_connect($this->pconnect); goto pLxgK; C2vxl: foreach ($failover as $key => $val) { $this->{$key} = $val; } goto czRF9; pLxgK: if ($this->conn_id) { break; } goto zQGi5; zQGi5: } } if (!$this->conn_id) { goto nT3UQ; Uq7kT: return FALSE; goto d3JzE; nT3UQ: log_message("\x65\162\162\157\x72", "\125\x6e\x61\142\x6c\x65\x20\164\157\x20\x63\x6f\156\x6e\x65\143\x74\x20\164\x6f\40\164\x68\145\x20\x64\141\164\141\142\141\x73\x65"); goto Uqr0h; Uqr0h: if ($this->db_debug) { $this->display_error("\144\x62\137\x75\156\141\142\154\x65\137\164\157\137\x63\x6f\x6e\156\x65\143\164"); } goto Uq7kT; d3JzE: } } goto ab3hr; ab3hr: return $this->db_set_charset($this->char_set); goto Ui5Zy; vizdX: $this->conn_id = $this->db_connect($this->pconnect); goto ToBqv; k6kRx: if ($this->conn_id) { return TRUE; } goto vizdX; Ui5Zy: } public function db_connect() { return TRUE; } public function db_pconnect() { return $this->db_connect(TRUE); } public function reconnect() { } public function db_select() { return TRUE; } public function error() { return array("\143\x6f\144\145" => NULL, "\155\x65\163\163\x61\x67\145" => NULL); } public function db_set_charset($charset) { if (method_exists($this, "\137\x64\142\x5f\163\x65\x74\x5f\x63\150\141\x72\163\145\164") && !$this->_db_set_charset($charset)) { goto kh1x9; ElP22: if ($this->db_debug) { $this->display_error("\x64\x62\x5f\165\x6e\x61\142\154\145\x5f\x74\157\x5f\163\145\x74\137\x63\x68\x61\162\x73\145\x74", $charset); } goto sZUpF; kh1x9: log_message("\145\162\162\x6f\162", "\x55\156\x61\x62\x6c\145\40\164\157\x20\x73\x65\164\x20\144\141\x74\141\142\x61\x73\x65\40\x63\157\x6e\x6e\145\x63\x74\151\157\x6e\40\143\150\x61\162\163\x65\164\72\x20" . $charset); goto ElP22; sZUpF: return FALSE; goto bqJqv; bqJqv: } return TRUE; } public function platform() { return $this->dbdriver; } public function version() { goto LZeUe; gSI0_: $query = $this->query($sql)->row(); goto KVqbY; LZeUe: if (isset($this->data_cache["\x76\145\162\x73\x69\157\x6e"])) { return $this->data_cache["\x76\x65\x72\x73\x69\x6f\x6e"]; } goto DrBXZ; DrBXZ: if (FALSE === ($sql = $this->_version())) { return $this->db_debug ? $this->display_error("\x64\x62\x5f\165\x6e\163\165\x70\160\157\162\x74\145\144\x5f\x66\x75\x6e\x63\164\151\x6f\156") : FALSE; } goto gSI0_; KVqbY: return $this->data_cache["\x76\x65\x72\163\x69\157\x6e"] = $query->ver; goto G0SPy; G0SPy: } protected function _version() { return "\x53\105\x4c\105\103\x54\x20\126\105\122\x53\x49\117\116\50\x29\x20\x41\123\x20\166\145\x72"; } public function query($sql, $binds = FALSE, $return_object = NULL) { goto nGfG0; JZtC9: $time_end = microtime(TRUE); goto DHAg0; RRIiP: if ($this->save_queries === TRUE) { $this->queries[] = $sql; } goto M28i0; fwYO4: if ($this->cache_on === TRUE && $return_object === TRUE && $this->_cache_init()) { $this->load_rdriver(); if (FALSE !== ($cache = $this->CACHE->read($sql))) { return $cache; } } goto RRIiP; HcrlY: $driver = $this->load_rdriver(); goto X1dgE; M28i0: $time_start = microtime(TRUE); goto zCqt7; xY6W2: return $RES; goto RLlls; EBZRM: if ($return_object !== TRUE) { if ($this->cache_on === TRUE && $this->cache_autodel === TRUE && $this->_cache_init()) { $this->CACHE->delete(); } return TRUE; } goto HcrlY; X1dgE: $RES = new $driver($this); goto lm_AV; O0Qso: if ($this->save_queries === TRUE) { $this->query_times[] = $time_end - $time_start; } goto g1h67; lm_AV: if ($this->cache_on === TRUE && $this->_cache_init()) { goto sbVUJ; bndDo: $CR->num_rows = $RES->num_rows(); goto VXqwh; dGyNI: $CR->result_id = NULL; goto oHT93; oHT93: $this->CACHE->write($sql, $CR); goto MNx19; VXqwh: $CR->conn_id = NULL; goto dGyNI; tRyRV: $CR->result_object = $RES->result_object(); goto vUhlW; sbVUJ: $CR = new CI_DB_result($this); goto tRyRV; vUhlW: $CR->result_array = $RES->result_array(); goto bndDo; MNx19: } goto xY6W2; nGfG0: if ($sql === '') { log_message("\145\162\x72\x6f\x72", "\x49\x6e\x76\x61\154\151\x64\x20\161\x75\145\162\x79\72\x20" . $sql); return $this->db_debug ? $this->display_error("\144\142\137\151\156\x76\141\x6c\151\144\137\x71\x75\x65\x72\x79") : FALSE; } elseif (!is_bool($return_object)) { $return_object = !$this->is_write_type($sql); } goto y5K2H; g1h67: $this->query_count++; goto EBZRM; gV5p3: if ($binds !== FALSE) { $sql = $this->compile_binds($sql, $binds); } goto fwYO4; zCqt7: if (FALSE === ($this->result_id = $this->simple_query($sql))) { goto jI5GE; EWncW: $error = $this->error(); goto Zf0bj; ifdbl: if ($this->db_debug) { while ($this->_trans_depth !== 0) { $trans_depth = $this->_trans_depth; $this->trans_complete(); if ($trans_depth === $this->_trans_depth) { log_message("\x65\x72\x72\x6f\x72", "\104\x61\164\x61\142\141\163\145\72\40\106\x61\x69\x6c\x75\162\145\40\x64\165\162\151\156\147\x20\x61\156\40\x61\165\x74\x6f\155\x61\164\x65\x64\x20\164\x72\x61\x6e\x73\x61\143\x74\x69\157\x6e\40\x63\157\x6d\155\x69\164\x2f\162\x6f\154\x6c\142\141\x63\x6b\x21"); break; } } return $this->display_error(array("\105\x72\162\157\162\x20\x4e\165\155\142\145\162\72\x20" . $error["\143\157\x64\x65"], $error["\x6d\x65\163\163\x61\147\145"], $sql)); } goto iysGR; Zf0bj: log_message("\x65\x72\x72\x6f\x72", "\121\165\x65\162\x79\40\x65\162\162\157\x72\72\40" . $error["\x6d\x65\163\x73\141\147\x65"] . "\x20\55\x20\x49\156\x76\x61\x6c\151\x64\x20\161\x75\145\x72\171\x3a\40" . $sql); goto ifdbl; iysGR: return FALSE; goto oLXjg; jI5GE: if ($this->save_queries === TRUE) { $this->query_times[] = 0; } goto WQEj2; WQEj2: if ($this->_trans_depth !== 0) { $this->_trans_status = FALSE; } goto EWncW; oLXjg: } goto JZtC9; DHAg0: $this->benchmark += $time_end - $time_start; goto O0Qso; y5K2H: if ($this->dbprefix !== '' && $this->swap_pre !== '' && $this->dbprefix !== $this->swap_pre) { $sql = preg_replace("\x2f\50\134\127\51" . $this->swap_pre . "\50\x5c\x53\x2b\x3f\51\57", "\134\x31" . $this->dbprefix . "\134\x32", $sql); } goto gV5p3; RLlls: } public function load_rdriver() { goto JIXnD; eKq3n: if (!class_exists($driver, FALSE)) { require_once BASEPATH . "\144\141\x74\x61\x62\141\163\x65\x2f\104\x42\137\x72\145\x73\165\154\164\56\x70\x68\160"; require_once BASEPATH . "\144\141\164\141\x62\x61\x73\x65\57\x64\162\x69\x76\x65\162\x73\57" . $this->dbdriver . "\57" . $this->dbdriver . "\x5f\162\145\163\165\x6c\x74\x2e\160\x68\x70"; } goto wOJos; wOJos: return $driver; goto g1ndS; JIXnD: $driver = "\x43\x49\x5f\104\x42\137" . $this->dbdriver . "\137\162\145\x73\165\x6c\x74"; goto eKq3n; g1ndS: } public function simple_query($sql) { if (!$this->conn_id) { if (!$this->initialize()) { return FALSE; } } return $this->_execute($sql); } public function trans_off() { $this->trans_enabled = FALSE; } public function trans_strict($mode = TRUE) { $this->trans_strict = is_bool($mode) ? $mode : TRUE; } public function trans_start($test_mode = FALSE) { if (!$this->trans_enabled) { return FALSE; } return $this->trans_begin($test_mode); } public function trans_complete() { goto kHl91; V4kpp: return $this->trans_commit(); goto KX0EK; kHl91: if (!$this->trans_enabled) { return FALSE; } goto N4vNk; N4vNk: if ($this->_trans_status === FALSE or $this->_trans_failure === TRUE) { goto W_Ov0; W_Ov0: $this->trans_rollback(); goto RRR2B; vz05J: return FALSE; goto XQos_; RRR2B: if ($this->trans_strict === FALSE) { $this->_trans_status = TRUE; } goto jbvaB; jbvaB: log_message("\144\x65\x62\165\147", "\x44\x42\x20\124\162\141\156\163\x61\x63\164\151\157\x6e\40\106\x61\151\x6c\x75\x72\145"); goto vz05J; XQos_: } goto V4kpp; KX0EK: } public function trans_status() { return $this->_trans_status; } public function trans_begin($test_mode = FALSE) { goto otL8A; epewT: return FALSE; goto MHWl3; otL8A: if (!$this->trans_enabled) { return FALSE; } elseif ($this->_trans_depth > 0) { $this->_trans_depth++; return TRUE; } goto GKR06; GKR06: $this->_trans_failure = $test_mode === TRUE; goto DSaCH; DSaCH: if ($this->_trans_begin()) { goto w22Zj; GIyoq: return TRUE; goto kWYHC; W8dgT: $this->_trans_depth++; goto GIyoq; w22Zj: $this->_trans_status = TRUE; goto W8dgT; kWYHC: } goto epewT; MHWl3: } public function trans_commit() { if (!$this->trans_enabled or $this->_trans_depth === 0) { return FALSE; } elseif ($this->_trans_depth > 1 or $this->_trans_commit()) { $this->_trans_depth--; return TRUE; } return FALSE; } public function trans_rollback() { if (!$this->trans_enabled or $this->_trans_depth === 0) { return FALSE; } elseif ($this->_trans_depth > 1 or $this->_trans_rollback()) { $this->_trans_depth--; return TRUE; } return FALSE; } public function compile_binds($sql, $binds) { goto jLRxQ; MK4Mo: if ($c = preg_match_all("\x2f\x27\x5b\x5e\x27\x5d\52\x27\x7c\x22\x5b\x5e\x22\135\52\42\x2f\151", $sql, $matches)) { $c = preg_match_all("\x2f" . preg_quote($this->bind_marker, "\57") . "\57\151", str_replace($matches[0], str_replace($this->bind_marker, str_repeat("\40", $ml), $matches[0]), $sql, $c), $matches, PREG_OFFSET_CAPTURE); if ($bind_count !== $c) { return $sql; } } elseif (($c = preg_match_all("\x2f" . preg_quote($this->bind_marker, "\57") . "\x2f\x69", $sql, $matches, PREG_OFFSET_CAPTURE)) !== $bind_count) { return $sql; } goto cMolz; cMolz: do { $c--; $escaped_value = $this->escape($binds[$c]); if (is_array($escaped_value)) { $escaped_value = "\50" . implode("\x2c", $escaped_value) . "\51"; } $sql = substr_replace($sql, $escaped_value, $matches[0][$c][1], $ml); } while ($c !== 0); goto g_s10; U3trt: $ml = strlen($this->bind_marker); goto MK4Mo; jLRxQ: if (empty($this->bind_marker) or strpos($sql, $this->bind_marker) === FALSE) { return $sql; } elseif (!is_array($binds)) { $binds = array($binds); $bind_count = 1; } else { $binds = array_values($binds); $bind_count = count($binds); } goto U3trt; g_s10: return $sql; goto Uox1E; Uox1E: } public function is_write_type($sql) { return (bool) preg_match("\57\x5e\134\x73\52\x22\x3f\x28\123\105\x54\174\x49\116\123\105\122\x54\x7c\x55\x50\x44\x41\124\x45\174\x44\x45\114\105\x54\105\x7c\x52\x45\x50\114\x41\x43\105\174\103\x52\x45\x41\124\105\174\104\x52\117\120\174\124\122\125\116\x43\101\124\105\x7c\x4c\117\101\104\174\103\117\x50\131\x7c\x41\x4c\x54\x45\122\x7c\x52\x45\116\x41\115\105\x7c\107\x52\x41\116\124\x7c\122\x45\126\x4f\113\105\174\x4c\x4f\x43\113\x7c\x55\x4e\x4c\117\x43\x4b\x7c\122\105\111\x4e\104\105\x58\174\x4d\x45\x52\107\x45\x29\x5c\163\x2f\x69", $sql); } public function elapsed_time($decimals = 6) { return number_format($this->benchmark, $decimals); } public function total_queries() { return $this->query_count; } public function last_query() { return end($this->queries); } public function escape($str) { if (is_array($str)) { $str = array_map(array(&$this, "\x65\x73\143\141\160\145"), $str); return $str; } elseif (is_string($str) or is_object($str) && method_exists($str, "\137\137\x74\x6f\123\x74\162\151\x6e\147")) { return "\47" . $this->escape_str($str) . "\47"; } elseif (is_bool($str)) { return $str === FALSE ? 0 : 1; } elseif ($str === NULL) { return "\116\125\x4c\114"; } return $str; } public function escape_str($str, $like = FALSE) { goto dntwp; XoP1g: $str = $this->_escape_str($str); goto UPdi7; ES0DA: return $str; goto JyRsm; dntwp: if (is_array($str)) { foreach ($str as $key => $val) { $str[$key] = $this->escape_str($val, $like); } return $str; } goto XoP1g; UPdi7: if ($like === TRUE) { return str_replace(array($this->_like_escape_chr, "\45", "\x5f"), array($this->_like_escape_chr . $this->_like_escape_chr, $this->_like_escape_chr . "\x25", $this->_like_escape_chr . "\x5f"), $str); } goto ES0DA; JyRsm: } public function escape_like_str($str) { return $this->escape_str($str, TRUE); } protected function _escape_str($str) { return str_replace("\x27", "\47\x27", remove_invisible_characters($str, FALSE)); } public function primary($table) { $fields = $this->list_fields($table); return is_array($fields) ? current($fields) : FALSE; } public function count_all($table = '') { goto DLaRk; DLaRk: if ($table === '') { return 0; } goto uZJsi; OUf6V: $query = $query->row(); goto C8MeN; RBeib: return (int) $query->numrows; goto spHq5; uZJsi: $query = $this->query($this->_count_string . $this->escape_identifiers("\156\x75\155\162\157\x77\163") . "\x20\106\122\117\x4d\x20" . $this->protect_identifiers($table, TRUE, NULL, FALSE)); goto H2b9X; C8MeN: $this->_reset_select(); goto RBeib; H2b9X: if ($query->num_rows() === 0) { return 0; } goto OUf6V; spHq5: } public function list_tables($constrain_by_prefix = FALSE) { goto VrIWh; fpgZT: $query = $this->query($sql); goto xI0UN; xJlCd: return $this->data_cache["\164\x61\x62\x6c\145\x5f\156\x61\x6d\x65\163"]; goto Vtg5O; JiHhn: $this->data_cache["\164\x61\142\154\x65\137\x6e\141\x6d\145\x73"] = array(); goto fpgZT; VrIWh: if (isset($this->data_cache["\164\x61\142\154\x65\x5f\156\x61\x6d\145\x73"])) { return $this->data_cache["\x74\141\x62\154\x65\137\x6e\x61\155\145\x73"]; } goto oqja0; oqja0: if (FALSE === ($sql = $this->_list_tables($constrain_by_prefix))) { return $this->db_debug ? $this->display_error("\144\142\137\x75\156\163\x75\x70\x70\x6f\162\x74\x65\144\137\146\x75\x6e\x63\x74\151\x6f\x6e") : FALSE; } goto JiHhn; xI0UN: foreach ($query->result_array() as $row) { if (!isset($key)) { if (isset($row["\x74\141\x62\x6c\x65\137\156\141\x6d\145"])) { $key = "\164\141\x62\x6c\x65\x5f\x6e\x61\x6d\x65"; } elseif (isset($row["\x54\x41\x42\114\x45\x5f\x4e\x41\115\x45"])) { $key = "\124\x41\x42\114\105\137\116\101\x4d\x45"; } else { $key = array_keys($row); $key = array_shift($key); } } $this->data_cache["\x74\x61\x62\x6c\x65\137\156\141\155\145\163"][] = $row[$key]; } goto xJlCd; Vtg5O: } public function table_exists($table_name) { return in_array($this->protect_identifiers($table_name, TRUE, FALSE, FALSE), $this->list_tables()); } public function list_fields($table) { goto ODnNL; ODnNL: if (FALSE === ($sql = $this->_list_columns($table))) { return $this->db_debug ? $this->display_error("\144\x62\x5f\165\156\x73\x75\160\x70\x6f\x72\164\145\x64\x5f\146\x75\x6e\143\164\x69\157\156") : FALSE; } goto XxbOb; XxbOb: $query = $this->query($sql); goto NEsVS; Ocpub: return $fields; goto misd2; NEsVS: $fields = array(); goto h04Lx; h04Lx: foreach ($query->result_array() as $row) { if (!isset($key)) { if (isset($row["\x63\x6f\x6c\x75\x6d\156\137\156\x61\155\x65"])) { $key = "\143\x6f\154\165\155\156\137\x6e\x61\x6d\x65"; } elseif (isset($row["\103\117\114\x55\x4d\x4e\x5f\x4e\x41\115\x45"])) { $key = "\103\x4f\114\125\115\116\x5f\116\x41\x4d\x45"; } else { $key = key($row); } } $fields[] = $row[$key]; } goto Ocpub; misd2: } public function field_exists($field_name, $table_name) { return in_array($field_name, $this->list_fields($table_name)); } public function field_data($table) { $query = $this->query($this->_field_data($this->protect_identifiers($table, TRUE, NULL, FALSE))); return $query ? $query->field_data() : FALSE; } public function escape_identifiers($item) { goto m3Zr1; ZrmKj: return preg_replace("\57" . $preg_ec[0] . "\77\x28\133\x5e" . $preg_ec[1] . "\134\x2e\x5d\53\x29" . $preg_ec[1] . "\77\x28\134\56\x29\77\x2f\x69", $preg_ec[2] . "\x24\61" . $preg_ec[3] . "\x24\62", $item); goto leLS7; hu3j8: if (empty($preg_ec)) { if (is_array($this->_escape_char)) { $preg_ec = array(preg_quote($this->_escape_char[0], "\57"), preg_quote($this->_escape_char[1], "\57"), $this->_escape_char[0], $this->_escape_char[1]); } else { $preg_ec[0] = $preg_ec[1] = preg_quote($this->_escape_char, "\57"); $preg_ec[2] = $preg_ec[3] = $this->_escape_char; } } goto g0HCO; mOqMa: static $preg_ec = array(); goto hu3j8; m3Zr1: if ($this->_escape_char === '' or empty($item) or in_array($item, $this->_reserved_identifiers)) { return $item; } elseif (is_array($item)) { foreach ($item as $key => $value) { $item[$key] = $this->escape_identifiers($value); } return $item; } elseif (ctype_digit($item) or $item[0] === "\x27" or $this->_escape_char !== "\x22" && $item[0] === "\x22" or strpos($item, "\x28") !== FALSE) { return $item; } goto mOqMa; g0HCO: foreach ($this->_reserved_identifiers as $id) { if (strpos($item, "\56" . $id) !== FALSE) { return preg_replace("\57" . $preg_ec[0] . "\x3f\50\x5b\x5e" . $preg_ec[1] . "\x5c\56\x5d\53\51" . $preg_ec[1] . "\77\134\56\x2f\151", $preg_ec[2] . "\44\61" . $preg_ec[3] . "\56", $item); } } goto ZrmKj; leLS7: } public function insert_string($table, $data) { goto LzpGH; AKirZ: return $this->_insert($this->protect_identifiers($table, TRUE, NULL, FALSE), $fields, $values); goto mtORi; LzpGH: $fields = $values = array(); goto WOiY8; WOiY8: foreach ($data as $key => $val) { $fields[] = $this->escape_identifiers($key); $values[] = $this->escape($val); } goto AKirZ; mtORi: } protected function _insert($table, $keys, $values) { return "\x49\x4e\x53\105\x52\x54\40\x49\x4e\x54\x4f\40" . $table . "\x20\x28" . implode("\x2c\x20", $keys) . "\51\40\126\101\x4c\x55\105\123\x20\x28" . implode("\54\40", $values) . "\x29"; } public function update_string($table, $data, $where) { goto TQeg9; glmFQ: $fields = array(); goto R4BBE; pNxTR: $this->_reset_write(); goto NMEg0; x0QTF: $this->where($where); goto glmFQ; TQeg9: if (empty($where)) { return FALSE; } goto x0QTF; NMEg0: return $sql; goto mRIQx; I9PoB: $sql = $this->_update($this->protect_identifiers($table, TRUE, NULL, FALSE), $fields); goto pNxTR; R4BBE: foreach ($data as $key => $val) { $fields[$this->protect_identifiers($key)] = $this->escape($val); } goto I9PoB; mRIQx: } protected function _update($table, $values) { foreach ($values as $key => $val) { $valstr[] = $key . "\x20\75\x20" . $val; } return "\x55\120\104\101\124\x45\40" . $table . "\x20\x53\x45\124\x20" . implode("\54\40", $valstr) . $this->_compile_wh("\161\x62\137\x77\150\145\x72\x65") . $this->_compile_order_by() . ($this->qb_limit !== FALSE ? "\x20\x4c\111\x4d\x49\x54\x20" . $this->qb_limit : ''); } protected function _has_operator($str) { return (bool) preg_match("\57\50\74\174\x3e\x7c\41\174\75\174\134\163\x49\x53\40\x4e\x55\x4c\114\x7c\x5c\163\x49\123\40\x4e\x4f\124\40\x4e\x55\114\114\174\134\x73\105\x58\x49\123\x54\123\174\134\163\102\x45\x54\127\x45\x45\116\x7c\x5c\x73\x4c\111\113\105\174\x5c\x73\111\116\x5c\x73\52\134\x28\x7c\134\163\x29\x2f\x69", trim($str)); } protected function _get_operator($str) { goto KvVLn; Wd5Lg: if (empty($_operators)) { $_les = $this->_like_escape_str !== '' ? "\x5c\163\x2b" . preg_quote(trim(sprintf($this->_like_escape_str, $this->_like_escape_chr)), "\57") : ''; $_operators = array("\x5c\x73\x2a\x28\77\72\74\x7c\x3e\x7c\x21\x29\x3f\x3d\x5c\163\x2a", "\134\x73\x2a\x3c\76\77\x5c\x73\52", "\x5c\163\52\x3e\x5c\163\52", "\134\163\x2b\111\123\40\116\125\114\x4c", "\x5c\x73\53\111\123\40\x4e\x4f\x54\x20\116\x55\x4c\114", "\x5c\x73\x2b\105\130\x49\123\x54\x53\134\x73\x2a\134\x28\56\x2a\134\51", "\x5c\163\x2b\116\x4f\124\40\x45\130\x49\x53\124\x53\x5c\x73\x2a\x5c\50\56\52\x5c\51", "\134\163\x2b\102\x45\x54\x57\105\x45\116\134\x73\53", "\134\163\53\111\116\x5c\163\52\134\x28\56\52\x5c\x29", "\x5c\x73\53\116\117\x54\40\111\116\x5c\163\52\x5c\50\56\x2a\134\51", "\x5c\x73\x2b\x4c\x49\113\x45\x5c\x73\53\x5c\123\x2e\x2a\50" . $_les . "\x29\77", "\134\163\x2b\x4e\117\x54\40\114\111\x4b\105\134\163\x2b\134\123\56\x2a\x28" . $_les . "\x29\77"); } goto nP2uq; KvVLn: static $_operators; goto Wd5Lg; nP2uq: return preg_match("\x2f" . implode("\174", $_operators) . "\x2f\x69", $str, $match) ? $match[0] : FALSE; goto jT4Ws; jT4Ws: } public function call_function($function) { goto BbAie; BbAie: $driver = $this->dbdriver === "\x70\157\x73\164\147\x72\145" ? "\x70\x67\x5f" : $this->dbdriver . "\137"; goto R8WwL; sSxiI: return func_num_args() > 1 ? call_user_func_array($function, array_slice(func_get_args(), 1)) : call_user_func($function); goto JWHom; R8WwL: if (FALSE === strpos($driver, $function)) { $function = $driver . $function; } goto XltI3; XltI3: if (!function_exists($function)) { return $this->db_debug ? $this->display_error("\x64\142\x5f\x75\x6e\x73\x75\x70\160\157\x72\164\145\x64\x5f\x66\165\156\x63\164\151\157\x6e") : FALSE; } goto sSxiI; JWHom: } public function cache_set_path($path = '') { $this->cachedir = $path; } public function cache_on() { return $this->cache_on = TRUE; } public function cache_off() { return $this->cache_on = FALSE; } public function cache_delete($segment_one = '', $segment_two = '') { return $this->_cache_init() ? $this->CACHE->delete($segment_one, $segment_two) : FALSE; } public function cache_delete_all() { return $this->_cache_init() ? $this->CACHE->delete_all() : FALSE; } protected function _cache_init() { goto GVUki; tmFWM: return TRUE; goto KFgT3; K5BI1: $this->CACHE = new CI_DB_Cache($this); goto tmFWM; GVUki: if (!class_exists("\103\x49\137\x44\x42\137\103\141\x63\150\145", FALSE)) { require_once BASEPATH . "\x64\x61\164\141\142\141\163\x65\x2f\x44\102\x5f\143\x61\x63\x68\145\x2e\160\x68\160"; } elseif (is_object($this->CACHE)) { return TRUE; } goto K5BI1; KFgT3: } public function close() { if ($this->conn_id) { $this->_close(); $this->conn_id = FALSE; } } protected function _close() { $this->conn_id = FALSE; } public function display_error($error = '', $swap = '', $native = FALSE) { goto VZQU4; W06fF: exit(8); goto W6b86; Xd4Td: foreach ($trace as $call) { if (isset($call["\146\151\154\x65"], $call["\143\154\x61\x73\163"])) { if (DIRECTORY_SEPARATOR !== "\x2f") { $call["\146\151\154\x65"] = str_replace("\134", "\57", $call["\146\151\x6c\x65"]); } if (strpos($call["\x66\151\x6c\x65"], BASEPATH . "\x64\141\x74\x61\142\x61\163\145") === FALSE && strpos($call["\x63\154\141\x73\x73"], "\x4c\157\141\x64\145\162") === FALSE) { goto fjqFG; eU8eu: $message[] = "\x4c\x69\156\x65\40\x4e\165\x6d\142\x65\162\72\x20" . $call["\154\151\156\145"]; goto bOIeP; fjqFG: $message[] = "\106\151\x6c\145\156\x61\155\x65\72\x20" . str_replace(array(APPPATH, BASEPATH), '', $call["\146\151\154\145"]); goto eU8eu; bOIeP: break; goto ifuC2; ifuC2: } } } goto ZN32X; VZQU4: $LANG =& load_class("\x4c\x61\156\x67", "\143\157\162\x65"); goto DquJ_; DquJ_: $LANG->load("\144\142"); goto z0ca5; LPoXE: echo $error->show_error($heading, $message, "\145\x72\x72\x6f\162\137\144\142"); goto W06fF; Zcuuz: if ($native === TRUE) { $message = (array) $error; } else { $message = is_array($error) ? $error : array(str_replace("\x25\163", $swap, $LANG->line($error))); } goto UD9Qq; ZN32X: $error =& load_class("\x45\x78\143\x65\x70\x74\151\x6f\x6e\163", "\x63\x6f\162\145"); goto LPoXE; z0ca5: $heading = $LANG->line("\x64\x62\x5f\x65\x72\x72\157\x72\137\x68\145\141\x64\151\156\147"); goto Zcuuz; UD9Qq: $trace = debug_backtrace(); goto Xd4Td; W6b86: } public function protect_identifiers($item, $prefix_single = FALSE, $protect_identifiers = NULL, $field_exists = TRUE) { goto kcpfr; yRqgB: if ($this->dbprefix !== '') { if ($this->swap_pre !== '' && strpos($item, $this->swap_pre) === 0) { $item = preg_replace("\57\136" . $this->swap_pre . "\x28\134\123\53\77\x29\x2f", $this->dbprefix . "\x5c\x31", $item); } elseif ($prefix_single === TRUE && strpos($item, $this->dbprefix) !== 0) { $item = $this->dbprefix . $item; } } goto KWGsB; gDiGx: if ($offset = strripos($item, "\x20\101\123\x20")) { $alias = $protect_identifiers ? substr($item, $offset, 4) . $this->escape_identifiers(substr($item, $offset + 4)) : substr($item, $offset); $item = substr($item, 0, $offset); } elseif ($offset = strrpos($item, "\40")) { $alias = $protect_identifiers ? "\40" . $this->escape_identifiers(substr($item, $offset + 1)) : substr($item, $offset); $item = substr($item, 0, $offset); } else { $alias = ''; } goto CfHlK; kcpfr: if (!is_bool($protect_identifiers)) { $protect_identifiers = $this->_protect_identifiers; } goto REfYN; PGlzv: $item = preg_replace("\x2f\x5c\x73\53\x2f", "\40", trim($item)); goto gDiGx; Uw0yr: if (strcspn($item, "\x28\51\47") !== strlen($item)) { return $item; } goto PGlzv; HMKhT: return $item . $alias; goto uwAPG; CfHlK: if (strpos($item, "\x2e") !== FALSE) { goto ODwBs; qF5Sj: return $item . $alias; goto XzeG9; olGmd: if ($protect_identifiers === TRUE) { $item = $this->escape_identifiers($item); } goto qF5Sj; dipvP: if (!empty($this->qb_aliased_tables) && in_array($parts[0], $this->qb_aliased_tables)) { if ($protect_identifiers === TRUE) { foreach ($parts as $key => $val) { if (!in_array($val, $this->_reserved_identifiers)) { $parts[$key] = $this->escape_identifiers($val); } } $item = implode("\x2e", $parts); } return $item . $alias; } goto KODpF; ODwBs: $parts = explode("\56", $item); goto dipvP; KODpF: if ($this->dbprefix !== '') { goto xxSl4; xxSl4: if (isset($parts[3])) { $i = 2; } elseif (isset($parts[2])) { $i = 1; } else { $i = 0; } goto S7KDl; ow8Vb: isset($ec[0]) && ($ec .= "\77"); goto HG9yR; HG9yR: if ($this->swap_pre !== '' && preg_match("\x23\136" . $ec . preg_quote($this->swap_pre) . "\43", $parts[$i])) { $parts[$i] = preg_replace("\x23\x5e" . $ec . preg_quote($this->swap_pre) . "\x28\134\123\x2b\77\51\43", "\134\x31" . $this->dbprefix . "\x5c\62", $parts[$i]); } else { preg_match("\43\x5e" . $ec . preg_quote($this->dbprefix) . "\43", $parts[$i]) or $parts[$i] = $this->dbprefix . $parts[$i]; } goto SA25f; S7KDl: if ($field_exists === FALSE) { $i++; } goto WCVod; SA25f: $item = implode("\x2e", $parts); goto BHplz; WCVod: $ec = "\x28\77\x3c\x65\143\76" . preg_quote(is_array($this->_escape_char) ? $this->_escape_char[0] : $this->_escape_char) . "\51\77"; goto ow8Vb; BHplz: } goto olGmd; XzeG9: } goto yRqgB; KWGsB: if ($protect_identifiers === TRUE && !in_array($item, $this->_reserved_identifiers)) { $item = $this->escape_identifiers($item); } goto HMKhT; REfYN: if (is_array($item)) { goto ds45O; U2LgM: foreach ($item as $k => $v) { $escaped_array[$this->protect_identifiers($k)] = $this->protect_identifiers($v, $prefix_single, $protect_identifiers, $field_exists); } goto aahtl; aahtl: return $escaped_array; goto iOkGK; ds45O: $escaped_array = array(); goto U2LgM; iOkGK: } goto Uw0yr; uwAPG: } protected function _reset_select() { } }
