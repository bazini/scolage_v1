<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\123\105\120\x41\124\x48") or exit("\116\157\40\x64\x69\x72\x65\x63\x74\40\163\143\x72\151\160\x74\40\141\143\143\x65\163\x73\x20\141\154\154\157\167\x65\144"); abstract class CI_DB_forge { protected $db; public $fields = array(); public $keys = array(); public $primary_keys = array(); public $db_char_set = ''; protected $_create_database = "\103\122\x45\101\124\x45\40\x44\x41\124\101\102\x41\x53\105\40\45\x73"; protected $_drop_database = "\x44\122\117\x50\x20\104\x41\124\101\x42\x41\x53\x45\x20\45\163"; protected $_create_table = "\45\163\x20\x25\x73\40\50\45\163\xa\51"; protected $_create_table_if = "\103\x52\x45\x41\x54\x45\40\x54\101\102\x4c\105\40\111\x46\40\x4e\x4f\124\x20\x45\130\111\x53\124\x53"; protected $_create_table_keys = FALSE; protected $_drop_table_if = "\104\122\x4f\x50\40\x54\101\102\x4c\x45\x20\x49\106\x20\x45\130\111\123\124\123"; protected $_rename_table = "\x41\x4c\x54\x45\x52\x20\124\101\102\114\x45\40\45\x73\40\x52\x45\x4e\101\115\x45\x20\x54\117\x20\45\163\73"; protected $_unsigned = TRUE; protected $_null = ''; protected $_default = "\40\104\x45\x46\101\125\114\124\40"; public function __construct(&$db) { $this->db =& $db; log_message("\151\x6e\x66\x6f", "\104\x61\164\141\x62\141\x73\x65\40\106\x6f\162\147\x65\40\x43\x6c\141\x73\x73\40\111\156\151\x74\x69\141\x6c\151\172\145\x64"); } public function create_database($db_name) { goto dPcq3; dPcq3: if ($this->_create_database === FALSE) { return $this->db->db_debug ? $this->db->display_error("\144\x62\137\x75\156\163\165\x70\x70\x6f\x72\x74\145\x64\x5f\x66\145\x61\x74\165\162\x65") : FALSE; } elseif (!$this->db->query(sprintf($this->_create_database, $this->db->escape_identifiers($db_name), $this->db->char_set, $this->db->dbcollat))) { return $this->db->db_debug ? $this->db->display_error("\144\142\x5f\x75\x6e\141\x62\x6c\145\137\x74\x6f\x5f\x64\162\x6f\x70") : FALSE; } goto gF02J; CRIsU: return TRUE; goto etxbr; gF02J: if (!empty($this->db->data_cache["\144\x62\x5f\156\141\155\145\x73"])) { $this->db->data_cache["\144\x62\x5f\x6e\141\155\x65\163"][] = $db_name; } goto CRIsU; etxbr: } public function drop_database($db_name) { goto wzlq2; wzlq2: if ($this->_drop_database === FALSE) { return $this->db->db_debug ? $this->db->display_error("\144\142\137\165\156\163\165\x70\160\157\x72\x74\x65\x64\137\146\x65\x61\164\x75\x72\145") : FALSE; } elseif (!$this->db->query(sprintf($this->_drop_database, $this->db->escape_identifiers($db_name)))) { return $this->db->db_debug ? $this->db->display_error("\x64\x62\137\x75\x6e\x61\x62\x6c\145\x5f\x74\x6f\x5f\144\x72\157\x70") : FALSE; } goto ZTkXG; NBVIr: return TRUE; goto khUR4; ZTkXG: if (!empty($this->db->data_cache["\x64\x62\137\x6e\x61\155\x65\x73"])) { $key = array_search(strtolower($db_name), array_map("\x73\x74\162\x74\157\x6c\x6f\167\x65\162", $this->db->data_cache["\144\x62\137\156\x61\x6d\145\x73"]), TRUE); if ($key !== FALSE) { unset($this->db->data_cache["\x64\x62\x5f\x6e\x61\155\x65\163"][$key]); } } goto NBVIr; khUR4: } public function add_key($key, $primary = FALSE) { goto EiCFn; nzE6V: if ($primary === TRUE) { $this->primary_keys[] = $key; } else { $this->keys[] = $key; } goto Wjh_L; EiCFn: if ($primary === TRUE && is_array($key)) { foreach ($key as $one) { $this->add_key($one, $primary); } return $this; } goto nzE6V; Wjh_L: return $this; goto zIUiU; zIUiU: } public function add_field($field) { goto tKPIi; fjCP7: return $this; goto Okl4K; tKPIi: if (is_string($field)) { if ($field === "\151\144") { $this->add_field(array("\151\x64" => array("\x74\x79\160\x65" => "\x49\x4e\124", "\143\157\156\x73\x74\x72\x61\151\x6e\164" => 9, "\141\165\x74\x6f\137\x69\x6e\143\x72\x65\155\145\x6e\x74" => TRUE))); $this->add_key("\x69\144", TRUE); } else { if (strpos($field, "\x20") === FALSE) { show_error("\106\151\x65\x6c\144\x20\x69\x6e\x66\x6f\x72\x6d\x61\164\x69\157\x6e\x20\x69\163\x20\x72\145\161\x75\x69\162\145\144\40\146\x6f\x72\40\164\x68\141\164\x20\157\160\x65\x72\141\x74\151\x6f\156\x2e"); } $this->fields[] = $field; } } goto L_e0J; L_e0J: if (is_array($field)) { $this->fields = array_merge($this->fields, $field); } goto fjCP7; Okl4K: } public function create_table($table, $if_not_exists = FALSE, array $attributes = array()) { goto zrGF5; xHbSG: if (($result = $this->db->query($sql)) !== FALSE) { if (isset($this->db->data_cache["\x74\141\x62\154\145\x5f\156\141\x6d\145\x73"])) { $this->db->data_cache["\x74\x61\142\154\x65\x5f\156\141\x6d\x65\163"][] = $table; } if (!empty($this->keys)) { for ($i = 0, $sqls = $this->_process_indexes($table), $c = count($sqls); $i < $c; $i++) { $this->db->query($sqls[$i]); } } } goto XM00K; zrGF5: if ($table === '') { show_error("\101\x20\164\141\x62\x6c\x65\x20\x6e\x61\155\145\40\x69\x73\x20\x72\x65\161\x75\x69\x72\x65\x64\x20\x66\157\162\40\x74\150\141\x74\40\x6f\160\x65\x72\x61\164\x69\157\x6e\x2e"); } else { $table = $this->db->dbprefix . $table; } goto k38iL; XM00K: $this->_reset(); goto OyZSa; qYTw3: $sql = $this->_create_table($table, $if_not_exists, $attributes); goto EPUxU; k38iL: if (count($this->fields) === 0) { show_error("\106\x69\145\154\x64\40\x69\x6e\146\157\x72\155\x61\164\151\x6f\156\x20\151\x73\x20\x72\x65\161\165\151\x72\145\x64\56"); } goto qYTw3; OyZSa: return $result; goto qBU0G; EPUxU: if (is_bool($sql)) { $this->_reset(); if ($sql === FALSE) { return $this->db->db_debug ? $this->db->display_error("\144\142\137\165\156\163\165\160\160\157\x72\164\x65\x64\137\x66\145\141\x74\x75\162\x65") : FALSE; } } goto xHbSG; qBU0G: } protected function _create_table($table, $if_not_exists, $attributes) { goto vg1pB; vg1pB: if ($if_not_exists === TRUE && $this->_create_table_if === FALSE) { if ($this->db->table_exists($table)) { return TRUE; } $if_not_exists = FALSE; } goto vbJjw; QnlOm: for ($i = 0, $c = count($columns); $i < $c; $i++) { $columns[$i] = $columns[$i]["\137\x6c\x69\164\145\162\141\154"] !== FALSE ? "\12\11" . $columns[$i]["\x5f\x6c\x69\164\145\162\141\154"] : "\xa\x9" . $this->_process_column($columns[$i]); } goto SuPbv; DndWc: $columns = $this->_process_fields(TRUE); goto QnlOm; vbJjw: $sql = $if_not_exists ? sprintf($this->_create_table_if, $this->db->escape_identifiers($table)) : "\x43\122\x45\101\124\x45\x20\124\x41\x42\x4c\x45"; goto DndWc; SuPbv: $columns = implode("\x2c", $columns) . $this->_process_primary_keys($table); goto hpZbD; wHFrE: return $sql; goto IsuUb; hpZbD: if ($this->_create_table_keys === TRUE) { $columns .= $this->_process_indexes($table); } goto mlnih; mlnih: $sql = sprintf($this->_create_table . "\45\x73", $sql, $this->db->escape_identifiers($table), $columns, $this->_create_table_attr($attributes)); goto wHFrE; IsuUb: } protected function _create_table_attr($attributes) { goto gbc8J; gbc8J: $sql = ''; goto ZL1QU; BjoyU: return $sql; goto Pk_cM; ZL1QU: foreach (array_keys($attributes) as $key) { if (is_string($key)) { $sql .= "\x20" . strtoupper($key) . "\40" . $attributes[$key]; } } goto BjoyU; Pk_cM: } public function drop_table($table_name, $if_exists = FALSE) { goto J7R04; Rv7Ry: if ($query && !empty($this->db->data_cache["\x74\141\x62\x6c\145\137\156\x61\x6d\x65\x73"])) { $key = array_search(strtolower($this->db->dbprefix . $table_name), array_map("\163\x74\162\x74\x6f\x6c\157\167\145\x72", $this->db->data_cache["\164\141\x62\154\145\137\x6e\141\155\145\163"]), TRUE); if ($key !== FALSE) { unset($this->db->data_cache["\x74\x61\142\x6c\x65\x5f\156\141\x6d\x65\163"][$key]); } } goto spdMa; wrFgT: if (($query = $this->_drop_table($this->db->dbprefix . $table_name, $if_exists)) === TRUE) { return TRUE; } goto CbnlS; CbnlS: $query = $this->db->query($query); goto Rv7Ry; J7R04: if ($table_name === '') { return $this->db->db_debug ? $this->db->display_error("\144\142\x5f\164\141\142\x6c\145\137\156\141\155\145\137\162\145\x71\165\x69\x72\x65\x64") : FALSE; } goto wrFgT; spdMa: return $query; goto wLv3G; wLv3G: } protected function _drop_table($table, $if_exists) { goto YcuFO; tmr2m: return $sql . "\x20" . $this->db->escape_identifiers($table); goto npriy; iWgcF: if ($if_exists) { if ($this->_drop_table_if === FALSE) { if (!$this->db->table_exists($table)) { return TRUE; } } else { $sql = sprintf($this->_drop_table_if, $this->db->escape_identifiers($table)); } } goto tmr2m; YcuFO: $sql = "\x44\x52\x4f\x50\40\x54\101\x42\114\x45"; goto iWgcF; npriy: } public function rename_table($table_name, $new_table_name) { goto ppRsP; XN6H_: return $result; goto VZsuF; O6WDN: if ($result && !empty($this->db->data_cache["\x74\x61\x62\154\145\x5f\x6e\141\155\145\163"])) { $key = array_search(strtolower($this->db->dbprefix . $table_name), array_map("\163\164\162\x74\157\x6c\x6f\167\x65\x72", $this->db->data_cache["\164\141\142\x6c\x65\137\x6e\141\x6d\x65\163"]), TRUE); if ($key !== FALSE) { $this->db->data_cache["\164\141\142\x6c\x65\x5f\156\x61\155\145\163"][$key] = $this->db->dbprefix . $new_table_name; } } goto XN6H_; ppRsP: if ($table_name === '' or $new_table_name === '') { show_error("\101\x20\164\x61\142\154\145\40\x6e\x61\155\145\40\151\x73\40\162\145\x71\x75\151\162\145\x64\40\x66\157\162\40\x74\x68\141\x74\x20\x6f\x70\x65\162\x61\164\x69\157\x6e\x2e"); return FALSE; } elseif ($this->_rename_table === FALSE) { return $this->db->db_debug ? $this->db->display_error("\144\x62\x5f\x75\156\x73\165\160\x70\x6f\162\164\x65\144\x5f\x66\145\141\164\165\x72\145") : FALSE; } goto f2JCo; f2JCo: $result = $this->db->query(sprintf($this->_rename_table, $this->db->escape_identifiers($this->db->dbprefix . $table_name), $this->db->escape_identifiers($this->db->dbprefix . $new_table_name))); goto O6WDN; VZsuF: } public function add_column($table, $field, $_after = NULL) { goto ZR0P6; v7Dkg: for ($i = 0, $c = count($sqls); $i < $c; $i++) { if ($this->db->query($sqls[$i]) === FALSE) { return FALSE; } } goto F9aE9; F9aE9: return TRUE; goto EfmLV; G9JQB: $this->_reset(); goto srrsR; NVpqW: foreach (array_keys($field) as $k) { if ($_after !== NULL && is_array($field[$k]) && !isset($field[$k]["\141\x66\164\145\162"])) { $field[$k]["\x61\x66\x74\145\162"] = $_after; } $this->add_field(array($k => $field[$k])); } goto AT9tw; ZR0P6: is_array($field) or $field = array($field); goto NVpqW; srrsR: if ($sqls === FALSE) { return $this->db->db_debug ? $this->db->display_error("\x64\142\137\x75\156\x73\165\x70\160\157\x72\x74\x65\x64\x5f\x66\x65\141\x74\x75\162\x65") : FALSE; } goto v7Dkg; AT9tw: $sqls = $this->_alter_table("\x41\x44\104", $this->db->dbprefix . $table, $this->_process_fields()); goto G9JQB; EfmLV: } public function drop_column($table, $column_name) { goto LWiru; LWiru: $sql = $this->_alter_table("\x44\122\x4f\x50", $this->db->dbprefix . $table, $column_name); goto Hu1qb; d7soT: return $this->db->query($sql); goto w_KMK; Hu1qb: if ($sql === FALSE) { return $this->db->db_debug ? $this->db->display_error("\x64\x62\x5f\x75\156\163\x75\x70\x70\157\x72\164\145\144\137\x66\145\141\164\x75\x72\145") : FALSE; } goto d7soT; w_KMK: } public function modify_column($table, $field) { goto q1_I4; q1_I4: is_array($field) or $field = array($field); goto jIalD; jIalD: foreach (array_keys($field) as $k) { $this->add_field(array($k => $field[$k])); } goto atiJU; NUxo4: for ($i = 0, $c = count($sqls); $i < $c; $i++) { if ($this->db->query($sqls[$i]) === FALSE) { return FALSE; } } goto aPdrP; Ta2sm: if ($sqls === FALSE) { return $this->db->db_debug ? $this->db->display_error("\x64\142\x5f\165\156\163\165\x70\x70\157\x72\x74\145\x64\x5f\146\x65\x61\x74\x75\x72\145") : FALSE; } goto NUxo4; atiJU: if (count($this->fields) === 0) { show_error("\x46\x69\x65\x6c\144\40\151\156\146\157\x72\155\141\164\x69\x6f\x6e\40\151\x73\x20\162\x65\x71\x75\151\162\145\144\x2e"); } goto MsGX2; MsGX2: $sqls = $this->_alter_table("\x43\110\101\x4e\107\x45", $this->db->dbprefix . $table, $this->_process_fields()); goto oMBE7; oMBE7: $this->_reset(); goto Ta2sm; aPdrP: return TRUE; goto Ch1yM; Ch1yM: } protected function _alter_table($alter_type, $table, $field) { goto fSK7A; fSK7A: $sql = "\x41\x4c\124\105\122\x20\124\101\x42\114\105\40" . $this->db->escape_identifiers($table) . "\x20"; goto pqgyB; Me7PJ: $sqls = array(); goto uBYly; pqgyB: if ($alter_type === "\104\122\117\120") { return $sql . "\x44\122\117\x50\40\103\117\114\125\x4d\x4e\x20" . $this->db->escape_identifiers($field); } goto vhC3H; vhC3H: $sql .= $alter_type === "\101\x44\104" ? "\x41\x44\x44\40" : $alter_type . "\x20\103\117\x4c\125\x4d\x4e\40"; goto Me7PJ; Qxzp5: return $sqls; goto VccIA; uBYly: for ($i = 0, $c = count($field); $i < $c; $i++) { $sqls[] = $sql . ($field[$i]["\137\x6c\x69\x74\145\162\x61\x6c"] !== FALSE ? $field[$i]["\137\x6c\x69\x74\x65\x72\141\x6c"] : $this->_process_column($field[$i])); } goto Qxzp5; VccIA: } protected function _process_fields($create_table = FALSE) { goto XDNS8; XDNS8: $fields = array(); goto Zfafa; DJvsZ: return $fields; goto CsmX5; Zfafa: foreach ($this->fields as $key => $attributes) { goto fIP7w; uvmU4: isset($attributes["\x54\x59\120\105"]) && $this->_attr_type($attributes); goto spNxo; BLf3y: if (isset($attributes["\x4e\125\114\x4c"])) { if ($attributes["\116\125\x4c\114"] === TRUE) { $field["\x6e\165\154\154"] = empty($this->_null) ? '' : "\x20" . $this->_null; } else { $field["\156\x75\x6c\154"] = "\40\x4e\117\x54\x20\116\x55\114\114"; } } elseif ($create_table === TRUE) { $field["\156\x75\x6c\154"] = "\x20\116\117\124\x20\x4e\125\114\x4c"; } goto L8QzZ; S1ef5: if ($create_table === TRUE && empty($attributes["\x54\131\120\x45"])) { continue; } goto uvmU4; VSQde: if (isset($attributes["\x43\117\115\x4d\105\x4e\124"])) { $field["\x63\x6f\155\x6d\x65\x6e\164"] = $this->db->escape($attributes["\103\x4f\115\115\x45\x4e\124"]); } goto zvi7M; zTgbv: if ($create_table === FALSE) { if (isset($attributes["\x41\x46\x54\x45\x52"])) { $field["\x61\146\164\145\x72"] = $attributes["\101\x46\124\x45\x52"]; } elseif (isset($attributes["\106\111\x52\x53\124"])) { $field["\x66\x69\162\163\164"] = (bool) $attributes["\x46\111\122\123\x54"]; } } goto LlwmI; QDJ6X: isset($attributes["\x54\131\x50\105"]) && $this->_attr_unsigned($attributes, $field); goto zTgbv; LlwmI: $this->_attr_default($attributes, $field); goto BLf3y; L8QzZ: $this->_attr_auto_increment($attributes, $field); goto ss23e; fIP7w: if (is_int($key) && !is_array($attributes)) { $fields[] = array("\x5f\x6c\x69\164\145\x72\141\x6c" => $attributes); continue; } goto ZnmS5; ZnmS5: $attributes = array_change_key_case($attributes, CASE_UPPER); goto S1ef5; zvi7M: if (isset($attributes["\x54\x59\x50\x45"]) && !empty($attributes["\x43\117\116\x53\x54\x52\x41\111\x4e\x54"])) { switch (strtoupper($attributes["\124\131\120\105"])) { case "\105\116\x55\115": case "\123\105\x54": $attributes["\103\117\x4e\x53\124\x52\101\111\116\x54"] = $this->db->escape($attributes["\x43\117\116\123\x54\x52\x41\111\116\124"]); default: $field["\x6c\145\x6e\x67\x74\x68"] = is_array($attributes["\x43\x4f\116\123\124\122\x41\x49\116\124"]) ? "\50" . implode("\x2c", $attributes["\103\117\116\x53\x54\x52\x41\111\116\124"]) . "\51" : "\50" . $attributes["\x43\117\x4e\123\x54\x52\101\x49\x4e\124"] . "\x29"; break; } } goto m__pX; spNxo: $field = array("\156\141\x6d\145" => $key, "\x6e\x65\167\x5f\156\141\155\x65" => isset($attributes["\116\x41\115\x45"]) ? $attributes["\x4e\101\x4d\105"] : NULL, "\164\x79\x70\x65" => isset($attributes["\x54\131\x50\105"]) ? $attributes["\124\131\120\105"] : NULL, "\154\145\x6e\147\164\x68" => '', "\x75\156\163\151\147\x6e\x65\144" => '', "\x6e\x75\154\x6c" => NULL, "\165\156\151\x71\165\x65" => '', "\x64\145\146\141\165\x6c\164" => '', "\x61\x75\x74\x6f\137\151\x6e\x63\162\x65\155\145\x6e\164" => '', "\137\x6c\151\164\145\x72\x61\154" => FALSE); goto QDJ6X; m__pX: $fields[] = $field; goto Rtc06; ss23e: $this->_attr_unique($attributes, $field); goto VSQde; Rtc06: } goto DJvsZ; CsmX5: } protected function _process_column($field) { return $this->db->escape_identifiers($field["\156\141\x6d\x65"]) . "\40" . $field["\164\171\160\x65"] . $field["\154\x65\156\x67\x74\x68"] . $field["\165\156\163\151\x67\x6e\x65\144"] . $field["\144\x65\146\x61\165\x6c\x74"] . $field["\156\x75\x6c\154"] . $field["\141\165\x74\157\137\x69\156\x63\x72\x65\155\145\x6e\x74"] . $field["\x75\156\151\x71\x75\x65"]; } protected function _attr_type(&$attributes) { } protected function _attr_unsigned(&$attributes, &$field) { goto VZezZ; dZM3W: $attributes["\x55\116\x53\x49\107\x4e\x45\x44"] = FALSE; goto YfbWD; VZezZ: if (empty($attributes["\125\116\x53\x49\x47\116\x45\104"]) or $attributes["\x55\x4e\123\111\x47\116\105\104"] !== TRUE) { return; } goto dZM3W; YfbWD: if (is_array($this->_unsigned)) { foreach (array_keys($this->_unsigned) as $key) { if (is_int($key) && strcasecmp($attributes["\x54\x59\120\105"], $this->_unsigned[$key]) === 0) { $field["\165\156\x73\151\147\x6e\x65\144"] = "\40\x55\x4e\x53\x49\x47\116\x45\x44"; return; } elseif (is_string($key) && strcasecmp($attributes["\124\x59\x50\105"], $key) === 0) { $field["\164\171\160\x65"] = $key; return; } } return; } goto KEG2y; KEG2y: $field["\x75\x6e\x73\151\147\156\x65\144"] = $this->_unsigned === TRUE ? "\x20\x55\x4e\123\111\x47\116\x45\104" : ''; goto Af5BX; Af5BX: } protected function _attr_default(&$attributes, &$field) { if ($this->_default === FALSE) { return; } if (array_key_exists("\104\x45\x46\101\x55\x4c\124", $attributes)) { if ($attributes["\104\105\x46\x41\x55\x4c\x54"] === NULL) { goto rwto1; L0AzX: $field["\x6e\x75\154\x6c"] = empty($this->_null) ? '' : "\40" . $this->_null; goto wQLPN; rwto1: $field["\144\145\x66\141\165\154\x74"] = empty($this->_null) ? '' : $this->_default . $this->_null; goto Vae3p; Vae3p: $attributes["\116\x55\114\x4c"] = TRUE; goto L0AzX; wQLPN: } else { $field["\x64\145\x66\x61\165\x6c\164"] = $this->_default . $this->db->escape($attributes["\104\105\x46\101\x55\x4c\124"]); } } } protected function _attr_unique(&$attributes, &$field) { if (!empty($attributes["\125\116\111\x51\x55\105"]) && $attributes["\x55\116\111\x51\x55\x45"] === TRUE) { $field["\165\x6e\151\161\165\x65"] = "\40\x55\x4e\x49\x51\x55\x45"; } } protected function _attr_auto_increment(&$attributes, &$field) { if (!empty($attributes["\101\125\124\117\137\111\x4e\x43\122\x45\x4d\105\x4e\124"]) && $attributes["\x41\x55\124\x4f\x5f\x49\x4e\x43\122\x45\x4d\x45\116\x54"] === TRUE && stripos($field["\164\x79\x70\145"], "\151\x6e\x74") !== FALSE) { $field["\141\x75\x74\x6f\137\151\156\143\x72\145\155\x65\x6e\x74"] = "\40\101\125\x54\x4f\137\111\x4e\103\122\x45\115\105\116\x54"; } } protected function _process_primary_keys($table) { goto oEjA4; ePIm6: for ($i = 0, $c = count($this->primary_keys); $i < $c; $i++) { if (!isset($this->fields[$this->primary_keys[$i]])) { unset($this->primary_keys[$i]); } } goto y1_L4; y1_L4: if (count($this->primary_keys) > 0) { $sql .= "\54\xa\x9\x43\117\x4e\123\x54\122\101\111\x4e\x54\40" . $this->db->escape_identifiers("\160\153\x5f" . $table) . "\x20\120\x52\111\115\x41\122\131\x20\113\105\x59\x28" . implode("\x2c\40", $this->db->escape_identifiers($this->primary_keys)) . "\x29"; } goto yaScC; oEjA4: $sql = ''; goto ePIm6; yaScC: return $sql; goto Ta2Af; Ta2Af: } protected function _process_indexes($table) { goto ZSOIR; E0266: return $sqls; goto C7lCv; Hx5IX: for ($i = 0, $c = count($this->keys); $i < $c; $i++) { if (is_array($this->keys[$i])) { for ($i2 = 0, $c2 = count($this->keys[$i]); $i2 < $c2; $i2++) { if (!isset($this->fields[$this->keys[$i][$i2]])) { unset($this->keys[$i][$i2]); continue; } } } elseif (!isset($this->fields[$this->keys[$i]])) { unset($this->keys[$i]); continue; } is_array($this->keys[$i]) or $this->keys[$i] = array($this->keys[$i]); $sqls[] = "\103\122\x45\x41\x54\x45\x20\111\116\104\x45\x58\40" . $this->db->escape_identifiers($table . "\137" . implode("\x5f", $this->keys[$i])) . "\x20\x4f\x4e\x20" . $this->db->escape_identifiers($table) . "\40\x28" . implode("\x2c\x20", $this->db->escape_identifiers($this->keys[$i])) . "\51\73"; } goto E0266; ZSOIR: $sqls = array(); goto Hx5IX; C7lCv: } protected function _reset() { $this->fields = $this->keys = $this->primary_keys = array(); } }
