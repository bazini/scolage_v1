<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\x53\x45\120\x41\x54\x48") or exit("\x4e\x6f\x20\x64\151\x72\x65\x63\x74\40\x73\x63\162\151\160\164\40\x61\x63\143\x65\x73\163\x20\141\154\154\157\x77\x65\x64"); class CI_Pagination { protected $base_url = ''; protected $prefix = ''; protected $suffix = ''; protected $total_rows = 0; protected $num_links = 2; public $per_page = 10; public $cur_page = 0; protected $use_page_numbers = FALSE; protected $first_link = "\x26\154\163\141\x71\x75\157\73\x20\106\151\162\x73\164"; protected $next_link = "\46\x67\164\73"; protected $prev_link = "\46\x6c\164\73"; protected $last_link = "\114\141\163\164\40\x26\x72\163\x61\161\x75\157\x3b"; protected $uri_segment = 0; protected $full_tag_open = ''; protected $full_tag_close = ''; protected $first_tag_open = ''; protected $first_tag_close = ''; protected $last_tag_open = ''; protected $last_tag_close = ''; protected $first_url = ''; protected $cur_tag_open = "\74\x73\x74\162\x6f\x6e\x67\76"; protected $cur_tag_close = "\74\57\x73\x74\162\157\x6e\147\x3e"; protected $next_tag_open = ''; protected $next_tag_close = ''; protected $prev_tag_open = ''; protected $prev_tag_close = ''; protected $num_tag_open = ''; protected $num_tag_close = ''; protected $page_query_string = FALSE; protected $query_string_segment = "\x70\145\162\x5f\160\141\147\x65"; protected $display_pages = TRUE; protected $_attributes = ''; protected $_link_types = array(); protected $reuse_query_string = FALSE; protected $use_global_url_suffix = FALSE; protected $data_page_attr = "\144\x61\164\x61\55\x63\x69\55\160\x61\147\x69\156\x61\164\151\157\x6e\x2d\160\141\x67\x65"; protected $CI; public function __construct($params = array()) { goto nv7qh; DhrBd: $this->CI->load->language("\160\141\x67\151\x6e\141\164\151\x6f\x6e"); goto waEPP; nv7qh: $this->CI =& get_instance(); goto DhrBd; waEPP: foreach (array("\146\151\162\163\x74\x5f\154\151\156\x6b", "\156\x65\170\x74\x5f\154\x69\x6e\x6b", "\x70\x72\145\166\137\154\x69\x6e\x6b", "\154\x61\163\x74\x5f\x6c\x69\156\x6b") as $key) { if (($val = $this->CI->lang->line("\160\141\147\151\156\141\164\151\x6f\156\137" . $key)) !== FALSE) { $this->{$key} = $val; } } goto N7hm5; N7hm5: isset($params["\141\x74\164\x72\x69\x62\x75\164\145\163"]) or $params["\x61\164\x74\162\x69\x62\x75\164\145\163"] = array(); goto fSBiu; HsNKO: log_message("\151\x6e\x66\x6f", "\120\141\147\x69\x6e\141\164\x69\157\x6e\x20\x43\x6c\141\x73\163\x20\x49\x6e\151\x74\x69\x61\154\x69\x7a\145\x64"); goto s1KWP; fSBiu: $this->initialize($params); goto HsNKO; s1KWP: } public function initialize(array $params = array()) { goto Q01LQ; HloGL: if ($this->CI->config->item("\145\x6e\x61\x62\154\x65\137\x71\x75\145\x72\x79\137\x73\x74\x72\151\156\147\x73") === TRUE) { $this->page_query_string = TRUE; } goto kryKB; Ad2D1: return $this; goto UB3do; iRkxK: if (isset($params["\x61\x6e\143\x68\157\162\137\x63\154\x61\x73\163"])) { empty($params["\141\156\x63\150\x6f\162\x5f\x63\154\141\163\x73"]) or $attributes["\x63\154\141\163\163"] = $params["\x61\x6e\143\150\x6f\x72\x5f\x63\154\x61\x73\163"]; unset($params["\141\x6e\143\x68\157\x72\x5f\x63\154\x61\163\x73"]); } goto oK7lB; Q01LQ: if (isset($params["\x61\164\164\x72\x69\142\165\164\145\x73"]) && is_array($params["\141\164\x74\x72\x69\142\165\164\145\x73"])) { $this->_parse_attributes($params["\141\x74\164\162\x69\142\165\164\145\x73"]); unset($params["\x61\164\x74\x72\x69\142\x75\x74\145\163"]); } goto iRkxK; oK7lB: foreach ($params as $key => $val) { if (property_exists($this, $key)) { $this->{$key} = $val; } } goto HloGL; kryKB: if ($this->use_global_url_suffix === TRUE) { $this->suffix = $this->CI->config->item("\165\x72\154\137\163\x75\146\146\151\x78"); } goto Ad2D1; UB3do: } public function create_links() { goto auKo_; u14ax: $query_string_sep = strpos($base_url, "\x3f") === FALSE ? "\77" : "\46\141\x6d\160\73"; goto rEeVK; GdSGp: $num_pages = (int) ceil($this->total_rows / $this->per_page); goto beDe2; BHcfO: if ($this->prev_link !== FALSE && $this->cur_page !== 1) { goto joqfd; vwQzv: if ($i === $base_page) { $output .= $this->prev_tag_open . "\74\141\x20\150\162\x65\146\x3d\42" . $first_url . "\42" . $attributes . $this->_attr_rel("\160\162\145\x76") . "\76" . $this->prev_link . "\x3c\x2f\x61\x3e" . $this->prev_tag_close; } else { $append = $this->prefix . $i . $this->suffix; $output .= $this->prev_tag_open . "\x3c\141\40\150\162\145\146\x3d\42" . $base_url . $append . "\x22" . $attributes . $this->_attr_rel("\x70\x72\145\x76") . "\x3e" . $this->prev_link . "\74\57\141\x3e" . $this->prev_tag_close; } goto tyi90; I46ZG: $attributes = sprintf("\x25\x73\40\x25\163\x3d\42\x25\144\x22", $this->_attributes, $this->data_page_attr, $this->cur_page - 1); goto vwQzv; joqfd: $i = $this->use_page_numbers ? $uri_page_number - 1 : $uri_page_number - $this->per_page; goto I46ZG; tyi90: } goto WGLA9; Ykgnb: $output = ''; goto bS2I3; beDe2: if ($num_pages === 1) { return ''; } goto qdRlv; kz6uX: $first_url = $this->first_url; goto Ecwqw; UYVVr: if ($this->reuse_query_string === TRUE) { $get = $this->CI->input->get(); unset($get["\x63"], $get["\x6d"], $get[$this->query_string_segment]); } else { $get = array(); } goto tqbco; auKo_: if ($this->total_rows == 0 or $this->per_page == 0) { return ''; } goto GdSGp; D8z6V: $output = preg_replace("\43\50\133\x5e\x3a\x22\135\51\x2f\57\53\43", "\x5c\61\57", $output); goto VAu4g; z9LC_: $base_page = $this->use_page_numbers ? 1 : 0; goto GGgJo; bxrQt: if ($this->last_link !== FALSE && $this->cur_page + $this->num_links + !$this->num_links < $num_pages) { goto PgZkR; wHG7F: $attributes = sprintf("\45\x73\40\x25\163\x3d\42\x25\144\42", $this->_attributes, $this->data_page_attr, $num_pages); goto iNczl; iNczl: $output .= $this->last_tag_open . "\x3c\x61\x20\x68\162\145\x66\75\x22" . $base_url . $this->prefix . $i . $this->suffix . "\x22" . $attributes . "\x3e" . $this->last_link . "\74\57\x61\x3e" . $this->last_tag_close; goto m9dSc; PgZkR: $i = $this->use_page_numbers ? $num_pages : $num_pages * $this->per_page - $this->per_page; goto wHG7F; m9dSc: } goto D8z6V; qdRlv: $this->num_links = (int) $this->num_links; goto y9MjM; GGgJo: if ($this->page_query_string === TRUE) { $this->cur_page = $this->CI->input->get($this->query_string_segment); } elseif (empty($this->cur_page)) { goto Ur0_s; Kd2Ky: $this->cur_page = $this->CI->uri->segment($this->uri_segment); goto YtsWK; Ur0_s: if ($this->uri_segment === 0) { $this->uri_segment = count($this->CI->uri->segment_array()); } goto Kd2Ky; YtsWK: if ($this->prefix !== '' or $this->suffix !== '') { $this->cur_page = str_replace(array($this->prefix, $this->suffix), '', $this->cur_page); } goto kVGo9; kVGo9: } else { $this->cur_page = (string) $this->cur_page; } goto hCeXw; bS2I3: if ($this->first_link !== FALSE && $this->cur_page > $this->num_links + 1 + !$this->num_links) { $attributes = sprintf("\x25\x73\40\x25\163\x3d\x22\45\x64\x22", $this->_attributes, $this->data_page_attr, 1); $output .= $this->first_tag_open . "\x3c\x61\x20\150\162\x65\x66\75\x22" . $first_url . "\x22" . $attributes . $this->_attr_rel("\163\164\141\x72\x74") . "\76" . $this->first_link . "\x3c\57\141\76" . $this->first_tag_close; } goto BHcfO; BLTlU: $end = $this->cur_page + $this->num_links < $num_pages ? $this->cur_page + $this->num_links : $num_pages; goto Ykgnb; Ecwqw: $query_string = ''; goto u14ax; VAu4g: return $this->full_tag_open . $output . $this->full_tag_close; goto Nb9wq; fM3L2: $start = $this->cur_page - $this->num_links > 0 ? $this->cur_page - ($this->num_links - 1) : 1; goto BLTlU; tqbco: $base_url = trim($this->base_url); goto kz6uX; g4ZCL: $uri_page_number = $this->cur_page; goto q_bmm; q_bmm: if (!$this->use_page_numbers) { $this->cur_page = (int) floor($this->cur_page / $this->per_page + 1); } goto fM3L2; y9MjM: if ($this->num_links < 0) { show_error("\131\x6f\x75\x72\40\156\x75\x6d\x62\145\x72\x20\x6f\146\x20\154\x69\156\153\163\40\155\165\x73\x74\x20\142\145\40\x61\40\x6e\x6f\x6e\55\156\x65\x67\141\x74\151\x76\x65\x20\156\165\x6d\x62\x65\162\x2e"); } goto UYVVr; m2XJR: if ($this->next_link !== FALSE && $this->cur_page < $num_pages) { goto C8JJf; C8JJf: $i = $this->use_page_numbers ? $this->cur_page + 1 : $this->cur_page * $this->per_page; goto Fhm_U; I7f3U: $output .= $this->next_tag_open . "\74\x61\40\150\162\145\146\x3d\x22" . $base_url . $this->prefix . $i . $this->suffix . "\x22" . $attributes . $this->_attr_rel("\x6e\x65\x78\164") . "\76" . $this->next_link . "\x3c\x2f\x61\76" . $this->next_tag_close; goto tZRIa; Fhm_U: $attributes = sprintf("\45\163\x20\45\163\75\42\x25\x64\x22", $this->_attributes, $this->data_page_attr, $this->cur_page + 1); goto I7f3U; tZRIa: } goto bxrQt; rEeVK: if ($this->page_query_string === TRUE) { if ($first_url === '') { $first_url = $base_url; if (!empty($get)) { $first_url .= $query_string_sep . http_build_query($get); } } $base_url .= $query_string_sep . http_build_query(array_merge($get, array($this->query_string_segment => ''))); } else { goto rqoBm; MWX80: if ($this->reuse_query_string === TRUE && ($base_query_pos = strpos($base_url, "\77")) !== FALSE) { $base_url = substr($base_url, 0, $base_query_pos); } goto ix9hR; ix9hR: if ($first_url === '') { $first_url = $base_url . $query_string; } goto n_TfN; n_TfN: $base_url = rtrim($base_url, "\57") . "\57"; goto qQJ5A; rqoBm: if (!empty($get)) { $query_string = $query_string_sep . http_build_query($get); $this->suffix .= $query_string; } goto MWX80; qQJ5A: } goto z9LC_; WGLA9: if ($this->display_pages !== FALSE) { for ($loop = $start - 1; $loop <= $end; $loop++) { $i = $this->use_page_numbers ? $loop : $loop * $this->per_page - $this->per_page; $attributes = sprintf("\45\163\40\45\x73\75\42\45\144\x22", $this->_attributes, $this->data_page_attr, $loop); if ($i >= $base_page) { if ($this->cur_page === $loop) { $output .= $this->cur_tag_open . $loop . $this->cur_tag_close; } elseif ($i === $base_page) { $output .= $this->num_tag_open . "\x3c\x61\x20\150\x72\x65\x66\x3d\42" . $first_url . "\42" . $attributes . $this->_attr_rel("\x73\164\x61\x72\x74") . "\76" . $loop . "\74\57\x61\x3e" . $this->num_tag_close; } else { $append = $this->prefix . $i . $this->suffix; $output .= $this->num_tag_open . "\x3c\x61\x20\x68\x72\x65\146\x3d\42" . $base_url . $append . "\x22" . $attributes . "\x3e" . $loop . "\74\x2f\x61\x3e" . $this->num_tag_close; } } } } goto m2XJR; LSGVH: if ($this->use_page_numbers) { if ($this->cur_page > $num_pages) { $this->cur_page = $num_pages; } } elseif ($this->cur_page > $this->total_rows) { $this->cur_page = ($num_pages - 1) * $this->per_page; } goto g4ZCL; hCeXw: if (!ctype_digit($this->cur_page) or $this->use_page_numbers && (int) $this->cur_page === 0) { $this->cur_page = $base_page; } else { $this->cur_page = (int) $this->cur_page; } goto LSGVH; Nb9wq: } protected function _parse_attributes($attributes) { goto Oiefu; Mhoou: $this->_attributes = ''; goto mH3Dt; esfBw: unset($attributes["\162\x65\x6c"]); goto Mhoou; mH3Dt: foreach ($attributes as $key => $value) { $this->_attributes .= "\x20" . $key . "\x3d\42" . $value . "\42"; } goto QEdSs; N2e6n: $this->_link_types = $attributes["\x72\145\x6c"] ? array("\x73\x74\x61\162\x74" => "\x73\x74\141\x72\x74", "\x70\x72\145\166" => "\x70\162\x65\166", "\156\x65\170\x74" => "\x6e\145\170\164") : array(); goto esfBw; Oiefu: isset($attributes["\162\x65\154"]) or $attributes["\162\145\x6c"] = TRUE; goto N2e6n; QEdSs: } protected function _attr_rel($type) { if (isset($this->_link_types[$type])) { unset($this->_link_types[$type]); return "\40\x72\x65\154\75\x22" . $type . "\42"; } return ''; } }
