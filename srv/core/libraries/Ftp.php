<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\123\105\x50\101\124\110") or exit("\x4e\x6f\40\144\151\x72\145\x63\x74\x20\x73\143\162\151\160\164\40\x61\143\x63\145\163\163\40\x61\x6c\154\x6f\x77\145\144"); class CI_FTP { public $hostname = ''; public $username = ''; public $password = ''; public $port = 21; public $passive = TRUE; public $debug = FALSE; protected $conn_id; public function __construct($config = array()) { empty($config) or $this->initialize($config); log_message("\151\x6e\x66\x6f", "\x46\x54\120\x20\x43\x6c\141\163\x73\40\x49\x6e\151\164\151\141\154\x69\172\x65\144"); } public function initialize($config = array()) { foreach ($config as $key => $val) { if (isset($this->{$key})) { $this->{$key} = $val; } } $this->hostname = preg_replace("\174\56\53\77\x3a\x2f\x2f\x7c", '', $this->hostname); } public function connect($config = array()) { goto wvKgq; k3Srr: return TRUE; goto hxJgF; Qitx8: if (FALSE === ($this->conn_id = @ftp_connect($this->hostname, $this->port))) { if ($this->debug === TRUE) { $this->_error("\146\x74\160\x5f\165\x6e\x61\142\154\x65\x5f\164\x6f\x5f\143\x6f\156\156\145\143\x74"); } return FALSE; } goto xLXdW; GegaX: if ($this->passive === TRUE) { ftp_pasv($this->conn_id, TRUE); } goto k3Srr; wvKgq: if (count($config) > 0) { $this->initialize($config); } goto Qitx8; xLXdW: if (!$this->_login()) { if ($this->debug === TRUE) { $this->_error("\x66\164\x70\137\165\x6e\141\142\154\x65\137\164\x6f\137\154\157\x67\151\x6e"); } return FALSE; } goto GegaX; hxJgF: } protected function _login() { return @ftp_login($this->conn_id, $this->username, $this->password); } protected function _is_conn() { if (!is_resource($this->conn_id)) { if ($this->debug === TRUE) { $this->_error("\146\x74\x70\137\156\x6f\137\x63\x6f\156\156\x65\143\164\151\157\x6e"); } return FALSE; } return TRUE; } public function changedir($path, $suppress_debug = FALSE) { goto wtfUq; CPC5T: $result = @ftp_chdir($this->conn_id, $path); goto YDISW; lKGw2: return TRUE; goto Cdlzd; YDISW: if ($result === FALSE) { if ($this->debug === TRUE && $suppress_debug === FALSE) { $this->_error("\x66\x74\160\137\165\156\141\x62\154\145\137\x74\157\x5f\143\150\x61\x6e\147\x65\x64\151\x72"); } return FALSE; } goto lKGw2; wtfUq: if (!$this->_is_conn()) { return FALSE; } goto CPC5T; Cdlzd: } public function mkdir($path, $permissions = NULL) { goto hOuxq; N8rtu: if ($permissions !== NULL) { $this->chmod($path, (int) $permissions); } goto Q0_Rv; DI0IK: $result = @ftp_mkdir($this->conn_id, $path); goto LBz7O; LBz7O: if ($result === FALSE) { if ($this->debug === TRUE) { $this->_error("\146\x74\x70\137\x75\156\141\x62\154\x65\137\164\157\137\155\153\144\x69\162"); } return FALSE; } goto N8rtu; hOuxq: if ($path === '' or !$this->_is_conn()) { return FALSE; } goto DI0IK; Q0_Rv: return TRUE; goto MRaqz; MRaqz: } public function upload($locpath, $rempath, $mode = "\141\165\x74\x6f", $permissions = NULL) { goto RlNxG; RlNxG: if (!$this->_is_conn()) { return FALSE; } goto FlnWT; SQJ5M: $mode = $mode === "\141\x73\x63\151\x69" ? FTP_ASCII : FTP_BINARY; goto hH9dV; W64gR: if ($permissions !== NULL) { $this->chmod($rempath, (int) $permissions); } goto heJbY; hH9dV: $result = @ftp_put($this->conn_id, $rempath, $locpath, $mode); goto Vpd75; FlnWT: if (!file_exists($locpath)) { $this->_error("\x66\164\x70\x5f\x6e\157\137\163\157\165\x72\143\145\x5f\x66\x69\154\145"); return FALSE; } goto H8M4U; heJbY: return TRUE; goto LqW1y; H8M4U: if ($mode === "\141\x75\x74\157") { $ext = $this->_getext($locpath); $mode = $this->_settype($ext); } goto SQJ5M; Vpd75: if ($result === FALSE) { if ($this->debug === TRUE) { $this->_error("\146\164\x70\137\x75\156\141\x62\154\145\137\164\x6f\137\x75\160\x6c\157\x61\x64"); } return FALSE; } goto W64gR; LqW1y: } public function download($rempath, $locpath, $mode = "\141\x75\x74\157") { goto MroVs; s44hi: $result = @ftp_get($this->conn_id, $locpath, $rempath, $mode); goto iRc4r; MroVs: if (!$this->_is_conn()) { return FALSE; } goto vkMX1; vkMX1: if ($mode === "\x61\x75\164\157") { $ext = $this->_getext($rempath); $mode = $this->_settype($ext); } goto wSOel; iRc4r: if ($result === FALSE) { if ($this->debug === TRUE) { $this->_error("\146\x74\160\x5f\165\156\x61\142\x6c\145\137\164\157\137\144\x6f\167\x6e\154\x6f\141\x64"); } return FALSE; } goto qrRl0; qrRl0: return TRUE; goto QH2K_; wSOel: $mode = $mode === "\141\x73\143\151\x69" ? FTP_ASCII : FTP_BINARY; goto s44hi; QH2K_: } public function rename($old_file, $new_file, $move = FALSE) { goto rK_xb; rK_xb: if (!$this->_is_conn()) { return FALSE; } goto Uybye; C106s: if ($result === FALSE) { if ($this->debug === TRUE) { $this->_error("\146\164\x70\x5f\x75\156\141\142\x6c\145\x5f\x74\x6f\x5f" . ($move === FALSE ? "\x72\145\x6e\141\x6d\145" : "\x6d\157\166\145")); } return FALSE; } goto X5pqG; Uybye: $result = @ftp_rename($this->conn_id, $old_file, $new_file); goto C106s; X5pqG: return TRUE; goto yCzNr; yCzNr: } public function move($old_file, $new_file) { return $this->rename($old_file, $new_file, TRUE); } public function delete_file($filepath) { goto YKXsK; YKXsK: if (!$this->_is_conn()) { return FALSE; } goto cjuyB; XnIhl: return TRUE; goto gTtPp; cjuyB: $result = @ftp_delete($this->conn_id, $filepath); goto tUyoI; tUyoI: if ($result === FALSE) { if ($this->debug === TRUE) { $this->_error("\146\164\160\137\165\x6e\x61\142\x6c\x65\x5f\x74\157\137\x64\x65\154\145\164\x65"); } return FALSE; } goto XnIhl; gTtPp: } public function delete_dir($filepath) { goto iTh9u; MXP1w: $list = $this->list_files($filepath); goto yf1BM; SMsSF: if (@ftp_rmdir($this->conn_id, $filepath) === FALSE) { if ($this->debug === TRUE) { $this->_error("\146\164\160\137\165\x6e\141\x62\x6c\x65\137\164\157\137\144\x65\x6c\145\164\x65"); } return FALSE; } goto xMG1Y; xMG1Y: return TRUE; goto j67yw; yf1BM: if (!empty($list)) { for ($i = 0, $c = count($list); $i < $c; $i++) { if (!preg_match("\x23\57\x5c\x2e\134\56\77\44\x23", $list[$i]) && !@ftp_delete($this->conn_id, $list[$i])) { $this->delete_dir($filepath . $list[$i]); } } } goto SMsSF; iTh9u: if (!$this->_is_conn()) { return FALSE; } goto k46cQ; k46cQ: $filepath = preg_replace("\x2f\50\56\x2b\x3f\51\134\57\x2a\x24\x2f", "\x5c\x31\x2f", $filepath); goto MXP1w; j67yw: } public function chmod($path, $perm) { goto l_7yO; Chrr1: if (@ftp_chmod($this->conn_id, $perm, $path) === FALSE) { if ($this->debug === TRUE) { $this->_error("\146\164\160\x5f\x75\x6e\x61\142\154\x65\x5f\x74\157\x5f\x63\x68\155\x6f\144"); } return FALSE; } goto osL_A; l_7yO: if (!$this->_is_conn()) { return FALSE; } goto Chrr1; osL_A: return TRUE; goto GP417; GP417: } public function list_files($path = "\x2e") { return $this->_is_conn() ? ftp_nlist($this->conn_id, $path) : FALSE; } public function mirror($locpath, $rempath) { goto oOzR9; BX34s: return FALSE; goto Feznx; oOzR9: if (!$this->_is_conn()) { return FALSE; } goto hOoYX; hOoYX: if ($fp = @opendir($locpath)) { goto POLSG; GpRgi: return TRUE; goto EujfX; POLSG: if (!$this->changedir($rempath, TRUE) && (!$this->mkdir($rempath) or !$this->changedir($rempath))) { return FALSE; } goto FUHSl; FUHSl: while (FALSE !== ($file = readdir($fp))) { if (is_dir($locpath . $file) && $file[0] !== "\56") { $this->mirror($locpath . $file . "\57", $rempath . $file . "\57"); } elseif ($file[0] !== "\x2e") { goto rRZsa; KLSzD: $mode = $this->_settype($ext); goto ubb_J; ubb_J: $this->upload($locpath . $file, $rempath . $file, $mode); goto s2lOY; rRZsa: $ext = $this->_getext($file); goto KLSzD; s2lOY: } } goto GpRgi; EujfX: } goto BX34s; Feznx: } protected function _getext($filename) { return ($dot = strrpos($filename, "\56")) === FALSE ? "\x74\170\164" : substr($filename, $dot + 1); } protected function _settype($ext) { return in_array($ext, array("\x74\x78\164", "\x74\145\x78\x74", "\x70\150\160", "\x70\150\160\x73", "\160\x68\160\x34", "\x6a\x73", "\143\163\x73", "\x68\164\155", "\x68\x74\155\x6c", "\x70\150\164\155\x6c", "\x73\x68\x74\155\x6c", "\154\157\147", "\x78\x6d\x6c"), TRUE) ? "\141\x73\143\151\x69" : "\142\151\x6e\x61\162\x79"; } public function close() { return $this->_is_conn() ? @ftp_close($this->conn_id) : FALSE; } protected function _error($line) { goto ygTgM; ygTgM: $CI =& get_instance(); goto yB7lt; Uy15d: show_error($CI->lang->line($line)); goto it9BZ; yB7lt: $CI->lang->load("\x66\164\x70"); goto Uy15d; it9BZ: } }
