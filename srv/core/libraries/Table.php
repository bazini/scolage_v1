<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\123\x45\120\101\x54\x48") or exit("\116\x6f\40\144\x69\162\x65\143\164\40\163\x63\x72\151\160\164\40\141\x63\143\x65\163\x73\x20\141\x6c\154\157\167\x65\x64"); class CI_Table { public $rows = array(); public $heading = array(); public $auto_heading = TRUE; public $caption = NULL; public $template = NULL; public $newline = "\12"; public $empty_cells = ''; public $function = NULL; public function __construct($config = array()) { foreach ($config as $key => $val) { $this->template[$key] = $val; } log_message("\x69\x6e\146\157", "\x54\x61\142\154\x65\40\x43\154\x61\x73\163\x20\x49\156\x69\x74\151\141\x6c\151\x7a\x65\144"); } public function set_template($template) { goto KDzU0; KDzU0: if (!is_array($template)) { return FALSE; } goto DJrhj; FdgWG: return TRUE; goto GPXc0; DJrhj: $this->template = $template; goto FdgWG; GPXc0: } public function set_heading($args = array()) { $this->heading = $this->_prep_args(func_get_args()); return $this; } public function make_columns($array = array(), $col_limit = 0) { goto agct8; RK8IA: $new = array(); goto ftSyb; ApfHr: if ($col_limit === 0) { return $array; } goto RK8IA; agct8: if (!is_array($array) or count($array) === 0 or !is_int($col_limit)) { return FALSE; } goto nvkq1; g8L5D: return $new; goto LX1PU; nvkq1: $this->auto_heading = FALSE; goto ApfHr; ftSyb: do { $temp = array_splice($array, 0, $col_limit); if (count($temp) < $col_limit) { for ($i = count($temp); $i < $col_limit; $i++) { $temp[] = "\46\x6e\142\163\x70\73"; } } $new[] = $temp; } while (count($array) > 0); goto g8L5D; LX1PU: } public function set_empty($value) { $this->empty_cells = $value; return $this; } public function add_row($args = array()) { $this->rows[] = $this->_prep_args(func_get_args()); return $this; } protected function _prep_args($args) { goto KqOgu; KRewK: return $args; goto enOrL; KqOgu: if (isset($args[0]) && count($args) === 1 && is_array($args[0]) && !isset($args[0]["\x64\141\x74\x61"])) { $args = $args[0]; } goto Bhtz1; Bhtz1: foreach ($args as $key => $val) { is_array($val) or $args[$key] = array("\144\141\x74\x61" => $val); } goto KRewK; enOrL: } public function set_caption($caption) { $this->caption = $caption; return $this; } public function generate($table_data = NULL) { goto n4h12; Z63E6: $out .= $this->template["\x74\141\x62\154\x65\x5f\x63\x6c\157\163\145"]; goto cmRqr; d6JJy: if (!empty($this->heading)) { goto di3uP; xcprR: $out .= $this->template["\150\x65\141\144\x69\156\147\137\x72\157\x77\x5f\x65\156\x64"] . $this->newline . $this->template["\164\x68\x65\x61\144\137\143\154\157\x73\x65"] . $this->newline; goto o1c6W; gbUHS: foreach ($this->heading as $heading) { goto zbI5i; MifCs: foreach ($heading as $key => $val) { if ($key !== "\x64\x61\x74\x61") { $temp = str_replace("\x3c\164\x68", "\74\x74\150\40" . $key . "\x3d\x22" . $val . "\42", $temp); } } goto BXtVG; zbI5i: $temp = $this->template["\150\x65\x61\x64\151\156\147\137\143\145\154\154\x5f\x73\x74\x61\162\x74"]; goto MifCs; BXtVG: $out .= $temp . (isset($heading["\144\x61\164\141"]) ? $heading["\144\x61\x74\141"] : '') . $this->template["\x68\x65\141\x64\151\x6e\147\x5f\143\x65\x6c\154\137\x65\156\144"]; goto mbtKe; mbtKe: } goto xcprR; di3uP: $out .= $this->template["\164\x68\145\141\144\137\x6f\160\145\156"] . $this->newline . $this->template["\x68\x65\x61\144\151\156\x67\x5f\162\157\167\x5f\163\164\141\162\x74"] . $this->newline; goto gbUHS; o1c6W: } goto lD4RO; lD4RO: if (!empty($this->rows)) { goto iFMFc; iFMFc: $out .= $this->template["\164\x62\x6f\144\171\x5f\x6f\160\145\x6e"] . $this->newline; goto EMKkt; EMKkt: $i = 1; goto Xzlzp; SG1nY: $out .= $this->template["\164\x62\x6f\144\x79\137\143\x6c\x6f\163\145"] . $this->newline; goto nvxg0; Xzlzp: foreach ($this->rows as $row) { goto Z8yYV; eVtpM: foreach ($row as $cell) { goto wQcY9; LuJod: $cell = isset($cell["\x64\141\x74\x61"]) ? $cell["\144\141\x74\141"] : ''; goto ZrXZF; Vse9b: foreach ($cell as $key => $val) { if ($key !== "\x64\x61\x74\141") { $temp = str_replace("\x3c\x74\x64", "\x3c\x74\x64\40" . $key . "\x3d\x22" . $val . "\x22", $temp); } } goto LuJod; wQcY9: $temp = $this->template["\143\145\x6c\154\137" . $name . "\163\164\141\x72\164"]; goto Vse9b; Y22p3: if ($cell === '' or $cell === NULL) { $out .= $this->empty_cells; } elseif (isset($this->function)) { $out .= call_user_func($this->function, $cell); } else { $out .= $cell; } goto fW9G4; ZrXZF: $out .= $temp; goto Y22p3; fW9G4: $out .= $this->template["\x63\x65\154\154\137" . $name . "\145\156\144"]; goto QSFPT; QSFPT: } goto l1tdp; hdWFz: $name = fmod($i++, 2) ? '' : "\141\154\x74\x5f"; goto Tnznu; l1tdp: $out .= $this->template["\x72\x6f\x77\137" . $name . "\x65\x6e\144"] . $this->newline; goto gEHJH; Z8yYV: if (!is_array($row)) { break; } goto hdWFz; Tnznu: $out .= $this->template["\x72\157\x77\x5f" . $name . "\x73\164\141\162\x74"] . $this->newline; goto eVtpM; gEHJH: } goto SG1nY; nvxg0: } goto Z63E6; k3MXL: $this->_compile_template(); goto eo2CI; eo2CI: if (isset($this->function) && !is_callable($this->function)) { $this->function = NULL; } goto EPHHE; cmRqr: $this->clear(); goto pj3a0; CQosH: if (empty($this->heading) && empty($this->rows)) { return "\x55\x6e\x64\x65\x66\151\156\145\x64\x20\164\x61\x62\154\145\x20\144\x61\x74\x61"; } goto k3MXL; EPHHE: $out = $this->template["\x74\x61\142\x6c\x65\137\x6f\160\x65\x6e"] . $this->newline; goto kw0RB; n4h12: if (!empty($table_data)) { if ($table_data instanceof CI_DB_result) { $this->_set_from_db_result($table_data); } elseif (is_array($table_data)) { $this->_set_from_array($table_data); } } goto CQosH; kw0RB: if ($this->caption) { $out .= "\74\143\141\x70\x74\151\157\156\76" . $this->caption . "\74\57\x63\141\160\164\x69\x6f\x6e\x3e" . $this->newline; } goto d6JJy; pj3a0: return $out; goto F2o_9; F2o_9: } public function clear() { goto B0niX; B0niX: $this->rows = array(); goto t9Q99; ZbN4Y: $this->auto_heading = TRUE; goto QCG4L; QCG4L: return $this; goto c4V1l; t9Q99: $this->heading = array(); goto ZbN4Y; c4V1l: } protected function _set_from_db_result($object) { if ($this->auto_heading === TRUE && empty($this->heading)) { $this->heading = $this->_prep_args($object->list_fields()); } foreach ($object->result_array() as $row) { $this->rows[] = $this->_prep_args($row); } } protected function _set_from_array($data) { if ($this->auto_heading === TRUE && empty($this->heading)) { $this->heading = $this->_prep_args(array_shift($data)); } foreach ($data as &$row) { $this->rows[] = $this->_prep_args($row); } } protected function _compile_template() { goto e_9dB; B3oBn: $this->temp = $this->_default_template(); goto T9m0K; e_9dB: if ($this->template === NULL) { $this->template = $this->_default_template(); return; } goto B3oBn; T9m0K: foreach (array("\x74\x61\142\x6c\145\137\x6f\x70\x65\x6e", "\x74\x68\x65\x61\x64\x5f\157\160\145\x6e", "\164\150\145\x61\x64\x5f\x63\x6c\x6f\x73\x65", "\x68\x65\141\144\x69\x6e\x67\x5f\162\157\167\137\x73\164\141\x72\164", "\x68\x65\x61\144\151\156\x67\x5f\x72\x6f\167\137\145\156\144", "\x68\x65\141\x64\x69\156\147\137\x63\x65\154\154\x5f\x73\x74\x61\x72\164", "\x68\x65\141\144\151\x6e\x67\x5f\143\x65\x6c\154\x5f\x65\x6e\144", "\164\x62\157\144\x79\x5f\157\160\x65\156", "\164\x62\x6f\x64\171\137\143\154\157\x73\x65", "\162\x6f\x77\x5f\163\164\141\x72\164", "\162\x6f\167\137\145\156\x64", "\143\145\x6c\154\x5f\163\x74\x61\162\x74", "\143\x65\x6c\x6c\x5f\145\156\144", "\x72\157\167\137\x61\154\164\137\x73\164\141\x72\x74", "\x72\x6f\x77\x5f\141\x6c\x74\x5f\x65\156\144", "\143\145\x6c\154\x5f\x61\154\x74\x5f\163\164\x61\162\164", "\143\x65\x6c\154\x5f\141\x6c\164\137\x65\156\x64", "\164\x61\142\x6c\x65\x5f\x63\154\x6f\x73\x65") as $val) { if (!isset($this->template[$val])) { $this->template[$val] = $this->temp[$val]; } } goto M8_Jr; M8_Jr: } protected function _default_template() { return array("\164\x61\x62\154\x65\x5f\157\x70\145\156" => "\74\164\141\142\154\145\40\142\x6f\162\144\145\x72\x3d\42\60\42\x20\143\145\x6c\154\x70\141\x64\144\x69\x6e\x67\75\x22\64\x22\x20\143\x65\154\x6c\x73\160\141\143\151\x6e\147\75\x22\x30\x22\76", "\x74\150\145\141\144\137\157\x70\145\156" => "\x3c\164\x68\x65\x61\144\76", "\164\x68\x65\x61\144\137\x63\154\x6f\x73\145" => "\x3c\x2f\x74\150\x65\x61\144\76", "\150\x65\x61\144\151\x6e\x67\137\x72\157\167\137\163\164\141\x72\x74" => "\74\164\x72\x3e", "\x68\x65\x61\144\151\156\147\137\162\157\167\x5f\145\x6e\x64" => "\x3c\57\x74\x72\76", "\x68\145\x61\144\x69\x6e\x67\137\x63\145\x6c\x6c\x5f\x73\164\x61\162\164" => "\x3c\x74\150\76", "\150\145\141\x64\x69\x6e\147\x5f\x63\x65\154\154\x5f\x65\x6e\144" => "\74\57\164\x68\x3e", "\x74\x62\x6f\144\x79\x5f\x6f\160\x65\x6e" => "\x3c\164\x62\157\x64\171\x3e", "\164\x62\157\144\171\x5f\143\x6c\157\163\x65" => "\74\57\x74\142\157\x64\171\76", "\x72\157\167\137\163\164\x61\162\164" => "\x3c\x74\x72\76", "\x72\157\167\137\145\156\x64" => "\74\57\164\x72\x3e", "\x63\145\154\154\137\163\x74\141\x72\x74" => "\x3c\x74\x64\76", "\143\145\154\154\x5f\145\x6e\x64" => "\x3c\x2f\164\x64\76", "\162\157\x77\x5f\x61\x6c\164\x5f\163\164\x61\162\x74" => "\x3c\x74\162\x3e", "\x72\157\167\137\141\x6c\x74\137\145\156\x64" => "\x3c\x2f\x74\x72\76", "\x63\145\154\154\x5f\x61\x6c\x74\137\163\x74\x61\x72\x74" => "\x3c\x74\x64\76", "\143\x65\154\154\x5f\141\x6c\x74\x5f\145\x6e\144" => "\74\x2f\x74\144\76", "\x74\141\142\x6c\x65\x5f\143\x6c\x6f\x73\145" => "\74\x2f\164\x61\x62\x6c\x65\x3e"); } }
