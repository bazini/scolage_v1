<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:17              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x42\x41\123\105\x50\x41\124\110") or exit("\116\x6f\x20\x64\151\x72\145\143\164\40\163\x63\x72\151\x70\164\40\x61\143\x63\145\x73\163\x20\141\154\x6c\x6f\x77\x65\144"); class CI_Calendar { public $template = ''; public $replacements = array(); public $start_day = "\x73\165\x6e\x64\141\x79"; public $month_type = "\x6c\x6f\x6e\147"; public $day_type = "\141\x62\x72"; public $show_next_prev = FALSE; public $next_prev_url = ''; public $show_other_days = FALSE; protected $CI; public function __construct($config = array()) { goto J_B0S; rcBv4: $this->CI->lang->load("\143\x61\x6c\145\x6e\144\141\162"); goto q8cKr; q8cKr: empty($config) or $this->initialize($config); goto EgeFA; EgeFA: log_message("\151\156\146\x6f", "\x43\141\x6c\145\x6e\144\141\162\40\x43\x6c\141\x73\x73\40\x49\156\x69\x74\x69\x61\x6c\x69\x7a\x65\x64"); goto VYPRx; J_B0S: $this->CI =& get_instance(); goto rcBv4; VYPRx: } public function initialize($config = array()) { goto FQNh0; lydlb: if ($this->show_next_prev === TRUE && empty($this->next_prev_url)) { $this->next_prev_url = $this->CI->config->site_url($this->CI->router->class . "\57" . $this->CI->router->method); } goto EenlM; FQNh0: foreach ($config as $key => $val) { if (isset($this->{$key})) { $this->{$key} = $val; } } goto lydlb; EenlM: return $this; goto BAx8i; BAx8i: } public function generate($year = '', $month = '', $data = array()) { goto OxZkd; FPcHJ: $date = getdate($local_date); goto j2H_x; ugOHt: $out = $this->replacements["\x74\x61\142\154\x65\x5f\157\160\x65\156"] . "\12\12" . $this->replacements["\x68\145\141\x64\x69\x6e\147\137\162\157\167\137\163\x74\x61\162\164"] . "\12"; goto OnGk2; XvTTJ: $colspan = $this->show_next_prev === TRUE ? 5 : 7; goto MuKqQ; j2H_x: $day = $start_day + 1 - $date["\167\144\x61\x79"]; goto vr_9t; kqeh_: $year = $adjusted_date["\171\145\141\162"]; goto fWuv1; sXRfP: if (empty($year)) { $year = date("\x59", $local_time); } elseif (strlen($year) === 1) { $year = "\x32\x30\60" . $year; } elseif (strlen($year) === 2) { $year = "\x32\x30" . $year; } goto oqYaD; vr_9t: while ($day > 1) { $day -= 7; } goto J26LJ; VL011: $month = $adjusted_date["\x6d\157\x6e\164\150"]; goto kqeh_; teXQA: while ($day <= $total_days) { $out .= "\xa" . $this->replacements["\143\141\x6c\137\162\x6f\x77\137\x73\x74\141\x72\x74"] . "\12"; for ($i = 0; $i < 7; $i++) { if ($day > 0 && $day <= $total_days) { goto b7Zzx; sOpaF: if (isset($data[$day])) { $temp = $is_current_month === TRUE && $day == $cur_day ? $this->replacements["\x63\141\154\137\143\x65\x6c\x6c\137\143\x6f\x6e\x74\145\156\x74\137\164\x6f\144\x61\x79"] : $this->replacements["\x63\x61\154\x5f\x63\x65\154\x6c\137\x63\x6f\156\x74\x65\x6e\x74"]; $out .= str_replace(array("\x7b\143\157\x6e\x74\145\156\164\175", "\173\x64\141\171\x7d"), array($data[$day], $day), $temp); } else { $temp = $is_current_month === TRUE && $day == $cur_day ? $this->replacements["\x63\141\154\x5f\143\145\x6c\x6c\137\156\157\137\x63\157\x6e\x74\x65\156\x74\137\164\157\x64\141\x79"] : $this->replacements["\x63\141\x6c\137\x63\x65\x6c\154\x5f\x6e\157\x5f\x63\x6f\x6e\164\145\x6e\x74"]; $out .= str_replace("\x7b\144\x61\x79\175", $day, $temp); } goto yFUkd; yFUkd: $out .= $is_current_month === TRUE && $day == $cur_day ? $this->replacements["\x63\141\x6c\x5f\x63\145\154\x6c\x5f\145\156\144\x5f\x74\157\144\141\171"] : $this->replacements["\x63\141\x6c\137\143\x65\x6c\154\137\x65\156\144"]; goto xvGu9; b7Zzx: $out .= $is_current_month === TRUE && $day == $cur_day ? $this->replacements["\x63\x61\154\x5f\x63\x65\154\x6c\137\163\164\x61\x72\164\137\x74\x6f\144\x61\171"] : $this->replacements["\x63\141\154\x5f\x63\145\x6c\x6c\137\163\x74\x61\x72\164"]; goto sOpaF; xvGu9: } elseif ($this->show_other_days === TRUE) { goto P_u32; WHdTV: $out .= $this->replacements["\143\x61\x6c\x5f\143\145\x6c\154\137\x65\x6e\144\137\x6f\164\150\x65\x72"]; goto fSeJ1; iGO0s: if ($day <= 0) { goto aLBkK; IvUeP: $out .= str_replace("\x7b\x64\x61\171\x7d", $prev_month_days + $day, $this->replacements["\x63\141\x6c\137\143\145\154\154\x5f\x6f\164\150\145\162"]); goto baE0p; W67su: $prev_month_days = $this->get_total_days($prev_month["\x6d\x6f\156\x74\x68"], $prev_month["\x79\x65\x61\x72"]); goto IvUeP; aLBkK: $prev_month = $this->adjust_date($month - 1, $year); goto W67su; baE0p: } else { $out .= str_replace("\x7b\x64\x61\171\x7d", $day - $total_days, $this->replacements["\x63\x61\154\x5f\x63\x65\x6c\x6c\x5f\157\164\x68\145\162"]); } goto WHdTV; P_u32: $out .= $this->replacements["\x63\141\x6c\137\143\x65\154\154\x5f\x73\x74\x61\x72\x74\x5f\x6f\x74\150\145\162"]; goto iGO0s; fSeJ1: } else { $out .= $this->replacements["\x63\141\154\137\x63\145\154\x6c\137\x73\164\141\x72\x74"] . $this->replacements["\143\141\154\x5f\143\x65\154\154\137\142\154\x61\156\x6b"] . $this->replacements["\143\141\154\137\143\145\154\x6c\137\x65\156\x64"]; } $day++; } $out .= "\xa" . $this->replacements["\143\x61\154\137\162\x6f\x77\137\x65\156\144"] . "\12"; } goto af9UQ; KylC5: $start_day = isset($start_days[$this->start_day]) ? $start_days[$this->start_day] : 0; goto pWnUZ; qfZ0e: for ($i = 0; $i < 7; $i++) { $out .= str_replace("\173\167\145\x65\153\x5f\x64\141\171\175", $day_names[($start_day + $i) % 7], $this->replacements["\x77\x65\x65\x6b\x5f\x64\141\171\x5f\143\145\x6c\154"]); } goto xE0zN; xE0zN: $out .= "\xa" . $this->replacements["\167\145\x65\153\x5f\162\157\167\137\x65\156\x64"] . "\xa"; goto teXQA; fWuv1: $total_days = $this->get_total_days($month, $year); goto NcBnh; C4hdy: $out .= "\12" . $this->replacements["\x68\x65\x61\x64\x69\156\x67\137\162\157\167\x5f\x65\156\x64"] . "\12\xa" . $this->replacements["\167\x65\x65\x6b\137\x72\157\167\137\x73\164\141\x72\164"] . "\12"; goto bc6QN; OxZkd: $local_time = time(); goto sXRfP; mSfno: if ($this->show_next_prev === TRUE) { $adjusted_date = $this->adjust_date($month + 1, $year); $out .= str_replace("\173\156\x65\x78\x74\x5f\x75\x72\154\175", $this->next_prev_url . $adjusted_date["\x79\145\141\x72"] . "\x2f" . $adjusted_date["\155\x6f\x6e\164\150"], $this->replacements["\150\x65\x61\x64\x69\x6e\147\x5f\x6e\145\170\x74\137\143\x65\x6c\154"]); } goto C4hdy; MuKqQ: $this->replacements["\150\x65\x61\x64\151\156\x67\137\x74\x69\164\x6c\145\x5f\143\x65\154\154"] = str_replace("\x7b\143\157\154\x73\x70\141\x6e\175", $colspan, str_replace("\173\150\145\x61\144\x69\x6e\147\175", $this->get_month_name($month) . "\46\156\142\163\160\x3b" . $year, $this->replacements["\150\x65\141\x64\x69\156\x67\137\x74\x69\164\x6c\x65\137\x63\x65\154\x6c"])); goto Lphuq; B16zO: $cur_day = date("\x6a", $local_time); goto sNuUn; pWnUZ: $local_date = mktime(12, 0, 0, $month, 1, $year); goto FPcHJ; bc6QN: $day_names = $this->get_day_names(); goto qfZ0e; aQhSJ: $this->parse_template(); goto ugOHt; NcBnh: $start_days = array("\x73\x75\156\x64\141\x79" => 0, "\x6d\157\x6e\x64\141\x79" => 1, "\x74\x75\145\163\144\x61\171" => 2, "\x77\x65\144\156\x65\163\x64\x61\171" => 3, "\x74\150\x75\162\163\x64\x61\x79" => 4, "\146\x72\x69\x64\141\171" => 5, "\x73\141\x74\165\x72\x64\x61\x79" => 6); goto KylC5; oqYaD: if (empty($month)) { $month = date("\155", $local_time); } elseif (strlen($month) === 1) { $month = "\60" . $month; } goto RaKDF; sNuUn: $is_current_month = $cur_year == $year && $cur_month == $month; goto aQhSJ; Z0woH: $cur_month = date("\155", $local_time); goto B16zO; RaKDF: $adjusted_date = $this->adjust_date($month, $year); goto VL011; af9UQ: return $out .= "\xa" . $this->replacements["\x74\x61\142\154\x65\x5f\x63\154\157\163\x65"]; goto mKmhb; J26LJ: $cur_year = date("\131", $local_time); goto Z0woH; Lphuq: $out .= $this->replacements["\x68\145\x61\x64\151\x6e\147\137\x74\151\164\154\x65\137\x63\x65\154\154"] . "\12"; goto mSfno; OnGk2: if ($this->show_next_prev === TRUE) { goto dzdYA; EtRb4: $out .= str_replace("\x7b\160\x72\x65\x76\151\x6f\x75\x73\x5f\165\162\x6c\175", $this->next_prev_url . $adjusted_date["\171\145\x61\162"] . "\57" . $adjusted_date["\155\157\156\164\x68"], $this->replacements["\x68\145\x61\x64\x69\x6e\147\x5f\x70\162\145\166\x69\157\x75\x73\x5f\x63\145\x6c\x6c"]) . "\12"; goto pdG6s; dzdYA: $this->next_prev_url = preg_replace("\x2f\x28\x2e\x2b\77\51\134\x2f\52\x24\57", "\x5c\x31\x2f", $this->next_prev_url); goto zmnO6; zmnO6: $adjusted_date = $this->adjust_date($month - 1, $year); goto EtRb4; pdG6s: } goto XvTTJ; mKmhb: } public function get_month_name($month) { if ($this->month_type === "\x73\x68\x6f\x72\x74") { $month_names = array("\x30\61" => "\x63\x61\x6c\137\152\141\x6e", "\60\x32" => "\143\x61\x6c\x5f\146\145\x62", "\60\63" => "\143\x61\x6c\137\x6d\x61\162", "\x30\x34" => "\x63\141\x6c\x5f\141\160\x72", "\60\x35" => "\143\x61\x6c\137\155\141\x79", "\x30\x36" => "\143\x61\154\137\152\165\x6e", "\60\x37" => "\x63\141\154\x5f\152\165\x6c", "\60\x38" => "\x63\x61\x6c\137\141\165\147", "\x30\x39" => "\143\x61\x6c\137\x73\x65\x70", "\x31\60" => "\x63\141\x6c\137\x6f\x63\164", "\x31\x31" => "\x63\x61\x6c\x5f\156\x6f\x76", "\x31\62" => "\143\x61\154\x5f\144\x65\x63"); } else { $month_names = array("\x30\61" => "\x63\x61\154\x5f\x6a\x61\x6e\165\141\162\x79", "\60\62" => "\x63\x61\154\137\146\145\x62\162\165\x61\x72\171", "\x30\63" => "\143\x61\x6c\137\155\x61\x72\x63\x68", "\x30\64" => "\143\141\x6c\x5f\141\x70\x72\151\x6c", "\60\x35" => "\x63\141\154\137\x6d\x61\x79\154", "\x30\x36" => "\143\141\x6c\137\x6a\165\156\145", "\x30\67" => "\143\141\154\137\x6a\x75\x6c\x79", "\x30\70" => "\x63\x61\x6c\x5f\x61\x75\x67\165\163\x74", "\x30\71" => "\x63\x61\154\137\x73\x65\160\164\145\x6d\x62\x65\x72", "\61\x30" => "\143\x61\154\x5f\157\x63\x74\157\x62\145\162", "\x31\x31" => "\143\141\x6c\x5f\156\x6f\166\145\x6d\x62\x65\162", "\61\62" => "\x63\x61\154\137\x64\x65\x63\145\x6d\142\145\162"); } return $this->CI->lang->line($month_names[$month]) === FALSE ? ucfirst(substr($month_names[$month], 4)) : $this->CI->lang->line($month_names[$month]); } public function get_day_names($day_type = '') { goto D9iQS; NhN0E: if ($this->day_type === "\154\157\x6e\x67") { $day_names = array("\x73\165\x6e\x64\141\171", "\x6d\157\156\144\141\x79", "\164\x75\x65\x73\144\x61\x79", "\167\145\x64\x6e\145\163\x64\141\171", "\164\150\x75\162\x73\144\141\x79", "\146\162\x69\144\x61\171", "\163\x61\164\x75\162\x64\141\x79"); } elseif ($this->day_type === "\163\150\157\162\164") { $day_names = array("\x73\165\x6e", "\x6d\157\156", "\x74\165\x65", "\167\145\144", "\164\150\165", "\146\162\151", "\x73\x61\164"); } else { $day_names = array("\163\165", "\x6d\157", "\164\165", "\x77\145", "\x74\x68", "\146\x72", "\163\x61"); } goto VZuVh; D9iQS: if ($day_type !== '') { $this->day_type = $day_type; } goto NhN0E; qezyQ: return $days; goto V7_QC; VZuVh: $days = array(); goto ZBoOg; ZBoOg: for ($i = 0, $c = count($day_names); $i < $c; $i++) { $days[] = $this->CI->lang->line("\x63\x61\x6c\x5f" . $day_names[$i]) === FALSE ? ucfirst($day_names[$i]) : $this->CI->lang->line("\143\141\154\137" . $day_names[$i]); } goto qezyQ; V7_QC: } public function adjust_date($month, $year) { goto Ka2Vv; Ka2Vv: $date = array(); goto loncL; HF25R: if (strlen($date["\155\157\156\164\x68"]) === 1) { $date["\x6d\x6f\x6e\164\x68"] = "\x30" . $date["\155\157\156\164\150"]; } goto VQyls; JxSeB: while ($date["\x6d\x6f\x6e\164\x68"] > 12) { $date["\x6d\157\156\x74\150"] -= 12; $date["\171\x65\x61\x72"]++; } goto AUJA_; loncL: $date["\155\x6f\156\x74\x68"] = $month; goto uoupw; VQyls: return $date; goto FXoAM; uoupw: $date["\x79\145\x61\x72"] = $year; goto JxSeB; AUJA_: while ($date["\x6d\x6f\x6e\x74\150"] <= 0) { $date["\155\157\156\164\x68"] += 12; $date["\171\145\x61\x72"]--; } goto HF25R; FXoAM: } public function get_total_days($month, $year) { $this->CI->load->helper("\144\x61\164\x65"); return days_in_month($month, $year); } public function default_template() { return array("\x74\x61\142\x6c\145\x5f\x6f\160\x65\156" => "\x3c\x74\141\142\x6c\x65\40\x62\x6f\162\144\x65\162\x3d\42\x30\x22\40\x63\145\x6c\x6c\x70\141\x64\x64\x69\x6e\147\75\42\x34\x22\40\143\x65\154\x6c\x73\x70\141\143\151\156\147\75\x22\x30\42\76", "\150\x65\141\144\x69\x6e\x67\x5f\162\x6f\167\x5f\x73\164\141\x72\x74" => "\74\x74\x72\76", "\x68\145\x61\x64\151\156\x67\137\x70\x72\145\166\151\157\x75\x73\137\143\145\x6c\x6c" => "\x3c\164\150\x3e\74\141\40\150\x72\x65\146\x3d\42\173\x70\x72\x65\166\x69\x6f\x75\163\x5f\x75\x72\154\175\42\x3e\x26\x6c\x74\x3b\46\x6c\x74\x3b\x3c\x2f\141\x3e\74\x2f\164\150\x3e", "\150\145\141\144\x69\156\x67\x5f\164\x69\x74\x6c\x65\137\143\x65\154\x6c" => "\74\164\x68\x20\x63\x6f\154\163\x70\141\x6e\75\42\x7b\x63\157\154\x73\160\x61\x6e\175\x22\x3e\173\x68\145\x61\x64\151\156\147\x7d\74\x2f\164\150\x3e", "\150\145\x61\144\x69\x6e\x67\x5f\156\x65\170\x74\137\x63\145\x6c\x6c" => "\74\164\x68\x3e\74\x61\40\x68\162\x65\x66\x3d\42\173\156\x65\170\164\137\x75\162\x6c\175\x22\76\46\147\164\x3b\x26\x67\x74\x3b\74\x2f\141\76\x3c\x2f\164\150\x3e", "\x68\x65\141\x64\x69\x6e\147\x5f\162\x6f\167\x5f\x65\x6e\144" => "\74\x2f\164\162\76", "\167\x65\x65\x6b\x5f\162\157\x77\137\x73\164\x61\x72\x74" => "\74\x74\162\76", "\167\145\145\153\x5f\x64\x61\171\x5f\x63\x65\x6c\154" => "\74\x74\144\76\x7b\167\x65\145\153\137\x64\x61\x79\x7d\74\x2f\164\x64\76", "\167\145\145\153\x5f\x72\157\167\137\x65\156\144" => "\x3c\x2f\x74\x72\x3e", "\x63\141\154\137\x72\157\x77\x5f\x73\164\x61\x72\164" => "\x3c\164\162\76", "\143\141\x6c\x5f\143\x65\x6c\154\137\163\164\x61\162\164" => "\x3c\x74\x64\76", "\x63\x61\x6c\x5f\143\145\x6c\x6c\137\x73\164\x61\162\x74\x5f\164\x6f\x64\x61\x79" => "\74\164\x64\x3e", "\143\141\154\x5f\143\145\x6c\154\137\x73\164\x61\x72\x74\x5f\157\x74\x68\145\162" => "\74\164\144\40\163\x74\x79\154\145\75\x22\143\157\154\157\162\72\40\43\66\x36\x36\x3b\x22\x3e", "\143\141\x6c\x5f\x63\x65\x6c\154\x5f\143\x6f\x6e\x74\145\x6e\164" => "\74\x61\x20\150\x72\145\x66\75\42\x7b\143\x6f\156\x74\x65\156\164\x7d\x22\x3e\173\144\141\x79\x7d\74\57\x61\76", "\x63\x61\154\137\x63\145\154\x6c\x5f\x63\x6f\156\x74\145\156\x74\137\164\x6f\144\x61\171" => "\x3c\x61\40\150\162\x65\x66\75\x22\x7b\x63\157\x6e\x74\x65\x6e\164\x7d\42\x3e\74\163\x74\162\157\x6e\x67\76\x7b\144\141\171\175\74\x2f\163\164\x72\x6f\156\x67\76\x3c\57\141\x3e", "\x63\x61\154\137\143\145\x6c\x6c\x5f\156\x6f\x5f\x63\157\156\x74\145\156\x74" => "\x7b\144\141\171\175", "\143\141\154\137\143\x65\x6c\154\137\156\157\137\143\157\156\164\145\x6e\x74\137\164\x6f\144\x61\171" => "\74\x73\x74\x72\x6f\x6e\x67\x3e\x7b\144\x61\x79\175\x3c\57\163\x74\x72\157\156\x67\76", "\x63\x61\154\137\x63\145\154\x6c\x5f\142\x6c\x61\156\x6b" => "\46\x6e\x62\x73\x70\x3b", "\x63\x61\x6c\x5f\143\145\x6c\154\137\x6f\164\150\x65\162" => "\x7b\x64\x61\x79\175", "\143\141\x6c\x5f\143\145\x6c\x6c\137\x65\156\144" => "\74\x2f\164\x64\x3e", "\x63\x61\x6c\137\x63\x65\x6c\154\x5f\x65\x6e\x64\137\x74\157\x64\x61\x79" => "\74\x2f\x74\144\x3e", "\x63\x61\154\137\x63\x65\154\154\137\x65\x6e\144\x5f\x6f\x74\x68\x65\x72" => "\74\57\164\x64\x3e", "\x63\141\154\137\162\157\167\x5f\145\x6e\144" => "\x3c\57\164\162\76", "\164\x61\x62\x6c\x65\137\x63\154\157\x73\x65" => "\74\x2f\x74\x61\142\x6c\x65\x3e"); } public function parse_template() { goto ypD8B; ypD8B: $this->replacements = $this->default_template(); goto Gh56C; Gh56C: if (empty($this->template)) { return $this; } goto QxX3n; oL5Ry: return $this; goto BlADA; QxX3n: if (is_string($this->template)) { $today = array("\x63\141\x6c\x5f\143\145\x6c\154\x5f\163\x74\141\x72\164\x5f\164\x6f\x64\141\171", "\x63\141\x6c\x5f\143\145\154\x6c\137\x63\157\x6e\x74\x65\156\x74\137\x74\157\x64\141\171", "\x63\x61\x6c\x5f\x63\x65\x6c\x6c\x5f\x6e\x6f\x5f\143\157\x6e\164\x65\156\x74\x5f\x74\157\144\x61\171", "\143\x61\x6c\137\143\x65\154\154\137\145\156\144\x5f\164\x6f\x64\x61\171"); foreach (array("\164\141\142\x6c\145\x5f\x6f\160\x65\156", "\x74\141\142\154\x65\137\143\x6c\x6f\163\x65", "\x68\145\141\144\x69\x6e\147\x5f\x72\x6f\x77\x5f\x73\164\141\x72\164", "\x68\145\x61\144\x69\156\147\137\x70\162\x65\x76\151\157\x75\163\x5f\143\x65\154\154", "\x68\145\x61\144\151\156\x67\137\x74\151\164\x6c\145\x5f\x63\x65\x6c\154", "\x68\x65\x61\144\151\156\147\137\156\x65\x78\x74\137\143\145\154\x6c", "\x68\145\x61\x64\151\x6e\147\x5f\x72\157\167\137\145\156\144", "\167\x65\x65\x6b\137\x72\x6f\x77\x5f\x73\x74\141\162\x74", "\167\145\x65\153\137\x64\141\171\137\x63\145\x6c\154", "\x77\145\x65\153\x5f\x72\157\x77\x5f\145\x6e\x64", "\x63\x61\x6c\137\162\157\167\x5f\163\x74\141\162\x74", "\143\141\x6c\x5f\x63\x65\x6c\154\137\163\164\141\x72\164", "\x63\x61\x6c\x5f\143\145\x6c\154\137\x63\157\x6e\x74\x65\156\164", "\x63\x61\x6c\137\143\145\x6c\154\137\x6e\x6f\x5f\143\x6f\x6e\x74\145\x6e\x74", "\x63\141\154\137\x63\145\154\154\137\142\x6c\141\x6e\153", "\x63\141\154\137\x63\145\154\154\137\x65\x6e\144", "\143\x61\x6c\x5f\162\157\x77\137\145\156\x64", "\143\141\x6c\137\x63\145\x6c\154\x5f\163\x74\x61\x72\164\x5f\x74\x6f\x64\141\x79", "\x63\x61\x6c\137\143\x65\154\154\x5f\x63\x6f\156\x74\145\x6e\164\137\164\157\x64\x61\x79", "\143\x61\154\x5f\x63\x65\154\154\137\x6e\x6f\x5f\143\x6f\x6e\x74\145\156\164\x5f\x74\157\144\x61\171", "\x63\x61\x6c\x5f\x63\x65\x6c\x6c\x5f\x65\156\144\x5f\164\x6f\x64\141\171", "\143\141\x6c\137\143\145\154\154\137\x73\x74\141\162\x74\x5f\157\x74\x68\x65\162", "\x63\x61\x6c\137\143\145\154\154\137\x6f\x74\x68\145\x72", "\143\x61\154\137\143\x65\x6c\x6c\137\x65\156\144\137\x6f\x74\x68\x65\162") as $val) { if (preg_match("\x2f\134\173" . $val . "\x5c\x7d\x28\x2e\52\x3f\x29\x5c\173\134\x2f" . $val . "\x5c\x7d\x2f\163\x69", $this->template, $match)) { $this->replacements[$val] = $match[1]; } elseif (in_array($val, $today, TRUE)) { $this->replacements[$val] = $this->replacements[substr($val, 0, -6)]; } } } elseif (is_array($this->template)) { $this->replacements = array_merge($this->replacements, $this->template); } goto oL5Ry; BlADA: } }
