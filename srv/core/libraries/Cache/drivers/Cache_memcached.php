<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\123\105\x50\101\x54\110") or exit("\116\x6f\40\x64\x69\x72\145\x63\x74\40\163\x63\162\x69\x70\x74\40\141\143\x63\x65\163\163\40\141\154\154\157\167\x65\x64"); class CI_Cache_memcached extends CI_Driver { protected $_memcached; protected $_config = array("\x64\x65\146\x61\x75\x6c\164" => array("\150\x6f\163\164" => "\x31\62\x37\56\60\56\60\x2e\61", "\x70\157\162\164" => 11211, "\167\x65\x69\x67\x68\164" => 1)); public function __construct() { goto Ttgq_; Ttgq_: $CI =& get_instance(); goto MBU9O; n1JUr: if ($CI->config->load("\155\145\155\x63\141\x63\150\145\144", TRUE, TRUE)) { $this->_config = $CI->config->config["\155\145\x6d\x63\141\143\150\145\144"]; } goto cXTQI; QRLAp: foreach ($this->_config as $cache_server) { goto ysqnW; NKfpE: isset($cache_server["\160\x6f\x72\164"]) or $cache_server["\160\x6f\x72\164"] = $defaults["\160\157\x72\164"]; goto hELhd; ysqnW: isset($cache_server["\150\157\163\x74\x6e\141\x6d\145"]) or $cache_server["\150\157\163\x74\156\x61\x6d\x65"] = $defaults["\x68\x6f\163\164"]; goto NKfpE; E9o1n: if ($this->_memcached instanceof Memcache) { $this->_memcached->addServer($cache_server["\150\x6f\x73\x74\x6e\141\x6d\x65"], $cache_server["\160\157\162\164"], TRUE, $cache_server["\x77\x65\x69\x67\150\x74"]); } elseif ($this->_memcached instanceof Memcached) { $this->_memcached->addServer($cache_server["\150\157\x73\x74\156\x61\155\145"], $cache_server["\160\x6f\162\x74"], $cache_server["\x77\x65\x69\x67\x68\x74"]); } goto hsBlD; hELhd: isset($cache_server["\167\145\151\x67\150\x74"]) or $cache_server["\x77\x65\x69\147\150\164"] = $defaults["\x77\x65\x69\147\x68\164"]; goto E9o1n; hsBlD: } goto tG61E; MBU9O: $defaults = $this->_config["\144\x65\x66\141\x75\x6c\164"]; goto n1JUr; cXTQI: if (class_exists("\115\145\155\x63\141\143\x68\145\x64", FALSE)) { $this->_memcached = new Memcached(); } elseif (class_exists("\115\145\x6d\x63\141\x63\x68\x65", FALSE)) { $this->_memcached = new Memcache(); } else { log_message("\x65\x72\162\157\162", "\x43\x61\143\x68\x65\72\40\106\141\151\x6c\145\x64\40\x74\157\40\143\162\145\x61\x74\x65\x20\115\145\x6d\143\141\143\x68\145\x28\x64\x29\40\157\142\x6a\x65\143\164\x3b\40\x65\170\164\x65\156\163\151\157\x6e\x20\x6e\x6f\x74\40\154\x6f\x61\144\145\144\77"); return; } goto QRLAp; tG61E: } public function get($id) { $data = $this->_memcached->get($id); return is_array($data) ? $data[0] : $data; } public function save($id, $data, $ttl = 60, $raw = FALSE) { goto pnZue; ziWXB: return FALSE; goto dZcEU; agTn4: if ($this->_memcached instanceof Memcached) { return $this->_memcached->set($id, $data, $ttl); } elseif ($this->_memcached instanceof Memcache) { return $this->_memcached->set($id, $data, 0, $ttl); } goto ziWXB; pnZue: if ($raw !== TRUE) { $data = array($data, time(), $ttl); } goto agTn4; dZcEU: } public function delete($id) { return $this->_memcached->delete($id); } public function increment($id, $offset = 1) { if (($result = $this->_memcached->increment($id, $offset)) === FALSE) { return $this->_memcached->add($id, $offset) ? $offset : FALSE; } return $result; } public function decrement($id, $offset = 1) { if (($result = $this->_memcached->decrement($id, $offset)) === FALSE) { return $this->_memcached->add($id, 0) ? 0 : FALSE; } return $result; } public function clean() { return $this->_memcached->flush(); } public function cache_info() { return $this->_memcached->getStats(); } public function get_metadata($id) { goto MkJ47; MkJ47: $stored = $this->_memcached->get($id); goto vqrXT; YW8TZ: return array("\x65\x78\x70\x69\162\145" => $time + $ttl, "\155\x74\151\x6d\x65" => $time, "\x64\141\164\141" => $data); goto g7GPb; vqrXT: if (count($stored) !== 3) { return FALSE; } goto S8Jr_; S8Jr_: list($data, $time, $ttl) = $stored; goto YW8TZ; g7GPb: } public function is_supported() { return extension_loaded("\155\x65\155\x63\x61\143\150\145\x64") or extension_loaded("\155\x65\x6d\143\141\x63\150\145"); } public function __destruct() { if ($this->_memcached instanceof Memcache) { $this->_memcached->close(); } elseif ($this->_memcached instanceof Memcached && method_exists($this->_memcached, "\161\165\151\164")) { $this->_memcached->quit(); } } }
