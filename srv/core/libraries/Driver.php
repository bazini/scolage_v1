<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:17              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 goto VJF5t; voRet: class CI_Driver_Library { protected $valid_drivers = array(); protected $lib_name; public function __get($child) { return $this->load_driver($child); } public function load_driver($child) { goto sJikl; KzdY3: $obj->decorate($this); goto kf_U4; mKxn9: return $this->{$child}; goto Iu12c; sJikl: $prefix = config_item("\163\165\142\x63\x6c\141\x73\163\137\x70\162\145\x66\x69\170"); goto kM9e2; RbRUy: $class_name = $prefix . $child_name; goto cMYSy; kM9e2: if (!isset($this->lib_name)) { $this->lib_name = str_replace(array("\x43\x49\x5f", $prefix), '', get_class($this)); } goto yWBp1; yWBp1: $child_name = $this->lib_name . "\x5f" . $child; goto cD4B1; tLfcv: $CI = get_instance(); goto HCmSy; HCmSy: $paths = $CI->load->get_package_paths(TRUE); goto RbRUy; OdAeC: if (!class_exists($class_name, FALSE)) { if (class_exists($child_name, FALSE)) { $class_name = $child_name; } else { goto hme8l; MEFY4: log_message("\145\x72\162\x6f\162", $msg); goto yix7h; yix7h: show_error($msg); goto b2F3O; hme8l: $msg = "\x55\x6e\141\142\x6c\145\40\x74\x6f\40\x6c\x6f\141\x64\40\x74\150\145\x20\x72\x65\161\x75\145\163\164\x65\x64\x20\144\x72\x69\x76\x65\x72\72\x20" . $class_name; goto MEFY4; b2F3O: } } goto QiH3c; INpGS: if (!$found) { foreach ($paths as $path) { $file = $path . "\x6c\151\x62\162\x61\162\151\145\163\57" . $this->lib_name . "\x2f\x64\162\151\x76\x65\162\163\57" . $prefix . $child_name . "\x2e\160\x68\x70"; if (file_exists($file)) { goto YUhYk; YUhYk: $basepath = BASEPATH . "\154\x69\142\162\x61\x72\151\x65\x73\x2f" . $this->lib_name . "\x2f\x64\x72\x69\x76\145\x72\x73\x2f" . $child_name . "\56\160\150\x70"; goto moMPz; Xp4xI: break; goto lXZh1; hOAWe: $found = TRUE; goto Xp4xI; ssc_3: include_once $file; goto hOAWe; moMPz: if (!file_exists($basepath)) { goto hyeuF; gSKvT: log_message("\x65\162\162\x6f\162", $msg); goto jCxbJ; jCxbJ: show_error($msg); goto u5erU; hyeuF: $msg = "\125\156\141\142\154\145\x20\164\x6f\x20\154\157\141\x64\40\164\x68\x65\x20\x72\145\x71\x75\145\163\164\145\144\40\143\154\x61\x73\x73\x3a\x20\103\x49\x5f" . $child_name; goto gSKvT; u5erU: } goto b91aI; b91aI: include_once $basepath; goto ssc_3; lXZh1: } } } goto bd12h; cMYSy: $found = class_exists($class_name, FALSE); goto INpGS; bd12h: if (!$found) { $class_name = "\x43\111\x5f" . $child_name; if (!class_exists($class_name, FALSE)) { foreach ($paths as $path) { $file = $path . "\154\151\142\x72\141\162\x69\x65\x73\x2f" . $this->lib_name . "\57\x64\x72\151\x76\x65\162\163\x2f" . $child_name . "\x2e\x70\150\x70"; if (file_exists($file)) { include_once $file; break; } } } } goto OdAeC; kf_U4: $this->{$child} = $obj; goto mKxn9; cD4B1: if (!in_array($child, $this->valid_drivers)) { goto QQdyd; nnDbr: log_message("\x65\x72\162\157\x72", $msg); goto k3vrD; k3vrD: show_error($msg); goto Drj0B; QQdyd: $msg = "\111\x6e\x76\141\154\x69\x64\x20\x64\162\151\x76\x65\x72\x20\162\x65\161\x75\145\x73\x74\x65\x64\72\40" . $child_name; goto nnDbr; Drj0B: } goto tLfcv; QiH3c: $obj = new $class_name(); goto KzdY3; Iu12c: } } goto MRZT9; VJF5t: defined("\x42\101\123\x45\120\101\124\x48") or exit("\116\x6f\40\144\151\162\x65\x63\x74\40\163\x63\162\x69\160\164\x20\141\x63\x63\145\x73\163\x20\141\154\154\x6f\x77\145\144"); goto voRet; MRZT9: class CI_Driver { protected $_parent; protected $_methods = array(); protected $_properties = array(); protected static $_reflections = array(); public function decorate($parent) { goto jxVc2; ZndMj: if (!isset(self::$_reflections[$class_name])) { goto PKt5W; PKt5W: $r = new ReflectionObject($parent); goto pucVW; mmjF2: self::$_reflections[$class_name] = array($this->_methods, $this->_properties); goto GLyRz; QvqlA: foreach ($r->getProperties() as $prop) { if ($prop->isPublic()) { $this->_properties[] = $prop->getName(); } } goto mmjF2; pucVW: foreach ($r->getMethods() as $method) { if ($method->isPublic()) { $this->_methods[] = $method->getName(); } } goto QvqlA; GLyRz: } else { list($this->_methods, $this->_properties) = self::$_reflections[$class_name]; } goto a83PZ; qmMlG: $class_name = get_class($parent); goto ZndMj; jxVc2: $this->_parent = $parent; goto qmMlG; a83PZ: } public function __call($method, $args = array()) { if (in_array($method, $this->_methods)) { return call_user_func_array(array($this->_parent, $method), $args); } throw new BadMethodCallException("\x4e\157\40\163\165\x63\x68\x20\155\x65\x74\x68\157\x64\72\40" . $method . "\x28\x29"); } public function __get($var) { if (in_array($var, $this->_properties)) { return $this->_parent->{$var}; } } public function __set($var, $val) { if (in_array($var, $this->_properties)) { $this->_parent->{$var} = $val; } } }
