<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\x53\105\120\x41\124\110") or exit("\116\157\x20\144\x69\162\x65\143\x74\40\x73\143\x72\151\x70\164\x20\141\x63\x63\145\x73\x73\40\141\154\x6c\157\x77\145\x64"); class CI_Migration { protected $_migration_enabled = FALSE; protected $_migration_type = "\163\145\161\165\145\156\x74\x69\141\x6c"; protected $_migration_path = NULL; protected $_migration_version = 0; protected $_migration_table = "\x6d\151\x67\162\x61\164\151\157\x6e\x73"; protected $_migration_auto_latest = FALSE; protected $_migration_regex; protected $_error_string = ''; public function __construct($config = array()) { goto IthnK; O5mJs: foreach ($config as $key => $val) { $this->{"\x5f" . $key} = $val; } goto hiO7q; IthnK: if (!in_array(get_class($this), array("\103\111\x5f\x4d\x69\x67\x72\x61\164\x69\157\x6e", config_item("\x73\165\142\143\154\141\163\x73\137\x70\162\145\x66\151\x78") . "\115\x69\147\x72\141\x74\151\x6f\x6e"), TRUE)) { return; } goto O5mJs; Me6b3: if ($this->_migration_enabled !== TRUE) { show_error("\115\x69\147\162\141\x74\151\x6f\156\x73\x20\150\141\x73\x20\142\145\145\156\40\154\157\x61\x64\145\144\40\x62\165\x74\40\151\x73\40\x64\x69\163\x61\142\x6c\145\144\x20\x6f\x72\40\163\x65\164\x20\x75\160\x20\x69\156\x63\x6f\162\x72\145\x63\164\154\x79\x2e"); } goto Teeww; PLbdl: $this->_migration_regex = $this->_migration_type === "\x74\x69\155\x65\163\x74\x61\155\x70" ? "\x2f\136\134\x64\173\x31\x34\x7d\x5f\50\x5c\167\53\x29\44\57" : "\57\x5e\134\144\173\63\175\137\x28\x5c\167\x2b\x29\x24\57"; goto tA_9I; hiO7q: log_message("\151\x6e\146\x6f", "\x4d\151\147\x72\141\164\151\157\x6e\x73\x20\x43\x6c\x61\x73\163\x20\111\156\x69\164\151\141\x6c\151\172\x65\144"); goto Me6b3; gVGhQ: if (!$this->db->table_exists($this->_migration_table)) { goto cUlLD; KDPOR: $this->db->insert($this->_migration_table, array("\x76\145\x72\163\151\x6f\x6e" => 0)); goto ZorIG; KPBlw: $this->dbforge->create_table($this->_migration_table, TRUE); goto KDPOR; cUlLD: $this->dbforge->add_field(array("\x76\x65\x72\163\151\157\x6e" => array("\x74\171\160\x65" => "\102\111\x47\111\x4e\x54", "\143\x6f\x6e\163\x74\x72\x61\x69\156\x74" => 20))); goto KPBlw; ZorIG: } goto mUgry; mUgry: if ($this->_migration_auto_latest === TRUE && !$this->latest()) { show_error($this->error_string()); } goto vQeI0; cv4MY: $this->lang->load("\155\151\147\x72\141\x74\x69\157\156"); goto QEZSd; tA_9I: if (!in_array($this->_migration_type, array("\x73\145\x71\165\145\156\164\151\x61\154", "\164\x69\x6d\145\x73\x74\141\155\160"))) { show_error("\101\x6e\x20\151\156\166\x61\x6c\151\x64\x20\x6d\151\x67\162\141\164\151\157\156\40\156\x75\155\x62\145\162\x69\x6e\x67\40\164\x79\160\145\40\167\x61\163\x20\163\160\145\x63\x69\x66\x69\145\144\x3a\x20" . $this->_migration_type); } goto gVGhQ; Teeww: $this->_migration_path !== '' or $this->_migration_path = APPPATH . "\155\151\x67\x72\x61\164\151\157\156\163\57"; goto HO8j3; o70pp: if (empty($this->_migration_table)) { show_error("\115\151\147\162\x61\x74\x69\157\x6e\163\x20\x63\x6f\x6e\146\151\147\x75\162\141\x74\x69\x6f\156\x20\146\x69\x6c\145\40\50\155\x69\x67\162\x61\164\x69\157\156\56\160\150\160\51\40\155\165\163\164\x20\150\141\x76\x65\x20\x22\155\151\x67\162\141\x74\x69\157\156\137\164\x61\142\x6c\145\x22\40\163\145\164\x2e"); } goto PLbdl; HO8j3: $this->_migration_path = rtrim($this->_migration_path, "\57") . "\57"; goto cv4MY; QEZSd: $this->load->dbforge(); goto o70pp; vQeI0: } public function version($target_version) { goto O7lF2; DkuPh: if ($target_version > $current_version) { $method = "\x75\x70"; } elseif ($target_version < $current_version) { $method = "\x64\157\167\156"; krsort($migrations); } else { return TRUE; } goto FqcKF; TVZyZ: foreach ($pending as $number => $migration) { goto XYPyD; XYPyD: log_message("\x64\x65\142\165\x67", "\115\151\x67\162\x61\x74\151\x6e\x67\x20" . $method . "\x20\x66\x72\x6f\155\40\x76\x65\x72\163\x69\x6f\156\x20" . $current_version . "\x20\164\157\40\x76\x65\x72\163\151\x6f\x6e\40" . $number); goto F0pOm; QAHDl: $this->_update_version($current_version); goto B3lzo; F0pOm: $migration[0] = new $migration[0](); goto tDduh; tDduh: call_user_func($migration); goto Gv1A1; Gv1A1: $current_version = $number; goto QAHDl; B3lzo: } goto X4oLf; JtJSK: return $current_version; goto GgJR_; gfTrW: $migrations = $this->find_migrations(); goto nzGep; nzGep: if ($target_version > 0 && !isset($migrations[$target_version])) { $this->_error_string = sprintf($this->lang->line("\x6d\151\x67\x72\141\x74\151\x6f\x6e\137\x6e\x6f\x74\137\146\157\165\156\x64"), $target_version); return FALSE; } goto DkuPh; f6O3U: if ($this->_migration_type === "\163\145\x71\x75\145\156\164\151\141\154") { $target_version = sprintf("\x25\x30\63\144", $target_version); } else { $target_version = (string) $target_version; } goto gfTrW; O7lF2: $current_version = $this->_get_version(); goto f6O3U; N3PSY: log_message("\144\145\x62\x75\x67", "\x46\x69\156\151\x73\150\x65\144\40\155\151\x67\x72\x61\x74\151\x6e\147\40\164\157\40" . $current_version); goto JtJSK; pzJWq: foreach ($migrations as $number => $file) { goto kVN3n; RTt_o: $class = "\x4d\x69\x67\162\141\x74\151\157\156\x5f" . ucfirst(strtolower($this->_get_migration_name(basename($file, "\56\160\x68\x70")))); goto nqfmX; kVN3n: if ($method === "\x75\160") { if ($number <= $current_version) { continue; } elseif ($number > $target_version) { break; } } else { if ($number > $current_version) { continue; } elseif ($number <= $target_version) { break; } } goto AIuGR; K2Y9s: include_once $file; goto RTt_o; nqfmX: if (!class_exists($class, FALSE)) { $this->_error_string = sprintf($this->lang->line("\155\151\x67\x72\141\x74\x69\x6f\x6e\137\143\154\141\x73\x73\137\x64\x6f\x65\163\156\x74\137\x65\170\151\163\164"), $class); return FALSE; } elseif (!is_callable(array($class, $method))) { $this->_error_string = sprintf($this->lang->line("\x6d\x69\x67\162\x61\164\151\x6f\x6e\x5f\x6d\151\x73\x73\x69\x6e\x67\137" . $method . "\137\155\145\x74\150\x6f\144"), $class); return FALSE; } goto H1Ah9; AIuGR: if ($this->_migration_type === "\x73\x65\161\x75\x65\156\164\x69\141\154") { if (isset($previous) && abs($number - $previous) > 1) { $this->_error_string = sprintf($this->lang->line("\x6d\151\x67\162\x61\x74\151\x6f\x6e\137\x73\x65\x71\165\x65\156\143\145\137\x67\x61\x70"), $number); return FALSE; } $previous = $number; } goto K2Y9s; H1Ah9: $pending[$number] = array($class, $method); goto Ko5Fl; Ko5Fl: } goto TVZyZ; FqcKF: $pending = array(); goto pzJWq; X4oLf: if ($current_version != $target_version) { $current_version = $target_version; $this->_update_version($current_version); } goto N3PSY; GgJR_: } public function latest() { goto yL0M3; Ksvqy: $last_migration = basename(end($migrations)); goto c0QYF; vcQnh: if (empty($migrations)) { $this->_error_string = $this->lang->line("\x6d\151\x67\x72\x61\x74\151\157\156\x5f\156\x6f\x6e\145\x5f\x66\157\x75\x6e\144"); return FALSE; } goto Ksvqy; yL0M3: $migrations = $this->find_migrations(); goto vcQnh; c0QYF: return $this->version($this->_get_migration_number($last_migration)); goto KTnis; KTnis: } public function current() { return $this->version($this->_migration_version); } public function error_string() { return $this->_error_string; } public function find_migrations() { goto a4r1S; U02zG: foreach (glob($this->_migration_path . "\52\137\x2a\56\160\150\160") as $file) { $name = basename($file, "\x2e\160\150\160"); if (preg_match($this->_migration_regex, $name)) { goto zox2l; O2nFh: $migrations[$number] = $file; goto OPE_x; WFBlG: if (isset($migrations[$number])) { $this->_error_string = sprintf($this->lang->line("\155\x69\147\x72\141\164\x69\x6f\156\x5f\155\165\154\x74\151\x70\154\145\x5f\x76\x65\162\163\151\x6f\x6e"), $number); show_error($this->_error_string); } goto O2nFh; zox2l: $number = $this->_get_migration_number($name); goto WFBlG; OPE_x: } } goto anjjZ; anjjZ: ksort($migrations); goto ZYOpZ; ZYOpZ: return $migrations; goto B01dB; a4r1S: $migrations = array(); goto U02zG; B01dB: } protected function _get_migration_number($migration) { return sscanf($migration, "\45\x5b\60\x2d\x39\x5d\53", $number) ? $number : "\60"; } protected function _get_migration_name($migration) { goto IkJzF; M1Z4I: array_shift($parts); goto tGz2p; IkJzF: $parts = explode("\137", $migration); goto M1Z4I; tGz2p: return implode("\137", $parts); goto Z8jff; Z8jff: } protected function _get_version() { $row = $this->db->select("\x76\x65\162\163\x69\157\x6e")->get($this->_migration_table)->row(); return $row ? $row->version : "\x30"; } protected function _update_version($migration) { $this->db->update($this->_migration_table, array("\166\145\162\x73\151\157\156" => $migration)); } public function __get($var) { return get_instance()->{$var}; } }
