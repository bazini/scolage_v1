<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:17              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\102\101\x53\x45\120\101\124\x48") or exit("\116\x6f\x20\144\151\162\145\x63\164\40\x73\143\x72\151\x70\164\x20\141\x63\143\x65\x73\163\40\141\x6c\x6c\157\x77\x65\144"); class MY_Lang extends CI_Lang { public $base_language = "\x65\x6e\x67\154\x69\163\x68"; public function __construct() { parent::__construct(); } public function load($langfile, $idiom = '', $return = FALSE, $add_suffix = TRUE, $alt_path = '') { goto SHf2z; jf1zU: $this->is_loaded[$langfile] = $idiom; goto v9Hsn; mDqwO: if (($found = file_exists($basepath)) === TRUE) { include $basepath; } goto ZxX5Q; ztRQk: $basepath = SYSDIR . "\154\141\156\147\165\x61\x67\x65\57" . $this->base_language . "\x2f" . $langfile; goto D4CA9; v9Hsn: $this->language = array_merge($this->language, $lang); goto t3ZLH; IP8tM: return TRUE; goto wzRuQ; hXcDJ: if (empty($idiom) or !preg_match("\57\136\133\x61\55\x7a\x5f\55\x5d\x2b\x24\x2f\151", $idiom)) { $config =& get_config(); $idiom = empty($config["\x6c\x61\x6e\147\x75\141\147\x65"]) ? $this->base_language : $config["\x6c\x61\x6e\147\165\141\147\x65"]; } goto Eo25r; i6iLU: if ($return === TRUE) { return $lang; } goto jf1zU; GhPeV: if (!isset($lang) or !is_array($lang)) { goto WCg0h; GNgwe: return; goto lBb9m; mbxKP: if ($return === TRUE) { return array(); } goto GNgwe; WCg0h: log_message("\145\162\x72\x6f\162", "\x4c\x61\156\x67\x75\x61\147\x65\x20\146\x69\x6c\145\40\x63\157\156\x74\141\151\156\163\x20\x6e\x6f\40\x64\x61\164\141\x3a\x20\x6c\x61\x6e\x67\x75\141\147\x65\x2f" . $idiom . "\57" . $langfile); goto mbxKP; lBb9m: } goto i6iLU; xC8Uq: $basepath = BASEPATH . "\x6c\x61\156\147\165\141\147\145\57" . $idiom . "\57" . $langfile; goto mDqwO; B2nb6: if ($add_suffix === TRUE) { $langfile = preg_replace("\x2f\x5f\154\141\156\147\x24\57", '', $langfile) . "\137\x6c\x61\x6e\147"; } goto TAre6; SHf2z: if (is_array($langfile)) { foreach ($langfile as $value) { $this->load($value, $idiom, $return, $add_suffix, $alt_path); } return; } goto wOK9A; wOK9A: $langfile = str_replace("\56\160\150\160", '', $langfile); goto B2nb6; N53Es: if ($found !== TRUE) { show_error("\125\x6e\141\142\154\145\40\164\x6f\40\154\x6f\141\x64\x20\164\x68\x65\40\x72\x65\x71\x75\x65\x73\164\x65\144\x20\x6c\x61\x6e\x67\x75\x61\x67\x65\x20\146\x69\x6c\x65\x3a\x20\154\x61\156\147\165\141\x67\x65\x2f" . $idiom . "\x2f" . $langfile); } goto GhPeV; D4CA9: if (($found = file_exists($basepath)) === TRUE) { include $basepath; } goto xC8Uq; Eo25r: if ($return === FALSE && isset($this->is_loaded[$langfile]) && $this->is_loaded[$langfile] === $idiom) { return; } goto ztRQk; t3ZLH: log_message("\151\x6e\146\x6f", "\x4c\141\156\147\x75\x61\147\145\x20\x66\151\154\145\x20\x6c\157\x61\x64\145\x64\72\x20\154\x61\156\x67\165\x61\147\145\x2f" . $idiom . "\x2f" . $langfile); goto IP8tM; TAre6: $langfile .= "\x2e\160\150\x70"; goto hXcDJ; ZxX5Q: if ($alt_path !== '') { $alt_path .= "\x6c\x61\156\147\165\x61\147\x65\x2f" . $idiom . "\x2f" . $langfile; if (file_exists($alt_path)) { include $alt_path; $found = TRUE; } } else { foreach (get_instance()->load->get_package_paths(TRUE) as $package_path) { $package_path .= "\154\x61\156\147\x75\141\147\x65\57" . $idiom . "\x2f" . $langfile; if ($basepath !== $package_path && file_exists($package_path)) { goto tSuSE; nLhQp: $found = TRUE; goto KyaBS; tSuSE: include $package_path; goto nLhQp; KyaBS: break; goto izVph; izVph: } } } goto N53Es; wzRuQ: } }
