<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:08              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Worksheet_HeaderFooterDrawing extends PHPExcel_Worksheet_Drawing implements PHPExcel_IComparable { private $path; protected $name; protected $offsetX; protected $offsetY; protected $width; protected $height; protected $resizeProportional; public function __construct() { goto OnUiL; rsZaJ: $this->name = ''; goto lQhQb; mMDx2: $this->width = 0; goto N299Z; Pj7VQ: $this->resizeProportional = true; goto uOx1W; OnUiL: $this->path = ''; goto rsZaJ; lQhQb: $this->offsetX = 0; goto HqjFt; HqjFt: $this->offsetY = 0; goto mMDx2; N299Z: $this->height = 0; goto Pj7VQ; uOx1W: } public function getName() { return $this->name; } public function setName($pValue = '') { $this->name = $pValue; return $this; } public function getOffsetX() { return $this->offsetX; } public function setOffsetX($pValue = 0) { $this->offsetX = $pValue; return $this; } public function getOffsetY() { return $this->offsetY; } public function setOffsetY($pValue = 0) { $this->offsetY = $pValue; return $this; } public function getWidth() { return $this->width; } public function setWidth($pValue = 0) { goto f3yCE; f3yCE: if ($this->resizeProportional && $pValue != 0) { $ratio = $this->width / $this->height; $this->height = round($ratio * $pValue); } goto XkTog; gCuDo: return $this; goto i2Pre; XkTog: $this->width = $pValue; goto gCuDo; i2Pre: } public function getHeight() { return $this->height; } public function setHeight($pValue = 0) { goto MNlT7; zM4Yn: return $this; goto LEw51; MNlT7: if ($this->resizeProportional && $pValue != 0) { $ratio = $this->width / $this->height; $this->width = round($ratio * $pValue); } goto f2QMr; f2QMr: $this->height = $pValue; goto zM4Yn; LEw51: } public function setWidthAndHeight($width = 0, $height = 0) { goto Whmah; ZW_Mr: return $this; goto b3xBM; Whmah: $xratio = $width / $this->width; goto xp_aG; xp_aG: $yratio = $height / $this->height; goto bu3CV; bu3CV: if ($this->resizeProportional && !($width == 0 || $height == 0)) { if ($xratio * $this->height < $height) { $this->height = ceil($xratio * $this->height); $this->width = $width; } else { $this->width = ceil($yratio * $this->width); $this->height = $height; } } goto ZW_Mr; b3xBM: } public function getResizeProportional() { return $this->resizeProportional; } public function setResizeProportional($pValue = true) { $this->resizeProportional = $pValue; return $this; } public function getFilename() { return basename($this->path); } public function getExtension() { $parts = explode("\56", basename($this->path)); return end($parts); } public function getPath() { return $this->path; } public function setPath($pValue = '', $pVerifyFile = true) { if ($pVerifyFile) { if (file_exists($pValue)) { $this->path = $pValue; if ($this->width == 0 && $this->height == 0) { list($this->width, $this->height) = getimagesize($pValue); } } else { throw new PHPExcel_Exception("\106\151\154\x65\x20{$pValue}\x20\156\157\164\x20\x66\157\165\x6e\x64\41"); } } else { $this->path = $pValue; } return $this; } public function getHashCode() { return md5($this->path . $this->name . $this->offsetX . $this->offsetY . $this->width . $this->height . __CLASS__); } public function __clone() { $vars = get_object_vars($this); foreach ($vars as $key => $value) { if (is_object($value)) { $this->{$key} = clone $value; } else { $this->{$key} = $value; } } } }
