<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:08              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Worksheet_RowCellIterator extends PHPExcel_Worksheet_CellIterator implements Iterator { protected $rowIndex; protected $startColumn = 0; protected $endColumn = 0; public function __construct(PHPExcel_Worksheet $subject = null, $rowIndex = 1, $startColumn = "\101", $endColumn = null) { goto HnSjc; iLRaI: $this->rowIndex = $rowIndex; goto NYzuQ; QK219: $this->resetStart($startColumn); goto uBuzp; NYzuQ: $this->resetEnd($endColumn); goto QK219; HnSjc: $this->subject = $subject; goto iLRaI; uBuzp: } public function __destruct() { unset($this->subject); } public function resetStart($startColumn = "\101") { goto OI6rx; OI6rx: $startColumnIndex = PHPExcel_Cell::columnIndexFromString($startColumn) - 1; goto qg_lZ; EWBi8: return $this; goto hVAxr; pOE3A: $this->adjustForExistingOnlyRange(); goto sJ738; qg_lZ: $this->startColumn = $startColumnIndex; goto pOE3A; sJ738: $this->seek(PHPExcel_Cell::stringFromColumnIndex($this->startColumn)); goto EWBi8; hVAxr: } public function resetEnd($endColumn = null) { goto VICH4; VICH4: $endColumn = $endColumn ? $endColumn : $this->subject->getHighestColumn(); goto Zx4dl; Zx4dl: $this->endColumn = PHPExcel_Cell::columnIndexFromString($endColumn) - 1; goto qGAFT; qGAFT: $this->adjustForExistingOnlyRange(); goto dlvaS; dlvaS: return $this; goto FW3Xy; FW3Xy: } public function seek($column = "\101") { goto X0BZx; ObELM: return $this; goto mQ4tl; s0NwR: if ($column < $this->startColumn || $column > $this->endColumn) { throw new PHPExcel_Exception("\103\157\x6c\165\155\x6e\40{$column}\x20\151\x73\x20\x6f\165\164\x20\157\x66\x20\x72\x61\x6e\147\x65\x20\x28{$this->startColumn}\40\55\x20{$this->endColumn}\x29"); } elseif ($this->onlyExistingCells && !$this->subject->cellExistsByColumnAndRow($column, $this->rowIndex)) { throw new PHPExcel_Exception("\x49\x6e\x20\42\111\x74\x65\x72\x61\164\x65\117\156\154\x79\105\x78\x69\x73\x74\151\x6e\x67\x43\x65\154\x6c\x73\42\x20\x6d\x6f\x64\x65\x20\x61\156\x64\x20\103\145\154\154\40\144\x6f\x65\163\x20\156\157\164\x20\x65\x78\151\x73\x74"); } goto ZRrOM; X0BZx: $column = PHPExcel_Cell::columnIndexFromString($column) - 1; goto s0NwR; ZRrOM: $this->position = $column; goto ObELM; mQ4tl: } public function rewind() { $this->position = $this->startColumn; } public function current() { return $this->subject->getCellByColumnAndRow($this->position, $this->rowIndex); } public function key() { return PHPExcel_Cell::stringFromColumnIndex($this->position); } public function next() { do { ++$this->position; } while ($this->onlyExistingCells && !$this->subject->cellExistsByColumnAndRow($this->position, $this->rowIndex) && $this->position <= $this->endColumn); } public function prev() { if ($this->position <= $this->startColumn) { throw new PHPExcel_Exception("\103\x6f\154\165\155\x6e\x20\151\163\x20\141\x6c\162\145\x61\144\x79\x20\x61\164\x20\164\x68\x65\x20\142\x65\x67\x69\x6e\x6e\151\x6e\147\x20\157\146\x20\x72\x61\156\x67\145\x20\x28" . PHPExcel_Cell::stringFromColumnIndex($this->endColumn) . "\40\55\x20" . PHPExcel_Cell::stringFromColumnIndex($this->endColumn) . "\x29"); } do { --$this->position; } while ($this->onlyExistingCells && !$this->subject->cellExistsByColumnAndRow($this->position, $this->rowIndex) && $this->position >= $this->startColumn); } public function valid() { return $this->position <= $this->endColumn; } protected function adjustForExistingOnlyRange() { if ($this->onlyExistingCells) { goto FOOPV; u0i73: while (!$this->subject->cellExistsByColumnAndRow($this->endColumn, $this->rowIndex) && $this->endColumn >= $this->startColumn) { --$this->endColumn; } goto KB5F7; KB5F7: if ($this->endColumn < $this->startColumn) { throw new PHPExcel_Exception("\116\157\x20\x63\145\x6c\154\163\x20\145\170\151\163\164\40\x77\x69\164\150\151\x6e\40\164\150\x65\40\163\x70\145\x63\x69\x66\151\145\x64\x20\162\141\x6e\147\x65"); } goto sOlUd; PxtmJ: if ($this->startColumn > $this->endColumn) { throw new PHPExcel_Exception("\x4e\x6f\40\x63\x65\154\x6c\x73\x20\x65\x78\x69\163\164\x20\x77\x69\x74\150\x69\156\x20\164\x68\x65\x20\163\x70\x65\x63\151\x66\x69\x65\144\x20\162\141\156\x67\x65"); } goto u0i73; FOOPV: while (!$this->subject->cellExistsByColumnAndRow($this->startColumn, $this->rowIndex) && $this->startColumn <= $this->endColumn) { ++$this->startColumn; } goto PxtmJ; sOlUd: } } }
