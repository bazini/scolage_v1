<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:07              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Worksheet_Drawing_Shadow implements PHPExcel_IComparable { const SHADOW_BOTTOM = "\142"; const SHADOW_BOTTOM_LEFT = "\x62\154"; const SHADOW_BOTTOM_RIGHT = "\142\162"; const SHADOW_CENTER = "\x63\x74\x72"; const SHADOW_LEFT = "\154"; const SHADOW_TOP = "\164"; const SHADOW_TOP_LEFT = "\x74\154"; const SHADOW_TOP_RIGHT = "\x74\x72"; private $visible; private $blurRadius; private $distance; private $direction; private $alignment; private $color; private $alpha; public function __construct() { goto EgqQm; nrUEe: $this->alignment = PHPExcel_Worksheet_Drawing_Shadow::SHADOW_BOTTOM_RIGHT; goto kGBZz; mM3Bl: $this->blurRadius = 6; goto lTsAw; kGBZz: $this->color = new PHPExcel_Style_Color(PHPExcel_Style_Color::COLOR_BLACK); goto Xgk1l; EgqQm: $this->visible = false; goto mM3Bl; lTsAw: $this->distance = 2; goto vK50O; vK50O: $this->direction = 0; goto nrUEe; Xgk1l: $this->alpha = 50; goto AKVMt; AKVMt: } public function getVisible() { return $this->visible; } public function setVisible($pValue = false) { $this->visible = $pValue; return $this; } public function getBlurRadius() { return $this->blurRadius; } public function setBlurRadius($pValue = 6) { $this->blurRadius = $pValue; return $this; } public function getDistance() { return $this->distance; } public function setDistance($pValue = 2) { $this->distance = $pValue; return $this; } public function getDirection() { return $this->direction; } public function setDirection($pValue = 0) { $this->direction = $pValue; return $this; } public function getAlignment() { return $this->alignment; } public function setAlignment($pValue = 0) { $this->alignment = $pValue; return $this; } public function getColor() { return $this->color; } public function setColor(PHPExcel_Style_Color $pValue = null) { $this->color = $pValue; return $this; } public function getAlpha() { return $this->alpha; } public function setAlpha($pValue = 0) { $this->alpha = $pValue; return $this; } public function getHashCode() { return md5(($this->visible ? "\x74" : "\x66") . $this->blurRadius . $this->distance . $this->direction . $this->alignment . $this->color->getHashCode() . $this->alpha . __CLASS__); } public function __clone() { $vars = get_object_vars($this); foreach ($vars as $key => $value) { if (is_object($value)) { $this->{$key} = clone $value; } else { $this->{$key} = $value; } } } }
