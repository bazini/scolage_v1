<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:08              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Worksheet_ColumnCellIterator extends PHPExcel_Worksheet_CellIterator implements Iterator { protected $columnIndex; protected $startRow = 1; protected $endRow = 1; public function __construct(PHPExcel_Worksheet $subject = null, $columnIndex = "\x41", $startRow = 1, $endRow = null) { goto p0P3V; o6dQX: $this->resetStart($startRow); goto LoyRx; mcKn6: $this->columnIndex = PHPExcel_Cell::columnIndexFromString($columnIndex) - 1; goto hXBRb; p0P3V: $this->subject = $subject; goto mcKn6; hXBRb: $this->resetEnd($endRow); goto o6dQX; LoyRx: } public function __destruct() { unset($this->subject); } public function resetStart($startRow = 1) { goto Tm_is; AOT2X: return $this; goto RbB5E; xqkRU: $this->adjustForExistingOnlyRange(); goto KGQ0q; Tm_is: $this->startRow = $startRow; goto xqkRU; KGQ0q: $this->seek($startRow); goto AOT2X; RbB5E: } public function resetEnd($endRow = null) { goto RjDDl; agneU: $this->adjustForExistingOnlyRange(); goto loisq; RjDDl: $this->endRow = $endRow ? $endRow : $this->subject->getHighestRow(); goto agneU; loisq: return $this; goto qIiaH; qIiaH: } public function seek($row = 1) { goto wD4Dn; Bss2P: return $this; goto xGey5; wD4Dn: if ($row < $this->startRow || $row > $this->endRow) { throw new PHPExcel_Exception("\122\x6f\167\40{$row}\x20\151\x73\x20\x6f\165\164\40\157\146\x20\x72\x61\156\x67\x65\x20\50{$this->startRow}\x20\x2d\40{$this->endRow}\51"); } elseif ($this->onlyExistingCells && !$this->subject->cellExistsByColumnAndRow($this->columnIndex, $row)) { throw new PHPExcel_Exception("\111\156\40\x22\111\164\x65\x72\x61\164\145\x4f\x6e\x6c\x79\105\x78\x69\x73\x74\151\x6e\147\x43\145\x6c\154\163\42\40\x6d\157\144\x65\x20\141\156\x64\40\x43\145\154\154\x20\144\157\145\163\x20\156\x6f\x74\x20\x65\x78\x69\x73\x74"); } goto SCa4I; SCa4I: $this->position = $row; goto Bss2P; xGey5: } public function rewind() { $this->position = $this->startRow; } public function current() { return $this->subject->getCellByColumnAndRow($this->columnIndex, $this->position); } public function key() { return $this->position; } public function next() { do { ++$this->position; } while ($this->onlyExistingCells && !$this->subject->cellExistsByColumnAndRow($this->columnIndex, $this->position) && $this->position <= $this->endRow); } public function prev() { if ($this->position <= $this->startRow) { throw new PHPExcel_Exception("\122\157\167\x20\151\x73\x20\x61\x6c\x72\145\x61\144\171\x20\141\x74\40\x74\150\x65\x20\142\145\x67\151\156\x6e\x69\156\x67\40\x6f\146\40\x72\x61\x6e\147\145\x20\x28{$this->startRow}\40\55\40{$this->endRow}\51"); } do { --$this->position; } while ($this->onlyExistingCells && !$this->subject->cellExistsByColumnAndRow($this->columnIndex, $this->position) && $this->position >= $this->startRow); } public function valid() { return $this->position <= $this->endRow; } protected function adjustForExistingOnlyRange() { if ($this->onlyExistingCells) { goto LMqFb; aCpeh: if ($this->startRow > $this->endRow) { throw new PHPExcel_Exception("\116\x6f\40\143\x65\x6c\154\163\x20\x65\x78\151\163\x74\40\167\151\164\150\151\156\x20\x74\x68\x65\40\163\x70\x65\x63\x69\x66\x69\x65\x64\40\x72\141\x6e\147\145"); } goto nCqkR; RO7iL: if ($this->endRow < $this->startRow) { throw new PHPExcel_Exception("\116\157\40\x63\x65\x6c\x6c\x73\x20\x65\170\151\163\x74\x20\167\151\x74\150\151\x6e\x20\164\x68\x65\x20\163\x70\145\x63\151\146\x69\x65\x64\40\162\x61\x6e\147\145"); } goto GSz3P; LMqFb: while (!$this->subject->cellExistsByColumnAndRow($this->columnIndex, $this->startRow) && $this->startRow <= $this->endRow) { ++$this->startRow; } goto aCpeh; nCqkR: while (!$this->subject->cellExistsByColumnAndRow($this->columnIndex, $this->endRow) && $this->endRow >= $this->startRow) { --$this->endRow; } goto RO7iL; GSz3P: } } }
