<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:03              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Style extends PHPExcel_Style_Supervisor implements PHPExcel_IComparable { protected $font; protected $fill; protected $borders; protected $alignment; protected $numberFormat; protected $conditionalStyles; protected $protection; protected $index; protected $quotePrefix = false; public function __construct($isSupervisor = false, $isConditional = false) { goto DWcUb; QbkHb: $this->conditionalStyles = array(); goto OVELH; OVELH: $this->font = new PHPExcel_Style_Font($isSupervisor, $isConditional); goto J8nqx; Aso07: $this->borders = new PHPExcel_Style_Borders($isSupervisor, $isConditional); goto F1_QT; F1_QT: $this->alignment = new PHPExcel_Style_Alignment($isSupervisor, $isConditional); goto n9VTd; R3h8f: if ($isSupervisor) { goto nHWoE; CVrO1: $this->protection->bindParent($this); goto avybZ; E39aO: $this->fill->bindParent($this); goto DN9nL; BOgz7: $this->alignment->bindParent($this); goto QNtyn; QNtyn: $this->numberFormat->bindParent($this); goto CVrO1; nHWoE: $this->font->bindParent($this); goto E39aO; DN9nL: $this->borders->bindParent($this); goto BOgz7; avybZ: } goto Ev7rO; n9VTd: $this->numberFormat = new PHPExcel_Style_NumberFormat($isSupervisor, $isConditional); goto pUdxx; J8nqx: $this->fill = new PHPExcel_Style_Fill($isSupervisor, $isConditional); goto Aso07; DWcUb: $this->isSupervisor = $isSupervisor; goto QbkHb; pUdxx: $this->protection = new PHPExcel_Style_Protection($isSupervisor, $isConditional); goto R3h8f; Ev7rO: } public function getSharedComponent() { goto G8xkU; aZ3Fc: return $this->parent->getCellXfByIndex($xfIndex); goto pL8hS; H3QFC: if ($activeSheet->cellExists($selectedCell)) { $xfIndex = $activeSheet->getCell($selectedCell)->getXfIndex(); } else { $xfIndex = 0; } goto aZ3Fc; G8xkU: $activeSheet = $this->getActiveSheet(); goto oeCRf; oeCRf: $selectedCell = $this->getActiveCell(); goto H3QFC; pL8hS: } public function getParent() { return $this->parent; } public function getStyleArray($array) { return array("\x71\x75\x6f\164\x65\x50\162\145\x66\x69\x78" => $array); } public function applyFromArray($pStyles = null, $pAdvanced = true) { if (is_array($pStyles)) { if ($this->isSupervisor) { goto aKWly; q0TVc: switch ($selectionType) { case "\x43\117\x4c\125\x4d\116": for ($col = $rangeStart[0]; $col <= $rangeEnd[0]; ++$col) { $columnDimension = $this->getActiveSheet()->getColumnDimensionByColumn($col); $oldXfIndex = $columnDimension->getXfIndex(); $columnDimension->setXfIndex($newXfIndexes[$oldXfIndex]); } break; case "\122\x4f\127": for ($row = $rangeStart[1]; $row <= $rangeEnd[1]; ++$row) { $rowDimension = $this->getActiveSheet()->getRowDimension($row); $oldXfIndex = $rowDimension->getXfIndex() === null ? 0 : $rowDimension->getXfIndex(); $rowDimension->setXfIndex($newXfIndexes[$oldXfIndex]); } break; case "\103\105\x4c\x4c": for ($col = $rangeStart[0]; $col <= $rangeEnd[0]; ++$col) { for ($row = $rangeStart[1]; $row <= $rangeEnd[1]; ++$row) { $cell = $this->getActiveSheet()->getCellByColumnAndRow($col, $row); $oldXfIndex = $cell->getXfIndex(); $cell->setXfIndex($newXfIndexes[$oldXfIndex]); } } break; } goto XgcU5; OyEFJ: $rangeStart = PHPExcel_Cell::coordinateFromString($rangeA); goto Fe_Cn; aKWly: $pRange = $this->getSelectedCells(); goto aqGVH; XszHT: switch ($selectionType) { case "\103\117\114\125\x4d\116": goto pfpA_; pfpA_: $oldXfIndexes = array(); goto zgRue; Ye2Eg: break; goto cHoc_; zgRue: for ($col = $rangeStart[0]; $col <= $rangeEnd[0]; ++$col) { $oldXfIndexes[$this->getActiveSheet()->getColumnDimensionByColumn($col)->getXfIndex()] = true; } goto Ye2Eg; cHoc_: case "\x52\117\127": goto wkBMA; scOhc: break; goto iVdM8; wkBMA: $oldXfIndexes = array(); goto liOAK; liOAK: for ($row = $rangeStart[1]; $row <= $rangeEnd[1]; ++$row) { if ($this->getActiveSheet()->getRowDimension($row)->getXfIndex() == null) { $oldXfIndexes[0] = true; } else { $oldXfIndexes[$this->getActiveSheet()->getRowDimension($row)->getXfIndex()] = true; } } goto scOhc; iVdM8: case "\103\x45\x4c\x4c": goto KNJMQ; KNJMQ: $oldXfIndexes = array(); goto xWdWj; xWdWj: for ($col = $rangeStart[0]; $col <= $rangeEnd[0]; ++$col) { for ($row = $rangeStart[1]; $row <= $rangeEnd[1]; ++$row) { $oldXfIndexes[$this->getActiveSheet()->getCellByColumnAndRow($col, $row)->getXfIndex()] = true; } } goto Gn3oV; Gn3oV: break; goto Ksa6w; Ksa6w: } goto uKKP5; X057R: if ($pAdvanced && isset($pStyles["\142\x6f\162\x64\x65\162\x73"])) { goto eGwbV; M8zaP: if (isset($pStyles["\x62\x6f\x72\144\x65\x72\163"]["\x6f\x75\164\154\151\156\145"])) { foreach (array("\x74\x6f\x70", "\162\x69\x67\150\164", "\142\x6f\164\x74\157\x6d", "\154\145\x66\164") as $component) { if (!isset($pStyles["\x62\x6f\x72\144\145\162\x73"][$component])) { $pStyles["\x62\157\162\144\145\x72\163"][$component] = $pStyles["\x62\157\x72\x64\x65\x72\x73"]["\157\x75\164\154\151\x6e\x65"]; } } unset($pStyles["\x62\x6f\162\144\145\162\163"]["\157\x75\x74\154\151\x6e\145"]); } goto f8e98; EVzBF: return $this; goto o80Fr; f8e98: if (isset($pStyles["\142\x6f\x72\144\x65\162\163"]["\x69\156\x73\151\144\x65"])) { foreach (array("\166\145\x72\x74\x69\143\x61\154", "\x68\157\x72\151\x7a\x6f\x6e\x74\x61\x6c") as $component) { if (!isset($pStyles["\x62\157\162\x64\145\x72\163"][$component])) { $pStyles["\142\157\x72\x64\x65\162\x73"][$component] = $pStyles["\142\157\x72\x64\145\x72\x73"]["\x69\156\x73\151\144\x65"]; } } unset($pStyles["\x62\x6f\x72\144\145\x72\x73"]["\151\156\x73\151\x64\145"]); } goto RvRXH; bmOOU: $yMax = min($rangeEnd[1] - $rangeStart[1] + 1, 3); goto KYGT3; KYGT3: for ($x = 1; $x <= $xMax; ++$x) { $colStart = $x == 3 ? PHPExcel_Cell::stringFromColumnIndex($rangeEnd[0]) : PHPExcel_Cell::stringFromColumnIndex($rangeStart[0] + $x - 1); $colEnd = $x == 1 ? PHPExcel_Cell::stringFromColumnIndex($rangeStart[0]) : PHPExcel_Cell::stringFromColumnIndex($rangeEnd[0] - $xMax + $x); for ($y = 1; $y <= $yMax; ++$y) { $edges = array(); if ($x == 1) { $edges[] = "\154\145\x66\x74"; } if ($x == $xMax) { $edges[] = "\162\151\147\150\164"; } if ($y == 1) { $edges[] = "\x74\157\x70"; } if ($y == $yMax) { $edges[] = "\142\x6f\x74\x74\x6f\x6d"; } $rowStart = $y == 3 ? $rangeEnd[1] : $rangeStart[1] + $y - 1; $rowEnd = $y == 1 ? $rangeStart[1] : $rangeEnd[1] - $yMax + $y; $range = $colStart . $rowStart . "\72" . $colEnd . $rowEnd; $regionStyles = $pStyles; unset($regionStyles["\142\157\x72\144\x65\x72\x73"]["\x69\x6e\x73\x69\x64\145"]); $innerEdges = array_diff(array("\164\157\160", "\x72\151\x67\150\x74", "\x62\x6f\164\x74\x6f\155", "\x6c\145\146\164"), $edges); foreach ($innerEdges as $innerEdge) { switch ($innerEdge) { case "\x74\x6f\x70": case "\142\157\x74\x74\x6f\155": if (isset($pStyles["\142\157\162\144\x65\162\x73"]["\150\x6f\162\x69\x7a\x6f\156\164\141\x6c"])) { $regionStyles["\142\x6f\162\x64\x65\x72\x73"][$innerEdge] = $pStyles["\142\157\x72\144\145\162\163"]["\x68\x6f\162\151\x7a\157\156\164\x61\x6c"]; } else { unset($regionStyles["\142\157\162\x64\145\x72\163"][$innerEdge]); } break; case "\154\x65\x66\164": case "\162\151\x67\x68\x74": if (isset($pStyles["\142\157\x72\144\145\162\x73"]["\166\145\162\x74\151\x63\141\x6c"])) { $regionStyles["\x62\157\162\144\x65\x72\x73"][$innerEdge] = $pStyles["\x62\157\162\x64\145\162\163"]["\x76\x65\162\x74\x69\x63\x61\x6c"]; } else { unset($regionStyles["\142\x6f\162\144\x65\x72\x73"][$innerEdge]); } break; } } $this->getActiveSheet()->getStyle($range)->applyFromArray($regionStyles, false); } } goto EVzBF; RvRXH: $xMax = min($rangeEnd[0] - $rangeStart[0] + 1, 3); goto bmOOU; eGwbV: if (isset($pStyles["\x62\157\162\144\145\x72\163"]["\x61\x6c\x6c\142\x6f\162\x64\x65\x72\163"])) { foreach (array("\157\165\x74\154\151\156\x65", "\151\156\163\x69\x64\145") as $component) { if (!isset($pStyles["\x62\x6f\x72\x64\145\x72\163"][$component])) { $pStyles["\142\157\162\x64\145\162\163"][$component] = $pStyles["\x62\157\162\144\145\162\163"]["\141\154\154\142\x6f\162\144\x65\x72\x73"]; } } unset($pStyles["\x62\x6f\162\144\145\x72\x73"]["\x61\x6c\x6c\x62\157\162\x64\145\162\163"]); } goto M8zaP; o80Fr: } goto oJr1v; eFMAm: $rangeEnd[0] = PHPExcel_Cell::columnIndexFromString($rangeEnd[0]) - 1; goto LUJ7u; aqGVH: $pRange = strtoupper($pRange); goto onzSz; X90UC: $rangeStart[0] = PHPExcel_Cell::columnIndexFromString($rangeStart[0]) - 1; goto eFMAm; LUJ7u: if ($rangeStart[0] > $rangeEnd[0] && $rangeStart[1] > $rangeEnd[1]) { goto DStT5; hi0ry: $rangeStart = $rangeEnd; goto T9YL7; T9YL7: $rangeEnd = $tmp; goto CMC6D; DStT5: $tmp = $rangeStart; goto hi0ry; CMC6D: } goto X057R; onzSz: if (strpos($pRange, "\72") === false) { $rangeA = $pRange; $rangeB = $pRange; } else { list($rangeA, $rangeB) = explode("\72", $pRange); } goto OyEFJ; uKKP5: $workbook = $this->getActiveSheet()->getParent(); goto qIZf7; qIZf7: foreach ($oldXfIndexes as $oldXfIndex => $dummy) { goto exV_W; bRG_E: $newStyle = clone $style; goto caehr; caehr: $newStyle->applyFromArray($pStyles); goto mh38S; mh38S: if ($existingStyle = $workbook->getCellXfByHashCode($newStyle->getHashCode())) { $newXfIndexes[$oldXfIndex] = $existingStyle->getIndex(); } else { $workbook->addCellXf($newStyle); $newXfIndexes[$oldXfIndex] = $newStyle->getIndex(); } goto PWwQO; exV_W: $style = $workbook->getCellXfByIndex($oldXfIndex); goto bRG_E; PWwQO: } goto q0TVc; oJr1v: if (preg_match("\57\136\x5b\x41\x2d\x5a\135\53\x31\72\x5b\101\55\132\135\53\x31\x30\64\70\x35\x37\x36\44\57", $pRange)) { $selectionType = "\x43\x4f\114\x55\115\116"; } elseif (preg_match("\x2f\136\101\133\x30\55\71\x5d\53\72\x58\x46\104\133\x30\x2d\x39\135\x2b\x24\57", $pRange)) { $selectionType = "\x52\x4f\127"; } else { $selectionType = "\x43\x45\x4c\x4c"; } goto XszHT; Fe_Cn: $rangeEnd = PHPExcel_Cell::coordinateFromString($rangeB); goto X90UC; XgcU5: } else { goto FY1zZ; GkM3Y: if (array_key_exists("\x62\x6f\x72\x64\x65\162\x73", $pStyles)) { $this->getBorders()->applyFromArray($pStyles["\x62\157\x72\144\x65\162\163"]); } goto vOdLD; vOdLD: if (array_key_exists("\x61\x6c\x69\x67\x6e\x6d\145\156\164", $pStyles)) { $this->getAlignment()->applyFromArray($pStyles["\141\154\151\x67\x6e\155\x65\x6e\164"]); } goto EBAYV; vsUcv: if (array_key_exists("\x66\x6f\156\164", $pStyles)) { $this->getFont()->applyFromArray($pStyles["\x66\157\156\x74"]); } goto GkM3Y; EBAYV: if (array_key_exists("\156\x75\x6d\142\145\x72\146\x6f\x72\x6d\141\164", $pStyles)) { $this->getNumberFormat()->applyFromArray($pStyles["\x6e\x75\x6d\x62\145\162\x66\x6f\162\x6d\x61\x74"]); } goto UdytY; UdytY: if (array_key_exists("\160\x72\157\164\x65\143\164\151\157\x6e", $pStyles)) { $this->getProtection()->applyFromArray($pStyles["\x70\x72\157\x74\x65\x63\x74\x69\157\x6e"]); } goto bu3Tb; FY1zZ: if (array_key_exists("\x66\x69\x6c\154", $pStyles)) { $this->getFill()->applyFromArray($pStyles["\x66\151\x6c\x6c"]); } goto vsUcv; bu3Tb: if (array_key_exists("\161\165\x6f\164\145\120\x72\x65\x66\x69\x78", $pStyles)) { $this->quotePrefix = $pStyles["\x71\x75\x6f\164\x65\120\162\145\x66\151\170"]; } goto fYwog; fYwog: } } else { throw new PHPExcel_Exception("\x49\x6e\166\141\x6c\151\144\x20\x73\164\171\154\x65\x20\x61\162\x72\x61\x79\40\160\141\x73\163\145\x64\56"); } return $this; } public function getFill() { return $this->fill; } public function getFont() { return $this->font; } public function setFont(PHPExcel_Style_Font $font) { $this->font = $font; return $this; } public function getBorders() { return $this->borders; } public function getAlignment() { return $this->alignment; } public function getNumberFormat() { return $this->numberFormat; } public function getConditionalStyles() { return $this->getActiveSheet()->getConditionalStyles($this->getActiveCell()); } public function setConditionalStyles($pValue = null) { if (is_array($pValue)) { $this->getActiveSheet()->setConditionalStyles($this->getSelectedCells(), $pValue); } return $this; } public function getProtection() { return $this->protection; } public function getQuotePrefix() { if ($this->isSupervisor) { return $this->getSharedComponent()->getQuotePrefix(); } return $this->quotePrefix; } public function setQuotePrefix($pValue) { goto UUao3; qoT2X: return $this; goto BJPGE; UUao3: if ($pValue == '') { $pValue = false; } goto i6pRb; i6pRb: if ($this->isSupervisor) { $styleArray = array("\161\165\157\164\145\120\x72\145\146\x69\x78" => $pValue); $this->getActiveSheet()->getStyle($this->getSelectedCells())->applyFromArray($styleArray); } else { $this->quotePrefix = (bool) $pValue; } goto qoT2X; BJPGE: } public function getHashCode() { goto r69Pl; pNU_v: return md5($this->fill->getHashCode() . $this->font->getHashCode() . $this->borders->getHashCode() . $this->alignment->getHashCode() . $this->numberFormat->getHashCode() . $hashConditionals . $this->protection->getHashCode() . ($this->quotePrefix ? "\x74" : "\146") . __CLASS__); goto pVGdD; r69Pl: $hashConditionals = ''; goto CRwmV; CRwmV: foreach ($this->conditionalStyles as $conditional) { $hashConditionals .= $conditional->getHashCode(); } goto pNU_v; pVGdD: } public function getIndex() { return $this->index; } public function setIndex($pValue) { $this->index = $pValue; } }
