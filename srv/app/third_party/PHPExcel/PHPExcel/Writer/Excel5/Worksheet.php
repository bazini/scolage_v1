<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:07              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Writer_Excel5_Worksheet extends PHPExcel_Writer_Excel5_BIFFwriter { private $parser; private $xlsStringMaxLength; private $columnInfo; private $selection; private $activePane; private $outlineOn; private $outlineStyle; private $outlineBelow; private $outlineRight; private $stringTotal; private $stringUnique; private $stringTable; private $colors; private $firstRowIndex; private $lastRowIndex; private $firstColumnIndex; private $lastColumnIndex; public $phpSheet; private $countCellStyleXfs; private $escher; public $fontHashIndex; public function __construct(&$str_total, &$str_unique, &$str_table, &$colors, $parser, $preCalculateFormulas, $phpSheet) { goto Wj5g2; CF_0y: $this->columnInfo = array(); goto Db_tX; b2uqn: $this->stringUnique =& $str_unique; goto kOmWR; paS5l: if ($this->lastColumnIndex > 255) { $this->lastColumnIndex = 255; } goto Bu0mB; Qzj2V: $maxC = $this->phpSheet->getHighestColumn(); goto q6W4S; kOmWR: $this->stringTable =& $str_table; goto qy0UT; vgLpe: $this->phpSheet = $phpSheet; goto arBFc; s3fPC: $this->outlineStyle = 0; goto XGWHN; sPEJw: $this->fontHashIndex = array(); goto lw3Ky; HgfDc: $this->firstColumnIndex = PHPExcel_Cell::columnIndexFromString($minC); goto eDT1w; Sj6fQ: $this->stringTotal =& $str_total; goto b2uqn; Db_tX: $this->selection = array(0, 0, 0, 0); goto D8qEj; Bu0mB: $this->countCellStyleXfs = count($phpSheet->getParent()->getCellStyleXfCollection()); goto oP4c8; I8r1c: $maxR = $this->phpSheet->getHighestRow(); goto Qzj2V; HMJan: $this->outlineRight = 1; goto anpjo; lw3Ky: $minR = 1; goto mRZP8; F6fE7: $this->_preCalculateFormulas = $preCalculateFormulas; goto Sj6fQ; mRZP8: $minC = "\101"; goto I8r1c; eDT1w: $this->lastColumnIndex = PHPExcel_Cell::columnIndexFromString($maxC); goto paS5l; qy0UT: $this->colors =& $colors; goto qJeIO; qJeIO: $this->parser = $parser; goto vgLpe; XGWHN: $this->outlineBelow = 1; goto HMJan; q6W4S: $this->lastRowIndex = $maxR > 65535 ? 65535 : $maxR; goto HgfDc; Wj5g2: parent::__construct(); goto F6fE7; D8qEj: $this->activePane = 3; goto tilmz; anpjo: $this->outlineOn = 1; goto sPEJw; arBFc: $this->xlsStringMaxLength = 255; goto CF_0y; tilmz: $this->_print_headers = 0; goto s3fPC; oP4c8: } public function close() { goto EpUiM; iR3Hl: foreach ($phpSheet->getHyperLinkCollection() as $coordinate => $hyperlink) { goto bYSSR; wir23: if (strpos($url, "\163\150\145\145\164\x3a\57\57") !== false) { $url = str_replace("\x73\x68\145\145\x74\x3a\x2f\57", "\151\x6e\164\145\x72\156\141\x6c\72", $url); } elseif (preg_match("\57\136\50\150\164\164\x70\72\x7c\x68\164\x74\x70\x73\x3a\174\x66\164\x70\72\174\155\x61\x69\x6c\x74\157\x3a\x29\57", $url)) { } else { $url = "\145\170\x74\145\x72\156\141\x6c\x3a" . $url; } goto R0J9g; bYSSR: list($column, $row) = PHPExcel_Cell::coordinateFromString($coordinate); goto RveXa; R0J9g: $this->writeUrl($row - 1, PHPExcel_Cell::columnIndexFromString($column) - 1, $url); goto Z33RJ; RveXa: $url = $hyperlink->getUrl(); goto wir23; Z33RJ: } goto tGJ4L; UBPPp: $this->writePassword(); goto wBvVo; NdFuM: $this->writePageLayoutView(); goto hL4S8; zXqqR: $arrConditionalStyles = $phpSheet->getConditionalStylesCollection(); goto Tn7KI; wLIpL: $maxCol = $this->lastColumnIndex - 1; goto xZ2X6; HHms4: $this->writeFooter(); goto s2dJF; vt5Ci: $this->writeHeader(); goto HHms4; tGJ4L: $this->writeDataValidity(); goto H9cwD; A0Sgd: $this->writeScenProtect(); goto zjSjK; RBT_0: $autoFilterRange = $phpSheet->getAutoFilter()->getRange(); goto mL32i; uvgaU: $this->writeProtect(); goto A0Sgd; hKhRe: $this->writeMarginBottom(); goto mjVg8; cT0lj: if ($phpSheet->getFreezePane()) { $this->writePanes(); } goto cmBRS; cmBRS: $this->writeSelection(); goto lFIUx; NrzHm: if (($defaultWidth = $phpSheet->getDefaultColumnDimension()->getWidth()) < 0) { $defaultWidth = PHPExcel_Shared_Font::getDefaultColumnWidthByFont($phpSheet->getParent()->getDefaultStyle()->getFont()); } goto cO7Pp; wBvVo: $this->writeDefcol(); goto ATa9q; lFIUx: $this->writeMergedCells(); goto iR3Hl; pJjRO: $this->writeMsoDrawing(); goto IC0E6; cO7Pp: $columnDimensions = $phpSheet->getColumnDimensions(); goto wLIpL; v3lQ9: foreach ($phpSheet->getRowDimensions() as $rowDimension) { $xfIndex = $rowDimension->getXfIndex() + 15; $this->writeRow($rowDimension->getRowIndex() - 1, $rowDimension->getRowHeight(), $xfIndex, $rowDimension->getVisible() ? "\60" : "\61", $rowDimension->getOutlineLevel()); } goto yTuRd; BoQq4: $this->storeEof(); goto dk21B; hL4S8: $this->writeZoom(); goto cT0lj; mjVg8: $this->writeSetup(); goto uvgaU; Tn7KI: if (!empty($arrConditionalStyles)) { goto Teh0c; Teh0c: $arrConditional = array(); goto wu6Rw; FJvdP: foreach ($arrConditionalStyles as $cellCoordinate => $conditionalStyles) { foreach ($conditionalStyles as $conditional) { if ($conditional->getConditionType() == PHPExcel_Style_Conditional::CONDITION_EXPRESSION || $conditional->getConditionType() == PHPExcel_Style_Conditional::CONDITION_CELLIS) { if (!in_array($conditional->getHashCode(), $arrConditional)) { $arrConditional[] = $conditional->getHashCode(); $this->writeCFRule($conditional); } } } } goto MUUtI; wu6Rw: $this->writeCFHeader(); goto FJvdP; MUUtI: } goto BoQq4; WCxye: $this->writeWsbool(); goto dQXUJ; dQXUJ: $this->writeBreaks(); goto vt5Ci; zjSjK: $this->writeObjectProtect(); goto UBPPp; ATa9q: if (!empty($this->columnInfo)) { $colcount = count($this->columnInfo); for ($i = 0; $i < $colcount; ++$i) { $this->writeColinfo($this->columnInfo[$i]); } } goto RBT_0; BxKVK: $this->storeBof(0x10); goto KweTc; KweTc: $this->writePrintHeaders(); goto vFuU1; EKK1A: $num_sheets = $phpSheet->getParent()->getSheetCount(); goto BxKVK; xZ2X6: for ($i = 0; $i <= $maxCol; ++$i) { $hidden = 0; $level = 0; $xfIndex = 15; $width = $defaultWidth; $columnLetter = PHPExcel_Cell::stringFromColumnIndex($i); if (isset($columnDimensions[$columnLetter])) { goto xkg4G; xkg4G: $columnDimension = $columnDimensions[$columnLetter]; goto DL_bU; bIVgJ: $level = $columnDimension->getOutlineLevel(); goto E0P6f; aFP7X: $hidden = $columnDimension->getVisible() ? 0 : 1; goto bIVgJ; E0P6f: $xfIndex = $columnDimension->getXfIndex() + 15; goto VUVH6; DL_bU: if ($columnDimension->getWidth() >= 0) { $width = $columnDimension->getWidth(); } goto aFP7X; VUVH6: } $this->columnInfo[] = array($i, $i, $width, $xfIndex, $hidden, $level); } goto CPF6J; EpUiM: $phpSheet = $this->phpSheet; goto EKK1A; kvuOA: $this->writeGridset(); goto CcJol; UCUaM: $this->writeDefaultRowHeight(); goto WCxye; vzkDN: $this->writeVcenter(); goto fxTdy; IC0E6: $this->writeWindow2(); goto NdFuM; pS1Pp: $this->writeRangeProtection(); goto zXqqR; fxTdy: $this->writeMarginLeft(); goto jSWKw; mL32i: if (!empty($autoFilterRange)) { $this->writeAutoFilterInfo(); } goto o0bC3; H9cwD: $this->writeSheetLayout(); goto z_p3S; jSWKw: $this->writeMarginRight(); goto cHVH5; o0bC3: $this->writeDimensions(); goto v3lQ9; z_p3S: $this->writeSheetProtection(); goto pS1Pp; yTuRd: foreach ($phpSheet->getCellCollection() as $cellID) { goto WxSSp; jouIy: if ($row > 65535 || $column > 255) { break; } goto CiAWd; NcvS1: $column = PHPExcel_Cell::columnIndexFromString($cell->getColumn()) - 1; goto jouIy; iki5H: $row = $cell->getRow() - 1; goto NcvS1; WxSSp: $cell = $phpSheet->getCell($cellID); goto iki5H; tkMfH: if ($cVal instanceof PHPExcel_RichText) { goto VvVfu; oWOdY: $this->writeRichTextString($row, $column, $cVal->getPlainText(), $xfIndex, $arrcRun); goto Z8HEq; TtS2V: foreach ($elements as $element) { goto nhRTX; nhRTX: if ($element instanceof PHPExcel_RichText_Run) { $str_fontidx = $this->fontHashIndex[$element->getFont()->getHashCode()]; } else { $str_fontidx = 0; } goto X2WVG; X2WVG: $arrcRun[] = array("\x73\x74\162\154\x65\x6e" => $str_pos, "\146\x6f\x6e\x74\x69\x64\x78" => $str_fontidx); goto EJXde; EJXde: $str_pos += PHPExcel_Shared_String::CountCharacters($element->getText(), "\x55\124\106\55\70"); goto RqeWv; RqeWv: } goto oWOdY; UnYLy: $str_len = PHPExcel_Shared_String::CountCharacters($cVal->getPlainText(), "\125\x54\x46\55\70"); goto HzKxV; HzKxV: $str_pos = 0; goto JA28K; VvVfu: $arrcRun = array(); goto UnYLy; JA28K: $elements = $cVal->getRichTextElements(); goto TtS2V; Z8HEq: } else { switch ($cell->getDatatype()) { case PHPExcel_Cell_DataType::TYPE_STRING: case PHPExcel_Cell_DataType::TYPE_NULL: if ($cVal === '' || $cVal === null) { $this->writeBlank($row, $column, $xfIndex); } else { $this->writeString($row, $column, $cVal, $xfIndex); } break; case PHPExcel_Cell_DataType::TYPE_NUMERIC: $this->writeNumber($row, $column, $cVal, $xfIndex); break; case PHPExcel_Cell_DataType::TYPE_FORMULA: goto gV2ZI; iTXWE: break; goto ePWAT; ErPhi: $this->writeFormula($row, $column, $cVal, $xfIndex, $calculatedValue); goto iTXWE; gV2ZI: $calculatedValue = $this->_preCalculateFormulas ? $cell->getCalculatedValue() : null; goto ErPhi; ePWAT: case PHPExcel_Cell_DataType::TYPE_BOOL: $this->writeBoolErr($row, $column, $cVal, 0, $xfIndex); break; case PHPExcel_Cell_DataType::TYPE_ERROR: $this->writeBoolErr($row, $column, self::mapErrorCode($cVal), 1, $xfIndex); break; } } goto HPWeC; a0633: $cVal = $cell->getValue(); goto tkMfH; CiAWd: $xfIndex = $cell->getXfIndex() + 15; goto a0633; HPWeC: } goto pJjRO; CPF6J: $this->writeGuts(); goto UCUaM; CcJol: $phpSheet->calculateColumnWidths(); goto NrzHm; vFuU1: $this->writePrintGridlines(); goto kvuOA; cHVH5: $this->writeMarginTop(); goto hKhRe; s2dJF: $this->writeHcenter(); goto vzkDN; dk21B: } private function writeBIFF8CellRangeAddressFixed($range = "\101\x31") { goto J1j24; ExwcU: $firstCellCoordinates = PHPExcel_Cell::coordinateFromString($firstCell); goto t809q; t809q: $lastCellCoordinates = PHPExcel_Cell::coordinateFromString($lastCell); goto FW0Sv; ImxR7: $firstCell = $explodes[0]; goto hZ37n; J1j24: $explodes = explode("\x3a", $range); goto ImxR7; hZ37n: if (count($explodes) == 1) { $lastCell = $firstCell; } else { $lastCell = $explodes[1]; } goto ExwcU; FW0Sv: return pack("\166\x76\x76\166", $firstCellCoordinates[1] - 1, $lastCellCoordinates[1] - 1, PHPExcel_Cell::columnIndexFromString($firstCellCoordinates[0]) - 1, PHPExcel_Cell::columnIndexFromString($lastCellCoordinates[0]) - 1); goto kLRex; kLRex: } public function getData() { goto BFmPJ; UcmNV: if (isset($this->_data)) { goto ceNVI; ceNVI: $tmp = $this->_data; goto vxWY2; dO0Gf: return $tmp; goto uG1ay; vxWY2: unset($this->_data); goto dO0Gf; uG1ay: } goto djAdN; djAdN: return false; goto RN6gq; BFmPJ: $buffer = 4096; goto UcmNV; RN6gq: } public function printRowColHeaders($print = 1) { $this->_print_headers = $print; } public function setOutline($visible = true, $symbols_below = true, $symbols_right = true, $auto_style = false) { goto uKVQa; EbFRi: $this->outlineBelow = $symbols_below; goto CmifC; doKhK: if ($this->outlineOn) { $this->outlineOn = 1; } goto cajTq; CmifC: $this->outlineRight = $symbols_right; goto yOUdr; uKVQa: $this->outlineOn = $visible; goto EbFRi; yOUdr: $this->outlineStyle = $auto_style; goto doKhK; cajTq: } private function writeNumber($row, $col, $num, $xfIndex) { goto LBFaw; Bne8n: return 0; goto MYaM4; yZqp2: $length = 0xe; goto nuI1q; IszGk: $data = pack("\x76\x76\x76", $row, $col, $xfIndex); goto q00tJ; Q7YrW: if (self::getByteOrder()) { $xl_double = strrev($xl_double); } goto o43Zq; nuI1q: $header = pack("\x76\x76", $record, $length); goto IszGk; o43Zq: $this->append($header . $data . $xl_double); goto Bne8n; LBFaw: $record = 0x203; goto yZqp2; q00tJ: $xl_double = pack("\144", $num); goto Q7YrW; MYaM4: } private function writeString($row, $col, $str, $xfIndex) { $this->writeLabelSst($row, $col, $str, $xfIndex); } private function writeRichTextString($row, $col, $str, $xfIndex, $arrcRun) { goto TPj3a; mEZ9V: if (!isset($this->stringTable[$str])) { $this->stringTable[$str] = $this->stringUnique++; } goto EknF3; TPj3a: $record = 0xfd; goto tasuw; msHEl: $this->append($header . $data); goto Y3zHd; Uqz0U: $data = pack("\x76\x76\166\x56", $row, $col, $xfIndex, $this->stringTable[$str]); goto msHEl; e571s: $str = PHPExcel_Shared_String::UTF8toBIFF8UnicodeShort($str, $arrcRun); goto mEZ9V; kor0u: $header = pack("\166\x76", $record, $length); goto Uqz0U; tasuw: $length = 0xa; goto e571s; EknF3: $this->stringTotal++; goto kor0u; Y3zHd: } private function writeLabel($row, $col, $str, $xfIndex) { goto wJVa7; I5z5Z: $length = 0x8 + $strlen; goto JZOJZ; RweuZ: if ($strlen > $this->xlsStringMaxLength) { goto MZ0O_; PXIOF: $str_error = -3; goto iSUkp; s20Yb: $length = 0x8 + $this->xlsStringMaxLength; goto PkxwG; MZ0O_: $str = substr($str, 0, $this->xlsStringMaxLength); goto s20Yb; PkxwG: $strlen = $this->xlsStringMaxLength; goto PXIOF; iSUkp: } goto Mwaml; yEj5g: $data = pack("\166\166\166\166", $row, $col, $xfIndex, $strlen); goto nGL4c; bLdjJ: $record = 0x204; goto I5z5Z; Mwaml: $header = pack("\166\166", $record, $length); goto yEj5g; E17Zo: return $str_error; goto nW4et; nGL4c: $this->append($header . $data . $str); goto E17Zo; wJVa7: $strlen = strlen($str); goto bLdjJ; JZOJZ: $str_error = 0; goto RweuZ; nW4et: } private function writeLabelSst($row, $col, $str, $xfIndex) { goto laJjl; DLMhq: $header = pack("\166\x76", $record, $length); goto aw3YZ; osnj2: if (!isset($this->stringTable[$str])) { $this->stringTable[$str] = $this->stringUnique++; } goto Mv05g; oAGCJ: $length = 0xa; goto dgaxF; aw3YZ: $data = pack("\166\x76\166\126", $row, $col, $xfIndex, $this->stringTable[$str]); goto LlWz0; LlWz0: $this->append($header . $data); goto AnmZY; dgaxF: $str = PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong($str); goto osnj2; Mv05g: $this->stringTotal++; goto DLMhq; laJjl: $record = 0xfd; goto oAGCJ; AnmZY: } private function writeNote($row, $col, $note) { goto EttN0; tausa: $header = pack("\166\x76", $record, $length); goto hU0bz; nRqe2: $this->append($header . $data . substr($note, 0, 2048)); goto m0TgI; m0TgI: for ($i = $max_length; $i < $note_length; $i += $max_length) { $chunk = substr($note, $i, $max_length); $length = 0x6 + strlen($chunk); $header = pack("\x76\x76", $record, $length); $data = pack("\166\x76\x76", -1, 0, strlen($chunk)); $this->append($header . $data . $chunk); } goto g2s12; GklLM: $max_length = 2048; goto q9U6o; yUsp9: $record = 0x1c; goto GklLM; g2s12: return 0; goto XN1f2; EttN0: $note_length = strlen($note); goto yUsp9; q9U6o: $length = 0x6 + min($note_length, 2048); goto tausa; hU0bz: $data = pack("\166\x76\x76", $row, $col, $note_length); goto nRqe2; XN1f2: } public function writeBlank($row, $col, $xfIndex) { goto Z2Ctt; EwF63: $length = 0x6; goto qvtpf; Z2Ctt: $record = 0x201; goto EwF63; qvtpf: $header = pack("\166\166", $record, $length); goto sU817; dKcAP: $this->append($header . $data); goto VWg1l; VWg1l: return 0; goto U5Csy; sU817: $data = pack("\x76\x76\x76", $row, $col, $xfIndex); goto dKcAP; U5Csy: } private function writeBoolErr($row, $col, $value, $isError, $xfIndex) { goto JaS7D; o7LlW: $header = pack("\x76\166", $record, $length); goto zeSnJ; qIa87: $length = 8; goto o7LlW; zeSnJ: $data = pack("\166\166\x76\103\x43", $row, $col, $xfIndex, $value, $isError); goto FgtZO; FgtZO: $this->append($header . $data); goto zqR5u; JaS7D: $record = 0x205; goto qIa87; zqR5u: return 0; goto GwmrT; GwmrT: } private function writeFormula($row, $col, $formula, $xfIndex, $calculatedValue) { goto EvWIW; sAB6v: $unknown = 0x0; goto nyLuU; nyLuU: if ($formula[0] == "\75") { $formula = substr($formula, 1); } else { $this->writeString($row, $col, "\x55\156\x72\145\x63\157\147\x6e\151\163\x65\x64\x20\x63\x68\x61\162\141\x63\x74\145\162\40\146\157\x72\x20\x66\x6f\x72\155\165\154\141"); return -1; } goto UQRvW; aENq4: $stringValue = null; goto jizte; BQxuv: $grbit = 0x3; goto sAB6v; jizte: if (isset($calculatedValue)) { if (is_bool($calculatedValue)) { $num = pack("\103\103\103\x76\103\166", 0x1, 0x0, (int) $calculatedValue, 0x0, 0x0, 0xffff); } elseif (is_int($calculatedValue) || is_float($calculatedValue)) { $num = pack("\x64", $calculatedValue); } elseif (is_string($calculatedValue)) { if (array_key_exists($calculatedValue, PHPExcel_Cell_DataType::getErrorCodes())) { $num = pack("\103\x43\x43\x76\x43\x76", 0x2, 0x0, self::mapErrorCode($calculatedValue), 0x0, 0x0, 0xffff); } elseif ($calculatedValue === '') { $num = pack("\103\x43\x43\x76\103\x76", 0x3, 0x0, 0x0, 0x0, 0x0, 0xffff); } else { $stringValue = $calculatedValue; $num = pack("\x43\x43\103\x76\x43\166", 0x0, 0x0, 0x0, 0x0, 0x0, 0xffff); } } else { $num = pack("\144", 0x0); } } else { $num = pack("\144", 0x0); } goto BQxuv; UQRvW: try { goto jB0PJ; Y1TUe: $length = 0x16 + $formlen; goto lBdOy; lBdOy: $header = pack("\166\x76", $record, $length); goto sWs4P; hqG4A: $formlen = strlen($formula); goto Y1TUe; rX2jw: $formula = $this->parser->toReversePolish(); goto hqG4A; Bqy65: if ($stringValue !== null) { $this->writeStringRecord($stringValue); } goto h3l1r; h3l1r: return 0; goto tYKnF; jB0PJ: $error = $this->parser->parse($formula); goto rX2jw; sWs4P: $data = pack("\x76\x76\166", $row, $col, $xfIndex) . $num . pack("\x76\x56\x76", $grbit, $unknown, $formlen); goto m7fZH; m7fZH: $this->append($header . $data . $formula); goto Bqy65; tYKnF: } catch (PHPExcel_Exception $e) { } goto kkhXa; EvWIW: $record = 0x6; goto aENq4; kkhXa: } private function writeStringRecord($stringValue) { goto VoHay; VoHay: $record = 0x207; goto K1I1K; K1I1K: $data = PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong($stringValue); goto SvjzK; SvjzK: $length = strlen($data); goto CK1Ib; CK1Ib: $header = pack("\166\x76", $record, $length); goto BCaHg; BCaHg: $this->append($header . $data); goto RGK1T; RGK1T: } private function writeUrl($row, $col, $url) { return $this->writeUrlRange($row, $col, $row, $col, $url); } public function writeUrlRange($row1, $col1, $row2, $col2, $url) { goto VsTJv; pQ2ND: if (preg_match("\133\x5e\145\x78\164\x65\x72\x6e\x61\x6c\72\x5d", $url)) { return $this->writeUrlExternal($row1, $col1, $row2, $col2, $url); } goto x9bk6; VsTJv: if (preg_match("\133\136\x69\x6e\164\x65\162\156\141\x6c\x3a\x5d", $url)) { return $this->writeUrlInternal($row1, $col1, $row2, $col2, $url); } goto pQ2ND; x9bk6: return $this->writeUrlWeb($row1, $col1, $row2, $col2, $url); goto zhO79; zhO79: } public function writeUrlWeb($row1, $col1, $row2, $col2, $url) { goto s6yZI; WhPJt: $url = join("\x0", preg_split("\x27\47", $url, -1, PREG_SPLIT_NO_EMPTY)); goto i0bA3; sC9Yt: return 0; goto MwhY6; csmpN: $header = pack("\166\166", $record, $length); goto OZK7s; S6GZB: $options = pack("\x56", 0x3); goto WhPJt; uSEme: $length = 0x34 + strlen($url); goto csmpN; OpwdS: $length = 0x0; goto BWLvC; OZK7s: $data = pack("\x76\166\x76\166", $row1, $row2, $col1, $col2); goto jxgpW; jxgpW: $this->append($header . $data . $unknown1 . $options . $unknown2 . $url_len . $url); goto sC9Yt; s6yZI: $record = 0x1b8; goto OpwdS; i0bA3: $url = $url . "\0\0\0"; goto HNRs_; HNRs_: $url_len = pack("\x56", strlen($url)); goto uSEme; BWLvC: $unknown1 = pack("\110\x2a", "\104\x30\x43\71\105\x41\x37\x39\106\x39\x42\101\103\105\x31\x31\x38\103\70\x32\60\x30\101\101\x30\60\x34\102\x41\x39\60\x42\60\62\60\x30\x30\x30\x30\x30"); goto uIFYn; uIFYn: $unknown2 = pack("\110\52", "\105\x30\103\x39\x45\101\x37\x39\106\x39\x42\101\x43\105\x31\61\x38\x43\x38\x32\60\x30\x41\x41\x30\x30\64\x42\101\x39\60\102"); goto S6GZB; MwhY6: } public function writeUrlInternal($row1, $col1, $row2, $col2, $url) { goto WWIgj; uxNf7: $length = 0x24 + strlen($url); goto BnkTh; WWIgj: $record = 0x1b8; goto vy62c; vy62c: $length = 0x0; goto Xu6Ls; X88nX: $url = PHPExcel_Shared_String::ConvertEncoding($url, "\125\x54\106\55\61\x36\x4c\x45", "\125\124\x46\x2d\x38"); goto uxNf7; GublE: $options = pack("\x56", 0x8); goto LP9L5; h7PWm: return 0; goto HDESC; bSNYt: $data = pack("\x76\166\166\x76", $row1, $row2, $col1, $col2); goto gMjhb; BnkTh: $header = pack("\x76\166", $record, $length); goto bSNYt; eQPKT: $unknown1 = pack("\x48\x2a", "\x44\60\103\x39\x45\101\x37\x39\x46\x39\102\101\x43\105\x31\x31\70\x43\70\x32\60\60\x41\101\x30\60\64\x42\101\x39\60\x42\60\62\60\60\x30\60\x30\60"); goto GublE; Xu6Ls: $url = preg_replace("\57\136\x69\x6e\164\x65\162\x6e\141\x6c\x3a\x2f", '', $url); goto eQPKT; LP9L5: $url .= "\x0"; goto NClhW; gMjhb: $this->append($header . $data . $unknown1 . $options . $url_len . $url); goto h7PWm; NClhW: $url_len = PHPExcel_Shared_String::CountCharacters($url); goto WwtYf; WwtYf: $url_len = pack("\126", $url_len); goto X88nX; HDESC: } public function writeUrlExternal($row1, $col1, $row2, $col2, $url) { goto NcSGf; j9EOk: $unknown4 = pack("\x76", 0x3); goto vVXmZ; yaoX8: $record = 0x1b8; goto dj5WH; EMKsm: $dir_short_len = pack("\x56", strlen($dir_short)); goto cx8CQ; ZAi8F: $dir_short = preg_replace("\x2f\x5c\56\134\56\134\x5c\57", '', $dir_long) . "\x0"; goto AaR4g; IJmFt: $dir_long = $url; goto kEiRm; FpSk9: $unknown2 = pack("\x48\52", "\60\x33\x30\x33\60\60\x30\x30\x30\x30\60\x30\x30\x30\x30\x30\x43\x30\60\x30\60\60\x30\x30\x30\x30\x30\x30\x30\60\64\66"); goto Gewyr; n13P2: $this->append($header . $data); goto zeiLW; zeiLW: return 0; goto y8NYz; dj5WH: $length = 0x0; goto q3R0e; sNB31: $up_count = pack("\166", $up_count); goto ZAi8F; vVXmZ: $data = pack("\166\x76\x76\x76", $row1, $row2, $col1, $col2) . $unknown1 . $link_type . $unknown2 . $up_count . $dir_short_len . $dir_short . $unknown3 . $stream_len; goto w64UG; ReAH2: $header = pack("\166\x76", $record, $length); goto n13P2; tUQpA: $unknown1 = pack("\110\52", "\x44\60\x43\71\105\x41\x37\71\x46\71\x42\x41\x43\105\x31\61\x38\x43\70\x32\60\x30\x41\101\x30\x30\x34\102\x41\x39\60\x42\x30\62\x30\x30\x30\60\x30\x30"); goto FpSk9; rXdKp: if (preg_match("\57\x5e\133\101\x2d\x5a\x5d\x3a\x2f", $url)) { $absolute = 0x2; } goto XMTfV; ScrYE: $absolute = 0x0; goto rXdKp; Gewyr: $unknown3 = pack("\x48\x2a", "\106\x46\106\x46\x41\x44\x44\x45\60\x30\60\x30\60\60\60\x30\60\60\x30\60\60\x30\60\x30\60\60\x30\x30\x30\60\60\x30\60\x30\x30\x30\60\60\x30\60\x30\x30\x30\x30\60\60\60"); goto j9EOk; AaR4g: $dir_long = $dir_long . "\0"; goto EMKsm; XMTfV: $link_type = 0x1 | $absolute; goto IJmFt; xOeO1: $url = preg_replace("\x2f\x5c\57\x2f", "\134", $url); goto ScrYE; tGc8E: $link_type = pack("\126", $link_type); goto j41Kc; w64UG: $length = strlen($data); goto ReAH2; xdT7c: $stream_len = pack("\126", 0); goto tUQpA; kEiRm: if (preg_match("\57\134\x23\x2f", $url)) { $link_type |= 0x8; } goto tGc8E; cx8CQ: $dir_long_len = pack("\126", strlen($dir_long)); goto xdT7c; j41Kc: $up_count = preg_match_all("\x2f\134\56\134\x2e\134\134\57", $dir_long, $useless); goto sNB31; q3R0e: $url = preg_replace("\57\136\x65\x78\x74\145\162\156\x61\154\x3a\x2f", '', $url); goto xOeO1; NcSGf: if (preg_match("\x5b\x5e\x65\x78\x74\145\x72\x6e\141\x6c\72\134\x5c\x5d", $url)) { return; } goto yaoX8; y8NYz: } private function writeRow($row, $height, $xfIndex, $hidden = false, $level = 0) { goto NxkGA; oF1Ua: $data = pack("\166\x76\166\x76\166\x76\x76\166", $row, $colMic, $colMac, $miyRw, $irwMac, $reserved, $grbit, $ixfe); goto Qsi_N; NxkGA: $record = 0x208; goto kbXYb; Ajaie: if ($height != null) { $miyRw = $height * 20; } else { $miyRw = 0xff; } goto TUqM4; FyPLB: if ($height !== null) { $grbit |= 0x40; } goto iyUYU; Tr3tB: $colMic = 0x0; goto riB9a; MrLL4: if ($height < 0) { $height = null; } goto Ajaie; O_28q: $ixfe = $xfIndex; goto MrLL4; riB9a: $colMac = 0x0; goto T1adV; WkMI9: $grbit = 0x0; goto O_28q; OU_9p: $header = pack("\x76\x76", $record, $length); goto oF1Ua; Qsi_N: $this->append($header . $data); goto Hb26M; TUqM4: $grbit |= $level; goto GhGId; ma_zF: $reserved = 0x0; goto WkMI9; kbXYb: $length = 0x10; goto Tr3tB; GhGId: if ($hidden) { $grbit |= 0x30; } goto FyPLB; iyUYU: if ($xfIndex !== 0xf) { $grbit |= 0x80; } goto c0x8H; T1adV: $irwMac = 0x0; goto ma_zF; c0x8H: $grbit |= 0x100; goto OU_9p; Hb26M: } private function writeDimensions() { goto pYHFS; V4f6d: $data = pack("\x56\126\x76\x76\x76", $this->firstRowIndex, $this->lastRowIndex + 1, $this->firstColumnIndex, $this->lastColumnIndex + 1, 0x0); goto gZEul; LthV0: $this->append($header . $data); goto EBbDa; gZEul: $header = pack("\166\x76", $record, $length); goto LthV0; b4ql5: $length = 0xe; goto V4f6d; pYHFS: $record = 0x200; goto b4ql5; EBbDa: } private function writeWindow2() { goto F4gN5; zyF2u: $grbit |= $fFrozenNoSplit << 8; goto OR1p7; JXSPc: $length = 0x12; goto mnzNc; mfH1s: $grbit |= $fDspZeros << 4; goto GvwkE; qE_IQ: $rgbHdr = 0x40; goto PjMot; wqBfN: $grbit |= $fFrozen << 3; goto mfH1s; R4GY6: $fSelected = $this->phpSheet === $this->phpSheet->getParent()->getActiveSheet() ? 1 : 0; goto IZyYn; E03Jr: $grbit |= $fDspGrid << 1; goto J8QkH; pmtG5: $grbit |= $fPageBreakPreview << 11; goto JyWUE; gI0NV: $fFrozen = $this->phpSheet->getFreezePane() ? 1 : 0; goto DXPp5; c7rIS: $grbit |= $fArabic << 6; goto KdTIn; UM8xz: $colLeft = 0x0; goto e_izq; IZyYn: $fPaged = 1; goto FgTBu; LTAo0: $fDspGrid = $this->phpSheet->getShowGridlines() ? 1 : 0; goto izhkl; mnzNc: $grbit = 0xb6; goto ifDh1; ifDh1: $rwTop = 0x0; goto UM8xz; VvpnV: $grbit = $fDspFmla; goto E03Jr; DXPp5: $fDspZeros = 1; goto roTD9; Oue5u: $fArabic = $this->phpSheet->getRightToLeft() ? 1 : 0; goto E4qxS; J8QkH: $grbit |= $fDspRwCol << 2; goto wqBfN; tfMsD: $data .= pack("\166\166\x76\x76\x56", $rgbHdr, 0x0, $zoom_factor_page_break, $zoom_factor_normal, 0x0); goto JAnUu; e_izq: $fDspFmla = 0; goto LTAo0; OR1p7: $grbit |= $fSelected << 9; goto IWpmr; TTpfd: $fFrozenNoSplit = 0; goto R4GY6; OQUWj: $zoom_factor_normal = $this->phpSheet->getSheetView()->getZoomScaleNormal(); goto tfMsD; JAnUu: $this->append($header . $data); goto Ebrt6; HFq8I: $data = pack("\x76\166\x76", $grbit, $rwTop, $colLeft); goto qE_IQ; F4gN5: $record = 0x23e; goto JXSPc; KdTIn: $grbit |= $fDspGuts << 7; goto zyF2u; JyWUE: $header = pack("\166\166", $record, $length); goto HFq8I; roTD9: $fDefaultHdr = 1; goto Oue5u; PjMot: $zoom_factor_page_break = $fPageBreakPreview ? $this->phpSheet->getSheetView()->getZoomScale() : 0x0; goto OQUWj; E4qxS: $fDspGuts = $this->outlineOn; goto TTpfd; izhkl: $fDspRwCol = $this->phpSheet->getShowRowColHeaders() ? 1 : 0; goto gI0NV; GvwkE: $grbit |= $fDefaultHdr << 5; goto c7rIS; IWpmr: $grbit |= $fPaged << 10; goto pmtG5; FgTBu: $fPageBreakPreview = $this->phpSheet->getSheetView()->getView() === PHPExcel_Worksheet_SheetView::SHEETVIEW_PAGE_BREAK_PREVIEW; goto VvpnV; Ebrt6: } private function writeDefaultRowHeight() { goto WIhWt; oaTWn: if ($defaultRowHeight < 0) { return; } goto kRiFR; kRiFR: $defaultRowHeight = (int) 20 * $defaultRowHeight; goto mQjs1; I6LqC: $this->append($header . $data); goto q7lYS; Da1zF: $length = 0x4; goto wBJj8; FTE7q: $data = pack("\166\166", 1, $defaultRowHeight); goto I6LqC; mQjs1: $record = 0x225; goto Da1zF; WIhWt: $defaultRowHeight = $this->phpSheet->getDefaultRowDimension()->getRowHeight(); goto oaTWn; wBJj8: $header = pack("\x76\x76", $record, $length); goto FTE7q; q7lYS: } private function writeDefcol() { goto J5PwK; Om_qR: $data = pack("\x76", $defaultColWidth); goto IDzy8; J5PwK: $defaultColWidth = 8; goto LlWxE; LlWxE: $record = 0x55; goto ieXnz; sIMEa: $header = pack("\x76\x76", $record, $length); goto Om_qR; IDzy8: $this->append($header . $data); goto LcVW3; ieXnz: $length = 0x2; goto sIMEa; LcVW3: } private function writeColinfo($col_array) { goto TebrZ; Rt9W0: $coldx *= 256; goto AqmFs; AqmFs: $ixfe = $xfIndex; goto aII1_; sZs_I: $record = 0x7d; goto hMdcU; aII1_: $reserved = 0x0; goto fSHMP; TebrZ: if (isset($col_array[0])) { $colFirst = $col_array[0]; } goto UKb0g; fhUZU: $header = pack("\x76\x76", $record, $length); goto iqzkG; wU6pG: if (isset($col_array[5])) { $level = $col_array[5]; } else { $level = 0; } goto sZs_I; KBjUC: $this->append($header . $data); goto g7I1D; b7F6I: if (isset($col_array[2])) { $coldx = $col_array[2]; } else { $coldx = 8.43; } goto ok7ZM; hMdcU: $length = 0xc; goto Rt9W0; l84Zc: if (isset($col_array[4])) { $grbit = $col_array[4]; } else { $grbit = 0; } goto wU6pG; UKb0g: if (isset($col_array[1])) { $colLast = $col_array[1]; } goto b7F6I; gsDbe: $grbit |= $level << 8; goto fhUZU; fSHMP: $level = max(0, min($level, 7)); goto gsDbe; iqzkG: $data = pack("\x76\166\x76\166\x76\166", $colFirst, $colLast, $coldx, $ixfe, $grbit, $reserved); goto KBjUC; ok7ZM: if (isset($col_array[3])) { $xfIndex = $col_array[3]; } else { $xfIndex = 15; } goto l84Zc; g7I1D: } private function writeSelection() { goto m9BG1; DnZ0a: $irefAct = 0; goto cQgG1; lC5Aj: $colFirst = min($colFirst, 255); goto OblC0; qtljU: list($colLast, $rwLast) = PHPExcel_Cell::coordinateFromString($last); goto cTAQO; KjCL6: $selectedCells = PHPExcel_Cell::splitRange($this->phpSheet->getSelectedCells()); goto HMKaz; dE7Dh: if ($colFirst > $colLast) { list($colFirst, $colLast) = array($colLast, $colFirst); } goto f2aKl; eBOrY: list($colFirst, $rwFirst) = PHPExcel_Cell::coordinateFromString($first); goto OJ4zW; cTAQO: $colLast = PHPExcel_Cell::columnIndexFromString($colLast) - 1; goto Mo83F; f2aKl: $header = pack("\x76\x76", $record, $length); goto iNznW; oPRx1: if (!isset($rwLast)) { $rwLast = $rwFirst; } goto wk1Tp; iNznW: $data = pack("\x43\x76\x76\166\166\166\x76\x43\x43", $pnn, $rwAct, $colAct, $irefAct, $cref, $rwFirst, $rwLast, $colFirst, $colLast); goto KRQPp; xezm0: $rwLast = min($rwLast, 65535); goto je4Xh; S8rSl: $colAct = $colFirst; goto DnZ0a; m9BG1: $selectedCells = $this->phpSheet->getSelectedCells(); goto KjCL6; OblC0: $colLast = min($colLast, 255); goto HDrfp; f5TQV: $length = 0xf; goto TlXZo; je4Xh: $record = 0x1d; goto f5TQV; A9ZrE: $rwAct = $rwFirst; goto S8rSl; fNlAz: if ($rwFirst > $rwLast) { list($rwFirst, $rwLast) = array($rwLast, $rwFirst); } goto dE7Dh; OJ4zW: $colFirst = PHPExcel_Cell::columnIndexFromString($colFirst) - 1; goto cZHBx; HDrfp: $rwFirst = min($rwFirst, 65535); goto xezm0; HMKaz: $selectedCells = $selectedCells[0]; goto vwn33; wk1Tp: if (!isset($colLast)) { $colLast = $colFirst; } goto fNlAz; cQgG1: $cref = 1; goto oPRx1; vwn33: if (count($selectedCells) == 2) { list($first, $last) = $selectedCells; } else { $first = $selectedCells[0]; $last = $selectedCells[0]; } goto eBOrY; KRQPp: $this->append($header . $data); goto KZGti; TlXZo: $pnn = $this->activePane; goto A9ZrE; Mo83F: --$rwLast; goto lC5Aj; cZHBx: --$rwFirst; goto qtljU; KZGti: } private function writeMergedCells() { goto AwgCr; IHouf: $recordData = ''; goto PtIdy; AwgCr: $mergeCells = $this->phpSheet->getMergeCells(); goto v9C8U; FsF0J: $j = 0; goto IHouf; cwyvt: $i = 0; goto FsF0J; xPWmQ: if ($countMergeCells == 0) { return; } goto u0YLG; JJikn: $record = 0xe5; goto cwyvt; v9C8U: $countMergeCells = count($mergeCells); goto xPWmQ; u0YLG: $maxCountMergeCellsPerRecord = 1027; goto JJikn; PtIdy: foreach ($mergeCells as $mergeCell) { goto fzvk8; bvPsP: list($lastColumn, $lastRow) = PHPExcel_Cell::coordinateFromString($last); goto bk2p_; B07yC: list($first, $last) = $range[0]; goto pTiTq; fzvk8: ++$i; goto Okq_e; jBfzr: $range = PHPExcel_Cell::splitRange($mergeCell); goto B07yC; PReAk: if ($j == $maxCountMergeCellsPerRecord or $i == $countMergeCells) { goto BKMag; IEbd9: $length = strlen($recordData); goto HVJel; kR6x4: $this->append($header . $recordData); goto XGsCZ; HVJel: $header = pack("\166\x76", $record, $length); goto kR6x4; XGsCZ: $recordData = ''; goto jEbx6; jEbx6: $j = 0; goto iWxPc; BKMag: $recordData = pack("\166", $j) . $recordData; goto IEbd9; iWxPc: } goto hhJe6; pTiTq: list($firstColumn, $firstRow) = PHPExcel_Cell::coordinateFromString($first); goto bvPsP; Okq_e: ++$j; goto jBfzr; bk2p_: $recordData .= pack("\166\x76\166\x76", $firstRow - 1, $lastRow - 1, PHPExcel_Cell::columnIndexFromString($firstColumn) - 1, PHPExcel_Cell::columnIndexFromString($lastColumn) - 1); goto PReAk; hhJe6: } goto xcnig; xcnig: } private function writeSheetLayout() { goto qt0JR; qt0JR: if (!$this->phpSheet->isTabColorSet()) { return; } goto lsnTF; W0ups: $this->append($header . $recordData); goto Rpv3n; RvMD6: $length = strlen($recordData); goto el66U; gNzYt: $header = pack("\x76\166", $record, $length); goto W0ups; el66U: $record = 0x862; goto gNzYt; lsnTF: $recordData = pack("\x76\166\x56\126\x56\x76\166", 0x862, 0x0, 0x0, 0x0, 0x14, $this->colors[$this->phpSheet->getTabColor()->getRGB()], 0x0); goto RvMD6; Rpv3n: } private function writeSheetProtection() { goto hTX0M; hTX0M: $record = 0x867; goto Ks3ye; MT5nD: $length = strlen($recordData); goto cjRDd; Ks3ye: $options = (int) (!$this->phpSheet->getProtection()->getObjects()) | (int) (!$this->phpSheet->getProtection()->getScenarios()) << 1 | (int) (!$this->phpSheet->getProtection()->getFormatCells()) << 2 | (int) (!$this->phpSheet->getProtection()->getFormatColumns()) << 3 | (int) (!$this->phpSheet->getProtection()->getFormatRows()) << 4 | (int) (!$this->phpSheet->getProtection()->getInsertColumns()) << 5 | (int) (!$this->phpSheet->getProtection()->getInsertRows()) << 6 | (int) (!$this->phpSheet->getProtection()->getInsertHyperlinks()) << 7 | (int) (!$this->phpSheet->getProtection()->getDeleteColumns()) << 8 | (int) (!$this->phpSheet->getProtection()->getDeleteRows()) << 9 | (int) (!$this->phpSheet->getProtection()->getSelectLockedCells()) << 10 | (int) (!$this->phpSheet->getProtection()->getSort()) << 11 | (int) (!$this->phpSheet->getProtection()->getAutoFilter()) << 12 | (int) (!$this->phpSheet->getProtection()->getPivotTables()) << 13 | (int) (!$this->phpSheet->getProtection()->getSelectUnlockedCells()) << 14; goto MJOgW; cjRDd: $header = pack("\x76\166", $record, $length); goto K6PM0; K6PM0: $this->append($header . $recordData); goto G5evR; MJOgW: $recordData = pack("\x76\x56\x56\103\126\126\166\166", 0x867, 0x0, 0x0, 0x0, 0x1000200, 0xffffffff, $options, 0x0); goto MT5nD; G5evR: } private function writeRangeProtection() { foreach ($this->phpSheet->getProtectedCells() as $range => $password) { goto d2ZcX; d2ZcX: $cellRanges = explode("\40", $range); goto hPCKZ; ooFEk: $recordData = pack("\x76\x76\x56\126\x76\103\126\x76\x56\x76", 0x868, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, $cref, 0x0, 0x0); goto dCYMn; aPYJy: $recordData .= PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong("\x70" . md5($recordData)); goto eStqz; eStqz: $length = strlen($recordData); goto cWfuL; hPCKZ: $cref = count($cellRanges); goto ooFEk; dCYMn: foreach ($cellRanges as $cellRange) { $recordData .= $this->writeBIFF8CellRangeAddressFixed($cellRange); } goto jJvo2; cWfuL: $record = 0x868; goto E1QNL; u1CKF: $this->append($header . $recordData); goto GAQy_; E1QNL: $header = pack("\x76\166", $record, $length); goto u1CKF; jJvo2: $recordData .= pack("\x56\x56", 0x0, hexdec($password)); goto aPYJy; GAQy_: } } private function writeExterncount($count) { goto Ql2ga; suBVu: $header = pack("\x76\x76", $record, $length); goto rJoWv; uki22: $length = 0x2; goto suBVu; Ql2ga: $record = 0x16; goto uki22; sIVUI: $this->append($header . $data); goto h5kix; rJoWv: $data = pack("\x76", $count); goto sIVUI; h5kix: } private function writeExternsheet($sheetname) { goto qjJKX; kdcXy: $data = pack("\x43\x43", $cch, $rgch); goto sLsfV; sLsfV: $this->append($header . $data . $sheetname); goto TaKpI; op9LC: $header = pack("\x76\166", $record, $length); goto kdcXy; qjJKX: $record = 0x17; goto pl78A; pl78A: if ($this->phpSheet->getTitle() == $sheetname) { goto so9qY; B_yol: $cch = 1; goto XTjp8; XTjp8: $rgch = 0x2; goto lDdvz; mn77a: $length = 0x2; goto B_yol; so9qY: $sheetname = ''; goto mn77a; lDdvz: } else { goto jTexL; lwo13: $rgch = 0x3; goto zm6Nl; aaR7G: $cch = strlen($sheetname); goto lwo13; jTexL: $length = 0x2 + strlen($sheetname); goto aaR7G; zm6Nl: } goto op9LC; TaKpI: } private function writePanes() { goto DdkuG; H7wpu: $record = 0x41; goto bo1of; ZEgLk: if (!isset($pnnAct)) { goto sDy0T; c0t1I: if ($x != 0 && $y == 0) { $pnnAct = 1; } goto Sbwv3; HbcjL: if ($x == 0 && $y == 0) { $pnnAct = 3; } goto Fvu6G; sDy0T: if ($x != 0 && $y != 0) { $pnnAct = 0; } goto c0t1I; Sbwv3: if ($x == 0 && $y != 0) { $pnnAct = 2; } goto HbcjL; Fvu6G: } goto MS0i2; cEfTy: $header = pack("\x76\166", $record, $length); goto f2DIw; f2DIw: $data = pack("\x76\x76\166\166\166", $x, $y, $rwTop, $colLeft, $pnnAct); goto O282V; DdkuG: $panes = array(); goto VoCYY; YgzLt: if ($this->phpSheet->getFreezePane()) { if (!isset($rwTop)) { $rwTop = $y; } if (!isset($colLeft)) { $colLeft = $x; } } else { goto IOnqS; suQWs: if (!isset($colLeft)) { $colLeft = 0; } goto SQ69D; SQ69D: $y = 20 * $y + 255; goto pEhcm; IOnqS: if (!isset($rwTop)) { $rwTop = 0; } goto suQWs; pEhcm: $x = 113.879 * $x + 390; goto MJKTx; MJKTx: } goto ZEgLk; BdehZ: $rwTop = isset($panes[2]) ? $panes[2] : null; goto V_NaJ; O282V: $this->append($header . $data); goto ENVrg; bo1of: $length = 0xa; goto YgzLt; Sa4LD: $x = isset($panes[1]) ? $panes[1] : null; goto BdehZ; MS0i2: $this->activePane = $pnnAct; goto cEfTy; spZj0: $y = isset($panes[0]) ? $panes[0] : null; goto Sa4LD; V_NaJ: $colLeft = isset($panes[3]) ? $panes[3] : null; goto eqg0p; VoCYY: if ($freezePane = $this->phpSheet->getFreezePane()) { goto uIh52; FZssE: $panes[0] = $row - 1; goto oskqr; uIh52: list($column, $row) = PHPExcel_Cell::coordinateFromString($freezePane); goto FZssE; oskqr: $panes[1] = PHPExcel_Cell::columnIndexFromString($column) - 1; goto o_tcT; o_tcT: } else { return; } goto spZj0; eqg0p: if (count($panes) > 4) { $pnnAct = $panes[4]; } else { $pnnAct = null; } goto H7wpu; ENVrg: } private function writeSetup() { goto IquwU; yYPR1: $fNoOrient = 0x0; goto hYvBg; mmOEt: $grbit |= $fNotes << 5; goto b2WGl; uNl3J: $iFitWidth = (int) $this->phpSheet->getPageSetup()->getFitToWidth(); goto HsT9k; Z6SaO: $fLandscape = $this->phpSheet->getPageSetup()->getOrientation() == PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE ? 0x0 : 0x1; goto wBqV_; ycja0: $data1 = pack("\166\166\166\x76\166\x76\x76\x76", $iPaperSize, $iScale, $iPageStart, $iFitWidth, $iFitHeight, $grbit, $iRes, $iVRes); goto HaxHm; FYpDC: $iScale = $this->phpSheet->getPageSetup()->getScale() ? $this->phpSheet->getPageSetup()->getScale() : 100; goto RiRxv; Nqd8V: $numFtr = pack("\144", $numFtr); goto jXhCL; gn05M: $grbit = 0x0; goto TsBea; Y1DpP: $grbit |= $fLandscape << 1; goto msthK; msthK: $grbit |= $fNoPls << 2; goto KzXtT; cxtu4: $grbit |= $fDraft << 4; goto mmOEt; EAohO: $fLeftToRight = 0x0; goto Z6SaO; IquwU: $record = 0xa1; goto YXzCN; wBqV_: $fNoPls = 0x0; goto QCmQk; MoHcH: $fDraft = 0x0; goto mYwtn; e07L2: $grbit |= $fUsePage << 7; goto yBPUh; TsBea: $iRes = 0x258; goto CcdVy; HaxHm: $data2 = $numHdr . $numFtr; goto K5HoS; KzXtT: $grbit |= $fNoColor << 3; goto cxtu4; gbbLE: $header = pack("\166\166", $record, $length); goto ycja0; a_23K: $numHdr = $this->phpSheet->getPageMargins()->getHeader(); goto gCL1n; mYwtn: $fNotes = 0x0; goto yYPR1; YXzCN: $length = 0x22; goto ZoaJb; hYvBg: $fUsePage = 0x0; goto A3Mtv; K5HoS: $data3 = pack("\x76", $iCopies); goto kfVYd; QCmQk: $fNoColor = 0x0; goto MoHcH; CcdVy: $iVRes = 0x258; goto a_23K; jXhCL: if (self::getByteOrder()) { $numHdr = strrev($numHdr); $numFtr = strrev($numFtr); } goto gbbLE; HsT9k: $iFitHeight = (int) $this->phpSheet->getPageSetup()->getFitToHeight(); goto gn05M; MISSU: $iCopies = 0x1; goto EAohO; gCL1n: $numFtr = $this->phpSheet->getPageMargins()->getFooter(); goto MISSU; RiRxv: $iPageStart = 0x1; goto uNl3J; yBPUh: $numHdr = pack("\144", $numHdr); goto Nqd8V; A3Mtv: $grbit = $fLeftToRight; goto Y1DpP; b2WGl: $grbit |= $fNoOrient << 6; goto e07L2; ZoaJb: $iPaperSize = $this->phpSheet->getPageSetup()->getPaperSize(); goto FYpDC; kfVYd: $this->append($header . $data1 . $data2 . $data3); goto d62VJ; d62VJ: } private function writeHeader() { goto Up_w_; h04Z0: $length = strlen($recordData); goto mDeD0; mDeD0: $header = pack("\x76\166", $record, $length); goto y_Gyx; Up_w_: $record = 0x14; goto RJ1km; RJ1km: $recordData = PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong($this->phpSheet->getHeaderFooter()->getOddHeader()); goto h04Z0; y_Gyx: $this->append($header . $recordData); goto W8wNv; W8wNv: } private function writeFooter() { goto VIMmf; ormx3: $header = pack("\166\x76", $record, $length); goto s8f58; eqlxj: $recordData = PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong($this->phpSheet->getHeaderFooter()->getOddFooter()); goto AuGIt; AuGIt: $length = strlen($recordData); goto ormx3; s8f58: $this->append($header . $recordData); goto At7Nd; VIMmf: $record = 0x15; goto eqlxj; At7Nd: } private function writeHcenter() { goto mIesx; atFoT: $header = pack("\x76\166", $record, $length); goto Tx34A; qHe95: $fHCenter = $this->phpSheet->getPageSetup()->getHorizontalCentered() ? 1 : 0; goto atFoT; S11kW: $length = 0x2; goto qHe95; mIesx: $record = 0x83; goto S11kW; Tx34A: $data = pack("\166", $fHCenter); goto A5yDT; A5yDT: $this->append($header . $data); goto FkkAP; FkkAP: } private function writeVcenter() { goto Mc3TP; pUtNX: $header = pack("\166\166", $record, $length); goto OiAkh; Mc3TP: $record = 0x84; goto wTpNu; wTpNu: $length = 0x2; goto yznGm; eYoF1: $this->append($header . $data); goto c2j_L; OiAkh: $data = pack("\166", $fVCenter); goto eYoF1; yznGm: $fVCenter = $this->phpSheet->getPageSetup()->getVerticalCentered() ? 1 : 0; goto pUtNX; c2j_L: } private function writeMarginLeft() { goto us1U_; kCQSQ: $this->append($header . $data); goto jrHZs; ChVch: $length = 0x8; goto zQChL; NIiN2: if (self::getByteOrder()) { $data = strrev($data); } goto kCQSQ; zQChL: $margin = $this->phpSheet->getPageMargins()->getLeft(); goto W8pDO; us1U_: $record = 0x26; goto ChVch; k85FK: $data = pack("\x64", $margin); goto NIiN2; W8pDO: $header = pack("\166\x76", $record, $length); goto k85FK; jrHZs: } private function writeMarginRight() { goto e_VK_; e_VK_: $record = 0x27; goto vrhPs; JgKHU: $this->append($header . $data); goto i4i1l; OFwlu: $margin = $this->phpSheet->getPageMargins()->getRight(); goto iOf1X; u5vyu: $data = pack("\x64", $margin); goto mPUaQ; iOf1X: $header = pack("\x76\x76", $record, $length); goto u5vyu; vrhPs: $length = 0x8; goto OFwlu; mPUaQ: if (self::getByteOrder()) { $data = strrev($data); } goto JgKHU; i4i1l: } private function writeMarginTop() { goto GybUF; Mlxis: $length = 0x8; goto saQ8P; LWjUC: $data = pack("\x64", $margin); goto NswZb; EIyHR: $this->append($header . $data); goto ze2Pi; NswZb: if (self::getByteOrder()) { $data = strrev($data); } goto EIyHR; mI1Dg: $header = pack("\166\x76", $record, $length); goto LWjUC; GybUF: $record = 0x28; goto Mlxis; saQ8P: $margin = $this->phpSheet->getPageMargins()->getTop(); goto mI1Dg; ze2Pi: } private function writeMarginBottom() { goto o_i8P; nevn9: $length = 0x8; goto P1qb2; o_i8P: $record = 0x29; goto nevn9; qcARv: if (self::getByteOrder()) { $data = strrev($data); } goto NRqgx; sn9iI: $data = pack("\x64", $margin); goto qcARv; IJbm2: $header = pack("\x76\x76", $record, $length); goto sn9iI; P1qb2: $margin = $this->phpSheet->getPageMargins()->getBottom(); goto IJbm2; NRqgx: $this->append($header . $data); goto K8jJl; K8jJl: } private function writePrintHeaders() { goto YAc5l; yuwJL: $header = pack("\x76\x76", $record, $length); goto wHVZv; Ckt9C: $this->append($header . $data); goto nosoe; wHVZv: $data = pack("\166", $fPrintRwCol); goto Ckt9C; YAc5l: $record = 0x2a; goto HQ32w; HQ32w: $length = 0x2; goto tVibE; tVibE: $fPrintRwCol = $this->_print_headers; goto yuwJL; nosoe: } private function writePrintGridlines() { goto DQHJG; j8u7G: $this->append($header . $data); goto GLerz; DQHJG: $record = 0x2b; goto F0tAW; F0tAW: $length = 0x2; goto opOE_; lajlH: $header = pack("\x76\166", $record, $length); goto DpDJF; opOE_: $fPrintGrid = $this->phpSheet->getPrintGridlines() ? 1 : 0; goto lajlH; DpDJF: $data = pack("\166", $fPrintGrid); goto j8u7G; GLerz: } private function writeGridset() { goto PWhBu; PWhBu: $record = 0x82; goto iE0np; i8Rt4: $this->append($header . $data); goto ZitAM; chcgu: $data = pack("\166", $fGridSet); goto i8Rt4; N7Iw3: $fGridSet = !$this->phpSheet->getPrintGridlines(); goto bDr62; bDr62: $header = pack("\166\x76", $record, $length); goto chcgu; iE0np: $length = 0x2; goto N7Iw3; ZitAM: } private function writeAutoFilterInfo() { goto P5Zeb; CnXtN: $length = 0x2; goto EgPuB; EgPuB: $rangeBounds = PHPExcel_Cell::rangeBoundaries($this->phpSheet->getAutoFilter()->getRange()); goto RwrNL; RwrNL: $iNumFilters = 1 + $rangeBounds[1][0] - $rangeBounds[0][0]; goto JuWm8; olxsy: $data = pack("\x76", $iNumFilters); goto VVyZ3; P5Zeb: $record = 0x9d; goto CnXtN; VVyZ3: $this->append($header . $data); goto jFXkv; JuWm8: $header = pack("\166\166", $record, $length); goto olxsy; jFXkv: } private function writeGuts() { goto m2ttJ; jcf91: $header = pack("\x76\x76", $record, $length); goto d8EKd; m2ttJ: $record = 0x80; goto L6jjf; mPWyR: $colcount = count($this->columnInfo); goto jg90B; L6jjf: $length = 0x8; goto kt997; ghK0N: $dxColGut = 0x0; goto LHSoB; xlh5d: foreach ($this->phpSheet->getRowDimensions() as $rowDimension) { $maxRowOutlineLevel = max($maxRowOutlineLevel, $rowDimension->getOutlineLevel()); } goto mpRoI; LHSoB: $maxRowOutlineLevel = 0; goto xlh5d; jg90B: for ($i = 0; $i < $colcount; ++$i) { $col_level = max($this->columnInfo[$i][5], $col_level); } goto Qbfhv; xH6hC: if ($col_level) { ++$col_level; } goto jcf91; tXidE: $this->append($header . $data); goto zeiRD; d8EKd: $data = pack("\x76\166\x76\x76", $dxRwGut, $dxColGut, $maxRowOutlineLevel, $col_level); goto tXidE; kt997: $dxRwGut = 0x0; goto ghK0N; mWRMa: if ($maxRowOutlineLevel) { ++$maxRowOutlineLevel; } goto xH6hC; mpRoI: $col_level = 0; goto mPWyR; Qbfhv: $col_level = max(0, min($col_level, 7)); goto mWRMa; zeiRD: } private function writeWsbool() { goto PKMBi; REj0K: if ($this->outlineStyle) { $grbit |= 0x20; } goto s2vyQ; o5xyO: $data = pack("\x76", $grbit); goto E_ihv; UvJen: $header = pack("\x76\x76", $record, $length); goto o5xyO; E_ihv: $this->append($header . $data); goto JFN8V; QzBV4: $grbit = 0x0; goto yAt5J; O17Az: if ($this->outlineOn) { $grbit |= 0x400; } goto UvJen; PKMBi: $record = 0x81; goto KcHSe; yAt5J: $grbit |= 0x1; goto REj0K; s2vyQ: if ($this->phpSheet->getShowSummaryBelow()) { $grbit |= 0x40; } goto QTpoY; QTpoY: if ($this->phpSheet->getShowSummaryRight()) { $grbit |= 0x80; } goto Wd2Jq; Wd2Jq: if ($this->phpSheet->getPageSetup()->getFitToPage()) { $grbit |= 0x100; } goto O17Az; KcHSe: $length = 0x2; goto QzBV4; JFN8V: } private function writeBreaks() { goto lSgcw; p4NpM: if (!empty($vbreaks)) { goto wEy48; OY2Fb: if ($vbreaks[0] == 0) { array_shift($vbreaks); } goto TQs6z; UZflU: $this->append($header . $data); goto jpvDV; wEy48: $vbreaks = array_slice($vbreaks, 0, 1000); goto awpt_; wsVKs: $cbrk = count($vbreaks); goto RCY8C; TQs6z: $record = 0x1a; goto wsVKs; RCY8C: $length = 2 + 6 * $cbrk; goto zGz76; WGSgh: foreach ($vbreaks as $vbreak) { $data .= pack("\x76\x76\x76", $vbreak, 0x0, 0xffff); } goto UZflU; awpt_: sort($vbreaks, SORT_NUMERIC); goto OY2Fb; Qdqpf: $data = pack("\166", $cbrk); goto WGSgh; zGz76: $header = pack("\166\x76", $record, $length); goto Qdqpf; jpvDV: } goto b_WTY; lSgcw: $vbreaks = array(); goto eCKZD; mCg9Q: if (!empty($hbreaks)) { goto xrkRt; dePTj: $record = 0x1b; goto v_B5s; izPzL: if ($hbreaks[0] == 0) { array_shift($hbreaks); } goto dePTj; FNZcr: $length = 2 + 6 * $cbrk; goto jM5Uo; jM5Uo: $header = pack("\x76\x76", $record, $length); goto ShD4Y; mUlhj: $this->append($header . $data); goto olRXR; xrkRt: sort($hbreaks, SORT_NUMERIC); goto izPzL; lD2HJ: foreach ($hbreaks as $hbreak) { $data .= pack("\166\x76\166", $hbreak, 0x0, 0xff); } goto mUlhj; ShD4Y: $data = pack("\166", $cbrk); goto lD2HJ; v_B5s: $cbrk = count($hbreaks); goto FNZcr; olRXR: } goto p4NpM; sHAOR: foreach ($this->phpSheet->getBreaks() as $cell => $breakType) { $coordinates = PHPExcel_Cell::coordinateFromString($cell); switch ($breakType) { case PHPExcel_Worksheet::BREAK_COLUMN: $vbreaks[] = PHPExcel_Cell::columnIndexFromString($coordinates[0]) - 1; break; case PHPExcel_Worksheet::BREAK_ROW: $hbreaks[] = $coordinates[1]; break; case PHPExcel_Worksheet::BREAK_NONE: default: break; } } goto mCg9Q; eCKZD: $hbreaks = array(); goto sHAOR; b_WTY: } private function writeProtect() { goto Pr8QN; Pr8QN: if (!$this->phpSheet->getProtection()->getSheet()) { return; } goto LoTyp; LoTyp: $record = 0x12; goto FOgFm; KaU2M: $fLock = 1; goto wkUrc; BvzF7: $data = pack("\166", $fLock); goto l2uAb; FOgFm: $length = 0x2; goto KaU2M; l2uAb: $this->append($header . $data); goto oNbMa; wkUrc: $header = pack("\166\166", $record, $length); goto BvzF7; oNbMa: } private function writeScenProtect() { goto JJysb; tx1xg: $record = 0xdd; goto FsJ85; WMym9: $data = pack("\166", 1); goto E5_mm; EM0KO: $header = pack("\166\x76", $record, $length); goto WMym9; E5_mm: $this->append($header . $data); goto V0Y0P; FsJ85: $length = 0x2; goto EM0KO; gcVLI: if (!$this->phpSheet->getProtection()->getScenarios()) { return; } goto tx1xg; JJysb: if (!$this->phpSheet->getProtection()->getSheet()) { return; } goto gcVLI; V0Y0P: } private function writeObjectProtect() { goto kWxLA; O1eus: $length = 0x2; goto Dv0y1; tUWRb: if (!$this->phpSheet->getProtection()->getObjects()) { return; } goto NhWx4; Qb8Y_: $this->append($header . $data); goto taPGp; NhWx4: $record = 0x63; goto O1eus; kWxLA: if (!$this->phpSheet->getProtection()->getSheet()) { return; } goto tUWRb; Dv0y1: $header = pack("\166\166", $record, $length); goto oI1UH; oI1UH: $data = pack("\166", 1); goto Qb8Y_; taPGp: } private function writePassword() { goto Dclsm; Csouf: $record = 0x13; goto mziNv; XMOwk: $wPassword = hexdec($this->phpSheet->getProtection()->getPassword()); goto WebDP; USqAm: $this->append($header . $data); goto mbr1M; xI6iw: $data = pack("\x76", $wPassword); goto USqAm; WebDP: $header = pack("\166\x76", $record, $length); goto xI6iw; mziNv: $length = 0x2; goto XMOwk; Dclsm: if (!$this->phpSheet->getProtection()->getSheet() || !$this->phpSheet->getProtection()->getPassword()) { return; } goto Csouf; mbr1M: } public function insertBitmap($row, $col, $bitmap, $x = 0, $y = 0, $scale_x = 1, $scale_y = 1) { goto v0fyJ; AUmSY: $env = 0x1; goto DrQTV; RWHEV: $header = pack("\x76\x76\166\x76\x56", $record, $length, $cf, $env, $lcb); goto shDgS; SIO0M: $height *= $scale_y; goto rq3Y9; DrQTV: $lcb = $size; goto RWHEV; zRPRc: $width *= $scale_x; goto SIO0M; Krnbv: $record = 0x7f; goto vGYHO; shDgS: $this->append($header . $data); goto Yyu_d; HzDQS: list($width, $height, $size, $data) = $bitmap_array; goto zRPRc; biBoo: $cf = 0x9; goto AUmSY; rq3Y9: $this->positionImage($col, $row, $x, $y, $width, $height); goto Krnbv; v0fyJ: $bitmap_array = is_resource($bitmap) ? $this->processBitmapGd($bitmap) : $this->processBitmap($bitmap); goto HzDQS; vGYHO: $length = 8 + $size; goto biBoo; Yyu_d: } public function positionImage($col_start, $row_start, $x1, $y1, $width, $height) { goto hj9Dt; HRNLJ: while ($width >= PHPExcel_Shared_Excel5::sizeCol($this->phpSheet, PHPExcel_Cell::stringFromColumnIndex($col_end))) { $width -= PHPExcel_Shared_Excel5::sizeCol($this->phpSheet, PHPExcel_Cell::stringFromColumnIndex($col_end)); ++$col_end; } goto su84b; R0yCg: $x1 = $x1 / PHPExcel_Shared_Excel5::sizeCol($this->phpSheet, PHPExcel_Cell::stringFromColumnIndex($col_start)) * 1024; goto slaW1; DxBJS: $height = $height + $y1 - 1; goto HRNLJ; p2nU9: $width = $width + $x1 - 1; goto DxBJS; p5ME7: $row_end = $row_start; goto r0a8W; rSIJ1: if ($y1 >= PHPExcel_Shared_Excel5::sizeRow($this->phpSheet, $row_start + 1)) { $y1 = 0; } goto p2nU9; hj9Dt: $col_end = $col_start; goto p5ME7; C6_ED: $this->writeObjPicture($col_start, $x1, $row_start, $y1, $col_end, $x2, $row_end, $y2); goto cHSnC; r0a8W: if ($x1 >= PHPExcel_Shared_Excel5::sizeCol($this->phpSheet, PHPExcel_Cell::stringFromColumnIndex($col_start))) { $x1 = 0; } goto rSIJ1; A235W: $y2 = $height / PHPExcel_Shared_Excel5::sizeRow($this->phpSheet, $row_end + 1) * 256; goto C6_ED; kF1n2: if (PHPExcel_Shared_Excel5::sizeRow($this->phpSheet, $row_end + 1) == 0) { return; } goto R0yCg; pv80c: if (PHPExcel_Shared_Excel5::sizeRow($this->phpSheet, $row_start + 1) == 0) { return; } goto kF1n2; slaW1: $y1 = $y1 / PHPExcel_Shared_Excel5::sizeRow($this->phpSheet, $row_start + 1) * 256; goto sc3Gz; GLKS6: if (PHPExcel_Shared_Excel5::sizeCol($this->phpSheet, PHPExcel_Cell::stringFromColumnIndex($col_start)) == 0) { return; } goto VZGMS; sc3Gz: $x2 = $width / PHPExcel_Shared_Excel5::sizeCol($this->phpSheet, PHPExcel_Cell::stringFromColumnIndex($col_end)) * 1024; goto A235W; VZGMS: if (PHPExcel_Shared_Excel5::sizeCol($this->phpSheet, PHPExcel_Cell::stringFromColumnIndex($col_end)) == 0) { return; } goto pv80c; su84b: while ($height >= PHPExcel_Shared_Excel5::sizeRow($this->phpSheet, $row_end + 1)) { $height -= PHPExcel_Shared_Excel5::sizeRow($this->phpSheet, $row_end + 1); ++$row_end; } goto GLKS6; cHSnC: } private function writeObjPicture($colL, $dxL, $rwT, $dyT, $colR, $dxR, $rwB, $dyB) { goto fz3yB; KPcGa: $data .= pack("\x76", $cbPictFmla); goto nYQY_; xxHdg: $data .= pack("\x43", $lns); goto C3TWt; arJVz: $data .= pack("\x76", $cbMacro); goto g6QE1; zRDQT: $data .= pack("\x43", $fls); goto Eixj8; lCBLq: $grbit2 = 0x1; goto p3O08; poDTf: $cObj = 0x1; goto o1OKI; zawpl: $data .= pack("\x76", $dyB); goto arJVz; qAXe4: $data .= pack("\x76", $colR); goto LUnj6; mCzvl: $data .= pack("\x43", $icvBack); goto P5fTm; Zy2ag: $data .= pack("\166", $colL); goto E0mBv; UUTeN: $data .= pack("\126", $cf); goto Hrslo; TQlBd: $data .= pack("\x76", $frs); goto UUTeN; nrsWy: $data .= pack("\x76", $grbit2); goto GExVw; fz3yB: $record = 0x5d; goto t6fX6; KM899: $icvFore = 0x9; goto e5IbP; hSoy1: $Reserved2 = 0x0; goto cu7he; d_3lY: $lnw = 0x1; goto MrPRx; DFgkM: $cbMacro = 0x0; goto tOBoj; BhHDD: $data .= pack("\x76", $grbit); goto Zy2ag; D33i8: $data .= pack("\166", $Reserved2); goto mCzvl; LYS0E: $frs = 0x0; goto mOZhW; p3O08: $Reserved5 = 0x0; goto XBrZd; P5fTm: $data .= pack("\x43", $icvFore); goto zRDQT; PcaA5: $data .= pack("\x76", $OT); goto yYSVN; pIOp3: $data .= pack("\103", $icv); goto xxHdg; yYSVN: $data .= pack("\166", $id); goto BhHDD; FZJ7s: $grbit = 0x614; goto DFgkM; XuyTD: $data .= pack("\166", $rwT); goto fFU4V; eZbMo: $fAuto = 0x0; goto az3ra; GExVw: $data .= pack("\x56", $Reserved5); goto Kxcsw; nYQY_: $data .= pack("\166", $Reserved4); goto nrsWy; o1OKI: $OT = 0x8; goto wZq3T; t6fX6: $length = 0x3c; goto poDTf; qJBpA: $data = pack("\x56", $cObj); goto PcaA5; MrPRx: $fAutoB = 0x0; goto LYS0E; XBrZd: $header = pack("\166\x76", $record, $length); goto qJBpA; Eixj8: $data .= pack("\x43", $fAuto); goto pIOp3; Kxcsw: $this->append($header . $data); goto XPQJV; Hrslo: $data .= pack("\x76", $Reserved3); goto KPcGa; Ad9_z: $Reserved3 = 0x0; goto lNK8b; e5IbP: $fls = 0x0; goto eZbMo; cu7he: $icvBack = 0x9; goto KM899; C3TWt: $data .= pack("\103", $lnw); goto zoX44; zoX44: $data .= pack("\x43", $fAutoB); goto TQlBd; lNK8b: $cbPictFmla = 0x0; goto scsh9; fFU4V: $data .= pack("\x76", $dyT); goto qAXe4; g6QE1: $data .= pack("\126", $Reserved1); goto D33i8; E0mBv: $data .= pack("\x76", $dxL); goto XuyTD; wZq3T: $id = 0x1; goto FZJ7s; Y25vg: $data .= pack("\166", $rwB); goto zawpl; tOBoj: $Reserved1 = 0x0; goto hSoy1; mOZhW: $cf = 0x9; goto Ad9_z; DakaE: $lns = 0xff; goto d_3lY; scsh9: $Reserved4 = 0x0; goto lCBLq; az3ra: $icv = 0x8; goto DakaE; LUnj6: $data .= pack("\166", $dxR); goto Y25vg; XPQJV: } public function processBitmapGd($image) { goto a5swC; z5D2K: for ($j = $height; $j--;) { for ($i = 0; $i < $width; ++$i) { $color = imagecolorsforindex($image, imagecolorat($image, $i, $j)); foreach (array("\162\145\x64", "\x67\x72\145\145\156", "\x62\x6c\165\145") as $key) { $color[$key] = $color[$key] + round((255 - $color[$key]) * $color["\141\x6c\x70\150\x61"] / 127); } $data .= chr($color["\142\154\x75\145"]) . chr($color["\147\x72\x65\145\x6e"]) . chr($color["\162\x65\x64"]); } if (3 * $width % 4) { $data .= str_repeat("\x0", 4 - 3 * $width % 4); } } goto TR0vr; a5swC: $width = imagesx($image); goto ho0Jm; fGuKr: $data = pack("\x56\x76\x76\166\166", 0xc, $width, $height, 0x1, 0x18); goto z5D2K; TR0vr: return array($width, $height, strlen($data), $data); goto RjpLM; ho0Jm: $height = imagesy($image); goto fGuKr; RjpLM: } public function processBitmap($bitmap) { goto UMS2q; cd0h1: if ($identity["\x69\x64\x65\x6e\164"] != "\x42\x4d") { throw new PHPExcel_Writer_Exception("{$bitmap}\40\x64\x6f\x65\x73\x6e\47\x74\40\141\160\x70\x65\141\x72\40\164\157\40\x62\x65\40\x61\40\166\141\154\x69\x64\40\142\151\164\155\141\x70\x20\151\x6d\141\147\145\x2e\xa"); } goto xBZw8; B3QJt: $planes_and_bitcount = unpack("\x76\x32", substr($data, 0, 4)); goto h0YAv; HOzAl: $width_and_height = unpack("\x56\x32", substr($data, 0, 8)); goto mJYAT; AlE7X: $size -= 0x36; goto ntQZh; qfDgr: if (!$bmp_fd) { throw new PHPExcel_Writer_Exception("\103\x6f\x75\154\144\x6e\x27\164\x20\x69\x6d\x70\157\x72\x74\x20{$bitmap}"); } goto d7ZoY; B5Ao_: $height = $width_and_height[2]; goto lI9L4; SsrHo: if (strlen($data) <= 0x36) { throw new PHPExcel_Writer_Exception("{$bitmap}\40\x64\157\x65\163\x6e\47\164\40\x63\157\x6e\164\x61\151\x6e\x20\x65\x6e\157\165\147\x68\40\144\x61\x74\x61\56\xa"); } goto UsLWh; ntQZh: $size += 0xc; goto sdlNN; ZS3GR: $data = substr($data, 4); goto AlE7X; WEQ_J: $size = $size_array["\163\x61"]; goto ZS3GR; lI9L4: $data = substr($data, 8); goto RKihd; sdlNN: $data = substr($data, 12); goto HOzAl; p6RNu: $data = $header . $data; goto oTVvD; ZiFo1: $size_array = unpack("\x56\x73\141", substr($data, 0, 4)); goto WEQ_J; UMS2q: $bmp_fd = @fopen($bitmap, "\x72\142"); goto qfDgr; jS9_i: if ($planes_and_bitcount[1] != 1) { throw new PHPExcel_Writer_Exception("{$bitmap}\x3a\x20\x6f\156\154\x79\x20\x31\x20\160\154\x61\156\x65\40\163\x75\x70\x70\x6f\162\x74\x65\144\x20\x69\x6e\x20\x62\151\164\x6d\141\160\40\151\155\141\x67\x65\x2e\12"); } goto dpkoR; dpkoR: $compression = unpack("\126\143\157\155\x70", substr($data, 0, 4)); goto Mwq_n; Mg4rl: if ($compression["\x63\x6f\x6d\x70"] != 0) { throw new PHPExcel_Writer_Exception("{$bitmap}\x3a\40\x63\157\155\160\162\x65\163\163\151\157\x6e\x20\156\157\164\40\x73\x75\x70\160\x6f\162\x74\x65\x64\x20\x69\x6e\40\142\x69\164\155\x61\160\40\x69\155\x61\147\x65\x2e\xa"); } goto XKTeZ; XKTeZ: $data = substr($data, 20); goto C5KiL; xBZw8: $data = substr($data, 2); goto ZiFo1; RKihd: if ($width > 0xffff) { throw new PHPExcel_Writer_Exception("{$bitmap}\x3a\x20\154\141\162\147\x65\x73\164\40\151\x6d\141\147\x65\40\167\151\144\x74\x68\40\163\165\x70\160\x6f\162\164\x65\x64\40\x69\163\40\66\x35\x6b\x2e\12"); } goto x7caR; x7caR: if ($height > 0xffff) { throw new PHPExcel_Writer_Exception("{$bitmap}\x3a\40\154\141\x72\x67\145\x73\164\40\151\155\x61\147\145\40\x68\x65\x69\x67\x68\164\40\x73\x75\160\x70\x6f\162\x74\145\144\40\151\163\40\x36\x35\x6b\x2e\12"); } goto B3QJt; Mwq_n: $data = substr($data, 4); goto Mg4rl; d7ZoY: $data = fread($bmp_fd, filesize($bitmap)); goto SsrHo; oTVvD: return array($width, $height, $size, $data); goto PNuJ3; bVni6: if ($planes_and_bitcount[2] != 24) { throw new PHPExcel_Writer_Exception("{$bitmap}\x20\151\163\x6e\x27\164\x20\x61\x20\62\x34\142\x69\x74\x20\164\x72\165\x65\x20\x63\x6f\154\x6f\x72\40\142\x69\164\155\141\x70\56\12"); } goto jS9_i; UsLWh: $identity = unpack("\x41\x32\151\144\145\156\x74", $data); goto cd0h1; mJYAT: $width = $width_and_height[1]; goto B5Ao_; C5KiL: $header = pack("\126\x76\166\166\x76", 0xc, $width, $height, 0x1, 0x18); goto p6RNu; h0YAv: $data = substr($data, 4); goto bVni6; PNuJ3: } private function writeZoom() { goto l2OYO; ouPA0: $data = pack("\166\x76", $this->phpSheet->getSheetView()->getZoomScale(), 100); goto s5t8E; AXB_H: $length = 0x4; goto Febxh; Febxh: $header = pack("\x76\x76", $record, $length); goto ouPA0; LAjd2: $record = 0xa0; goto AXB_H; s5t8E: $this->append($header . $data); goto Sd8od; l2OYO: if ($this->phpSheet->getSheetView()->getZoomScale() == 100) { return; } goto LAjd2; Sd8od: } public function getEscher() { return $this->escher; } public function setEscher(PHPExcel_Shared_Escher $pValue = null) { $this->escher = $pValue; } private function writeMsoDrawing() { if (isset($this->escher)) { goto HrEKQ; hlwD7: $nm = count($spOffsets) - 1; goto YVV2Z; HrEKQ: $writer = new PHPExcel_Writer_Excel5_Escher($this->escher); goto aU55a; YVV2Z: for ($i = 1; $i <= $nm; ++$i) { $record = 0xec; $dataChunk = substr($data, $spOffsets[$i - 1], $spOffsets[$i] - $spOffsets[$i - 1]); $length = strlen($dataChunk); $header = pack("\x76\166", $record, $length); $this->append($header . $dataChunk); $record = 0x5d; $objData = ''; if ($spTypes[$i] == 0xc9) { goto tGY4p; tGY4p: $objData .= pack("\166\x76\x76\166\x76\x56\x56\x56", 0x15, 0x12, 0x14, $i, 0x2101, 0, 0, 0); goto FNNQ4; FNNQ4: $objData .= pack("\x76\x76", 0xc, 0x14); goto GpIeA; GpIeA: $objData .= pack("\110\52", "\60\60\x30\60\x30\60\x30\60\60\60\60\60\x30\60\60\60\66\64\x30\60\60\61\60\60\x30\x41\60\x30\60\x30\60\x30\61\60\60\60\60\x31\x30\60"); goto IAJU7; nJXDX: $objData .= pack("\x48\x2a", "\60\60\x30\x30\x30\x30\x30\60\x30\x31\x30\60\60\61\x30\x33\60\60\x30\60\x30\62\x30\60\60\70\60\60\x35\67\x30\x30"); goto InFpB; IAJU7: $objData .= pack("\166\166", 0x13, 0x1fee); goto nJXDX; InFpB: } else { $objData .= pack("\x76\166\x76\166\x76\126\126\x56", 0x15, 0x12, 0x8, $i, 0x6011, 0, 0, 0); } $objData .= pack("\166\x76", 0x0, 0x0); $length = strlen($objData); $header = pack("\x76\x76", $record, $length); $this->append($header . $objData); } goto k5jZL; p9uOo: $spOffsets[0] = 0; goto hlwD7; xSNsS: $spOffsets = $writer->getSpOffsets(); goto wOFZs; aU55a: $data = $writer->close(); goto xSNsS; wOFZs: $spTypes = $writer->getSpTypes(); goto p9uOo; k5jZL: } } private function writeDataValidity() { $dataValidationCollection = $this->phpSheet->getDataValidationCollection(); if (!empty($dataValidationCollection)) { goto piE1F; b0nuW: foreach ($dataValidationCollection as $cellCoordinate => $dataValidation) { goto UWEPX; aNUdu: $errorTitle = $dataValidation->getErrorTitle() !== '' ? $dataValidation->getErrorTitle() : chr(0); goto vGjlO; z5gyX: $promptTitle = $dataValidation->getPromptTitle() !== '' ? $dataValidation->getPromptTitle() : chr(0); goto kxx4P; waolw: $data .= $formula2; goto ePXhm; O_Dpi: $header = pack("\166\166", $record, $length); goto zw0a3; FRJIg: $data .= PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong($prompt); goto xtr__; Kn1jp: $options = 0x0; goto IXuZa; F0W4E: $data .= pack("\166\166", $sz1, 0x0); goto fsGVx; niQ4s: $prompt = $dataValidation->getPrompt() !== '' ? $dataValidation->getPrompt() : chr(0); goto FRJIg; E4BUA: $operator = $dataValidation->getOperator(); goto j5MBP; w6Hna: $length = strlen($data); goto O_Dpi; DZp0W: switch ($errorStyle) { case PHPExcel_Cell_DataValidation::STYLE_STOP: $errorStyle = 0x0; break; case PHPExcel_Cell_DataValidation::STYLE_WARNING: $errorStyle = 0x1; break; case PHPExcel_Cell_DataValidation::STYLE_INFORMATION: $errorStyle = 0x2; break; } goto sltgY; f3T8s: $data .= pack("\x76\x76", $sz2, 0x0); goto waolw; sltgY: $options |= $errorStyle << 4; goto oIUDT; emN_3: $options |= $type << 0; goto Q8NnI; vGjlO: $data .= PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong($errorTitle); goto niQ4s; IXuZa: $type = $dataValidation->getType(); goto Mi3fS; Dr73x: $options |= $dataValidation->getShowInputMessage() << 18; goto juuGu; ePXhm: $data .= pack("\x76", 0x1); goto lLgdx; iKGdK: try { goto o4rJX; B0l12: $this->parser->parse($formula1); goto DtQuM; Xv22t: $sz1 = strlen($formula1); goto PFACk; DtQuM: $formula1 = $this->parser->toReversePolish(); goto Xv22t; o4rJX: $formula1 = $dataValidation->getFormula1(); goto Pg8dM; Pg8dM: if ($type == 0x3) { $formula1 = str_replace("\x2c", chr(0), $formula1); } goto B0l12; PFACk: } catch (PHPExcel_Exception $e) { $sz1 = 0; $formula1 = ''; } goto F0W4E; juuGu: $options |= $dataValidation->getShowErrorMessage() << 19; goto E4BUA; fSSBo: $data .= PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong($error); goto iKGdK; xtr__: $error = $dataValidation->getError() !== '' ? $dataValidation->getError() : chr(0); goto fSSBo; oIUDT: if ($type == 0x3 && preg_match("\57\136\x5c\x22\x2e\52\134\42\x24\x2f", $dataValidation->getFormula1())) { $options |= 0x1 << 7; } goto Yt0uR; a67Lb: $data = pack("\x56", $options); goto z5gyX; lLgdx: $data .= $this->writeBIFF8CellRangeAddressFixed($cellCoordinate); goto w6Hna; fsGVx: $data .= $formula1; goto sGyJM; sGyJM: try { goto ijzCF; Q0Ptn: $formula2 = $this->parser->toReversePolish(); goto oQiw1; oQiw1: $sz2 = strlen($formula2); goto HtDGf; YGtwO: $this->parser->parse($formula2); goto Q0Ptn; ijzCF: $formula2 = $dataValidation->getFormula2(); goto l0edI; l0edI: if ($formula2 === '') { throw new PHPExcel_Writer_Exception("\x4e\157\x20\146\x6f\x72\155\165\x6c\x61\62"); } goto YGtwO; HtDGf: } catch (PHPExcel_Exception $e) { $sz2 = 0; $formula2 = ''; } goto f3T8s; Dj3az: $options |= $operator << 20; goto a67Lb; Mi3fS: switch ($type) { case PHPExcel_Cell_DataValidation::TYPE_NONE: $type = 0x0; break; case PHPExcel_Cell_DataValidation::TYPE_WHOLE: $type = 0x1; break; case PHPExcel_Cell_DataValidation::TYPE_DECIMAL: $type = 0x2; break; case PHPExcel_Cell_DataValidation::TYPE_LIST: $type = 0x3; break; case PHPExcel_Cell_DataValidation::TYPE_DATE: $type = 0x4; break; case PHPExcel_Cell_DataValidation::TYPE_TIME: $type = 0x5; break; case PHPExcel_Cell_DataValidation::TYPE_TEXTLENGTH: $type = 0x6; break; case PHPExcel_Cell_DataValidation::TYPE_CUSTOM: $type = 0x7; break; } goto emN_3; Q8NnI: $errorStyle = $dataValidation->getType(); goto DZp0W; kxx4P: $data .= PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong($promptTitle); goto aNUdu; zw0a3: $this->append($header . $data); goto oPKEa; UWEPX: $data = ''; goto Kn1jp; j5MBP: switch ($operator) { case PHPExcel_Cell_DataValidation::OPERATOR_BETWEEN: $operator = 0x0; break; case PHPExcel_Cell_DataValidation::OPERATOR_NOTBETWEEN: $operator = 0x1; break; case PHPExcel_Cell_DataValidation::OPERATOR_EQUAL: $operator = 0x2; break; case PHPExcel_Cell_DataValidation::OPERATOR_NOTEQUAL: $operator = 0x3; break; case PHPExcel_Cell_DataValidation::OPERATOR_GREATERTHAN: $operator = 0x4; break; case PHPExcel_Cell_DataValidation::OPERATOR_LESSTHAN: $operator = 0x5; break; case PHPExcel_Cell_DataValidation::OPERATOR_GREATERTHANOREQUAL: $operator = 0x6; break; case PHPExcel_Cell_DataValidation::OPERATOR_LESSTHANOREQUAL: $operator = 0x7; break; } goto Dj3az; Yt0uR: $options |= $dataValidation->getAllowBlank() << 8; goto fEMf_; fEMf_: $options |= !$dataValidation->getShowDropDown() << 9; goto Dr73x; oPKEa: } goto BZ9cA; e0D5g: $objId = 0xffffffff; goto BkU0l; dZMaA: $verPos = 0x0; goto e0D5g; BhLZE: $record = 0x1be; goto b0nuW; v1LtV: $length = 0x12; goto KEFtB; piE1F: $record = 0x1b2; goto v1LtV; yZQ2i: $data = pack("\x76\x56\x56\126\126", $grbit, $horPos, $verPos, $objId, count($dataValidationCollection)); goto RpAD2; RpAD2: $this->append($header . $data); goto BhLZE; KEFtB: $grbit = 0x0; goto Qdb0_; Qdb0_: $horPos = 0x0; goto dZMaA; BkU0l: $header = pack("\166\166", $record, $length); goto yZQ2i; BZ9cA: } } private static function mapErrorCode($errorCode) { switch ($errorCode) { case "\43\116\x55\114\x4c\41": return 0x0; case "\43\104\111\126\x2f\x30\x21": return 0x7; case "\x23\126\101\x4c\125\105\x21": return 0xf; case "\x23\122\x45\x46\41": return 0x17; case "\x23\x4e\101\x4d\x45\77": return 0x1d; case "\x23\116\125\115\x21": return 0x24; case "\x23\116\x2f\x41": return 0x2a; } return 0; } private function writePageLayoutView() { goto m0O29; eR3Jd: $grbit = $fPageLayoutView; goto JnTHy; YmEvB: if ($this->phpSheet->getSheetView()->getView() == PHPExcel_Worksheet_SheetView::SHEETVIEW_PAGE_LAYOUT) { $fPageLayoutView = 1; } else { $fPageLayoutView = 0; } goto wyXjt; ii0RB: $this->append($header . $data); goto I77Go; H_kDd: $header = pack("\166\x76", $record, $length); goto R_31n; wrha_: $grbit |= $fWhitespaceHidden << 3; goto H_kDd; m0O29: $record = 0x88b; goto TqGG4; kHAp4: $wScalvePLV = $this->phpSheet->getSheetView()->getZoomScale(); goto YmEvB; wyXjt: $fRulerVisible = 0; goto xgvUW; ru7UB: $reserved = 0x0; goto kHAp4; R_31n: $data = pack("\x76\x76\126\x56\x76\x76", $rt, $grbitFrt, 0x0, 0x0, $wScalvePLV, $grbit); goto ii0RB; SChrh: $rt = 0x88b; goto Tn_mR; xgvUW: $fWhitespaceHidden = 0; goto eR3Jd; Tn_mR: $grbitFrt = 0x0; goto ru7UB; TqGG4: $length = 0x10; goto SChrh; JnTHy: $grbit |= $fRulerVisible << 1; goto wrha_; I77Go: } private function writeCFRule(PHPExcel_Style_Conditional $conditional) { goto jGQYq; ggM6I: $bProtLocked = $conditional->getStyle()->getProtection()->getLocked() == null ? 1 : 0; goto FT6V3; qvYam: $flags |= 1 == $bAlignHz ? 0x1 : 0; goto W3XR9; VwLRZ: $bAlignVt = $conditional->getStyle()->getAlignment()->getVertical() == null ? 1 : 0; goto h9lzL; Y6dWQ: $flags |= 1 == $bProtLocked ? 0x100 : 0; goto n3eMk; eOJCI: if ($bFormatProt == 1) { goto mIZs8; mIZs8: $dataBlockProtection = 0; goto L4wQ2; L4wQ2: if ($conditional->getStyle()->getProtection()->getLocked() == PHPExcel_Style_Protection::PROTECTION_PROTECTED) { $dataBlockProtection = 1; } goto jqXc1; jqXc1: if ($conditional->getStyle()->getProtection()->getHidden() == PHPExcel_Style_Protection::PROTECTION_PROTECTED) { $dataBlockProtection = 1 << 1; } goto pQBlr; pQBlr: } goto J_qX6; h9lzL: $bAlignWrapTx = $conditional->getStyle()->getAlignment()->getWrapText() == false ? 1 : 0; goto nQmQ4; jS_lE: if ($bBorderLeft == 0 || $bBorderRight == 0 || $bBorderTop == 0 || $bBorderBottom == 0) { $bFormatBorder = 1; } else { $bFormatBorder = 0; } goto QLTMP; nQmQ4: $bTxRotation = $conditional->getStyle()->getAlignment()->getTextRotation() == null ? 1 : 0; goto WcNDv; XYYLM: $flags |= 1 == $bAlignWrapTx ? 0x4 : 0; goto J0TOZ; cuOVE: if ($bFormatFont == 1) { goto otkIO; ZQVYS: switch ($conditional->getStyle()->getFont()->getUnderline()) { case PHPExcel_Style_Font::UNDERLINE_NONE: goto ORsHR; ORsHR: $dataBlockFont .= pack("\103", 0x0); goto PHmHY; Y2Z_a: break; goto T3_K9; PHmHY: $fontUnderline = 0; goto Y2Z_a; T3_K9: case PHPExcel_Style_Font::UNDERLINE_DOUBLE: goto uSTX3; p9nfs: $fontUnderline = 0; goto Pz3Kw; uSTX3: $dataBlockFont .= pack("\x43", 0x2); goto p9nfs; Pz3Kw: break; goto mToaM; mToaM: case PHPExcel_Style_Font::UNDERLINE_DOUBLEACCOUNTING: goto pVMiJ; pVMiJ: $dataBlockFont .= pack("\x43", 0x22); goto loj8X; loj8X: $fontUnderline = 0; goto oicEC; oicEC: break; goto Fir6t; Fir6t: case PHPExcel_Style_Font::UNDERLINE_SINGLE: goto kto_4; IdwJy: break; goto vFHnd; kto_4: $dataBlockFont .= pack("\x43", 0x1); goto Wo9JG; Wo9JG: $fontUnderline = 0; goto IdwJy; vFHnd: case PHPExcel_Style_Font::UNDERLINE_SINGLEACCOUNTING: goto PoNSc; XjZjd: $fontUnderline = 0; goto i7szr; PoNSc: $dataBlockFont .= pack("\x43", 0x21); goto XjZjd; i7szr: break; goto jZwdw; jZwdw: default: goto Cg19I; SG7I3: $fontUnderline = 1; goto pTGhD; pTGhD: break; goto ramY5; Cg19I: $dataBlockFont .= pack("\103", 0x0); goto SG7I3; ramY5: } goto MRiL1; MRiL1: $dataBlockFont .= pack("\166\x43", 0x0, 0x0); goto qBW_b; SXVGW: $optionsFlags |= 1 == $optionsFlagsBold ? 0x2 : 0; goto M6q5Y; Jud1N: $optionsFlags |= 1 == 1 ? 0x80 : 0; goto hb44I; hb44I: $dataBlockFont .= pack("\x56", $optionsFlags); goto PYO_7; XYBAP: if ($conditional->getStyle()->getFont()->getSize() == null) { $dataBlockFont .= pack("\126", 20 * 11); } else { $dataBlockFont .= pack("\x56", 20 * $conditional->getStyle()->getFont()->getSize()); } goto stxMc; D7gm7: $dataBlockFont .= pack("\x76", 0x1); goto BZvfX; pmtaP: $dataBlockFont .= pack("\126", 0x0); goto KynLW; KynLW: $dataBlockFont .= pack("\x56", 0x0); goto E0yx3; pLo2f: $dataBlockFont .= pack("\126", 0x0); goto QjPXH; stxMc: $dataBlockFont .= pack("\x56", 0); goto utoq4; otkIO: if ($conditional->getStyle()->getFont()->getName() == null) { $dataBlockFont = pack("\126\x56\x56\126\x56\x56\x56\x56", 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0); $dataBlockFont .= pack("\126\x56\126\126\126\126\126\126", 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0); } else { $dataBlockFont = PHPExcel_Shared_String::UTF8toBIFF8UnicodeLong($conditional->getStyle()->getFont()->getName()); } goto XYBAP; qBW_b: switch ($conditional->getStyle()->getFont()->getColor()->getRGB()) { case "\60\x30\x30\60\60\60": $colorIdx = 0x8; break; case "\106\106\106\x46\x46\x46": $colorIdx = 0x9; break; case "\x46\106\x30\60\60\x30": $colorIdx = 0xa; break; case "\x30\x30\106\106\x30\60": $colorIdx = 0xb; break; case "\x30\x30\60\60\x46\x46": $colorIdx = 0xc; break; case "\106\x46\x46\106\x30\x30": $colorIdx = 0xd; break; case "\x46\x46\x30\x30\106\x46": $colorIdx = 0xe; break; case "\60\x30\106\106\x46\x46": $colorIdx = 0xf; break; case "\70\x30\60\x30\x30\x30": $colorIdx = 0x10; break; case "\x30\x30\x38\60\60\x30": $colorIdx = 0x11; break; case "\60\x30\60\60\x38\60": $colorIdx = 0x12; break; case "\70\60\70\60\60\x30": $colorIdx = 0x13; break; case "\70\x30\60\60\70\x30": $colorIdx = 0x14; break; case "\x30\x30\70\60\70\x30": $colorIdx = 0x15; break; case "\x43\x30\103\60\103\60": $colorIdx = 0x16; break; case "\x38\60\70\60\x38\x30": $colorIdx = 0x17; break; case "\71\71\x39\71\x46\106": $colorIdx = 0x18; break; case "\x39\71\x33\63\x36\x36": $colorIdx = 0x19; break; case "\x46\x46\x46\x46\103\x43": $colorIdx = 0x1a; break; case "\103\103\x46\x46\x46\x46": $colorIdx = 0x1b; break; case "\x36\x36\x30\x30\x36\x36": $colorIdx = 0x1c; break; case "\x46\106\x38\x30\x38\x30": $colorIdx = 0x1d; break; case "\x30\60\66\66\x43\103": $colorIdx = 0x1e; break; case "\x43\103\103\103\x46\106": $colorIdx = 0x1f; break; case "\60\60\x30\x30\70\x30": $colorIdx = 0x20; break; case "\106\106\x30\x30\106\106": $colorIdx = 0x21; break; case "\x46\x46\x46\106\x30\60": $colorIdx = 0x22; break; case "\x30\60\106\106\106\106": $colorIdx = 0x23; break; case "\x38\60\60\x30\70\x30": $colorIdx = 0x24; break; case "\70\60\60\60\60\x30": $colorIdx = 0x25; break; case "\x30\60\70\x30\70\x30": $colorIdx = 0x26; break; case "\x30\60\60\x30\106\x46": $colorIdx = 0x27; break; case "\60\60\x43\103\x46\106": $colorIdx = 0x28; break; case "\x43\x43\106\106\106\106": $colorIdx = 0x29; break; case "\x43\x43\x46\106\x43\x43": $colorIdx = 0x2a; break; case "\106\x46\x46\x46\71\71": $colorIdx = 0x2b; break; case "\71\x39\103\x43\x46\x46": $colorIdx = 0x2c; break; case "\106\106\x39\x39\x43\103": $colorIdx = 0x2d; break; case "\103\103\x39\x39\x46\x46": $colorIdx = 0x2e; break; case "\106\106\103\103\71\x39": $colorIdx = 0x2f; break; case "\63\63\66\66\x46\106": $colorIdx = 0x30; break; case "\63\63\103\x43\103\103": $colorIdx = 0x31; break; case "\71\x39\x43\103\60\60": $colorIdx = 0x32; break; case "\106\x46\x43\x43\x30\x30": $colorIdx = 0x33; break; case "\x46\x46\71\71\x30\60": $colorIdx = 0x34; break; case "\x46\x46\66\x36\x30\60": $colorIdx = 0x35; break; case "\x36\x36\66\x36\71\71": $colorIdx = 0x36; break; case "\71\66\71\x36\x39\66": $colorIdx = 0x37; break; case "\60\x30\63\63\x36\x36": $colorIdx = 0x38; break; case "\63\x33\71\71\x36\x36": $colorIdx = 0x39; break; case "\x30\x30\63\x33\x30\x30": $colorIdx = 0x3a; break; case "\x33\63\63\x33\60\60": $colorIdx = 0x3b; break; case "\71\71\x33\x33\60\x30": $colorIdx = 0x3c; break; case "\x39\71\63\63\66\x36": $colorIdx = 0x3d; break; case "\x33\63\63\x33\x39\x39": $colorIdx = 0x3e; break; case "\x33\63\63\63\63\x33": $colorIdx = 0x3f; break; default: $colorIdx = 0x0; break; } goto SDCFi; qBykc: $dataBlockFont .= pack("\x56", $fontUnderline); goto pmtaP; SDCFi: $dataBlockFont .= pack("\126", $colorIdx); goto pLo2f; NoS7Y: $optionsFlags |= 1 == 0 ? 0x20 : 0; goto Jud1N; MDuFe: $optionsFlags |= 1 == 1 ? 0x10 : 0; goto NoS7Y; QjPXH: $optionsFlags = 0; goto mBePk; mBePk: $optionsFlagsBold = $conditional->getStyle()->getFont()->getBold() == null ? 1 : 0; goto SXVGW; utoq4: if ($conditional->getStyle()->getFont()->getBold() == true) { $dataBlockFont .= pack("\166", 0x2bc); } else { $dataBlockFont .= pack("\x76", 0x190); } goto jIfO3; PYO_7: $dataBlockFont .= pack("\x56", $fontEscapement); goto qBykc; M6q5Y: $optionsFlags |= 1 == 1 ? 0x8 : 0; goto MDuFe; E0yx3: $dataBlockFont .= pack("\126\126", 0x0, 0x0); goto D7gm7; jIfO3: if ($conditional->getStyle()->getFont()->getSubScript() == true) { $dataBlockFont .= pack("\166", 0x2); $fontEscapement = 0; } elseif ($conditional->getStyle()->getFont()->getSuperScript() == true) { $dataBlockFont .= pack("\166", 0x1); $fontEscapement = 0; } else { $dataBlockFont .= pack("\x76", 0x0); $fontEscapement = 1; } goto ZQVYS; BZvfX: } goto QGrgm; vZ6QM: $flags |= 1 == 0 ? 0x80000000 : 0; goto cuOVE; FT6V3: $bProtHidden = $conditional->getStyle()->getProtection()->getHidden() == null ? 1 : 0; goto Yt0VW; H9vsu: $flags |= 1 == $bBorderBottom ? 0x2000 : 0; goto hWOFy; fquHO: $flags |= 1 == $bShrinkToFit ? 0x40 : 0; goto rhJHd; X48wx: if ($conditional->getStyle()->getFont()->getName() != null || $conditional->getStyle()->getFont()->getSize() != null || $conditional->getStyle()->getFont()->getBold() != null || $conditional->getStyle()->getFont()->getItalic() != null || $conditional->getStyle()->getFont()->getSuperScript() != null || $conditional->getStyle()->getFont()->getSubScript() != null || $conditional->getStyle()->getFont()->getUnderline() != null || $conditional->getStyle()->getFont()->getStrikethrough() != null || $conditional->getStyle()->getFont()->getColor()->getARGB() != null) { $bFormatFont = 1; } else { $bFormatFont = 0; } goto VtMp1; CYFVf: if ($bFormatBorder == 1) { $data .= $dataBlockBorder; } goto J8Xiz; rhJHd: $flags |= 1 == 1 ? 0x80 : 0; goto Y6dWQ; YFexN: $bBorderTop = $conditional->getStyle()->getBorders()->getTop()->getColor()->getARGB() == PHPExcel_Style_Color::COLOR_BLACK && $conditional->getStyle()->getBorders()->getTop()->getBorderStyle() == PHPExcel_Style_Border::BORDER_NONE ? 1 : 0; goto QA0En; QBcZu: $bAlignHz = $conditional->getStyle()->getAlignment()->getHorizontal() == null ? 1 : 0; goto VwLRZ; hWOFy: $flags |= 1 == 1 ? 0x4000 : 0; goto bP_1M; UC77S: $bFillColorBg = $conditional->getStyle()->getFill()->getEndColor()->getARGB() == null ? 0 : 1; goto e271E; BNUXO: $flags |= 1 == $bFormatAlign ? 0x8000000 : 0; goto iULKH; QLTMP: $bFillStyle = $conditional->getStyle()->getFill()->getFillType() == null ? 0 : 1; goto vsu2B; Mtzpb: $flags |= 1 == $bFormatFont ? 0x4000000 : 0; goto BNUXO; n3eMk: $flags |= 1 == $bProtHidden ? 0x200 : 0; goto yFtOy; qWBkz: if ($bFormatFill == 1) { goto PICP2; oBwmf: $dataBlockFill = pack("\166", $blockFillPatternStyle); goto ftiUF; PICP2: $blockFillPatternStyle = 0; goto TWNHg; evoUA: switch ($conditional->getStyle()->getFill()->getEndColor()->getRGB()) { case "\x30\60\x30\x30\60\x30": $colorIdxFg = 0x8; break; case "\106\x46\x46\106\x46\106": $colorIdxFg = 0x9; break; case "\x46\x46\x30\x30\x30\x30": $colorIdxFg = 0xa; break; case "\x30\60\106\106\60\60": $colorIdxFg = 0xb; break; case "\60\x30\x30\x30\x46\106": $colorIdxFg = 0xc; break; case "\106\106\106\106\x30\60": $colorIdxFg = 0xd; break; case "\x46\106\60\x30\106\106": $colorIdxFg = 0xe; break; case "\60\x30\106\x46\x46\106": $colorIdxFg = 0xf; break; case "\70\60\60\x30\60\x30": $colorIdxFg = 0x10; break; case "\60\x30\70\x30\60\60": $colorIdxFg = 0x11; break; case "\60\x30\x30\x30\x38\60": $colorIdxFg = 0x12; break; case "\x38\60\x38\x30\x30\x30": $colorIdxFg = 0x13; break; case "\x38\x30\60\x30\70\60": $colorIdxFg = 0x14; break; case "\60\x30\70\x30\x38\60": $colorIdxFg = 0x15; break; case "\103\60\x43\x30\x43\60": $colorIdxFg = 0x16; break; case "\x38\60\70\x30\70\x30": $colorIdxFg = 0x17; break; case "\71\71\x39\x39\x46\106": $colorIdxFg = 0x18; break; case "\71\x39\x33\63\66\x36": $colorIdxFg = 0x19; break; case "\x46\106\106\x46\103\103": $colorIdxFg = 0x1a; break; case "\103\x43\106\106\106\x46": $colorIdxFg = 0x1b; break; case "\66\66\x30\60\66\x36": $colorIdxFg = 0x1c; break; case "\x46\x46\70\60\70\60": $colorIdxFg = 0x1d; break; case "\x30\60\x36\66\x43\x43": $colorIdxFg = 0x1e; break; case "\x43\x43\103\103\x46\x46": $colorIdxFg = 0x1f; break; case "\x30\60\60\60\70\x30": $colorIdxFg = 0x20; break; case "\x46\106\x30\60\x46\x46": $colorIdxFg = 0x21; break; case "\106\106\106\106\x30\x30": $colorIdxFg = 0x22; break; case "\60\x30\106\106\x46\x46": $colorIdxFg = 0x23; break; case "\x38\60\x30\x30\70\60": $colorIdxFg = 0x24; break; case "\70\x30\60\60\x30\60": $colorIdxFg = 0x25; break; case "\x30\60\x38\x30\70\x30": $colorIdxFg = 0x26; break; case "\x30\60\60\x30\106\x46": $colorIdxFg = 0x27; break; case "\x30\x30\x43\x43\106\x46": $colorIdxFg = 0x28; break; case "\x43\x43\106\x46\x46\106": $colorIdxFg = 0x29; break; case "\x43\x43\x46\106\103\x43": $colorIdxFg = 0x2a; break; case "\x46\x46\x46\106\71\x39": $colorIdxFg = 0x2b; break; case "\x39\71\103\x43\x46\x46": $colorIdxFg = 0x2c; break; case "\x46\x46\x39\x39\103\x43": $colorIdxFg = 0x2d; break; case "\x43\x43\x39\x39\106\106": $colorIdxFg = 0x2e; break; case "\x46\x46\x43\103\71\x39": $colorIdxFg = 0x2f; break; case "\63\x33\x36\66\106\x46": $colorIdxFg = 0x30; break; case "\63\63\x43\103\103\x43": $colorIdxFg = 0x31; break; case "\71\x39\x43\103\60\x30": $colorIdxFg = 0x32; break; case "\106\106\x43\103\x30\60": $colorIdxFg = 0x33; break; case "\106\106\71\x39\60\60": $colorIdxFg = 0x34; break; case "\x46\x46\x36\66\x30\x30": $colorIdxFg = 0x35; break; case "\x36\66\66\66\x39\71": $colorIdxFg = 0x36; break; case "\x39\66\x39\66\71\x36": $colorIdxFg = 0x37; break; case "\60\60\x33\63\66\x36": $colorIdxFg = 0x38; break; case "\63\x33\x39\x39\x36\x36": $colorIdxFg = 0x39; break; case "\60\60\63\63\60\x30": $colorIdxFg = 0x3a; break; case "\x33\63\x33\x33\60\x30": $colorIdxFg = 0x3b; break; case "\x39\x39\63\63\60\x30": $colorIdxFg = 0x3c; break; case "\x39\71\x33\63\66\66": $colorIdxFg = 0x3d; break; case "\63\x33\63\x33\x39\x39": $colorIdxFg = 0x3e; break; case "\63\x33\63\63\x33\x33": $colorIdxFg = 0x3f; break; default: $colorIdxFg = 0x40; break; } goto oBwmf; TC0k6: switch ($conditional->getStyle()->getFill()->getStartColor()->getRGB()) { case "\x30\60\x30\60\x30\60": $colorIdxBg = 0x8; break; case "\x46\x46\106\106\x46\x46": $colorIdxBg = 0x9; break; case "\x46\106\x30\60\60\x30": $colorIdxBg = 0xa; break; case "\x30\60\x46\106\x30\x30": $colorIdxBg = 0xb; break; case "\60\x30\60\x30\x46\106": $colorIdxBg = 0xc; break; case "\x46\x46\x46\106\60\60": $colorIdxBg = 0xd; break; case "\106\106\x30\60\106\106": $colorIdxBg = 0xe; break; case "\60\x30\x46\106\x46\x46": $colorIdxBg = 0xf; break; case "\x38\60\60\60\x30\x30": $colorIdxBg = 0x10; break; case "\60\x30\x38\x30\60\60": $colorIdxBg = 0x11; break; case "\60\x30\x30\60\70\60": $colorIdxBg = 0x12; break; case "\70\60\70\60\60\60": $colorIdxBg = 0x13; break; case "\70\60\60\60\x38\x30": $colorIdxBg = 0x14; break; case "\60\x30\70\60\70\x30": $colorIdxBg = 0x15; break; case "\x43\60\103\60\x43\x30": $colorIdxBg = 0x16; break; case "\x38\x30\x38\60\x38\x30": $colorIdxBg = 0x17; break; case "\x39\x39\x39\71\106\106": $colorIdxBg = 0x18; break; case "\71\71\63\x33\x36\x36": $colorIdxBg = 0x19; break; case "\x46\106\x46\x46\103\103": $colorIdxBg = 0x1a; break; case "\103\103\x46\106\x46\106": $colorIdxBg = 0x1b; break; case "\x36\x36\60\60\66\66": $colorIdxBg = 0x1c; break; case "\106\106\70\60\x38\x30": $colorIdxBg = 0x1d; break; case "\x30\x30\x36\66\x43\103": $colorIdxBg = 0x1e; break; case "\x43\103\103\103\x46\106": $colorIdxBg = 0x1f; break; case "\60\60\60\x30\x38\x30": $colorIdxBg = 0x20; break; case "\106\106\60\x30\106\x46": $colorIdxBg = 0x21; break; case "\x46\106\106\106\60\60": $colorIdxBg = 0x22; break; case "\x30\60\106\106\x46\106": $colorIdxBg = 0x23; break; case "\70\60\x30\60\70\60": $colorIdxBg = 0x24; break; case "\70\60\x30\60\60\60": $colorIdxBg = 0x25; break; case "\x30\x30\70\x30\x38\60": $colorIdxBg = 0x26; break; case "\60\60\60\x30\x46\x46": $colorIdxBg = 0x27; break; case "\60\60\103\x43\x46\106": $colorIdxBg = 0x28; break; case "\103\x43\x46\x46\106\106": $colorIdxBg = 0x29; break; case "\x43\x43\106\x46\103\103": $colorIdxBg = 0x2a; break; case "\106\x46\x46\106\x39\71": $colorIdxBg = 0x2b; break; case "\71\71\x43\x43\x46\106": $colorIdxBg = 0x2c; break; case "\106\106\x39\71\x43\103": $colorIdxBg = 0x2d; break; case "\x43\103\x39\71\x46\x46": $colorIdxBg = 0x2e; break; case "\106\106\103\x43\x39\x39": $colorIdxBg = 0x2f; break; case "\x33\x33\x36\x36\106\x46": $colorIdxBg = 0x30; break; case "\63\x33\x43\x43\103\103": $colorIdxBg = 0x31; break; case "\71\x39\103\x43\60\x30": $colorIdxBg = 0x32; break; case "\106\x46\x43\x43\60\60": $colorIdxBg = 0x33; break; case "\x46\x46\71\71\60\x30": $colorIdxBg = 0x34; break; case "\106\x46\66\x36\60\60": $colorIdxBg = 0x35; break; case "\66\x36\66\66\x39\x39": $colorIdxBg = 0x36; break; case "\x39\66\x39\x36\71\66": $colorIdxBg = 0x37; break; case "\x30\x30\63\63\66\66": $colorIdxBg = 0x38; break; case "\63\63\71\x39\x36\66": $colorIdxBg = 0x39; break; case "\60\60\x33\x33\60\60": $colorIdxBg = 0x3a; break; case "\63\63\x33\x33\x30\x30": $colorIdxBg = 0x3b; break; case "\x39\71\x33\x33\60\x30": $colorIdxBg = 0x3c; break; case "\71\x39\63\63\66\66": $colorIdxBg = 0x3d; break; case "\63\x33\x33\x33\71\71": $colorIdxBg = 0x3e; break; case "\x33\63\63\x33\63\x33": $colorIdxBg = 0x3f; break; default: $colorIdxBg = 0x41; break; } goto evoUA; TWNHg: switch ($conditional->getStyle()->getFill()->getFillType()) { case PHPExcel_Style_Fill::FILL_NONE: $blockFillPatternStyle = 0x0; break; case PHPExcel_Style_Fill::FILL_SOLID: $blockFillPatternStyle = 0x1; break; case PHPExcel_Style_Fill::FILL_PATTERN_MEDIUMGRAY: $blockFillPatternStyle = 0x2; break; case PHPExcel_Style_Fill::FILL_PATTERN_DARKGRAY: $blockFillPatternStyle = 0x3; break; case PHPExcel_Style_Fill::FILL_PATTERN_LIGHTGRAY: $blockFillPatternStyle = 0x4; break; case PHPExcel_Style_Fill::FILL_PATTERN_DARKHORIZONTAL: $blockFillPatternStyle = 0x5; break; case PHPExcel_Style_Fill::FILL_PATTERN_DARKVERTICAL: $blockFillPatternStyle = 0x6; break; case PHPExcel_Style_Fill::FILL_PATTERN_DARKDOWN: $blockFillPatternStyle = 0x7; break; case PHPExcel_Style_Fill::FILL_PATTERN_DARKUP: $blockFillPatternStyle = 0x8; break; case PHPExcel_Style_Fill::FILL_PATTERN_DARKGRID: $blockFillPatternStyle = 0x9; break; case PHPExcel_Style_Fill::FILL_PATTERN_DARKTRELLIS: $blockFillPatternStyle = 0xa; break; case PHPExcel_Style_Fill::FILL_PATTERN_LIGHTHORIZONTAL: $blockFillPatternStyle = 0xb; break; case PHPExcel_Style_Fill::FILL_PATTERN_LIGHTVERTICAL: $blockFillPatternStyle = 0xc; break; case PHPExcel_Style_Fill::FILL_PATTERN_LIGHTDOWN: $blockFillPatternStyle = 0xd; break; case PHPExcel_Style_Fill::FILL_PATTERN_LIGHTUP: $blockFillPatternStyle = 0xe; break; case PHPExcel_Style_Fill::FILL_PATTERN_LIGHTGRID: $blockFillPatternStyle = 0xf; break; case PHPExcel_Style_Fill::FILL_PATTERN_LIGHTTRELLIS: $blockFillPatternStyle = 0x10; break; case PHPExcel_Style_Fill::FILL_PATTERN_GRAY125: $blockFillPatternStyle = 0x11; break; case PHPExcel_Style_Fill::FILL_PATTERN_GRAY0625: $blockFillPatternStyle = 0x12; break; case PHPExcel_Style_Fill::FILL_GRADIENT_LINEAR: $blockFillPatternStyle = 0x0; break; case PHPExcel_Style_Fill::FILL_GRADIENT_PATH: $blockFillPatternStyle = 0x0; break; default: $blockFillPatternStyle = 0x0; break; } goto TC0k6; ftiUF: $dataBlockFill .= pack("\x76", $colorIdxFg | $colorIdxBg << 7); goto GsCxV; GsCxV: } goto eOJCI; jCqI6: $flags |= 1 == 1 ? 0x10 : 0; goto zSTXu; J_qX6: $data = pack("\x43\x43\166\166\x56\x76", $type, $operatorType, $szValue1, $szValue2, $flags, 0x0); goto lqNGJ; pKFta: $flags |= 1 == $bFillColorBg ? 0x40000 : 0; goto CO6Ut; iiGKZ: $bBorderRight = $conditional->getStyle()->getBorders()->getRight()->getColor()->getARGB() == PHPExcel_Style_Color::COLOR_BLACK && $conditional->getStyle()->getBorders()->getRight()->getBorderStyle() == PHPExcel_Style_Border::BORDER_NONE ? 1 : 0; goto YFexN; NqLoL: if (!is_null($operand2)) { $data .= $operand2; } goto RcEnA; CO6Ut: $flags |= 1 == 1 ? 0x380000 : 0; goto Mtzpb; VtMp1: $flags = 0; goto qvYam; vsu2B: $bFillColor = $conditional->getStyle()->getFill()->getStartColor()->getARGB() == null ? 0 : 1; goto UC77S; Jqz3e: if ($bFormatBorder == 1) { goto pmlKM; a7zNM: switch ($conditional->getStyle()->getBorders()->getDiagonal()->getBorderStyle()) { case PHPExcel_Style_Border::BORDER_NONE: $blockColor |= 0x0 << 21; break; case PHPExcel_Style_Border::BORDER_THIN: $blockColor |= 0x1 << 21; break; case PHPExcel_Style_Border::BORDER_MEDIUM: $blockColor |= 0x2 << 21; break; case PHPExcel_Style_Border::BORDER_DASHED: $blockColor |= 0x3 << 21; break; case PHPExcel_Style_Border::BORDER_DOTTED: $blockColor |= 0x4 << 21; break; case PHPExcel_Style_Border::BORDER_THICK: $blockColor |= 0x5 << 21; break; case PHPExcel_Style_Border::BORDER_DOUBLE: $blockColor |= 0x6 << 21; break; case PHPExcel_Style_Border::BORDER_HAIR: $blockColor |= 0x7 << 21; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHED: $blockColor |= 0x8 << 21; break; case PHPExcel_Style_Border::BORDER_DASHDOT: $blockColor |= 0x9 << 21; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOT: $blockColor |= 0xa << 21; break; case PHPExcel_Style_Border::BORDER_DASHDOTDOT: $blockColor |= 0xb << 21; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOTDOT: $blockColor |= 0xc << 21; break; case PHPExcel_Style_Border::BORDER_SLANTDASHDOT: $blockColor |= 0xd << 21; break; } goto F8R3I; pmlKM: $blockLineStyle = 0; goto Y7iLz; Y8Oyw: switch ($conditional->getStyle()->getBorders()->getBottom()->getBorderStyle()) { case PHPExcel_Style_Border::BORDER_NONE: $blockLineStyle |= 0x0 << 12; break; case PHPExcel_Style_Border::BORDER_THIN: $blockLineStyle |= 0x1 << 12; break; case PHPExcel_Style_Border::BORDER_MEDIUM: $blockLineStyle |= 0x2 << 12; break; case PHPExcel_Style_Border::BORDER_DASHED: $blockLineStyle |= 0x3 << 12; break; case PHPExcel_Style_Border::BORDER_DOTTED: $blockLineStyle |= 0x4 << 12; break; case PHPExcel_Style_Border::BORDER_THICK: $blockLineStyle |= 0x5 << 12; break; case PHPExcel_Style_Border::BORDER_DOUBLE: $blockLineStyle |= 0x6 << 12; break; case PHPExcel_Style_Border::BORDER_HAIR: $blockLineStyle |= 0x7 << 12; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHED: $blockLineStyle |= 0x8 << 12; break; case PHPExcel_Style_Border::BORDER_DASHDOT: $blockLineStyle |= 0x9 << 12; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOT: $blockLineStyle |= 0xa << 12; break; case PHPExcel_Style_Border::BORDER_DASHDOTDOT: $blockLineStyle |= 0xb << 12; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOTDOT: $blockLineStyle |= 0xc << 12; break; case PHPExcel_Style_Border::BORDER_SLANTDASHDOT: $blockLineStyle |= 0xd << 12; break; } goto a2qaH; HAZq6: switch ($conditional->getStyle()->getBorders()->getRight()->getBorderStyle()) { case PHPExcel_Style_Border::BORDER_NONE: $blockLineStyle |= 0x0 << 4; break; case PHPExcel_Style_Border::BORDER_THIN: $blockLineStyle |= 0x1 << 4; break; case PHPExcel_Style_Border::BORDER_MEDIUM: $blockLineStyle |= 0x2 << 4; break; case PHPExcel_Style_Border::BORDER_DASHED: $blockLineStyle |= 0x3 << 4; break; case PHPExcel_Style_Border::BORDER_DOTTED: $blockLineStyle |= 0x4 << 4; break; case PHPExcel_Style_Border::BORDER_THICK: $blockLineStyle |= 0x5 << 4; break; case PHPExcel_Style_Border::BORDER_DOUBLE: $blockLineStyle |= 0x6 << 4; break; case PHPExcel_Style_Border::BORDER_HAIR: $blockLineStyle |= 0x7 << 4; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHED: $blockLineStyle |= 0x8 << 4; break; case PHPExcel_Style_Border::BORDER_DASHDOT: $blockLineStyle |= 0x9 << 4; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOT: $blockLineStyle |= 0xa << 4; break; case PHPExcel_Style_Border::BORDER_DASHDOTDOT: $blockLineStyle |= 0xb << 4; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOTDOT: $blockLineStyle |= 0xc << 4; break; case PHPExcel_Style_Border::BORDER_SLANTDASHDOT: $blockLineStyle |= 0xd << 4; break; } goto vCXR5; a2qaH: $blockColor = 0; goto a7zNM; vCXR5: switch ($conditional->getStyle()->getBorders()->getTop()->getBorderStyle()) { case PHPExcel_Style_Border::BORDER_NONE: $blockLineStyle |= 0x0 << 8; break; case PHPExcel_Style_Border::BORDER_THIN: $blockLineStyle |= 0x1 << 8; break; case PHPExcel_Style_Border::BORDER_MEDIUM: $blockLineStyle |= 0x2 << 8; break; case PHPExcel_Style_Border::BORDER_DASHED: $blockLineStyle |= 0x3 << 8; break; case PHPExcel_Style_Border::BORDER_DOTTED: $blockLineStyle |= 0x4 << 8; break; case PHPExcel_Style_Border::BORDER_THICK: $blockLineStyle |= 0x5 << 8; break; case PHPExcel_Style_Border::BORDER_DOUBLE: $blockLineStyle |= 0x6 << 8; break; case PHPExcel_Style_Border::BORDER_HAIR: $blockLineStyle |= 0x7 << 8; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHED: $blockLineStyle |= 0x8 << 8; break; case PHPExcel_Style_Border::BORDER_DASHDOT: $blockLineStyle |= 0x9 << 8; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOT: $blockLineStyle |= 0xa << 8; break; case PHPExcel_Style_Border::BORDER_DASHDOTDOT: $blockLineStyle |= 0xb << 8; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOTDOT: $blockLineStyle |= 0xc << 8; break; case PHPExcel_Style_Border::BORDER_SLANTDASHDOT: $blockLineStyle |= 0xd << 8; break; } goto Y8Oyw; F8R3I: $dataBlockBorder = pack("\166\x76", $blockLineStyle, $blockColor); goto mthyY; Y7iLz: switch ($conditional->getStyle()->getBorders()->getLeft()->getBorderStyle()) { case PHPExcel_Style_Border::BORDER_NONE: $blockLineStyle |= 0x0; break; case PHPExcel_Style_Border::BORDER_THIN: $blockLineStyle |= 0x1; break; case PHPExcel_Style_Border::BORDER_MEDIUM: $blockLineStyle |= 0x2; break; case PHPExcel_Style_Border::BORDER_DASHED: $blockLineStyle |= 0x3; break; case PHPExcel_Style_Border::BORDER_DOTTED: $blockLineStyle |= 0x4; break; case PHPExcel_Style_Border::BORDER_THICK: $blockLineStyle |= 0x5; break; case PHPExcel_Style_Border::BORDER_DOUBLE: $blockLineStyle |= 0x6; break; case PHPExcel_Style_Border::BORDER_HAIR: $blockLineStyle |= 0x7; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHED: $blockLineStyle |= 0x8; break; case PHPExcel_Style_Border::BORDER_DASHDOT: $blockLineStyle |= 0x9; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOT: $blockLineStyle |= 0xa; break; case PHPExcel_Style_Border::BORDER_DASHDOTDOT: $blockLineStyle |= 0xb; break; case PHPExcel_Style_Border::BORDER_MEDIUMDASHDOTDOT: $blockLineStyle |= 0xc; break; case PHPExcel_Style_Border::BORDER_SLANTDASHDOT: $blockLineStyle |= 0xd; break; } goto HAZq6; mthyY: } goto qWBkz; BsXcB: if ($conditional->getConditionType() == PHPExcel_Style_Conditional::CONDITION_EXPRESSION) { $type = 0x2; $operatorType = 0x0; } elseif ($conditional->getConditionType() == PHPExcel_Style_Conditional::CONDITION_CELLIS) { $type = 0x1; switch ($conditional->getOperatorType()) { case PHPExcel_Style_Conditional::OPERATOR_NONE: $operatorType = 0x0; break; case PHPExcel_Style_Conditional::OPERATOR_EQUAL: $operatorType = 0x3; break; case PHPExcel_Style_Conditional::OPERATOR_GREATERTHAN: $operatorType = 0x5; break; case PHPExcel_Style_Conditional::OPERATOR_GREATERTHANOREQUAL: $operatorType = 0x7; break; case PHPExcel_Style_Conditional::OPERATOR_LESSTHAN: $operatorType = 0x6; break; case PHPExcel_Style_Conditional::OPERATOR_LESSTHANOREQUAL: $operatorType = 0x8; break; case PHPExcel_Style_Conditional::OPERATOR_NOTEQUAL: $operatorType = 0x4; break; case PHPExcel_Style_Conditional::OPERATOR_BETWEEN: $operatorType = 0x1; break; } } goto ehuJv; Ro_lJ: $bBorderLeft = $conditional->getStyle()->getBorders()->getLeft()->getColor()->getARGB() == PHPExcel_Style_Color::COLOR_BLACK && $conditional->getStyle()->getBorders()->getLeft()->getBorderStyle() == PHPExcel_Style_Border::BORDER_NONE ? 1 : 0; goto iiGKZ; J8Xiz: if ($bFormatFill == 1) { $data .= $dataBlockFill; } goto yJCom; jGQYq: $record = 0x1b1; goto BsXcB; e271E: if ($bFillStyle == 0 || $bFillColor == 0 || $bFillColorBg == 0) { $bFormatFill = 1; } else { $bFormatFill = 0; } goto X48wx; OXEyM: if ($numConditions == 1) { goto QZhtY; z2NVW: $operand2 = null; goto YcpvN; QZhtY: $szValue1 = $arrConditions[0] <= 65535 ? 3 : 0x0; goto qV0WJ; qV0WJ: $szValue2 = 0x0; goto KLeMv; KLeMv: $operand1 = pack("\103\x76", 0x1e, $arrConditions[0]); goto z2NVW; YcpvN: } elseif ($numConditions == 2 && $conditional->getOperatorType() == PHPExcel_Style_Conditional::OPERATOR_BETWEEN) { goto Jd5hL; d3YRI: $operand1 = pack("\103\x76", 0x1e, $arrConditions[0]); goto NFdWQ; SjSmk: $szValue2 = $arrConditions[1] <= 65535 ? 3 : 0x0; goto d3YRI; NFdWQ: $operand2 = pack("\103\x76", 0x1e, $arrConditions[1]); goto UFsZZ; Jd5hL: $szValue1 = $arrConditions[0] <= 65535 ? 3 : 0x0; goto SjSmk; UFsZZ: } else { goto V8rB1; V8rB1: $szValue1 = 0x0; goto jDGSz; EK4Rn: $operand1 = null; goto lox2G; jDGSz: $szValue2 = 0x0; goto EK4Rn; lox2G: $operand2 = null; goto IWu_g; IWu_g: } goto QBcZu; lqNGJ: if ($bFormatFont == 1) { $data .= $dataBlockFont; } goto llF2Q; ehuJv: $arrConditions = $conditional->getConditions(); goto H5e4I; qEU1F: if ($bAlignHz == 0 || $bAlignVt == 0 || $bAlignWrapTx == 0 || $bTxRotation == 0 || $bIndent == 0 || $bShrinkToFit == 0) { $bFormatAlign = 1; } else { $bFormatAlign = 0; } goto ggM6I; xubLw: $flags |= 1 == $bFormatProt ? 0x40000000 : 0; goto vZ6QM; B91My: $bShrinkToFit = $conditional->getStyle()->getAlignment()->getShrinkToFit() == false ? 1 : 0; goto qEU1F; cq4w_: $this->append($header . $data); goto xxDzH; MAGNT: $flags |= 1 == $bFormatFill ? 0x20000000 : 0; goto xubLw; WcNDv: $bIndent = $conditional->getStyle()->getAlignment()->getIndent() == 0 ? 1 : 0; goto B91My; AIM8R: if (!is_null($operand1)) { $data .= $operand1; } goto NqLoL; Yt0VW: if ($bProtLocked == 0 || $bProtHidden == 0) { $bFormatProt = 1; } else { $bFormatProt = 0; } goto Ro_lJ; D0SJf: $flags |= 1 == $bFillStyle ? 0x10000 : 0; goto R_qrb; yFtOy: $flags |= 1 == $bBorderLeft ? 0x400 : 0; goto Ta5He; iULKH: $flags |= 1 == $bFormatBorder ? 0x10000000 : 0; goto MAGNT; yJCom: if ($bFormatProt == 1) { $data .= $dataBlockProtection; } goto AIM8R; R_qrb: $flags |= 1 == $bFillColor ? 0x20000 : 0; goto pKFta; bP_1M: $flags |= 1 == 1 ? 0x8000 : 0; goto D0SJf; QA0En: $bBorderBottom = $conditional->getStyle()->getBorders()->getBottom()->getColor()->getARGB() == PHPExcel_Style_Color::COLOR_BLACK && $conditional->getStyle()->getBorders()->getBottom()->getBorderStyle() == PHPExcel_Style_Border::BORDER_NONE ? 1 : 0; goto jS_lE; Ta5He: $flags |= 1 == $bBorderRight ? 0x800 : 0; goto Xnmi5; QGrgm: if ($bFormatAlign == 1) { goto NGK5p; NGK5p: $blockAlign = 0; goto u34c2; xrTmN: if ($conditional->getStyle()->getAlignment()->getWrapText() == true) { $blockAlign |= 1 << 3; } else { $blockAlign |= 0 << 3; } goto VRUGD; Oj2yX: $blockIndent = $conditional->getStyle()->getAlignment()->getIndent(); goto WNLfQ; T_mXQ: $dataBlockAlign = pack("\103\103\166\166\x76", $blockAlign, $blockRotation, $blockIndent, $blockIndentRelative, 0x0); goto M1NsE; n9WqY: $blockAlign |= 0 << 7; goto Ron7N; WNLfQ: if ($conditional->getStyle()->getAlignment()->getShrinkToFit() == true) { $blockIndent |= 1 << 4; } else { $blockIndent |= 0 << 4; } goto yx2sR; Ron7N: $blockRotation = $conditional->getStyle()->getAlignment()->getTextRotation(); goto Oj2yX; FtLjh: $blockIndentRelative = 255; goto T_mXQ; yx2sR: $blockIndent |= 0 << 6; goto FtLjh; u34c2: switch ($conditional->getStyle()->getAlignment()->getHorizontal()) { case PHPExcel_Style_Alignment::HORIZONTAL_GENERAL: $blockAlign = 0; break; case PHPExcel_Style_Alignment::HORIZONTAL_LEFT: $blockAlign = 1; break; case PHPExcel_Style_Alignment::HORIZONTAL_RIGHT: $blockAlign = 3; break; case PHPExcel_Style_Alignment::HORIZONTAL_CENTER: $blockAlign = 2; break; case PHPExcel_Style_Alignment::HORIZONTAL_CENTER_CONTINUOUS: $blockAlign = 6; break; case PHPExcel_Style_Alignment::HORIZONTAL_JUSTIFY: $blockAlign = 5; break; } goto xrTmN; VRUGD: switch ($conditional->getStyle()->getAlignment()->getVertical()) { case PHPExcel_Style_Alignment::VERTICAL_BOTTOM: $blockAlign = 2 << 4; break; case PHPExcel_Style_Alignment::VERTICAL_TOP: $blockAlign = 0 << 4; break; case PHPExcel_Style_Alignment::VERTICAL_CENTER: $blockAlign = 1 << 4; break; case PHPExcel_Style_Alignment::VERTICAL_JUSTIFY: $blockAlign = 3 << 4; break; } goto n9WqY; M1NsE: } goto Jqz3e; J0TOZ: $flags |= 1 == $bTxRotation ? 0x8 : 0; goto jCqI6; llF2Q: if ($bFormatAlign == 1) { $data .= $dataBlockAlign; } goto CYFVf; zSTXu: $flags |= 1 == $bIndent ? 0x20 : 0; goto fquHO; RcEnA: $header = pack("\166\x76", $record, strlen($data)); goto cq4w_; Xnmi5: $flags |= 1 == $bBorderTop ? 0x1000 : 0; goto H9vsu; H5e4I: $numConditions = sizeof($arrConditions); goto OXEyM; W3XR9: $flags |= 1 == $bAlignVt ? 0x2 : 0; goto XYYLM; xxDzH: } private function writeCFHeader() { goto uLZ4E; zJ9r5: $length = 0x16; goto BuIUw; r_PGc: $needRedraw = 1; goto vYDp9; pdvZ1: $this->append($header . $data); goto SmI3T; OQU75: $header = pack("\x76\166", $record, $length); goto jF2hT; Y0hic: $arrConditional = array(); goto HkKZq; jF2hT: $data = pack("\x76\x76", count($arrConditional), $needRedraw); goto AQJn9; vYDp9: $cellRange = pack("\166\x76\x76\x76", $numRowMin - 1, $numRowMax - 1, $numColumnMin - 1, $numColumnMax - 1); goto OQU75; Fnzdl: $data .= $cellRange; goto pdvZ1; DrJN7: $data .= pack("\166", 0x1); goto Fnzdl; HkKZq: foreach ($this->phpSheet->getConditionalStylesCollection() as $cellCoordinate => $conditionalStyles) { foreach ($conditionalStyles as $conditional) { if ($conditional->getConditionType() == PHPExcel_Style_Conditional::CONDITION_EXPRESSION || $conditional->getConditionType() == PHPExcel_Style_Conditional::CONDITION_CELLIS) { goto wb4qr; wb4qr: if (!in_array($conditional->getHashCode(), $arrConditional)) { $arrConditional[] = $conditional->getHashCode(); } goto Qxt_V; lSLFC: if (is_null($numRowMin) || $numRowMin > $arrCoord[1]) { $numRowMin = $arrCoord[1]; } goto pHOvK; T5jVP: if (is_null($numColumnMax) || $numColumnMax < $arrCoord[0]) { $numColumnMax = $arrCoord[0]; } goto lSLFC; rzhTD: if (is_null($numColumnMin) || $numColumnMin > $arrCoord[0]) { $numColumnMin = $arrCoord[0]; } goto T5jVP; kJrOk: if (!is_numeric($arrCoord[0])) { $arrCoord[0] = PHPExcel_Cell::columnIndexFromString($arrCoord[0]); } goto rzhTD; pHOvK: if (is_null($numRowMax) || $numRowMax < $arrCoord[1]) { $numRowMax = $arrCoord[1]; } goto l4Kwa; Qxt_V: $arrCoord = PHPExcel_Cell::coordinateFromString($cellCoordinate); goto kJrOk; l4Kwa: } } } goto r_PGc; p7Ikj: $numRowMin = null; goto EFcBu; uLZ4E: $record = 0x1b0; goto zJ9r5; EFcBu: $numRowMax = null; goto Y0hic; BuIUw: $numColumnMin = null; goto Ju84B; AQJn9: $data .= $cellRange; goto DrJN7; Ju84B: $numColumnMax = null; goto p7Ikj; SmI3T: } }
