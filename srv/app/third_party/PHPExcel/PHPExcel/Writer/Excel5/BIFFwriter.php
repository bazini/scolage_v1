<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:07              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Writer_Excel5_BIFFwriter { private static $byteOrder; public $_data; public $_datasize; private $limit = 8224; public function __construct() { $this->_data = ''; $this->_datasize = 0; } public static function getByteOrder() { if (!isset(self::$byteOrder)) { goto FmjcB; rHT_N: if ($number == $teststr) { $byte_order = 0; } elseif ($number == strrev($teststr)) { $byte_order = 1; } else { throw new PHPExcel_Writer_Exception("\122\145\x71\165\151\162\x65\144\x20\146\154\157\141\164\x69\156\147\x20\x70\x6f\151\x6e\x74\40\x66\x6f\162\x6d\x61\164\40\x6e\x6f\164\40\x73\x75\x70\x70\x6f\162\x74\x65\144\x20\157\156\x20\x74\x68\x69\163\x20\x70\154\141\164\x66\x6f\162\x6d\56"); } goto eZjwT; W07W0: $number = pack("\x43\x38", 0x8d, 0x97, 0x6e, 0x12, 0x83, 0xc0, 0xf3, 0x3f); goto rHT_N; FmjcB: $teststr = pack("\x64", 1.2345); goto W07W0; eZjwT: self::$byteOrder = $byte_order; goto gWuWW; gWuWW: } return self::$byteOrder; } protected function append($data) { goto QO0y3; QO0y3: if (strlen($data) - 4 > $this->limit) { $data = $this->addContinue($data); } goto gi7Ld; ub8wO: $this->_datasize += strlen($data); goto I8SKx; gi7Ld: $this->_data .= $data; goto ub8wO; I8SKx: } public function writeData($data) { goto kSyAv; kSyAv: if (strlen($data) - 4 > $this->limit) { $data = $this->addContinue($data); } goto HKU4f; HKU4f: $this->_datasize += strlen($data); goto b4s4X; b4s4X: return $data; goto GKZVi; GKZVi: } protected function storeBof($type) { goto WUk0P; T1fEE: $build = 0xdbb; goto SmZO6; SmZO6: $year = 0x7cc; goto Mw0pu; Q80fv: $length = 0x10; goto hrpyb; HDHfO: $data = pack("\166\166\x76\x76", $version, $type, $build, $year); goto OdOqr; hrpyb: $unknown = pack("\x56\x56", 0x100d1, 0x406); goto T1fEE; OdOqr: $this->append($header . $data . $unknown); goto mH8a5; Mw0pu: $version = 0x600; goto QJufd; QJufd: $header = pack("\166\166", $record, $length); goto HDHfO; WUk0P: $record = 0x809; goto Q80fv; mH8a5: } protected function storeEof() { goto Bui2n; x6BjR: $header = pack("\166\x76", $record, $length); goto vrIbj; tF3Vc: $length = 0x0; goto x6BjR; vrIbj: $this->append($header); goto QxRr1; Bui2n: $record = 0xa; goto tF3Vc; QxRr1: } public function writeEof() { goto vppNI; vppNI: $record = 0xa; goto haSAn; nJgC3: $header = pack("\x76\166", $record, $length); goto BDDPU; BDDPU: return $this->writeData($header); goto Jmq7S; haSAn: $length = 0x0; goto nJgC3; Jmq7S: } private function addContinue($data) { goto S6Vqz; ABqNm: $tmp .= $header; goto e8lHc; Fi7wa: $header = pack("\166\166", $record, strlen($data) - $i); goto ABqNm; BLI49: $data_length = strlen($data); goto yAtC3; yAtC3: for ($i = $limit + 4; $i < $data_length - $limit; $i += $limit) { $tmp .= $header; $tmp .= substr($data, $i, $limit); } goto Fi7wa; PA1YF: $tmp = substr($data, 0, 2) . pack("\166", $limit) . substr($data, 4, $limit); goto TcIUH; TZFvT: return $tmp; goto LzMcK; TcIUH: $header = pack("\x76\166", $record, $limit); goto BLI49; S6Vqz: $limit = $this->limit; goto Q7N9k; Q7N9k: $record = 0x3c; goto PA1YF; e8lHc: $tmp .= substr($data, $i, strlen($data) - $i); goto TZFvT; LzMcK: } }
