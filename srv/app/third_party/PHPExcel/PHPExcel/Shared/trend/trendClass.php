<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:04              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 goto YBPN3; giQsN: require_once PHPEXCEL_ROOT . "\x50\x48\x50\x45\x78\x63\x65\x6c\57\x53\x68\141\162\x65\144\57\164\162\x65\156\x64\57\x65\x78\160\x6f\x6e\145\156\x74\151\x61\154\x42\x65\163\164\x46\151\164\103\154\x61\x73\163\x2e\x70\150\160"; goto ZJ_Qb; YBPN3: require_once PHPEXCEL_ROOT . "\120\110\120\x45\170\x63\x65\154\x2f\x53\150\x61\162\145\x64\x2f\x74\162\145\156\x64\57\x6c\151\156\x65\141\x72\x42\x65\x73\164\x46\x69\164\103\154\x61\163\x73\x2e\x70\x68\160"; goto mE9XV; ZJ_Qb: require_once PHPEXCEL_ROOT . "\x50\x48\x50\x45\x78\x63\x65\x6c\x2f\123\150\141\x72\145\144\x2f\164\x72\x65\156\144\57\160\x6f\x77\x65\162\x42\x65\x73\x74\106\151\x74\103\x6c\141\x73\163\x2e\160\150\160"; goto yurfA; yurfA: require_once PHPEXCEL_ROOT . "\x50\x48\x50\x45\170\x63\145\154\57\x53\x68\x61\162\145\144\x2f\164\x72\145\x6e\x64\x2f\x70\x6f\154\171\156\x6f\155\x69\141\x6c\102\x65\x73\x74\106\151\x74\x43\x6c\141\163\x73\x2e\x70\150\x70"; goto Dnr7K; mE9XV: require_once PHPEXCEL_ROOT . "\x50\x48\x50\105\170\143\x65\x6c\57\x53\150\141\x72\x65\144\x2f\164\x72\x65\156\x64\57\154\157\147\x61\162\151\x74\150\155\x69\143\102\145\163\x74\106\x69\164\x43\154\141\163\163\x2e\x70\x68\x70"; goto giQsN; Dnr7K: class trendClass { const TREND_LINEAR = "\x4c\151\156\x65\141\x72"; const TREND_LOGARITHMIC = "\114\157\147\x61\162\x69\x74\150\155\x69\143"; const TREND_EXPONENTIAL = "\105\170\160\157\156\145\156\164\151\x61\x6c"; const TREND_POWER = "\120\x6f\x77\145\x72"; const TREND_POLYNOMIAL_2 = "\120\x6f\154\171\156\x6f\155\151\141\x6c\137\x32"; const TREND_POLYNOMIAL_3 = "\x50\x6f\x6c\171\x6e\157\x6d\x69\141\154\137\63"; const TREND_POLYNOMIAL_4 = "\120\157\154\171\x6e\157\x6d\x69\141\154\137\64"; const TREND_POLYNOMIAL_5 = "\120\157\154\x79\156\x6f\155\151\x61\x6c\x5f\x35"; const TREND_POLYNOMIAL_6 = "\x50\157\154\171\156\157\x6d\151\x61\154\137\x36"; const TREND_BEST_FIT = "\102\145\163\164\146\151\164"; const TREND_BEST_FIT_NO_POLY = "\x42\145\163\164\x66\151\164\137\x6e\x6f\137\x50\157\154\x79\156\157\x6d\151\141\x6c\x73"; private static $trendTypes = array(self::TREND_LINEAR, self::TREND_LOGARITHMIC, self::TREND_EXPONENTIAL, self::TREND_POWER); private static $trendTypePolynomialOrders = array(self::TREND_POLYNOMIAL_2, self::TREND_POLYNOMIAL_3, self::TREND_POLYNOMIAL_4, self::TREND_POLYNOMIAL_5, self::TREND_POLYNOMIAL_6); private static $trendCache = array(); public static function calculate($trendType = self::TREND_BEST_FIT, $yValues, $xValues = array(), $const = true) { goto Zjj8D; sTR4M: if ($nX == 0) { $xValues = range(1, $nY); $nX = $nY; } elseif ($nY != $nX) { trigger_error("\164\162\x65\156\144\x28\x29\x3a\40\x4e\x75\x6d\142\145\162\x20\157\146\x20\x65\x6c\x65\155\145\x6e\164\x73\x20\151\x6e\40\143\157\157\162\144\151\x6e\x61\164\145\40\141\162\162\141\171\163\40\x64\157\x20\156\x6f\x74\x20\x6d\141\x74\143\x68\x2e", E_USER_ERROR); } goto VppPv; Zjj8D: $nY = count($yValues); goto Br65q; Br65q: $nX = count($xValues); goto sTR4M; VppPv: $key = md5($trendType . $const . serialize($yValues) . serialize($xValues)); goto Zntzm; Zntzm: switch ($trendType) { case self::TREND_LINEAR: case self::TREND_LOGARITHMIC: case self::TREND_EXPONENTIAL: case self::TREND_POWER: if (!isset(self::$trendCache[$key])) { $className = "\x50\x48\x50\105\170\x63\145\x6c\x5f" . $trendType . "\x5f\102\145\x73\x74\137\x46\151\x74"; self::$trendCache[$key] = new $className($yValues, $xValues, $const); } return self::$trendCache[$key]; case self::TREND_POLYNOMIAL_2: case self::TREND_POLYNOMIAL_3: case self::TREND_POLYNOMIAL_4: case self::TREND_POLYNOMIAL_5: case self::TREND_POLYNOMIAL_6: if (!isset(self::$trendCache[$key])) { $order = substr($trendType, -1); self::$trendCache[$key] = new PHPExcel_Polynomial_Best_Fit($order, $yValues, $xValues, $const); } return self::$trendCache[$key]; case self::TREND_BEST_FIT: case self::TREND_BEST_FIT_NO_POLY: goto YYPDL; arFy4: $bestFitType = key($bestFitValue); goto HRNHJ; fs7yJ: if ($trendType != self::TREND_BEST_FIT_NO_POLY) { foreach (self::$trendTypePolynomialOrders as $trendMethod) { goto s6yg1; gfWs0: $bestFit[$trendMethod] = new PHPExcel_Polynomial_Best_Fit($order, $yValues, $xValues, $const); goto chc30; s6yg1: $order = substr($trendMethod, -1); goto gfWs0; chc30: if ($bestFit[$trendMethod]->getError()) { unset($bestFit[$trendMethod]); } else { $bestFitValue[$trendMethod] = $bestFit[$trendMethod]->getGoodnessOfFit(); } goto s6Hzx; s6Hzx: } } goto BYXM0; BYXM0: arsort($bestFitValue); goto arFy4; HRNHJ: return $bestFit[$bestFitType]; goto RYeuE; YYPDL: foreach (self::$trendTypes as $trendMethod) { goto mfuIC; KiHP9: $bestFitValue[$trendMethod] = $bestFit[$trendMethod]->getGoodnessOfFit(); goto w8Hwj; CdKf3: $bestFit[$trendMethod] = new $className($yValues, $xValues, $const); goto KiHP9; mfuIC: $className = "\120\110\120\x45\170\x63\x65\154\137" . $trendMethod . "\102\145\163\x74\x46\151\x74"; goto CdKf3; w8Hwj: } goto fs7yJ; RYeuE: default: return false; } goto dUOrD; dUOrD: } }
