<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:03              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Shared_Drawing { public static function pixelsToEMU($pValue = 0) { return round($pValue * 9525); } public static function EMUToPixels($pValue = 0) { if ($pValue != 0) { return round($pValue / 9525); } else { return 0; } } public static function pixelsToCellDimension($pValue = 0, PHPExcel_Style_Font $pDefaultFont) { goto b7IlF; b7IlF: $name = $pDefaultFont->getName(); goto dfiu0; dfiu0: $size = $pDefaultFont->getSize(); goto hU65T; hU65T: if (isset(PHPExcel_Shared_Font::$defaultColumnWidths[$name][$size])) { $colWidth = $pValue * PHPExcel_Shared_Font::$defaultColumnWidths[$name][$size]["\x77\x69\144\164\150"] / PHPExcel_Shared_Font::$defaultColumnWidths[$name][$size]["\x70\170"]; } else { $colWidth = $pValue * 11 * PHPExcel_Shared_Font::$defaultColumnWidths["\x43\x61\x6c\x69\142\x72\x69"][11]["\167\x69\x64\x74\x68"] / PHPExcel_Shared_Font::$defaultColumnWidths["\x43\141\x6c\x69\142\x72\151"][11]["\160\170"] / $size; } goto xFdbF; xFdbF: return $colWidth; goto Ysoky; Ysoky: } public static function cellDimensionToPixels($pValue = 0, PHPExcel_Style_Font $pDefaultFont) { goto cCrPa; kDfz2: $colWidth = (int) round($colWidth); goto KyNxC; cCrPa: $name = $pDefaultFont->getName(); goto KtFkF; KtFkF: $size = $pDefaultFont->getSize(); goto M4Wxs; M4Wxs: if (isset(PHPExcel_Shared_Font::$defaultColumnWidths[$name][$size])) { $colWidth = $pValue * PHPExcel_Shared_Font::$defaultColumnWidths[$name][$size]["\160\170"] / PHPExcel_Shared_Font::$defaultColumnWidths[$name][$size]["\x77\x69\x64\x74\x68"]; } else { $colWidth = $pValue * $size * PHPExcel_Shared_Font::$defaultColumnWidths["\x43\141\154\151\142\162\151"][11]["\x70\170"] / PHPExcel_Shared_Font::$defaultColumnWidths["\x43\x61\154\x69\x62\x72\x69"][11]["\167\151\144\x74\x68"] / 11; } goto kDfz2; KyNxC: return $colWidth; goto TmZ6b; TmZ6b: } public static function pixelsToPoints($pValue = 0) { return $pValue * 0.6777777699999999; } public static function pointsToPixels($pValue = 0) { if ($pValue != 0) { return (int) ceil($pValue * 1.333333333); } else { return 0; } } public static function degreesToAngle($pValue = 0) { return (int) round($pValue * 60000); } public static function angleToDegrees($pValue = 0) { if ($pValue != 0) { return round($pValue / 60000); } else { return 0; } } public static function imagecreatefrombmp($p_sFile) { goto sKyrC; gP0e5: $read = fread($file, 10); goto OxHOk; tJh0j: $x = 0; goto edxNM; jhINJ: unset($body); goto fgfWH; ZeWci: if (substr($header, 0, 4) == "\64\62\64\x64") { goto Fd57r; Fd57r: $header_parts = str_split($header, 2); goto mdcLO; mdcLO: $width = hexdec($header_parts[19] . $header_parts[18]); goto Xm8k4; q0jGd: unset($header_parts); goto fYuXm; Xm8k4: $height = hexdec($header_parts[23] . $header_parts[22]); goto q0jGd; fYuXm: } goto tJh0j; qn1T2: $header_size = $width * $height; goto ZJ2Uw; ecNzm: $temp = unpack("\110\x2a", $read); goto nj0_U; edxNM: $y = 1; goto Goysy; OxHOk: while (!feof($file) && $read != '') { $read .= fread($file, 1024); } goto ecNzm; kiQpC: $body_size = strlen($body) / 2; goto qn1T2; nj0_U: $hex = $temp[1]; goto bP6Nm; ZJ2Uw: $usePadding = $body_size > $header_size * 3 + 4; goto gSfqA; gSfqA: for ($i = 0; $i < $body_size; $i += 3) { if ($x >= $width) { goto ehrSm; ehrSm: if ($usePadding) { $i += $width % 4; } goto fbb77; J4QF4: if ($y > $height) { break; } goto w0QpD; eSxLh: $y++; goto J4QF4; fbb77: $x = 0; goto eSxLh; w0QpD: } $i_pos = $i * 2; $r = hexdec($body[$i_pos + 4] . $body[$i_pos + 5]); $g = hexdec($body[$i_pos + 2] . $body[$i_pos + 3]); $b = hexdec($body[$i_pos] . $body[$i_pos + 1]); $color = imagecolorallocate($image, $r, $g, $b); imagesetpixel($image, $x, $height - $y, $color); $x++; } goto jhINJ; sKyrC: $file = fopen($p_sFile, "\x72\x62"); goto gP0e5; bP6Nm: $header = substr($hex, 0, 108); goto ZeWci; ivbpx: $body = substr($hex, 108); goto kiQpC; Goysy: $image = imagecreatetruecolor($width, $height); goto ivbpx; fgfWH: return $image; goto UElxT; UElxT: } }
