<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:03              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class SingularValueDecomposition { private $U = array(); private $V = array(); private $s = array(); private $m; private $n; public function __construct($Arg) { goto R62vD; WSlqc: if ($nct < $this->n) { $this->s[$nct] = $A[$nct][$nct]; } goto l52V8; yxCJI: $e = array(); goto BrsMi; YzulL: $p = min($this->n, $this->m + 1); goto WSlqc; VExHF: $this->m = $Arg->getRowDimension(); goto IZE36; yviIi: for ($k = 0; $k < max($nct, $nrt); ++$k) { if ($k < $nct) { goto dy9AP; tn8g1: $this->s[$k] = -$this->s[$k]; goto R3EhX; dy9AP: $this->s[$k] = 0; goto rTRMx; D29AY: if ($this->s[$k] != 0.0) { goto g36xJ; rp72z: for ($i = $k; $i < $this->m; ++$i) { $A[$i][$k] /= $this->s[$k]; } goto VrSkG; VrSkG: $A[$k][$k] += 1.0; goto hiMcY; g36xJ: if ($A[$k][$k] < 0.0) { $this->s[$k] = -$this->s[$k]; } goto rp72z; hiMcY: } goto tn8g1; rTRMx: for ($i = $k; $i < $this->m; ++$i) { $this->s[$k] = hypo($this->s[$k], $A[$i][$k]); } goto D29AY; R3EhX: } for ($j = $k + 1; $j < $this->n; ++$j) { if ($k < $nct & $this->s[$k] != 0.0) { goto x4CLJ; s3tua: for ($i = $k; $i < $this->m; ++$i) { $t += $A[$i][$k] * $A[$i][$j]; } goto SCt2h; x4CLJ: $t = 0; goto s3tua; JzloQ: $e[$j] = $A[$k][$j]; goto lfsY0; SCt2h: $t = -$t / $A[$k][$k]; goto TCOpz; TCOpz: for ($i = $k; $i < $this->m; ++$i) { $A[$i][$j] += $t * $A[$i][$k]; } goto JzloQ; lfsY0: } } if ($wantu and $k < $nct) { for ($i = $k; $i < $this->m; ++$i) { $this->U[$i][$k] = $A[$i][$k]; } } if ($k < $nrt) { goto JmMxi; K9WnO: if ($k + 1 < $this->m and $e[$k] != 0.0) { goto zqmhj; g6Jkf: for ($j = $k + 1; $j < $this->n; ++$j) { for ($i = $k + 1; $i < $this->m; ++$i) { $work[$i] += $e[$j] * $A[$i][$j]; } } goto zvFdj; zvFdj: for ($j = $k + 1; $j < $this->n; ++$j) { $t = -$e[$j] / $e[$k + 1]; for ($i = $k + 1; $i < $this->m; ++$i) { $A[$i][$j] += $t * $work[$i]; } } goto bsMOz; zqmhj: for ($i = $k + 1; $i < $this->m; ++$i) { $work[$i] = 0.0; } goto g6Jkf; bsMOz: } goto m5YnC; GGM41: for ($i = $k + 1; $i < $this->n; ++$i) { $e[$k] = hypo($e[$k], $e[$i]); } goto P2AdM; P2AdM: if ($e[$k] != 0.0) { goto rZuFb; rZuFb: if ($e[$k + 1] < 0.0) { $e[$k] = -$e[$k]; } goto em38_; em38_: for ($i = $k + 1; $i < $this->n; ++$i) { $e[$i] /= $e[$k]; } goto OinNI; OinNI: $e[$k + 1] += 1.0; goto D3PMs; D3PMs: } goto EFe2C; JmMxi: $e[$k] = 0; goto GGM41; EFe2C: $e[$k] = -$e[$k]; goto K9WnO; m5YnC: if ($wantv) { for ($i = $k + 1; $i < $this->n; ++$i) { $this->V[$i][$k] = $e[$i]; } } goto yfFpt; yfFpt: } } goto YzulL; DBUKX: $nu = min($this->m, $this->n); goto yxCJI; Pbv1H: while ($p > 0) { for ($k = $p - 2; $k >= -1; --$k) { if ($k == -1) { break; } if (abs($e[$k]) <= $eps * (abs($this->s[$k]) + abs($this->s[$k + 1]))) { $e[$k] = 0.0; break; } } if ($k == $p - 2) { $kase = 4; } else { for ($ks = $p - 1; $ks >= $k; --$ks) { if ($ks == $k) { break; } $t = ($ks != $p ? abs($e[$ks]) : 0.0) + ($ks != $k + 1 ? abs($e[$ks - 1]) : 0.0); if (abs($this->s[$ks]) <= $eps * $t) { $this->s[$ks] = 0.0; break; } } if ($ks == $k) { $kase = 3; } elseif ($ks == $p - 1) { $kase = 1; } else { $kase = 2; $k = $ks; } } ++$k; switch ($kase) { case 1: goto iW5Of; iW5Of: $f = $e[$p - 2]; goto Q0TlC; jsr6s: for ($j = $p - 2; $j >= $k; --$j) { $t = hypo($this->s[$j], $f); $cs = $this->s[$j] / $t; $sn = $f / $t; $this->s[$j] = $t; if ($j != $k) { $f = -$sn * $e[$j - 1]; $e[$j - 1] = $cs * $e[$j - 1]; } if ($wantv) { for ($i = 0; $i < $this->n; ++$i) { $t = $cs * $this->V[$i][$j] + $sn * $this->V[$i][$p - 1]; $this->V[$i][$p - 1] = -$sn * $this->V[$i][$j] + $cs * $this->V[$i][$p - 1]; $this->V[$i][$j] = $t; } } } goto cxFWl; cxFWl: break; goto hCK0Z; Q0TlC: $e[$p - 2] = 0.0; goto jsr6s; hCK0Z: case 2: goto sb0eU; sb0eU: $f = $e[$k - 1]; goto BSDWW; mxccW: for ($j = $k; $j < $p; ++$j) { $t = hypo($this->s[$j], $f); $cs = $this->s[$j] / $t; $sn = $f / $t; $this->s[$j] = $t; $f = -$sn * $e[$j]; $e[$j] = $cs * $e[$j]; if ($wantu) { for ($i = 0; $i < $this->m; ++$i) { $t = $cs * $this->U[$i][$j] + $sn * $this->U[$i][$k - 1]; $this->U[$i][$k - 1] = -$sn * $this->U[$i][$j] + $cs * $this->U[$i][$k - 1]; $this->U[$i][$j] = $t; } } } goto IAd9N; BSDWW: $e[$k - 1] = 0.0; goto mxccW; IAd9N: break; goto NgZz1; NgZz1: case 3: goto RSW6Y; P4Q6L: $iter = $iter + 1; goto wM5JV; lJmqa: $g = $sk * $ek; goto LFqSS; RSW6Y: $scale = max(max(max(max(abs($this->s[$p - 1]), abs($this->s[$p - 2])), abs($e[$p - 2])), abs($this->s[$k])), abs($e[$k])); goto jpsOO; mHVrF: $spm1 = $this->s[$p - 2] / $scale; goto rusxl; VIxBx: $shift = 0.0; goto zD257; W3thR: $b = (($spm1 + $sp) * ($spm1 - $sp) + $epm1 * $epm1) / 2.0; goto fjRmX; rusxl: $epm1 = $e[$p - 2] / $scale; goto J0xA0; J0xA0: $sk = $this->s[$k] / $scale; goto dUdje; fjRmX: $c = $sp * $epm1 * ($sp * $epm1); goto VIxBx; jpsOO: $sp = $this->s[$p - 1] / $scale; goto mHVrF; WtKFQ: $e[$p - 2] = $f; goto P4Q6L; zD257: if ($b != 0.0 || $c != 0.0) { goto y9t30; gMhXX: if ($b < 0.0) { $shift = -$shift; } goto C6Weg; C6Weg: $shift = $c / ($b + $shift); goto FhmOg; y9t30: $shift = sqrt($b * $b + $c); goto gMhXX; FhmOg: } goto zITyj; LFqSS: for ($j = $k; $j < $p - 1; ++$j) { $t = hypo($f, $g); $cs = $f / $t; $sn = $g / $t; if ($j != $k) { $e[$j - 1] = $t; } $f = $cs * $this->s[$j] + $sn * $e[$j]; $e[$j] = $cs * $e[$j] - $sn * $this->s[$j]; $g = $sn * $this->s[$j + 1]; $this->s[$j + 1] = $cs * $this->s[$j + 1]; if ($wantv) { for ($i = 0; $i < $this->n; ++$i) { $t = $cs * $this->V[$i][$j] + $sn * $this->V[$i][$j + 1]; $this->V[$i][$j + 1] = -$sn * $this->V[$i][$j] + $cs * $this->V[$i][$j + 1]; $this->V[$i][$j] = $t; } } $t = hypo($f, $g); $cs = $f / $t; $sn = $g / $t; $this->s[$j] = $t; $f = $cs * $e[$j] + $sn * $this->s[$j + 1]; $this->s[$j + 1] = -$sn * $e[$j] + $cs * $this->s[$j + 1]; $g = $sn * $e[$j + 1]; $e[$j + 1] = $cs * $e[$j + 1]; if ($wantu && $j < $this->m - 1) { for ($i = 0; $i < $this->m; ++$i) { $t = $cs * $this->U[$i][$j] + $sn * $this->U[$i][$j + 1]; $this->U[$i][$j + 1] = -$sn * $this->U[$i][$j] + $cs * $this->U[$i][$j + 1]; $this->U[$i][$j] = $t; } } } goto WtKFQ; zITyj: $f = ($sk + $sp) * ($sk - $sp) + $shift; goto lJmqa; dUdje: $ek = $e[$k] / $scale; goto W3thR; wM5JV: break; goto tlfzW; tlfzW: case 4: goto zJeJk; CzmuC: --$p; goto nq4y8; e7i5J: while ($k < $pp) { if ($this->s[$k] >= $this->s[$k + 1]) { break; } $t = $this->s[$k]; $this->s[$k] = $this->s[$k + 1]; $this->s[$k + 1] = $t; if ($wantv and $k < $this->n - 1) { for ($i = 0; $i < $this->n; ++$i) { $t = $this->V[$i][$k + 1]; $this->V[$i][$k + 1] = $this->V[$i][$k]; $this->V[$i][$k] = $t; } } if ($wantu and $k < $this->m - 1) { for ($i = 0; $i < $this->m; ++$i) { $t = $this->U[$i][$k + 1]; $this->U[$i][$k + 1] = $this->U[$i][$k]; $this->U[$i][$k] = $t; } } ++$k; } goto ghR_P; nq4y8: break; goto iWRI3; ghR_P: $iter = 0; goto CzmuC; zJeJk: if ($this->s[$k] <= 0.0) { $this->s[$k] = $this->s[$k] < 0.0 ? -$this->s[$k] : 0.0; if ($wantv) { for ($i = 0; $i <= $pp; ++$i) { $this->V[$i][$k] = -$this->V[$i][$k]; } } } goto e7i5J; iWRI3: } } goto gelK2; rH8Og: $nrt = max(0, min($this->n - 2, $this->m)); goto yviIi; NLmSj: if ($nrt + 1 < $p) { $e[$nrt] = $A[$nrt][$p - 1]; } goto iUMT7; kTNZJ: if ($wantu) { for ($j = $nct; $j < $nu; ++$j) { for ($i = 0; $i < $this->m; ++$i) { $this->U[$i][$j] = 0.0; } $this->U[$j][$j] = 1.0; } for ($k = $nct - 1; $k >= 0; --$k) { if ($this->s[$k] != 0.0) { goto aWhIO; aWhIO: for ($j = $k + 1; $j < $nu; ++$j) { $t = 0; for ($i = $k; $i < $this->m; ++$i) { $t += $this->U[$i][$k] * $this->U[$i][$j]; } $t = -$t / $this->U[$k][$k]; for ($i = $k; $i < $this->m; ++$i) { $this->U[$i][$j] += $t * $this->U[$i][$k]; } } goto aM9bb; gMDj4: for ($i = 0; $i < $k - 1; ++$i) { $this->U[$i][$k] = 0.0; } goto O4zvW; aM9bb: for ($i = $k; $i < $this->m; ++$i) { $this->U[$i][$k] = -$this->U[$i][$k]; } goto yecmU; yecmU: $this->U[$k][$k] = 1.0 + $this->U[$k][$k]; goto gMDj4; O4zvW: } else { for ($i = 0; $i < $this->m; ++$i) { $this->U[$i][$k] = 0.0; } $this->U[$k][$k] = 1.0; } } } goto W6RXF; UbLcH: $iter = 0; goto R_YjN; iUMT7: $e[$p - 1] = 0.0; goto kTNZJ; IZE36: $this->n = $Arg->getColumnDimension(); goto DBUKX; iDmsc: $wantu = true; goto nOGdI; R_YjN: $eps = pow(2.0, -52.0); goto Pbv1H; BrsMi: $work = array(); goto iDmsc; zVZfU: $nct = min($this->m - 1, $this->n); goto rH8Og; W6RXF: if ($wantv) { for ($k = $this->n - 1; $k >= 0; --$k) { if ($k < $nrt and $e[$k] != 0.0) { for ($j = $k + 1; $j < $nu; ++$j) { $t = 0; for ($i = $k + 1; $i < $this->n; ++$i) { $t += $this->V[$i][$k] * $this->V[$i][$j]; } $t = -$t / $this->V[$k + 1][$k]; for ($i = $k + 1; $i < $this->n; ++$i) { $this->V[$i][$j] += $t * $this->V[$i][$k]; } } } for ($i = 0; $i < $this->n; ++$i) { $this->V[$i][$k] = 0.0; } $this->V[$k][$k] = 1.0; } } goto nOCQ6; l52V8: if ($this->m < $p) { $this->s[$p - 1] = 0.0; } goto NLmSj; R62vD: $A = $Arg->getArrayCopy(); goto VExHF; nOCQ6: $pp = $p - 1; goto UbLcH; nOGdI: $wantv = true; goto zVZfU; gelK2: } public function getU() { return new Matrix($this->U, $this->m, min($this->m + 1, $this->n)); } public function getV() { return new Matrix($this->V); } public function getSingularValues() { return $this->s; } public function getS() { for ($i = 0; $i < $this->n; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $S[$i][$j] = 0.0; } $S[$i][$i] = $this->s[$i]; } return new Matrix($S); } public function norm2() { return $this->s[0]; } public function cond() { return $this->s[0] / $this->s[min($this->m, $this->n) - 1]; } public function rank() { goto ryWr7; ryWr7: $eps = pow(2.0, -52.0); goto OayOW; c9j80: $r = 0; goto NCGEi; NCGEi: for ($i = 0; $i < count($this->s); ++$i) { if ($this->s[$i] > $tol) { ++$r; } } goto fNqRS; fNqRS: return $r; goto Mp1js; OayOW: $tol = max($this->m, $this->n) * $this->s[0] * $eps; goto c9j80; Mp1js: } }
