<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:03              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class EigenvalueDecomposition { private $n; private $issymmetric; private $d = array(); private $e = array(); private $V = array(); private $H = array(); private $ort; private $cdivr; private $cdivi; private function tred2() { goto Sz0CT; raBif: $this->d = $this->V[$this->n - 1]; goto NM8pm; jIg0O: for ($i = 0; $i < $this->n - 1; ++$i) { $this->V[$this->n - 1][$i] = $this->V[$i][$i]; $this->V[$i][$i] = 1.0; $h = $this->d[$i + 1]; if ($h != 0.0) { for ($k = 0; $k <= $i; ++$k) { $this->d[$k] = $this->V[$k][$i + 1] / $h; } for ($j = 0; $j <= $i; ++$j) { $g = 0.0; for ($k = 0; $k <= $i; ++$k) { $g += $this->V[$k][$i + 1] * $this->V[$k][$j]; } for ($k = 0; $k <= $i; ++$k) { $this->V[$k][$j] -= $g * $this->d[$k]; } } } for ($k = 0; $k <= $i; ++$k) { $this->V[$k][$i + 1] = 0.0; } } goto raBif; FVQNN: for ($i = $this->n - 1; $i > 0; --$i) { $i_ = $i - 1; $h = $scale = 0.0; $scale += array_sum(array_map(abs, $this->d)); if ($scale == 0.0) { goto qvuqx; qvuqx: $this->e[$i] = $this->d[$i_]; goto ktLM8; lyfqn: for ($j = 0; $j < $i; ++$j) { $this->V[$j][$i] = $this->V[$i][$j] = 0.0; } goto e5QKH; ktLM8: $this->d = array_slice($this->V[$i_], 0, $i_); goto lyfqn; e5QKH: } else { goto yEtzO; S2p4g: for ($j = 0; $j < $i; ++$j) { $this->e[$j] /= $h; $f += $this->e[$j] * $this->d[$j]; } goto OUSmX; cliG7: $this->d[$i_] = $f - $g; goto nIs2T; BhFVz: $this->e[$i] = $scale * $g; goto kCXXg; wtvRQ: for ($j = 0; $j < $i; ++$j) { $this->e[$j] -= $hh * $this->d[$j]; } goto XbzE7; OUSmX: $hh = $f / (2 * $h); goto wtvRQ; QxjsV: $f = $this->d[$i_]; goto V5hIS; V5hIS: $g = sqrt($h); goto oiu4j; oiu4j: if ($f > 0) { $g = -$g; } goto BhFVz; kCXXg: $h = $h - $f * $g; goto cliG7; XbzE7: for ($j = 0; $j < $i; ++$j) { $f = $this->d[$j]; $g = $this->e[$j]; for ($k = $j; $k <= $i_; ++$k) { $this->V[$k][$j] -= $f * $this->e[$k] + $g * $this->d[$k]; } $this->d[$j] = $this->V[$i - 1][$j]; $this->V[$i][$j] = 0.0; } goto QpXJv; PWsVM: $f = 0.0; goto S2p4g; yEtzO: for ($k = 0; $k < $i; ++$k) { $this->d[$k] /= $scale; $h += pow($this->d[$k], 2); } goto QxjsV; nIs2T: for ($j = 0; $j < $i; ++$j) { $this->e[$j] = 0.0; } goto aH6TM; aH6TM: for ($j = 0; $j < $i; ++$j) { $f = $this->d[$j]; $this->V[$j][$i] = $f; $g = $this->e[$j] + $this->V[$j][$j] * $f; for ($k = $j + 1; $k <= $i_; ++$k) { $g += $this->V[$k][$j] * $this->d[$k]; $this->e[$k] += $this->V[$k][$j] * $f; } $this->e[$j] = $g; } goto PWsVM; QpXJv: } $this->d[$i] = $h; } goto jIg0O; KHeDD: $this->e[0] = 0.0; goto ZE3Ja; NM8pm: $this->V[$this->n - 1] = array_fill(0, $j, 0.0); goto mn6WT; Sz0CT: $this->d = $this->V[$this->n - 1]; goto FVQNN; mn6WT: $this->V[$this->n - 1][$this->n - 1] = 1.0; goto KHeDD; ZE3Ja: } private function tql2() { goto QdU71; O93Bg: $f = 0.0; goto WU3Pc; WU3Pc: $tst1 = 0.0; goto urZu5; OW4RC: for ($i = 0; $i < $this->n - 1; ++$i) { $k = $i; $p = $this->d[$i]; for ($j = $i + 1; $j < $this->n; ++$j) { if ($this->d[$j] < $p) { $k = $j; $p = $this->d[$j]; } } if ($k != $i) { goto iMtJS; rp6NF: $this->d[$i] = $p; goto OApAD; OApAD: for ($j = 0; $j < $this->n; ++$j) { $p = $this->V[$j][$i]; $this->V[$j][$i] = $this->V[$j][$k]; $this->V[$j][$k] = $p; } goto ZG_1E; iMtJS: $this->d[$k] = $this->d[$i]; goto rp6NF; ZG_1E: } } goto EP8IF; jDLH2: $this->e[$this->n - 1] = 0.0; goto O93Bg; urZu5: $eps = pow(2.0, -52.0); goto mrv2s; mrv2s: for ($l = 0; $l < $this->n; ++$l) { $tst1 = max($tst1, abs($this->d[$l]) + abs($this->e[$l])); $m = $l; while ($m < $this->n) { if (abs($this->e[$m]) <= $eps * $tst1) { break; } ++$m; } if ($m > $l) { $iter = 0; do { $iter += 1; $g = $this->d[$l]; $p = ($this->d[$l + 1] - $g) / (2.0 * $this->e[$l]); $r = hypo($p, 1.0); if ($p < 0) { $r *= -1; } $this->d[$l] = $this->e[$l] / ($p + $r); $this->d[$l + 1] = $this->e[$l] * ($p + $r); $dl1 = $this->d[$l + 1]; $h = $g - $this->d[$l]; for ($i = $l + 2; $i < $this->n; ++$i) { $this->d[$i] -= $h; } $f += $h; $p = $this->d[$m]; $c = 1.0; $c2 = $c3 = $c; $el1 = $this->e[$l + 1]; $s = $s2 = 0.0; for ($i = $m - 1; $i >= $l; --$i) { $c3 = $c2; $c2 = $c; $s2 = $s; $g = $c * $this->e[$i]; $h = $c * $p; $r = hypo($p, $this->e[$i]); $this->e[$i + 1] = $s * $r; $s = $this->e[$i] / $r; $c = $p / $r; $p = $c * $this->d[$i] - $s * $g; $this->d[$i + 1] = $h + $s * ($c * $g + $s * $this->d[$i]); for ($k = 0; $k < $this->n; ++$k) { $h = $this->V[$k][$i + 1]; $this->V[$k][$i + 1] = $s * $this->V[$k][$i] + $c * $h; $this->V[$k][$i] = $c * $this->V[$k][$i] - $s * $h; } } $p = -$s * $s2 * $c3 * $el1 * $this->e[$l] / $dl1; $this->e[$l] = $s * $p; $this->d[$l] = $c * $p; } while (abs($this->e[$l]) > $eps * $tst1); } $this->d[$l] = $this->d[$l] + $f; $this->e[$l] = 0.0; } goto OW4RC; QdU71: for ($i = 1; $i < $this->n; ++$i) { $this->e[$i - 1] = $this->e[$i]; } goto jDLH2; EP8IF: } private function orthes() { goto EvTpm; TkZb1: for ($m = $high - 1; $m >= $low + 1; --$m) { if ($this->H[$m][$m - 1] != 0.0) { for ($i = $m + 1; $i <= $high; ++$i) { $this->ort[$i] = $this->H[$i][$m - 1]; } for ($j = $m; $j <= $high; ++$j) { $g = 0.0; for ($i = $m; $i <= $high; ++$i) { $g += $this->ort[$i] * $this->V[$i][$j]; } $g = $g / $this->ort[$m] / $this->H[$m][$m - 1]; for ($i = $m; $i <= $high; ++$i) { $this->V[$i][$j] += $g * $this->ort[$i]; } } } } goto wmP_Z; XFIez: for ($i = 0; $i < $this->n; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $this->V[$i][$j] = $i == $j ? 1.0 : 0.0; } } goto TkZb1; e_QVu: for ($m = $low + 1; $m <= $high - 1; ++$m) { $scale = 0.0; for ($i = $m; $i <= $high; ++$i) { $scale = $scale + abs($this->H[$i][$m - 1]); } if ($scale != 0.0) { goto FVRBF; j9mhN: $this->ort[$m] = $scale * $this->ort[$m]; goto fOlM8; QMCVx: for ($i = 0; $i <= $high; ++$i) { $f = 0.0; for ($j = $high; $j >= $m; --$j) { $f += $this->ort[$j] * $this->H[$i][$j]; } $f = $f / $h; for ($j = $m; $j <= $high; ++$j) { $this->H[$i][$j] -= $f * $this->ort[$j]; } } goto j9mhN; s22Ah: for ($j = $m; $j < $this->n; ++$j) { $f = 0.0; for ($i = $high; $i >= $m; --$i) { $f += $this->ort[$i] * $this->H[$i][$j]; } $f /= $h; for ($i = $m; $i <= $high; ++$i) { $this->H[$i][$j] -= $f * $this->ort[$i]; } } goto QMCVx; pyMkU: if ($this->ort[$m] > 0) { $g *= -1; } goto w9Ev0; w9Ev0: $h -= $this->ort[$m] * $g; goto W5uAQ; tfzAF: for ($i = $high; $i >= $m; --$i) { $this->ort[$i] = $this->H[$i][$m - 1] / $scale; $h += $this->ort[$i] * $this->ort[$i]; } goto x94jq; fOlM8: $this->H[$m][$m - 1] = $scale * $g; goto Pw1HB; FVRBF: $h = 0.0; goto tfzAF; x94jq: $g = sqrt($h); goto pyMkU; W5uAQ: $this->ort[$m] -= $g; goto s22Ah; Pw1HB: } } goto XFIez; EvTpm: $low = 0; goto w0gNJ; w0gNJ: $high = $this->n - 1; goto e_QVu; wmP_Z: } private function cdiv($xr, $xi, $yr, $yi) { if (abs($yr) > abs($yi)) { goto cNrWI; U9knK: $this->cdivr = ($xr + $r * $xi) / $d; goto kaZ9J; kaZ9J: $this->cdivi = ($xi - $r * $xr) / $d; goto GmBfN; cNrWI: $r = $yi / $yr; goto hM3PZ; hM3PZ: $d = $yr + $r * $yi; goto U9knK; GmBfN: } else { goto DzO8D; tJhNa: $this->cdivr = ($r * $xr + $xi) / $d; goto NAFpk; DzO8D: $r = $yr / $yi; goto K7P9Y; K7P9Y: $d = $yi + $r * $yr; goto tJhNa; NAFpk: $this->cdivi = ($r * $xi - $xr) / $d; goto aw7xi; aw7xi: } } private function hqr2() { goto OY2vc; amAzr: for ($j = $nn - 1; $j >= $low; --$j) { for ($i = $low; $i <= $high; ++$i) { $z = 0.0; for ($k = $low; $k <= min($j, $high); ++$k) { $z = $z + $this->V[$i][$k] * $this->H[$k][$j]; } $this->V[$i][$j] = $z; } } goto ulqTY; QrCkY: for ($n = $nn - 1; $n >= 0; --$n) { $p = $this->d[$n]; $q = $this->e[$n]; if ($q == 0) { goto vuGUc; jfhZ_: for ($i = $n - 1; $i >= 0; --$i) { $w = $this->H[$i][$i] - $p; $r = 0.0; for ($j = $l; $j <= $n; ++$j) { $r = $r + $this->H[$i][$j] * $this->H[$j][$n]; } if ($this->e[$i] < 0.0) { $z = $w; $s = $r; } else { goto opkR1; xU3EO: if ($this->e[$i] == 0.0) { if ($w != 0.0) { $this->H[$i][$n] = -$r / $w; } else { $this->H[$i][$n] = -$r / ($eps * $norm); } } else { goto Ybf71; CQpI4: $t = ($x * $s - $z * $r) / $q; goto AePpL; Ybf71: $x = $this->H[$i][$i + 1]; goto YNsDF; pFr58: if (abs($x) > abs($z)) { $this->H[$i + 1][$n] = (-$r - $w * $t) / $x; } else { $this->H[$i + 1][$n] = (-$s - $y * $t) / $z; } goto uccM0; N0LAn: $q = ($this->d[$i] - $p) * ($this->d[$i] - $p) + $this->e[$i] * $this->e[$i]; goto CQpI4; YNsDF: $y = $this->H[$i + 1][$i]; goto N0LAn; AePpL: $this->H[$i][$n] = $t; goto pFr58; uccM0: } goto RyIZK; RyIZK: $t = abs($this->H[$i][$n]); goto m9xOK; opkR1: $l = $i; goto xU3EO; m9xOK: if ($eps * $t * $t > 1) { for ($j = $i; $j <= $n; ++$j) { $this->H[$j][$n] = $this->H[$j][$n] / $t; } } goto fXdSP; fXdSP: } } goto lKJME; tZMyA: $this->H[$n][$n] = 1.0; goto jfhZ_; vuGUc: $l = $n; goto tZMyA; lKJME: } elseif ($q < 0) { goto btktO; btktO: $l = $n - 1; goto oCrhd; QHJhd: $this->H[$n][$n - 1] = 0.0; goto xUPVY; xUPVY: $this->H[$n][$n] = 1.0; goto W00Ul; W00Ul: for ($i = $n - 2; $i >= 0; --$i) { $ra = 0.0; $sa = 0.0; for ($j = $l; $j <= $n; ++$j) { $ra = $ra + $this->H[$i][$j] * $this->H[$j][$n - 1]; $sa = $sa + $this->H[$i][$j] * $this->H[$j][$n]; } $w = $this->H[$i][$i] - $p; if ($this->e[$i] < 0.0) { goto shbUk; URPZJ: $r = $ra; goto SVc8E; SVc8E: $s = $sa; goto zm9Gy; shbUk: $z = $w; goto URPZJ; zm9Gy: } else { goto u_U1Z; sF26w: if ($this->e[$i] == 0) { goto SlX1m; SlX1m: $this->cdiv(-$ra, -$sa, $w, $q); goto msbX7; qY2X6: $this->H[$i][$n] = $this->cdivi; goto wh3OW; msbX7: $this->H[$i][$n - 1] = $this->cdivr; goto qY2X6; wh3OW: } else { goto plWQu; hkowa: $vr = ($this->d[$i] - $p) * ($this->d[$i] - $p) + $this->e[$i] * $this->e[$i] - $q * $q; goto QDuRv; tZo4s: if ($vr == 0.0 & $vi == 0.0) { $vr = $eps * $norm * (abs($w) + abs($q) + abs($x) + abs($y) + abs($z)); } goto uRlEO; QDuRv: $vi = ($this->d[$i] - $p) * 2.0 * $q; goto tZo4s; plWQu: $x = $this->H[$i][$i + 1]; goto zs7Is; tzj2a: $this->H[$i][$n - 1] = $this->cdivr; goto tEvPT; uRlEO: $this->cdiv($x * $r - $z * $ra + $q * $sa, $x * $s - $z * $sa - $q * $ra, $vr, $vi); goto tzj2a; bOAXo: if (abs($x) > abs($z) + abs($q)) { $this->H[$i + 1][$n - 1] = (-$ra - $w * $this->H[$i][$n - 1] + $q * $this->H[$i][$n]) / $x; $this->H[$i + 1][$n] = (-$sa - $w * $this->H[$i][$n] - $q * $this->H[$i][$n - 1]) / $x; } else { goto xKFj0; tWxG3: $this->H[$i + 1][$n] = $this->cdivi; goto PsXAP; y3UHi: $this->H[$i + 1][$n - 1] = $this->cdivr; goto tWxG3; xKFj0: $this->cdiv(-$r - $y * $this->H[$i][$n - 1], -$s - $y * $this->H[$i][$n], $z, $q); goto y3UHi; PsXAP: } goto yCmha; zs7Is: $y = $this->H[$i + 1][$i]; goto hkowa; tEvPT: $this->H[$i][$n] = $this->cdivi; goto bOAXo; yCmha: } goto uJAG8; uJAG8: $t = max(abs($this->H[$i][$n - 1]), abs($this->H[$i][$n])); goto LQzf1; LQzf1: if ($eps * $t * $t > 1) { for ($j = $i; $j <= $n; ++$j) { $this->H[$j][$n - 1] = $this->H[$j][$n - 1] / $t; $this->H[$j][$n] = $this->H[$j][$n] / $t; } } goto sxZbT; u_U1Z: $l = $i; goto sF26w; sxZbT: } } goto N71wt; oCrhd: if (abs($this->H[$n][$n - 1]) > abs($this->H[$n - 1][$n])) { $this->H[$n - 1][$n - 1] = $q / $this->H[$n][$n - 1]; $this->H[$n - 1][$n] = -($this->H[$n][$n] - $p) / $this->H[$n][$n - 1]; } else { goto szkDW; LfjGa: $this->H[$n - 1][$n] = $this->cdivi; goto mAGZv; szkDW: $this->cdiv(0.0, -$this->H[$n - 1][$n], $this->H[$n - 1][$n - 1] - $p, $q); goto y9Hzf; y9Hzf: $this->H[$n - 1][$n - 1] = $this->cdivr; goto LfjGa; mAGZv: } goto QHJhd; N71wt: } } goto yWbg5; ZPTtA: $exshift = 0.0; goto J98Fq; yWbg5: for ($i = 0; $i < $nn; ++$i) { if ($i < $low | $i > $high) { for ($j = $i; $j < $nn; ++$j) { $this->V[$i][$j] = $this->H[$i][$j]; } } } goto amAzr; Fkk1u: if ($norm == 0.0) { return; } goto QrCkY; oY9rO: for ($i = 0; $i < $nn; ++$i) { if ($i < $low or $i > $high) { $this->d[$i] = $this->H[$i][$i]; $this->e[$i] = 0.0; } for ($j = max($i - 1, 0); $j < $nn; ++$j) { $norm = $norm + abs($this->H[$i][$j]); } } goto zxFNu; jtRex: while ($n >= $low) { $l = $n; while ($l > $low) { $s = abs($this->H[$l - 1][$l - 1]) + abs($this->H[$l][$l]); if ($s == 0.0) { $s = $norm; } if (abs($this->H[$l][$l - 1]) < $eps * $s) { break; } --$l; } if ($l == $n) { goto K0jg7; Z685Y: --$n; goto pmYa2; K0jg7: $this->H[$n][$n] = $this->H[$n][$n] + $exshift; goto UfyMu; UfyMu: $this->d[$n] = $this->H[$n][$n]; goto DNDjJ; pmYa2: $iter = 0; goto okm9W; DNDjJ: $this->e[$n] = 0.0; goto Z685Y; okm9W: } elseif ($l == $n - 1) { goto JX6qJ; sOTiE: $this->H[$n - 1][$n - 1] = $this->H[$n - 1][$n - 1] + $exshift; goto a7wJE; VdwFz: if ($q >= 0) { goto zkiln; vdh0O: $q = $z / $s; goto doY1S; fTy5k: $p = $p / $r; goto k2HTj; k2HTj: $q = $q / $r; goto DRCJ4; YAO7e: $s = abs($x) + abs($z); goto YFpw8; nXiBm: for ($i = 0; $i <= $n; ++$i) { $z = $this->H[$i][$n - 1]; $this->H[$i][$n - 1] = $q * $z + $p * $this->H[$i][$n]; $this->H[$i][$n] = $q * $this->H[$i][$n] - $p * $z; } goto HSikE; vIgt0: $x = $this->H[$n][$n - 1]; goto YAO7e; HSikE: for ($i = $low; $i <= $high; ++$i) { $z = $this->V[$i][$n - 1]; $this->V[$i][$n - 1] = $q * $z + $p * $this->V[$i][$n]; $this->V[$i][$n] = $q * $this->V[$i][$n] - $p * $z; } goto dl0ai; YFpw8: $p = $x / $s; goto vdh0O; DRCJ4: for ($j = $n - 1; $j < $nn; ++$j) { $z = $this->H[$n - 1][$j]; $this->H[$n - 1][$j] = $q * $z + $p * $this->H[$n][$j]; $this->H[$n][$j] = $q * $this->H[$n][$j] - $p * $z; } goto nXiBm; doY1S: $r = sqrt($p * $p + $q * $q); goto fTy5k; r22je: $this->e[$n] = 0.0; goto vIgt0; iiYsq: $this->e[$n - 1] = 0.0; goto r22je; xDvtG: $this->d[$n - 1] = $x + $z; goto qMw24; lbWSR: if ($z != 0.0) { $this->d[$n] = $x - $w / $z; } goto iiYsq; qMw24: $this->d[$n] = $this->d[$n - 1]; goto lbWSR; zkiln: if ($p >= 0) { $z = $p + $z; } else { $z = $p - $z; } goto xDvtG; dl0ai: } else { goto ZuOHO; ZuOHO: $this->d[$n - 1] = $x + $p; goto sOBQ9; zGKXT: $this->e[$n - 1] = $z; goto EP3Zi; EP3Zi: $this->e[$n] = -$z; goto rAFbi; sOBQ9: $this->d[$n] = $x + $p; goto zGKXT; rAFbi: } goto Wn9Oe; Ngbcq: $p = ($this->H[$n - 1][$n - 1] - $this->H[$n][$n]) / 2.0; goto C5MxA; Wn9Oe: $n = $n - 2; goto ikIcA; fFQBz: $this->H[$n][$n] = $this->H[$n][$n] + $exshift; goto sOTiE; JX6qJ: $w = $this->H[$n][$n - 1] * $this->H[$n - 1][$n]; goto Ngbcq; ikIcA: $iter = 0; goto Wn0LF; ADp8L: $z = sqrt(abs($q)); goto fFQBz; C5MxA: $q = $p * $p + $w; goto ADp8L; a7wJE: $x = $this->H[$n][$n]; goto VdwFz; Wn0LF: } else { goto uojvn; UlJs5: for ($i = $m + 2; $i <= $n; ++$i) { $this->H[$i][$i - 2] = 0.0; if ($i > $m + 2) { $this->H[$i][$i - 3] = 0.0; } } goto mKyjc; uojvn: $x = $this->H[$n][$n]; goto kPSoa; O1QVm: if ($iter == 10) { goto sysaT; CWRdF: for ($i = $low; $i <= $n; ++$i) { $this->H[$i][$i] -= $x; } goto dpSDE; sysaT: $exshift += $x; goto CWRdF; vbb9T: $w = -0.4375 * $s * $s; goto nN0Xz; dpSDE: $s = abs($this->H[$n][$n - 1]) + abs($this->H[$n - 1][$n - 2]); goto o0WHW; o0WHW: $x = $y = 0.75 * $s; goto vbb9T; nN0Xz: } goto oAuI_; oAuI_: if ($iter == 30) { goto N3UHd; gIV_N: $s = $s * $s + $w; goto n_Ka0; n_Ka0: if ($s > 0) { goto TyQSt; mh0bL: for ($i = $low; $i <= $n; ++$i) { $this->H[$i][$i] -= $s; } goto RdR49; MBGzh: $x = $y = $w = 0.964; goto fviQ6; xMlO3: $s = $x - $w / (($y - $x) / 2.0 + $s); goto mh0bL; tt0Im: if ($y < $x) { $s = -$s; } goto xMlO3; RdR49: $exshift += $s; goto MBGzh; TyQSt: $s = sqrt($s); goto tt0Im; fviQ6: } goto NrCCI; N3UHd: $s = ($y - $x) / 2.0; goto gIV_N; NrCCI: } goto Oq1lF; pjmA5: if ($l < $n) { $y = $this->H[$n - 1][$n - 1]; $w = $this->H[$n][$n - 1] * $this->H[$n - 1][$n]; } goto O1QVm; Oq1lF: $iter = $iter + 1; goto pdj2Q; HMI5L: $w = 0.0; goto pjmA5; YQokv: while ($m >= $l) { $z = $this->H[$m][$m]; $r = $x - $z; $s = $y - $z; $p = ($r * $s - $w) / $this->H[$m + 1][$m] + $this->H[$m][$m + 1]; $q = $this->H[$m + 1][$m + 1] - $z - $r - $s; $r = $this->H[$m + 2][$m + 1]; $s = abs($p) + abs($q) + abs($r); $p = $p / $s; $q = $q / $s; $r = $r / $s; if ($m == $l) { break; } if (abs($this->H[$m][$m - 1]) * (abs($q) + abs($r)) < $eps * (abs($p) * (abs($this->H[$m - 1][$m - 1]) + abs($z) + abs($this->H[$m + 1][$m + 1])))) { break; } --$m; } goto UlJs5; kPSoa: $y = 0.0; goto HMI5L; mKyjc: for ($k = $m; $k <= $n - 1; ++$k) { $notlast = $k != $n - 1; if ($k != $m) { goto Nz7z_; pSJkm: $q = $this->H[$k + 1][$k - 1]; goto c6AjX; QID5x: if ($x != 0.0) { goto P9UTO; P9UTO: $p = $p / $x; goto d1zJ3; d1zJ3: $q = $q / $x; goto x2dpt; x2dpt: $r = $r / $x; goto LewMQ; LewMQ: } goto oPplD; wSu3L: $x = abs($p) + abs($q) + abs($r); goto QID5x; Nz7z_: $p = $this->H[$k][$k - 1]; goto pSJkm; c6AjX: $r = $notlast ? $this->H[$k + 2][$k - 1] : 0.0; goto wSu3L; oPplD: } if ($x == 0.0) { break; } $s = sqrt($p * $p + $q * $q + $r * $r); if ($p < 0) { $s = -$s; } if ($s != 0) { goto oPoDU; qi_fd: $q = $q / $p; goto foAt9; hVNOK: for ($i = $low; $i <= $high; ++$i) { $p = $x * $this->V[$i][$k] + $y * $this->V[$i][$k + 1]; if ($notlast) { $p = $p + $z * $this->V[$i][$k + 2]; $this->V[$i][$k + 2] = $this->V[$i][$k + 2] - $p * $r; } $this->V[$i][$k] = $this->V[$i][$k] - $p; $this->V[$i][$k + 1] = $this->V[$i][$k + 1] - $p * $q; } goto nCOb1; sKr0e: $z = $r / $s; goto qi_fd; hfpaD: $p = $p + $s; goto La7yg; La7yg: $x = $p / $s; goto pWGXv; foAt9: $r = $r / $p; goto KuNo5; KuNo5: for ($j = $k; $j < $nn; ++$j) { $p = $this->H[$k][$j] + $q * $this->H[$k + 1][$j]; if ($notlast) { $p = $p + $r * $this->H[$k + 2][$j]; $this->H[$k + 2][$j] = $this->H[$k + 2][$j] - $p * $z; } $this->H[$k][$j] = $this->H[$k][$j] - $p * $x; $this->H[$k + 1][$j] = $this->H[$k + 1][$j] - $p * $y; } goto pJ8DM; pJ8DM: for ($i = 0; $i <= min($n, $k + 3); ++$i) { $p = $x * $this->H[$i][$k] + $y * $this->H[$i][$k + 1]; if ($notlast) { $p = $p + $z * $this->H[$i][$k + 2]; $this->H[$i][$k + 2] = $this->H[$i][$k + 2] - $p * $r; } $this->H[$i][$k] = $this->H[$i][$k] - $p; $this->H[$i][$k + 1] = $this->H[$i][$k + 1] - $p * $q; } goto hVNOK; oPoDU: if ($k != $m) { $this->H[$k][$k - 1] = -$s * $x; } elseif ($l != $m) { $this->H[$k][$k - 1] = -$this->H[$k][$k - 1]; } goto hfpaD; pWGXv: $y = $q / $s; goto sKr0e; nCOb1: } } goto c1Go2; pdj2Q: $m = $n - 2; goto YQokv; c1Go2: } } goto Fkk1u; nRhpI: $n = $nn - 1; goto iPDLN; J0ewP: $high = $nn - 1; goto M8hwH; kdHZ_: $norm = 0.0; goto oY9rO; zxFNu: $iter = 0; goto jtRex; iPDLN: $low = 0; goto J0ewP; OY2vc: $nn = $this->n; goto nRhpI; J98Fq: $p = $q = $r = $s = $z = 0; goto kdHZ_; M8hwH: $eps = pow(2.0, -52.0); goto ZPTtA; ulqTY: } public function __construct($Arg) { goto J0vJt; Sb3TW: $issymmetric = true; goto mym0u; XZugW: if ($issymmetric) { goto iqc2m; iqc2m: $this->V = $this->A; goto DFGg5; DFGg5: $this->tred2(); goto XNLZw; XNLZw: $this->tql2(); goto Urq3l; Urq3l: } else { goto SdigF; TolmT: $this->orthes(); goto AsIlu; SdigF: $this->H = $this->A; goto dSpbY; dSpbY: $this->ort = array(); goto TolmT; AsIlu: $this->hqr2(); goto MzHBe; MzHBe: } goto ggVBu; qtgg7: $this->n = $Arg->getColumnDimension(); goto Sb3TW; J0vJt: $this->A = $Arg->getArray(); goto qtgg7; mym0u: for ($j = 0; $j < $this->n & $issymmetric; ++$j) { for ($i = 0; $i < $this->n & $issymmetric; ++$i) { $issymmetric = $this->A[$i][$j] == $this->A[$j][$i]; } } goto XZugW; ggVBu: } public function getV() { return new Matrix($this->V, $this->n, $this->n); } public function getRealEigenvalues() { return $this->d; } public function getImagEigenvalues() { return $this->e; } public function getD() { for ($i = 0; $i < $this->n; ++$i) { $D[$i] = array_fill(0, $this->n, 0.0); $D[$i][$i] = $this->d[$i]; if ($this->e[$i] == 0) { continue; } $o = $this->e[$i] > 0 ? $i + 1 : $i - 1; $D[$i][$o] = $this->e[$i]; } return new Matrix($D); } }
