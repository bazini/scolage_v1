<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:03              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 if (!defined("\120\110\120\x45\x58\103\105\x4c\137\x52\117\x4f\124")) { define("\x50\x48\120\105\x58\x43\x45\x4c\x5f\122\x4f\117\124", dirname(__FILE__) . "\x2f\x2e\x2e\57\x2e\56\57\x2e\56\57"); require PHPEXCEL_ROOT . "\120\110\120\x45\170\143\145\x6c\x2f\x41\165\x74\x6f\x6c\x6f\141\x64\145\162\x2e\160\150\160"; } class PHPExcel_Shared_JAMA_Matrix { const POLYMORPHIC_ARGUMENT_EXCEPTION = "\x49\x6e\x76\x61\154\x69\x64\40\141\162\x67\165\x6d\x65\x6e\x74\40\x70\x61\164\x74\x65\x72\156\40\146\x6f\162\40\x70\x6f\154\x79\x6d\157\162\160\x68\151\143\x20\x66\x75\x6e\x63\164\x69\157\156\x2e"; const ARGUMENT_TYPE_EXCEPTION = "\111\156\166\x61\154\151\x64\40\141\x72\147\x75\x6d\145\156\164\x20\164\x79\160\145\x2e"; const ARGUMENT_BOUNDS_EXCEPTION = "\x49\x6e\x76\x61\154\x69\144\x20\x61\x72\147\165\155\x65\x6e\164\40\162\x61\156\147\x65\x2e"; const MATRIX_DIMENSION_EXCEPTION = "\115\141\x74\162\x69\170\x20\144\151\x6d\145\x6e\163\151\x6f\x6e\x73\40\141\x72\145\x20\156\157\164\40\x65\161\x75\x61\154\x2e"; const ARRAY_LENGTH_EXCEPTION = "\101\162\x72\x61\x79\40\x6c\145\x6e\147\164\x68\40\x6d\165\163\x74\x20\x62\x65\40\x61\40\x6d\x75\x6c\x74\151\x70\x6c\x65\40\157\146\x20\155\56"; public $A = array(); private $m; private $n; public function __construct() { if (func_num_args() > 0) { goto bdO92; Y0Q8u: $match = implode("\x2c", array_map("\x67\145\x74\164\171\160\x65", $args)); goto AJib6; AJib6: switch ($match) { case "\141\x72\162\x61\x79": goto FnGbj; FnGbj: $this->m = count($args[0]); goto peVrh; my8W3: break; goto zFJ6U; peVrh: $this->n = count($args[0][0]); goto Ucu7u; Ucu7u: $this->A = $args[0]; goto my8W3; zFJ6U: case "\x69\156\164\145\147\x65\x72": goto UNBy0; ntyII: break; goto TGwJJ; a2mXj: $this->A = array_fill(0, $this->m, array_fill(0, $this->n, 0)); goto ntyII; UNBy0: $this->m = $args[0]; goto GRwpn; GRwpn: $this->n = $args[0]; goto a2mXj; TGwJJ: case "\151\x6e\x74\x65\x67\x65\162\x2c\x69\x6e\x74\145\x67\145\162": goto pD2ql; WMFak: $this->n = $args[1]; goto B68XJ; JZ7Ri: break; goto xesLD; B68XJ: $this->A = array_fill(0, $this->m, array_fill(0, $this->n, 0)); goto JZ7Ri; pD2ql: $this->m = $args[0]; goto WMFak; xesLD: case "\x61\x72\x72\x61\x79\x2c\x69\x6e\164\x65\x67\145\x72": goto I8Pec; I8Pec: $this->m = $args[1]; goto EJMEa; EJMEa: if ($this->m != 0) { $this->n = count($args[0]) / $this->m; } else { $this->n = 0; } goto Bpykk; Bpykk: if ($this->m * $this->n == count($args[0])) { for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $this->A[$i][$j] = $args[0][$i + $j * $this->m]; } } } else { throw new PHPExcel_Calculation_Exception(self::ARRAY_LENGTH_EXCEPTION); } goto rrgMc; rrgMc: break; goto NnOjO; NnOjO: default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto zgu8o; bdO92: $args = func_get_args(); goto Y0Q8u; zgu8o: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function getArray() { return $this->A; } public function getRowDimension() { return $this->m; } public function getColumnDimension() { return $this->n; } public function get($i = null, $j = null) { return $this->A[$i][$j]; } public function getMatrix() { if (func_num_args() > 0) { goto D9NIx; D9NIx: $args = func_get_args(); goto WSnqX; M0pli: switch ($match) { case "\151\x6e\164\x65\x67\x65\162\x2c\x69\156\x74\x65\x67\x65\x72": goto VUq1q; pGkQ_: return $R; goto eUZi3; w7ZcO: if ($j0 >= 0) { $n = $this->n - $j0; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto Cv70D; eUZi3: break; goto n3Of3; MjFYf: if ($i0 >= 0) { $m = $this->m - $i0; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto w7ZcO; Cv70D: $R = new PHPExcel_Shared_JAMA_Matrix($m, $n); goto AmWA6; VUq1q: list($i0, $j0) = $args; goto MjFYf; AmWA6: for ($i = $i0; $i < $this->m; ++$i) { for ($j = $j0; $j < $this->n; ++$j) { $R->set($i, $j, $this->A[$i][$j]); } } goto pGkQ_; n3Of3: case "\151\156\x74\x65\147\145\162\x2c\x69\156\x74\x65\x67\145\x72\x2c\x69\x6e\x74\145\x67\145\162\x2c\151\x6e\164\145\x67\145\162": goto s_gF7; a4Iz2: break; goto yxAI0; Hp1xa: if ($jF > $j0 && $this->n >= $jF && $j0 >= 0) { $n = $jF - $j0; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto iLTdc; s_gF7: list($i0, $iF, $j0, $jF) = $args; goto jO6DL; jO6DL: if ($iF > $i0 && $this->m >= $iF && $i0 >= 0) { $m = $iF - $i0; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto Hp1xa; iLTdc: $R = new PHPExcel_Shared_JAMA_Matrix($m + 1, $n + 1); goto DjCYt; DjCYt: for ($i = $i0; $i <= $iF; ++$i) { for ($j = $j0; $j <= $jF; ++$j) { $R->set($i - $i0, $j - $j0, $this->A[$i][$j]); } } goto NFmz0; NFmz0: return $R; goto a4Iz2; yxAI0: case "\141\x72\162\141\x79\54\141\x72\x72\x61\171": goto lC3gh; uBbcg: return $R; goto yQaJ9; hG4Nq: if (count($CL) > 0) { $n = count($CL); } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto nP9wE; lC3gh: list($RL, $CL) = $args; goto gjBR1; PImpl: for ($i = 0; $i < $m; ++$i) { for ($j = 0; $j < $n; ++$j) { $R->set($i - $i0, $j - $j0, $this->A[$RL[$i]][$CL[$j]]); } } goto uBbcg; gjBR1: if (count($RL) > 0) { $m = count($RL); } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto hG4Nq; yQaJ9: break; goto vKcXO; nP9wE: $R = new PHPExcel_Shared_JAMA_Matrix($m, $n); goto PImpl; vKcXO: case "\141\x72\162\x61\171\54\x61\x72\162\141\171": goto dvGf2; n3Xz3: return $R; goto C2zgH; dvGf2: list($RL, $CL) = $args; goto FYvVn; C2zgH: break; goto qWsIb; FYvVn: if (count($RL) > 0) { $m = count($RL); } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto JfFax; hzMRl: for ($i = 0; $i < $m; ++$i) { for ($j = 0; $j < $n; ++$j) { $R->set($i, $j, $this->A[$RL[$i]][$CL[$j]]); } } goto n3Xz3; JfFax: if (count($CL) > 0) { $n = count($CL); } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto J3Mls; J3Mls: $R = new PHPExcel_Shared_JAMA_Matrix($m, $n); goto hzMRl; qWsIb: case "\151\156\x74\x65\x67\145\162\54\151\x6e\164\145\147\x65\x72\x2c\141\x72\162\141\x79": goto xvteT; CTiu9: if (count($CL) > 0) { $n = count($CL); } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto meI8f; o0a83: for ($i = $i0; $i < $iF; ++$i) { for ($j = 0; $j < $n; ++$j) { $R->set($i - $i0, $j, $this->A[$RL[$i]][$j]); } } goto WkbO6; xvteT: list($i0, $iF, $CL) = $args; goto hniBG; meI8f: $R = new PHPExcel_Shared_JAMA_Matrix($m, $n); goto o0a83; bNsUb: break; goto PNBen; WkbO6: return $R; goto bNsUb; hniBG: if ($iF > $i0 && $this->m >= $iF && $i0 >= 0) { $m = $iF - $i0; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto CTiu9; PNBen: case "\x61\x72\162\x61\171\54\x69\x6e\x74\145\x67\x65\162\54\x69\156\x74\145\x67\145\x72": goto k2t9F; o6qow: return $R; goto Rd0AS; uP9pV: if (count($RL) > 0) { $m = count($RL); } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto wDuv5; w7RPP: for ($i = 0; $i < $m; ++$i) { for ($j = $j0; $j <= $jF; ++$j) { $R->set($i, $j - $j0, $this->A[$RL[$i]][$j]); } } goto o6qow; wDuv5: if ($jF >= $j0 && $this->n >= $jF && $j0 >= 0) { $n = $jF - $j0; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_BOUNDS_EXCEPTION); } goto uv4Rb; uv4Rb: $R = new PHPExcel_Shared_JAMA_Matrix($m, $n + 1); goto w7RPP; k2t9F: list($RL, $j0, $jF) = $args; goto uP9pV; Rd0AS: break; goto VC2Vj; VC2Vj: default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto OJFg4; WSnqX: $match = implode("\x2c", array_map("\147\x65\x74\x74\x79\x70\x65", $args)); goto M0pli; OJFg4: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function checkMatrixDimensions($B = null) { if ($B instanceof PHPExcel_Shared_JAMA_Matrix) { if ($this->m == $B->getRowDimension() && $this->n == $B->getColumnDimension()) { return true; } else { throw new PHPExcel_Calculation_Exception(self::MATRIX_DIMENSION_EXCEPTION); } } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } } public function set($i = null, $j = null, $c = null) { $this->A[$i][$j] = $c; } public function identity($m = null, $n = null) { return $this->diagonal($m, $n, 1); } public function diagonal($m = null, $n = null, $c = 1) { goto bUWsF; bUWsF: $R = new PHPExcel_Shared_JAMA_Matrix($m, $n); goto EQflB; EQflB: for ($i = 0; $i < $m; ++$i) { $R->set($i, $i, $c); } goto xYUK2; xYUK2: return $R; goto DBae3; DBae3: } public function getMatrixByRow($i0 = null, $iF = null) { if (is_int($i0)) { if (is_int($iF)) { return $this->getMatrix($i0, 0, $iF + 1, $this->n); } else { return $this->getMatrix($i0, 0, $i0 + 1, $this->n); } } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } } public function getMatrixByCol($j0 = null, $jF = null) { if (is_int($j0)) { if (is_int($jF)) { return $this->getMatrix(0, $j0, $this->m, $jF + 1); } else { return $this->getMatrix(0, $j0, $this->m, $j0 + 1); } } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } } public function transpose() { goto g7Y0p; g7Y0p: $R = new PHPExcel_Shared_JAMA_Matrix($this->n, $this->m); goto ES2W3; ES2W3: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $R->set($j, $i, $this->A[$i][$j]); } } goto gD6Mi; gD6Mi: return $R; goto yM0Dr; yM0Dr: } public function trace() { goto Qsnym; Qsnym: $s = 0; goto Ejsdi; Ejsdi: $n = min($this->m, $this->n); goto JvIvm; JvIvm: for ($i = 0; $i < $n; ++$i) { $s += $this->A[$i][$i]; } goto t6ieH; t6ieH: return $s; goto QAjOc; QAjOc: } public function uminus() { } public function plus() { if (func_num_args() > 0) { goto i_FBX; NuJfg: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $M->set($i, $j, $M->get($i, $j) + $this->A[$i][$j]); } } goto k1Umv; Qu3f1: $match = implode("\54", array_map("\x67\x65\164\x74\171\160\x65", $args)); goto m3IVE; L0ewG: $this->checkMatrixDimensions($M); goto NuJfg; i_FBX: $args = func_get_args(); goto Qu3f1; m3IVE: switch ($match) { case "\x6f\142\x6a\x65\143\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\x61\162\x72\141\x79": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto L0ewG; k1Umv: return $M; goto rL2M3; rL2M3: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function plusEquals() { if (func_num_args() > 0) { goto vMSfK; qiwjp: switch ($match) { case "\x6f\x62\152\145\143\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\x61\x72\162\141\x79": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto iV0jf; iV0jf: $this->checkMatrixDimensions($M); goto CPid0; vMSfK: $args = func_get_args(); goto GfCWw; Xk0_U: return $this; goto Z1mNB; CPid0: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $validValues = true; $value = $M->get($i, $j); if (is_string($this->A[$i][$j]) && strlen($this->A[$i][$j]) > 0 && !is_numeric($this->A[$i][$j])) { $this->A[$i][$j] = trim($this->A[$i][$j], "\42"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($this->A[$i][$j]); } if (is_string($value) && strlen($value) > 0 && !is_numeric($value)) { $value = trim($value, "\x22"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($value); } if ($validValues) { $this->A[$i][$j] += $value; } else { $this->A[$i][$j] = PHPExcel_Calculation_Functions::NaN(); } } } goto Xk0_U; GfCWw: $match = implode("\x2c", array_map("\x67\145\164\164\171\160\145", $args)); goto qiwjp; Z1mNB: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function minus() { if (func_num_args() > 0) { goto KOyDv; R7dhm: return $M; goto pLqVP; RO7_L: $this->checkMatrixDimensions($M); goto xngkp; KOyDv: $args = func_get_args(); goto c8Y3_; c8Y3_: $match = implode("\x2c", array_map("\x67\145\x74\x74\x79\160\x65", $args)); goto KGlG2; KGlG2: switch ($match) { case "\x6f\142\152\x65\x63\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\141\x72\162\x61\171": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto RO7_L; xngkp: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $M->set($i, $j, $M->get($i, $j) - $this->A[$i][$j]); } } goto R7dhm; pLqVP: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function minusEquals() { if (func_num_args() > 0) { goto r8EFX; mScpy: return $this; goto j5fZZ; YRTAD: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $validValues = true; $value = $M->get($i, $j); if (is_string($this->A[$i][$j]) && strlen($this->A[$i][$j]) > 0 && !is_numeric($this->A[$i][$j])) { $this->A[$i][$j] = trim($this->A[$i][$j], "\42"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($this->A[$i][$j]); } if (is_string($value) && strlen($value) > 0 && !is_numeric($value)) { $value = trim($value, "\42"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($value); } if ($validValues) { $this->A[$i][$j] -= $value; } else { $this->A[$i][$j] = PHPExcel_Calculation_Functions::NaN(); } } } goto mScpy; ZlWbX: switch ($match) { case "\157\142\152\x65\x63\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\x61\162\x72\x61\171": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto wGfQc; wGfQc: $this->checkMatrixDimensions($M); goto YRTAD; m9g1J: $match = implode("\x2c", array_map("\147\145\164\164\171\160\145", $args)); goto ZlWbX; r8EFX: $args = func_get_args(); goto m9g1J; j5fZZ: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function arrayTimes() { if (func_num_args() > 0) { goto d1PgA; NPWaq: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $M->set($i, $j, $M->get($i, $j) * $this->A[$i][$j]); } } goto pNTGV; sJT4Q: $this->checkMatrixDimensions($M); goto NPWaq; BCBAN: switch ($match) { case "\157\x62\152\x65\143\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\x61\162\x72\141\171": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto sJT4Q; d1PgA: $args = func_get_args(); goto yWJLQ; yWJLQ: $match = implode("\54", array_map("\x67\x65\x74\164\x79\x70\145", $args)); goto BCBAN; pNTGV: return $M; goto aenMO; aenMO: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function arrayTimesEquals() { if (func_num_args() > 0) { goto Wxc_4; nRgDq: $match = implode("\x2c", array_map("\147\145\x74\x74\x79\160\145", $args)); goto JJUgI; JJUgI: switch ($match) { case "\x6f\142\x6a\x65\x63\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\141\162\x72\141\x79": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto Qh2Pe; WR6ze: return $this; goto qTMdO; Qh2Pe: $this->checkMatrixDimensions($M); goto EQTJX; EQTJX: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $validValues = true; $value = $M->get($i, $j); if (is_string($this->A[$i][$j]) && strlen($this->A[$i][$j]) > 0 && !is_numeric($this->A[$i][$j])) { $this->A[$i][$j] = trim($this->A[$i][$j], "\42"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($this->A[$i][$j]); } if (is_string($value) && strlen($value) > 0 && !is_numeric($value)) { $value = trim($value, "\42"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($value); } if ($validValues) { $this->A[$i][$j] *= $value; } else { $this->A[$i][$j] = PHPExcel_Calculation_Functions::NaN(); } } } goto WR6ze; Wxc_4: $args = func_get_args(); goto nRgDq; qTMdO: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function arrayRightDivide() { if (func_num_args() > 0) { goto hWM_n; KeexW: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $validValues = true; $value = $M->get($i, $j); if (is_string($this->A[$i][$j]) && strlen($this->A[$i][$j]) > 0 && !is_numeric($this->A[$i][$j])) { $this->A[$i][$j] = trim($this->A[$i][$j], "\42"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($this->A[$i][$j]); } if (is_string($value) && strlen($value) > 0 && !is_numeric($value)) { $value = trim($value, "\x22"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($value); } if ($validValues) { if ($value == 0) { $M->set($i, $j, "\43\x44\x49\x56\x2f\60\41"); } else { $M->set($i, $j, $this->A[$i][$j] / $value); } } else { $M->set($i, $j, PHPExcel_Calculation_Functions::NaN()); } } } goto vIsQc; NVoU3: $this->checkMatrixDimensions($M); goto KeexW; vIsQc: return $M; goto v5pu2; hWM_n: $args = func_get_args(); goto wD3DJ; wD3DJ: $match = implode("\x2c", array_map("\147\x65\x74\x74\x79\160\145", $args)); goto Gui5Q; Gui5Q: switch ($match) { case "\157\x62\x6a\145\x63\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\141\x72\x72\141\x79": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto NVoU3; v5pu2: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function arrayRightDivideEquals() { if (func_num_args() > 0) { goto KM3jB; jZs0P: return $M; goto MRohr; jnbxv: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $this->A[$i][$j] = $this->A[$i][$j] / $M->get($i, $j); } } goto jZs0P; KM3jB: $args = func_get_args(); goto DQbxV; FlvEU: $this->checkMatrixDimensions($M); goto jnbxv; uzfTx: switch ($match) { case "\157\142\x6a\145\x63\164": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\141\x72\162\x61\x79": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto FlvEU; DQbxV: $match = implode("\54", array_map("\147\x65\164\x74\171\x70\145", $args)); goto uzfTx; MRohr: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function arrayLeftDivide() { if (func_num_args() > 0) { goto p_R6y; p_R6y: $args = func_get_args(); goto hR72p; c3BPK: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $M->set($i, $j, $M->get($i, $j) / $this->A[$i][$j]); } } goto RIOmR; dg913: $this->checkMatrixDimensions($M); goto c3BPK; DwSW1: switch ($match) { case "\x6f\142\152\145\143\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\141\162\162\141\x79": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto dg913; RIOmR: return $M; goto bIkhs; hR72p: $match = implode("\x2c", array_map("\x67\145\164\164\171\x70\145", $args)); goto DwSW1; bIkhs: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function arrayLeftDivideEquals() { if (func_num_args() > 0) { goto UM84m; UM84m: $args = func_get_args(); goto xq7uV; tmyCT: return $M; goto BX9o_; xq7uV: $match = implode("\x2c", array_map("\147\145\x74\164\171\x70\x65", $args)); goto WduK9; j4gCg: $this->checkMatrixDimensions($M); goto vckqA; WduK9: switch ($match) { case "\x6f\142\152\145\143\164": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\x61\162\162\141\x79": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto j4gCg; vckqA: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $this->A[$i][$j] = $M->get($i, $j) / $this->A[$i][$j]; } } goto tmyCT; BX9o_: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function times() { if (func_num_args() > 0) { goto XfegA; XfegA: $args = func_get_args(); goto p7W6L; FnWvc: switch ($match) { case "\157\142\152\x65\x63\x74": goto tjjql; tjjql: if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $B = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } goto ZDyWY; ZDyWY: if ($this->n == $B->m) { goto y1bfW; nBJjL: return $C; goto qqvv3; lTAKq: for ($j = 0; $j < $B->n; ++$j) { for ($k = 0; $k < $this->n; ++$k) { $Bcolj[$k] = $B->A[$k][$j]; } for ($i = 0; $i < $this->m; ++$i) { $Arowi = $this->A[$i]; $s = 0; for ($k = 0; $k < $this->n; ++$k) { $s += $Arowi[$k] * $Bcolj[$k]; } $C->A[$i][$j] = $s; } } goto nBJjL; y1bfW: $C = new PHPExcel_Shared_JAMA_Matrix($this->m, $B->n); goto lTAKq; qqvv3: } else { throw new PHPExcel_Calculation_Exception(JAMAError(MatrixDimensionMismatch)); } goto Lw3hB; Lw3hB: break; goto urflu; urflu: case "\x61\162\162\x61\x79": goto T6rbU; T6rbU: $B = new PHPExcel_Shared_JAMA_Matrix($args[0]); goto UA1DQ; Tlqyc: break; goto A1ik0; iZiC4: return $M; goto Tlqyc; UA1DQ: if ($this->n == $B->m) { goto bRtaY; EtB13: return $C; goto C_vE9; bRtaY: $C = new PHPExcel_Shared_JAMA_Matrix($this->m, $B->n); goto rxsL6; rxsL6: for ($i = 0; $i < $C->m; ++$i) { for ($j = 0; $j < $C->n; ++$j) { $s = "\60"; for ($k = 0; $k < $C->n; ++$k) { $s += $this->A[$i][$k] * $B->A[$k][$j]; } $C->A[$i][$j] = $s; } } goto EtB13; C_vE9: } else { throw new PHPExcel_Calculation_Exception(JAMAError(MatrixDimensionMismatch)); } goto iZiC4; A1ik0: case "\151\156\164\145\x67\x65\x72": goto WUx1o; WUx1o: $C = new PHPExcel_Shared_JAMA_Matrix($this->A); goto d1niY; wuivN: break; goto M7qIu; rFP0m: return $C; goto wuivN; d1niY: for ($i = 0; $i < $C->m; ++$i) { for ($j = 0; $j < $C->n; ++$j) { $C->A[$i][$j] *= $args[0]; } } goto rFP0m; M7qIu: case "\144\x6f\165\142\154\x65": goto Oo3An; ds8Ze: break; goto uEcnp; hzWBa: return $C; goto ds8Ze; e6RJY: for ($i = 0; $i < $C->m; ++$i) { for ($j = 0; $j < $C->n; ++$j) { $C->A[$i][$j] = $args[0] * $this->A[$i][$j]; } } goto hzWBa; Oo3An: $C = new PHPExcel_Shared_JAMA_Matrix($this->m, $this->n); goto e6RJY; uEcnp: case "\146\154\157\x61\x74": goto rBKmm; oqa0S: for ($i = 0; $i < $C->m; ++$i) { for ($j = 0; $j < $C->n; ++$j) { $C->A[$i][$j] *= $args[0]; } } goto c4Y8O; gzlMQ: break; goto ESzef; rBKmm: $C = new PHPExcel_Shared_JAMA_Matrix($this->A); goto oqa0S; c4Y8O: return $C; goto gzlMQ; ESzef: default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto oYHWs; p7W6L: $match = implode("\54", array_map("\147\145\x74\x74\171\160\145", $args)); goto FnWvc; oYHWs: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function power() { if (func_num_args() > 0) { goto pNRig; saga2: switch ($match) { case "\157\x62\152\x65\x63\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } break; case "\x61\162\162\x61\x79": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto mGJIx; hf23D: return $this; goto fRSEC; znMiN: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $validValues = true; $value = $M->get($i, $j); if (is_string($this->A[$i][$j]) && strlen($this->A[$i][$j]) > 0 && !is_numeric($this->A[$i][$j])) { $this->A[$i][$j] = trim($this->A[$i][$j], "\x22"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($this->A[$i][$j]); } if (is_string($value) && strlen($value) > 0 && !is_numeric($value)) { $value = trim($value, "\x22"); $validValues &= PHPExcel_Shared_String::convertToNumberIfFraction($value); } if ($validValues) { $this->A[$i][$j] = pow($this->A[$i][$j], $value); } else { $this->A[$i][$j] = PHPExcel_Calculation_Functions::NaN(); } } } goto hf23D; pNRig: $args = func_get_args(); goto K6sxd; K6sxd: $match = implode("\54", array_map("\147\145\164\164\x79\160\x65", $args)); goto saga2; mGJIx: $this->checkMatrixDimensions($M); goto znMiN; fRSEC: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function concat() { if (func_num_args() > 0) { goto NZVLu; cKTMw: for ($i = 0; $i < $this->m; ++$i) { for ($j = 0; $j < $this->n; ++$j) { $this->A[$i][$j] = trim($this->A[$i][$j], "\x22") . trim($M->get($i, $j), "\x22"); } } goto gDtf7; pL9WG: switch ($match) { case "\157\142\x6a\x65\x63\x74": if ($args[0] instanceof PHPExcel_Shared_JAMA_Matrix) { $M = $args[0]; } else { throw new PHPExcel_Calculation_Exception(self::ARGUMENT_TYPE_EXCEPTION); } case "\x61\162\162\x61\171": $M = new PHPExcel_Shared_JAMA_Matrix($args[0]); break; default: throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); break; } goto ksT1m; NZVLu: $args = func_get_args(); goto QQygY; gDtf7: return $this; goto gmPiX; ksT1m: $this->checkMatrixDimensions($M); goto cKTMw; QQygY: $match = implode("\x2c", array_map("\x67\x65\x74\164\171\x70\x65", $args)); goto pL9WG; gmPiX: } else { throw new PHPExcel_Calculation_Exception(self::POLYMORPHIC_ARGUMENT_EXCEPTION); } } public function solve($B) { if ($this->m == $this->n) { $LU = new PHPExcel_Shared_JAMA_LUDecomposition($this); return $LU->solve($B); } else { $QR = new PHPExcel_Shared_JAMA_QRDecomposition($this); return $QR->solve($B); } } public function inverse() { return $this->solve($this->identity($this->m, $this->m)); } public function det() { $L = new PHPExcel_Shared_JAMA_LUDecomposition($this); return $L->det(); } }
