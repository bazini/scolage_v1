<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:04              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Shared_Excel5 { public static function sizeCol($sheet, $col = "\101") { goto kD2iz; ejOZL: return $effectivePixelWidth; goto PSHXE; fHVDN: if (isset($columnDimensions[$col]) and !$columnDimensions[$col]->getVisible()) { $effectivePixelWidth = 0; } else { $effectivePixelWidth = $pixelWidth; } goto ejOZL; p0_pd: if (isset($columnDimensions[$col]) and $columnDimensions[$col]->getWidth() != -1) { goto LS9jn; kQ1w7: $width = $columnDimension->getWidth(); goto C1fm7; LS9jn: $columnDimension = $columnDimensions[$col]; goto kQ1w7; C1fm7: $pixelWidth = PHPExcel_Shared_Drawing::cellDimensionToPixels($width, $font); goto Ys_8I; Ys_8I: } elseif ($sheet->getDefaultColumnDimension()->getWidth() != -1) { goto dK0GJ; qm0n6: $width = $defaultColumnDimension->getWidth(); goto QQpkx; QQpkx: $pixelWidth = PHPExcel_Shared_Drawing::cellDimensionToPixels($width, $font); goto FG3ok; dK0GJ: $defaultColumnDimension = $sheet->getDefaultColumnDimension(); goto qm0n6; FG3ok: } else { $pixelWidth = PHPExcel_Shared_Font::getDefaultColumnWidthByFont($font, true); } goto fHVDN; kD2iz: $font = $sheet->getParent()->getDefaultStyle()->getFont(); goto oBb2r; oBb2r: $columnDimensions = $sheet->getColumnDimensions(); goto p0_pd; PSHXE: } public static function sizeRow($sheet, $row = 1) { goto wUp3j; wUp3j: $font = $sheet->getParent()->getDefaultStyle()->getFont(); goto d1CDU; MZQy8: if (isset($rowDimensions[$row]) and $rowDimensions[$row]->getRowHeight() != -1) { goto DnT3G; QtKAk: $pixelRowHeight = (int) ceil(4 * $rowHeight / 3); goto P_OeG; DnT3G: $rowDimension = $rowDimensions[$row]; goto CH7tS; CH7tS: $rowHeight = $rowDimension->getRowHeight(); goto QtKAk; P_OeG: } elseif ($sheet->getDefaultRowDimension()->getRowHeight() != -1) { goto z0T0s; zSpLd: $pixelRowHeight = PHPExcel_Shared_Drawing::pointsToPixels($rowHeight); goto mZjuU; a82HF: $rowHeight = $defaultRowDimension->getRowHeight(); goto zSpLd; z0T0s: $defaultRowDimension = $sheet->getDefaultRowDimension(); goto a82HF; mZjuU: } else { $pointRowHeight = PHPExcel_Shared_Font::getDefaultRowHeightByFont($font); $pixelRowHeight = PHPExcel_Shared_Font::fontSizeToPixels($pointRowHeight); } goto Nxu6q; d1CDU: $rowDimensions = $sheet->getRowDimensions(); goto MZQy8; hmSre: return $effectivePixelRowHeight; goto YL1KH; Nxu6q: if (isset($rowDimensions[$row]) and !$rowDimensions[$row]->getVisible()) { $effectivePixelRowHeight = 0; } else { $effectivePixelRowHeight = $pixelRowHeight; } goto hmSre; YL1KH: } public static function getDistanceX(PHPExcel_Worksheet $sheet, $startColumn = "\x41", $startOffsetX = 0, $endColumn = "\x41", $endOffsetX = 0) { goto VWUHS; cS0CC: $startColumnIndex = PHPExcel_Cell::columnIndexFromString($startColumn) - 1; goto UIbih; xhhH3: $distanceX -= (int) floor(self::sizeCol($sheet, $startColumn) * $startOffsetX / 1024); goto Uv4EW; UIbih: $endColumnIndex = PHPExcel_Cell::columnIndexFromString($endColumn) - 1; goto N8fjB; Uv4EW: $distanceX -= (int) floor(self::sizeCol($sheet, $endColumn) * (1 - $endOffsetX / 1024)); goto rMyYS; rMyYS: return $distanceX; goto pzNCa; N8fjB: for ($i = $startColumnIndex; $i <= $endColumnIndex; ++$i) { $distanceX += self::sizeCol($sheet, PHPExcel_Cell::stringFromColumnIndex($i)); } goto xhhH3; VWUHS: $distanceX = 0; goto cS0CC; pzNCa: } public static function getDistanceY(PHPExcel_Worksheet $sheet, $startRow = 1, $startOffsetY = 0, $endRow = 1, $endOffsetY = 0) { goto WBh61; WBh61: $distanceY = 0; goto IqakK; juQaL: return $distanceY; goto HkBp_; nnbkK: $distanceY -= (int) floor(self::sizeRow($sheet, $startRow) * $startOffsetY / 256); goto UzHJS; UzHJS: $distanceY -= (int) floor(self::sizeRow($sheet, $endRow) * (1 - $endOffsetY / 256)); goto juQaL; IqakK: for ($row = $startRow; $row <= $endRow; ++$row) { $distanceY += self::sizeRow($sheet, $row); } goto nnbkK; HkBp_: } public static function oneAnchor2twoAnchor($sheet, $coordinates, $offsetX, $offsetY, $width, $height) { goto a6xXW; WC4p5: if ($y1 >= self::sizeRow($sheet, $row_start + 1)) { $y1 = 0; } goto sjQNT; BXGjB: $y1 = $y1 / self::sizeRow($sheet, $row_start + 1) * 256; goto jQHSo; nJQD_: $col_start = PHPExcel_Cell::columnIndexFromString($column) - 1; goto qQs3g; QAh8L: if (self::sizeCol($sheet, PHPExcel_Cell::stringFromColumnIndex($col_end)) == 0) { return; } goto BSYqH; qQs3g: $row_start = $row - 1; goto iSs57; wVgFT: $height = $height + $y1 - 1; goto F9NeI; m9Ddl: if (self::sizeRow($sheet, $row_end + 1) == 0) { return; } goto Udl4r; jQHSo: $x2 = ($width + 1) / self::sizeCol($sheet, PHPExcel_Cell::stringFromColumnIndex($col_end)) * 1024; goto OIb4l; iSs57: $x1 = $offsetX; goto CpDo7; Udl4r: $x1 = $x1 / self::sizeCol($sheet, PHPExcel_Cell::stringFromColumnIndex($col_start)) * 1024; goto BXGjB; Ntnik: if (self::sizeCol($sheet, PHPExcel_Cell::stringFromColumnIndex($col_start)) == 0) { return; } goto QAh8L; jgw3A: $endCoordinates = PHPExcel_Cell::stringFromColumnIndex($col_end) . ($row_end + 1); goto VYCbP; A1hNW: $startCoordinates = PHPExcel_Cell::stringFromColumnIndex($col_start) . ($row_start + 1); goto jgw3A; c4xlY: if ($x1 >= self::sizeCol($sheet, PHPExcel_Cell::stringFromColumnIndex($col_start))) { $x1 = 0; } goto WC4p5; Qyu0Y: $col_end = $col_start; goto qO5lG; OIb4l: $y2 = ($height + 1) / self::sizeRow($sheet, $row_end + 1) * 256; goto A1hNW; ZkchF: while ($height >= self::sizeRow($sheet, $row_end + 1)) { $height -= self::sizeRow($sheet, $row_end + 1); ++$row_end; } goto Ntnik; sjQNT: $width = $width + $x1 - 1; goto wVgFT; Nn4L3: return $twoAnchor; goto k40rR; CpDo7: $y1 = $offsetY; goto Qyu0Y; VYCbP: $twoAnchor = array("\163\x74\141\x72\x74\x43\x6f\x6f\162\x64\151\x6e\x61\164\145\163" => $startCoordinates, "\x73\x74\141\x72\164\x4f\x66\x66\163\145\x74\130" => $x1, "\x73\x74\x61\x72\164\117\146\x66\x73\145\x74\x59" => $y1, "\145\156\x64\x43\157\157\x72\x64\151\x6e\141\164\145\x73" => $endCoordinates, "\x65\156\144\x4f\146\x66\x73\145\164\130" => $x2, "\x65\x6e\x64\x4f\146\x66\x73\x65\x74\x59" => $y2); goto Nn4L3; F9NeI: while ($width >= self::sizeCol($sheet, PHPExcel_Cell::stringFromColumnIndex($col_end))) { $width -= self::sizeCol($sheet, PHPExcel_Cell::stringFromColumnIndex($col_end)); ++$col_end; } goto ZkchF; qO5lG: $row_end = $row_start; goto c4xlY; a6xXW: list($column, $row) = PHPExcel_Cell::coordinateFromString($coordinates); goto nJQD_; BSYqH: if (self::sizeRow($sheet, $row_start + 1) == 0) { return; } goto m9Ddl; k40rR: } }
