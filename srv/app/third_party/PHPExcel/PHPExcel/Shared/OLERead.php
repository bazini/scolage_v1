<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:04              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 defined("\x49\104\x45\x4e\124\111\106\111\105\x52\137\117\x4c\x45") || define("\x49\104\x45\x4e\124\x49\106\x49\x45\x52\x5f\x4f\114\x45", pack("\x43\x43\x43\103\x43\103\103\103", 0xd0, 0xcf, 0x11, 0xe0, 0xa1, 0xb1, 0x1a, 0xe1)); class PHPExcel_Shared_OLERead { private $data = ''; const IDENTIFIER_OLE = IDENTIFIER_OLE; const BIG_BLOCK_SIZE = 0x200; const SMALL_BLOCK_SIZE = 0x40; const PROPERTY_STORAGE_BLOCK_SIZE = 0x80; const SMALL_BLOCK_THRESHOLD = 0x1000; const NUM_BIG_BLOCK_DEPOT_BLOCKS_POS = 0x2c; const ROOT_START_BLOCK_POS = 0x30; const SMALL_BLOCK_DEPOT_BLOCK_POS = 0x3c; const EXTENSION_BLOCK_POS = 0x44; const NUM_EXTENSION_BLOCK_POS = 0x48; const BIG_BLOCK_DEPOT_BLOCKS_POS = 0x4c; const SIZE_OF_NAME_POS = 0x40; const TYPE_POS = 0x42; const START_BLOCK_POS = 0x74; const SIZE_POS = 0x78; public $wrkbook = null; public $summaryInformation = null; public $documentSummaryInformation = null; public function read($sFileName) { goto WbcaP; jJe_x: while ($sbdBlock != -2) { $pos = ($sbdBlock + 1) * self::BIG_BLOCK_SIZE; $this->smallBlockChain .= substr($this->data, $pos, 4 * $bbs); $pos += 4 * $bbs; $sbdBlock = self::getInt4d($this->bigBlockChain, $sbdBlock * 4); } goto O1t6r; gnynQ: $this->entry = $this->_readData($block); goto olyPz; n1dcV: $this->bigBlockChain = ''; goto qZu6V; giZYu: $this->numExtensionBlocks = self::getInt4d($this->data, self::NUM_EXTENSION_BLOCK_POS); goto DV9LN; olyPz: $this->readPropertySets(); goto eDzFp; yeq33: for ($i = 0; $i < $this->numBigBlockDepotBlocks; ++$i) { $pos = ($bigBlockDepotBlocks[$i] + 1) * self::BIG_BLOCK_SIZE; $this->bigBlockChain .= substr($this->data, $pos, 4 * $bbs); $pos += 4 * $bbs; } goto AtCfn; ovXUt: $this->data = file_get_contents($sFileName, false, null, 0, 8); goto beCAe; WbcaP: if (!is_readable($sFileName)) { throw new PHPExcel_Reader_Exception("\x43\x6f\165\154\144\40\x6e\157\x74\40\x6f\160\x65\x6e\x20" . $sFileName . "\40\x66\157\162\40\x72\x65\141\144\151\156\147\x21\40\106\151\x6c\145\40\144\157\145\163\x20\x6e\157\x74\40\145\x78\151\163\164\54\x20\x6f\x72\40\x69\164\x20\x69\163\40\x6e\x6f\164\x20\162\x65\141\x64\141\x62\154\x65\x2e"); } goto ovXUt; HA0PH: for ($i = 0; $i < $bbdBlocks; ++$i) { $bigBlockDepotBlocks[$i] = self::getInt4d($this->data, $pos); $pos += 4; } goto R063E; AtCfn: $pos = 0; goto Rbc_n; qZu6V: $bbs = self::BIG_BLOCK_SIZE / 4; goto yeq33; O1t6r: $block = $this->rootStartBlock; goto gnynQ; Bxa96: $this->sbdStartBlock = self::getInt4d($this->data, self::SMALL_BLOCK_DEPOT_BLOCK_POS); goto SFJjK; SFJjK: $this->extensionBlock = self::getInt4d($this->data, self::EXTENSION_BLOCK_POS); goto giZYu; R063E: for ($j = 0; $j < $this->numExtensionBlocks; ++$j) { $pos = ($this->extensionBlock + 1) * self::BIG_BLOCK_SIZE; $blocksToRead = min($this->numBigBlockDepotBlocks - $bbdBlocks, self::BIG_BLOCK_SIZE / 4 - 1); for ($i = $bbdBlocks; $i < $bbdBlocks + $blocksToRead; ++$i) { $bigBlockDepotBlocks[$i] = self::getInt4d($this->data, $pos); $pos += 4; } $bbdBlocks += $blocksToRead; if ($bbdBlocks < $this->numBigBlockDepotBlocks) { $this->extensionBlock = self::getInt4d($this->data, $pos); } } goto uHVyb; rR041: if ($this->numExtensionBlocks != 0) { $bbdBlocks = (self::BIG_BLOCK_SIZE - self::BIG_BLOCK_DEPOT_BLOCKS_POS) / 4; } goto HA0PH; tipPM: $this->rootStartBlock = self::getInt4d($this->data, self::ROOT_START_BLOCK_POS); goto Bxa96; E1PJX: $bbdBlocks = $this->numBigBlockDepotBlocks; goto rR041; NCtAO: $this->numBigBlockDepotBlocks = self::getInt4d($this->data, self::NUM_BIG_BLOCK_DEPOT_BLOCKS_POS); goto tipPM; ComrM: $this->smallBlockChain = ''; goto jJe_x; uHVyb: $pos = 0; goto n1dcV; nAZzt: $pos = self::BIG_BLOCK_DEPOT_BLOCKS_POS; goto E1PJX; beCAe: if ($this->data != self::IDENTIFIER_OLE) { throw new PHPExcel_Reader_Exception("\x54\x68\x65\40\146\151\154\x65\x6e\141\155\145\40" . $sFileName . "\40\151\163\40\x6e\157\x74\x20\x72\145\143\157\x67\x6e\x69\x73\x65\x64\x20\x61\x73\x20\141\x6e\x20\117\x4c\x45\40\146\x69\x6c\145"); } goto QoNOG; DV9LN: $bigBlockDepotBlocks = array(); goto nAZzt; Rbc_n: $sbdBlock = $this->sbdStartBlock; goto ComrM; QoNOG: $this->data = file_get_contents($sFileName); goto NCtAO; eDzFp: } public function getStream($stream) { goto RGY7j; acklr: if ($this->props[$stream]["\x73\151\172\145"] < self::SMALL_BLOCK_THRESHOLD) { goto aigSH; lPfHn: $block = $this->props[$stream]["\163\x74\141\x72\164\x42\154\157\143\153"]; goto EZpib; aigSH: $rootdata = $this->_readData($this->props[$this->rootentry]["\x73\164\x61\x72\x74\102\154\x6f\x63\153"]); goto lPfHn; EZpib: while ($block != -2) { $pos = $block * self::SMALL_BLOCK_SIZE; $streamData .= substr($rootdata, $pos, self::SMALL_BLOCK_SIZE); $block = self::getInt4d($this->smallBlockChain, $block * 4); } goto S6oGW; S6oGW: return $streamData; goto Y4aBW; Y4aBW: } else { goto VN2e9; Us0SF: return $streamData; goto bCRfV; Wt08h: while ($block != -2) { $pos = ($block + 1) * self::BIG_BLOCK_SIZE; $streamData .= substr($this->data, $pos, self::BIG_BLOCK_SIZE); $block = self::getInt4d($this->bigBlockChain, $block * 4); } goto Us0SF; oiDg4: if ($this->props[$stream]["\163\x69\x7a\x65"] % self::BIG_BLOCK_SIZE != 0) { ++$numBlocks; } goto rMzZr; VN2e9: $numBlocks = $this->props[$stream]["\x73\x69\x7a\x65"] / self::BIG_BLOCK_SIZE; goto oiDg4; rMzZr: if ($numBlocks == 0) { return ''; } goto ABHn3; ABHn3: $block = $this->props[$stream]["\x73\x74\141\162\x74\x42\x6c\x6f\x63\153"]; goto Wt08h; bCRfV: } goto E017t; gKz7Q: $streamData = ''; goto acklr; RGY7j: if ($stream === null) { return null; } goto gKz7Q; E017t: } private function _readData($bl) { goto LfWjv; y56TJ: return $data; goto QDFRD; LfWjv: $block = $bl; goto KbaCo; bmp35: while ($block != -2) { $pos = ($block + 1) * self::BIG_BLOCK_SIZE; $data .= substr($this->data, $pos, self::BIG_BLOCK_SIZE); $block = self::getInt4d($this->bigBlockChain, $block * 4); } goto y56TJ; KbaCo: $data = ''; goto bmp35; QDFRD: } private function readPropertySets() { goto ayw28; ayw28: $offset = 0; goto t3D3F; t3D3F: $entryLen = strlen($this->entry); goto KT95h; KT95h: while ($offset < $entryLen) { $d = substr($this->entry, $offset, self::PROPERTY_STORAGE_BLOCK_SIZE); $nameSize = ord($d[self::SIZE_OF_NAME_POS]) | ord($d[self::SIZE_OF_NAME_POS + 1]) << 8; $type = ord($d[self::TYPE_POS]); $startBlock = self::getInt4d($d, self::START_BLOCK_POS); $size = self::getInt4d($d, self::SIZE_POS); $name = str_replace("\0", '', substr($d, 0, $nameSize)); $this->props[] = array("\x6e\141\x6d\x65" => $name, "\x74\171\160\145" => $type, "\163\164\x61\x72\164\x42\x6c\x6f\x63\153" => $startBlock, "\163\x69\172\x65" => $size); $upName = strtoupper($name); if ($upName === "\127\x4f\122\x4b\102\117\117\x4b" || $upName === "\x42\117\117\x4b") { $this->wrkbook = count($this->props) - 1; } elseif ($upName === "\122\117\x4f\x54\x20\105\116\124\122\x59" || $upName === "\122") { $this->rootentry = count($this->props) - 1; } if ($name == chr(5) . "\123\x75\155\155\x61\162\x79\111\x6e\x66\x6f\x72\x6d\141\164\x69\157\x6e") { $this->summaryInformation = count($this->props) - 1; } if ($name == chr(5) . "\x44\157\143\x75\155\145\156\x74\123\x75\x6d\155\x61\x72\171\x49\x6e\146\x6f\162\x6d\141\x74\151\157\156") { $this->documentSummaryInformation = count($this->props) - 1; } $offset += self::PROPERTY_STORAGE_BLOCK_SIZE; } goto ZmqQU; ZmqQU: } private static function getInt4d($data, $pos) { goto eWT8K; eWT8K: $_or_24 = ord($data[$pos + 3]); goto Sy_0T; oISPS: return ord($data[$pos]) | ord($data[$pos + 1]) << 8 | ord($data[$pos + 2]) << 16 | $_ord_24; goto Gh1xG; Sy_0T: if ($_or_24 >= 128) { $_ord_24 = -abs(256 - $_or_24 << 24); } else { $_ord_24 = ($_or_24 & 127) << 24; } goto oISPS; Gh1xG: } }
