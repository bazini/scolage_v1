<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:06              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Cell { const DEFAULT_RANGE = "\x41\x31\x3a\x41\x31"; private static $valueBinder; private $value; private $calculatedValue; private $dataType; private $parent; private $xfIndex = 0; private $formulaAttributes; public function notifyCacheController() { $this->parent->updateCacheData($this); return $this; } public function detach() { $this->parent = null; } public function attach(PHPExcel_CachedObjectStorage_CacheBase $parent) { $this->parent = $parent; } public function __construct($pValue = null, $pDataType = null, PHPExcel_Worksheet $pSheet = null) { goto QUJQf; QUJQf: $this->value = $pValue; goto CO7wJ; CO7wJ: $this->parent = $pSheet->getCellCacheController(); goto D4hY0; D4hY0: if ($pDataType !== null) { if ($pDataType == PHPExcel_Cell_DataType::TYPE_STRING2) { $pDataType = PHPExcel_Cell_DataType::TYPE_STRING; } $this->dataType = $pDataType; } elseif (!self::getValueBinder()->bindValue($this, $pValue)) { throw new PHPExcel_Exception("\x56\x61\154\165\x65\x20\x63\157\165\154\x64\40\156\x6f\164\40\x62\x65\x20\142\x6f\165\x6e\x64\40\x74\157\40\x63\x65\x6c\154\56"); } goto hR6jL; hR6jL: } public function getColumn() { return $this->parent->getCurrentColumn(); } public function getRow() { return $this->parent->getCurrentRow(); } public function getCoordinate() { return $this->parent->getCurrentAddress(); } public function getValue() { return $this->value; } public function getFormattedValue() { return (string) PHPExcel_Style_NumberFormat::toFormattedString($this->getCalculatedValue(), $this->getStyle()->getNumberFormat()->getFormatCode()); } public function setValue($pValue = null) { if (!self::getValueBinder()->bindValue($this, $pValue)) { throw new PHPExcel_Exception("\126\141\154\x75\145\x20\143\x6f\165\x6c\x64\x20\x6e\x6f\164\40\142\145\x20\x62\x6f\165\x6e\x64\x20\164\157\40\143\x65\x6c\x6c\x2e"); } return $this; } public function setValueExplicit($pValue = null, $pDataType = PHPExcel_Cell_DataType::TYPE_STRING) { goto ui598; Dutej: $this->dataType = $pDataType; goto tmhxc; tmhxc: return $this->notifyCacheController(); goto DRr_0; ui598: switch ($pDataType) { case PHPExcel_Cell_DataType::TYPE_NULL: $this->value = $pValue; break; case PHPExcel_Cell_DataType::TYPE_STRING2: $pDataType = PHPExcel_Cell_DataType::TYPE_STRING; case PHPExcel_Cell_DataType::TYPE_STRING: case PHPExcel_Cell_DataType::TYPE_INLINE: $this->value = PHPExcel_Cell_DataType::checkString($pValue); break; case PHPExcel_Cell_DataType::TYPE_NUMERIC: $this->value = (float) $pValue; break; case PHPExcel_Cell_DataType::TYPE_FORMULA: $this->value = (string) $pValue; break; case PHPExcel_Cell_DataType::TYPE_BOOL: $this->value = (bool) $pValue; break; case PHPExcel_Cell_DataType::TYPE_ERROR: $this->value = PHPExcel_Cell_DataType::checkErrorCode($pValue); break; default: throw new PHPExcel_Exception("\111\156\166\x61\154\151\144\x20\144\141\x74\x61\x74\171\160\145\x3a\x20" . $pDataType); break; } goto Dutej; DRr_0: } public function getCalculatedValue($resetLog = true) { if ($this->dataType == PHPExcel_Cell_DataType::TYPE_FORMULA) { goto lGxap; t8j5r: if ($result === "\x23\x4e\157\164\40\x59\145\x74\40\111\x6d\160\x6c\145\x6d\x65\x6e\x74\x65\x64") { return $this->calculatedValue; } goto b9Z9w; b9Z9w: return $result; goto hPdW1; lGxap: try { $result = PHPExcel_Calculation::getInstance($this->getWorksheet()->getParent())->calculateCellValue($this, $resetLog); if (is_array($result)) { while (is_array($result)) { $result = array_pop($result); } } } catch (PHPExcel_Exception $ex) { goto JhFg9; J1F7g: $result = "\43\x4e\x2f\101"; goto iyvxo; JhFg9: if ($ex->getMessage() === "\125\x6e\141\142\154\145\x20\x74\157\x20\141\x63\143\x65\x73\163\40\x45\170\164\x65\162\156\x61\154\40\127\x6f\x72\x6b\142\x6f\x6f\153" && $this->calculatedValue !== null) { return $this->calculatedValue; } goto J1F7g; iyvxo: throw new PHPExcel_Calculation_Exception($this->getWorksheet()->getTitle() . "\x21" . $this->getCoordinate() . "\x20\x2d\76\x20" . $ex->getMessage()); goto W6vJc; W6vJc: } goto t8j5r; hPdW1: } elseif ($this->value instanceof PHPExcel_RichText) { return $this->value->getPlainText(); } return $this->value; } public function setCalculatedValue($pValue = null) { if ($pValue !== null) { $this->calculatedValue = is_numeric($pValue) ? (float) $pValue : $pValue; } return $this->notifyCacheController(); } public function getOldCalculatedValue() { return $this->calculatedValue; } public function getDataType() { return $this->dataType; } public function setDataType($pDataType = PHPExcel_Cell_DataType::TYPE_STRING) { goto NG9Xl; NG9Xl: if ($pDataType == PHPExcel_Cell_DataType::TYPE_STRING2) { $pDataType = PHPExcel_Cell_DataType::TYPE_STRING; } goto AvXxE; dqbcH: return $this->notifyCacheController(); goto TS5xF; AvXxE: $this->dataType = $pDataType; goto dqbcH; TS5xF: } public function isFormula() { return $this->dataType == PHPExcel_Cell_DataType::TYPE_FORMULA; } public function hasDataValidation() { if (!isset($this->parent)) { throw new PHPExcel_Exception("\x43\x61\156\x6e\157\x74\40\x63\x68\x65\x63\x6b\40\x66\x6f\162\x20\144\x61\164\141\x20\x76\x61\x6c\x69\x64\x61\164\151\157\x6e\40\167\x68\145\156\40\143\x65\154\154\40\x69\163\x20\156\x6f\164\40\x62\157\165\x6e\144\x20\164\x6f\40\x61\x20\x77\157\x72\x6b\x73\150\x65\x65\x74"); } return $this->getWorksheet()->dataValidationExists($this->getCoordinate()); } public function getDataValidation() { if (!isset($this->parent)) { throw new PHPExcel_Exception("\x43\x61\x6e\x6e\x6f\164\x20\147\x65\x74\x20\144\141\x74\x61\40\x76\141\154\151\144\141\x74\151\x6f\x6e\x20\146\x6f\162\x20\143\x65\154\x6c\40\164\x68\141\x74\x20\x69\163\x20\x6e\x6f\x74\x20\x62\157\x75\x6e\x64\40\x74\x6f\x20\x61\40\x77\x6f\162\153\163\150\x65\145\164"); } return $this->getWorksheet()->getDataValidation($this->getCoordinate()); } public function setDataValidation(PHPExcel_Cell_DataValidation $pDataValidation = null) { goto sAQrS; byUiU: $this->getWorksheet()->setDataValidation($this->getCoordinate(), $pDataValidation); goto zXdBx; sAQrS: if (!isset($this->parent)) { throw new PHPExcel_Exception("\x43\141\x6e\156\157\x74\x20\163\145\x74\40\144\x61\164\x61\x20\x76\x61\154\x69\x64\x61\164\x69\x6f\156\40\x66\x6f\x72\40\143\x65\x6c\154\x20\x74\150\141\x74\x20\x69\x73\40\x6e\x6f\164\x20\x62\x6f\165\156\x64\x20\164\157\40\x61\40\x77\x6f\162\153\163\x68\x65\x65\164"); } goto byUiU; zXdBx: return $this->notifyCacheController(); goto bUX_l; bUX_l: } public function hasHyperlink() { if (!isset($this->parent)) { throw new PHPExcel_Exception("\x43\x61\x6e\156\157\164\40\143\150\x65\x63\x6b\x20\146\x6f\162\x20\150\171\x70\145\162\154\x69\156\x6b\40\x77\150\x65\x6e\40\x63\145\x6c\x6c\40\x69\x73\x20\x6e\157\x74\x20\x62\x6f\165\156\x64\40\164\x6f\40\141\40\x77\x6f\162\x6b\163\150\145\145\164"); } return $this->getWorksheet()->hyperlinkExists($this->getCoordinate()); } public function getHyperlink() { if (!isset($this->parent)) { throw new PHPExcel_Exception("\103\x61\156\x6e\157\x74\x20\x67\x65\x74\40\150\x79\x70\x65\x72\154\x69\156\x6b\x20\146\x6f\x72\x20\143\x65\154\154\40\164\150\141\164\40\151\x73\40\156\x6f\x74\40\142\157\165\x6e\144\x20\x74\x6f\x20\x61\x20\x77\x6f\x72\153\x73\x68\145\x65\x74"); } return $this->getWorksheet()->getHyperlink($this->getCoordinate()); } public function setHyperlink(PHPExcel_Cell_Hyperlink $pHyperlink = null) { goto sKHaD; sKHaD: if (!isset($this->parent)) { throw new PHPExcel_Exception("\x43\141\156\x6e\x6f\x74\x20\163\x65\x74\40\150\171\x70\x65\162\x6c\151\156\x6b\x20\146\157\162\x20\143\x65\154\154\40\164\x68\x61\164\x20\151\x73\x20\x6e\x6f\x74\x20\142\157\x75\x6e\x64\40\x74\157\40\141\x20\x77\157\162\x6b\x73\x68\145\145\164"); } goto w2jeA; dNoZL: return $this->notifyCacheController(); goto nDy4W; w2jeA: $this->getWorksheet()->setHyperlink($this->getCoordinate(), $pHyperlink); goto dNoZL; nDy4W: } public function getParent() { return $this->parent; } public function getWorksheet() { return $this->parent->getParent(); } public function isInMergeRange() { return (bool) $this->getMergeRange(); } public function isMergeRangeValueCell() { if ($mergeRange = $this->getMergeRange()) { goto zRVNM; lAN4S: list($startCell) = $mergeRange[0]; goto K8Xob; zRVNM: $mergeRange = PHPExcel_Cell::splitRange($mergeRange); goto lAN4S; K8Xob: if ($this->getCoordinate() === $startCell) { return true; } goto svSlA; svSlA: } return false; } public function getMergeRange() { foreach ($this->getWorksheet()->getMergeCells() as $mergeRange) { if ($this->isInRange($mergeRange)) { return $mergeRange; } } return false; } public function getStyle() { return $this->getWorksheet()->getStyle($this->getCoordinate()); } public function rebindParent(PHPExcel_Worksheet $parent) { $this->parent = $parent->getCellCacheController(); return $this->notifyCacheController(); } public function isInRange($pRange = "\101\61\x3a\x41\x31") { goto NDojX; NDojX: list($rangeStart, $rangeEnd) = self::rangeBoundaries($pRange); goto Uq48F; Uq48F: $myColumn = self::columnIndexFromString($this->getColumn()); goto pJS2I; pJS2I: $myRow = $this->getRow(); goto YsDXm; YsDXm: return $rangeStart[0] <= $myColumn && $rangeEnd[0] >= $myColumn && $rangeStart[1] <= $myRow && $rangeEnd[1] >= $myRow; goto iXiyT; iXiyT: } public static function coordinateFromString($pCoordinateString = "\x41\x31") { if (preg_match("\x2f\x5e\50\133\x24\135\x3f\133\101\55\x5a\x5d\173\61\x2c\63\175\x29\x28\133\x24\135\77\134\x64\x7b\61\x2c\x37\175\x29\x24\57", $pCoordinateString, $matches)) { return array($matches[1], $matches[2]); } elseif (strpos($pCoordinateString, "\72") !== false || strpos($pCoordinateString, "\54") !== false) { throw new PHPExcel_Exception("\x43\145\154\154\40\x63\157\x6f\x72\144\151\x6e\141\x74\x65\x20\x73\x74\x72\x69\x6e\147\x20\x63\x61\x6e\40\x6e\157\x74\40\142\145\40\x61\x20\162\x61\x6e\147\145\x20\x6f\146\40\x63\x65\154\x6c\x73"); } elseif ($pCoordinateString == '') { throw new PHPExcel_Exception("\x43\145\154\154\40\143\157\x6f\x72\144\151\156\x61\164\x65\40\143\x61\156\x20\156\157\x74\x20\x62\x65\40\172\x65\162\x6f\55\154\145\x6e\147\x74\x68\40\163\164\162\x69\x6e\x67"); } throw new PHPExcel_Exception("\x49\156\166\x61\x6c\x69\x64\40\x63\x65\x6c\x6c\x20\x63\157\x6f\162\144\x69\x6e\141\x74\x65\40" . $pCoordinateString); } public static function absoluteReference($pCoordinateString = "\101\61") { if (strpos($pCoordinateString, "\72") === false && strpos($pCoordinateString, "\54") === false) { goto cY3yB; FvZQ5: $cellAddress = explode("\41", $pCoordinateString); goto dSYmN; C41nV: if (ctype_digit($pCoordinateString)) { return $worksheet . "\44" . $pCoordinateString; } elseif (ctype_alpha($pCoordinateString)) { return $worksheet . "\x24" . strtoupper($pCoordinateString); } goto F9mZ6; sN2DB: if ($worksheet > '') { $worksheet .= "\x21"; } goto C41nV; dSYmN: if (count($cellAddress) > 1) { list($worksheet, $pCoordinateString) = $cellAddress; } goto sN2DB; cY3yB: $worksheet = ''; goto FvZQ5; F9mZ6: return $worksheet . self::absoluteCoordinate($pCoordinateString); goto kpyEQ; kpyEQ: } throw new PHPExcel_Exception("\x43\x65\x6c\x6c\40\x63\x6f\x6f\162\144\x69\156\x61\x74\x65\x20\163\164\x72\151\x6e\147\40\143\x61\156\x20\156\157\x74\x20\142\x65\x20\x61\40\162\141\156\147\145\x20\x6f\146\x20\x63\x65\154\x6c\163"); } public static function absoluteCoordinate($pCoordinateString = "\x41\x31") { if (strpos($pCoordinateString, "\x3a") === false && strpos($pCoordinateString, "\x2c") === false) { goto SbS21; GChk5: $column = ltrim($column, "\x24"); goto hq9iO; leQJ8: if (count($cellAddress) > 1) { list($worksheet, $pCoordinateString) = $cellAddress; } goto vmkG7; hq9iO: $row = ltrim($row, "\x24"); goto U2pAL; rJF0j: $cellAddress = explode("\41", $pCoordinateString); goto leQJ8; U2pAL: return $worksheet . "\x24" . $column . "\44" . $row; goto QKi0E; SbS21: $worksheet = ''; goto rJF0j; Bymdt: list($column, $row) = self::coordinateFromString($pCoordinateString); goto GChk5; vmkG7: if ($worksheet > '') { $worksheet .= "\41"; } goto Bymdt; QKi0E: } throw new PHPExcel_Exception("\x43\x65\154\154\x20\143\157\157\x72\x64\151\156\x61\x74\x65\x20\x73\164\162\x69\156\x67\x20\143\141\x6e\40\x6e\157\164\x20\x62\145\x20\x61\40\x72\x61\156\x67\145\x20\x6f\x66\x20\143\145\154\154\x73"); } public static function splitRange($pRange = "\101\61\x3a\101\61") { goto dQJZc; HLMsz: $exploded = explode("\x2c", $pRange); goto Vsenq; ZQlTi: for ($i = 0; $i < $counter; ++$i) { $exploded[$i] = explode("\x3a", $exploded[$i]); } goto y00W4; y00W4: return $exploded; goto JsUch; Vsenq: $counter = count($exploded); goto ZQlTi; dQJZc: if (empty($pRange)) { $pRange = self::DEFAULT_RANGE; } goto HLMsz; JsUch: } public static function buildRange($pRange) { goto wtOhq; pDNHK: for ($i = 0; $i < $counter; ++$i) { $pRange[$i] = implode("\x3a", $pRange[$i]); } goto vXqL6; sNrKF: $counter = count($pRange); goto pDNHK; vXqL6: $imploded = implode("\54", $pRange); goto p547w; p547w: return $imploded; goto DNEkv; wtOhq: if (!is_array($pRange) || empty($pRange) || !is_array($pRange[0])) { throw new PHPExcel_Exception("\x52\x61\156\x67\145\x20\x64\157\145\163\x20\156\x6f\164\40\143\x6f\156\164\x61\151\156\x20\141\156\x79\x20\x69\x6e\x66\x6f\162\x6d\x61\x74\151\x6f\x6e"); } goto IfeM9; IfeM9: $imploded = array(); goto sNrKF; DNEkv: } public static function rangeBoundaries($pRange = "\101\61\72\101\61") { goto pCgfZ; vIC2g: $pRange = strtoupper($pRange); goto yHN7S; ZnGiT: return array($rangeStart, $rangeEnd); goto TJyMZ; GPLr_: $rangeStart = self::coordinateFromString($rangeA); goto TIX3O; pCgfZ: if (empty($pRange)) { $pRange = self::DEFAULT_RANGE; } goto vIC2g; OvErU: $rangeStart[0] = self::columnIndexFromString($rangeStart[0]); goto fkt6k; yHN7S: if (strpos($pRange, "\72") === false) { $rangeA = $rangeB = $pRange; } else { list($rangeA, $rangeB) = explode("\x3a", $pRange); } goto GPLr_; TIX3O: $rangeEnd = self::coordinateFromString($rangeB); goto OvErU; fkt6k: $rangeEnd[0] = self::columnIndexFromString($rangeEnd[0]); goto ZnGiT; TJyMZ: } public static function rangeDimension($pRange = "\x41\61\x3a\x41\x31") { list($rangeStart, $rangeEnd) = self::rangeBoundaries($pRange); return array($rangeEnd[0] - $rangeStart[0] + 1, $rangeEnd[1] - $rangeStart[1] + 1); } public static function getRangeBoundaries($pRange = "\x41\61\72\x41\x31") { goto XB9BV; Fxf9v: return array(self::coordinateFromString($rangeA), self::coordinateFromString($rangeB)); goto ZMQyX; XB9BV: if (empty($pRange)) { $pRange = self::DEFAULT_RANGE; } goto OfvZm; fQpZZ: if (strpos($pRange, "\72") === false) { $rangeA = $rangeB = $pRange; } else { list($rangeA, $rangeB) = explode("\x3a", $pRange); } goto Fxf9v; OfvZm: $pRange = strtoupper($pRange); goto fQpZZ; ZMQyX: } public static function columnIndexFromString($pString = "\x41") { goto sOmwH; gzJXm: if (isset($_indexCache[$pString])) { return $_indexCache[$pString]; } goto Od3WI; cVzOU: throw new PHPExcel_Exception("\x43\157\x6c\x75\155\x6e\40\x73\x74\x72\x69\x6e\147\40\151\x6e\x64\145\170\40\x63\141\x6e\40\156\157\164\40\x62\x65\40" . (isset($pString[0]) ? "\x6c\157\156\147\x65\x72\x20\164\150\141\x6e\x20\63\40\143\x68\x61\162\x61\143\x74\145\x72\x73" : "\145\x6d\160\x74\x79")); goto hGMIb; sOmwH: static $_indexCache = array(); goto gzJXm; Od3WI: static $_columnLookup = array("\x41" => 1, "\x42" => 2, "\103" => 3, "\x44" => 4, "\105" => 5, "\106" => 6, "\x47" => 7, "\110" => 8, "\111" => 9, "\x4a" => 10, "\113" => 11, "\x4c" => 12, "\115" => 13, "\x4e" => 14, "\117" => 15, "\120" => 16, "\x51" => 17, "\x52" => 18, "\x53" => 19, "\x54" => 20, "\x55" => 21, "\x56" => 22, "\x57" => 23, "\130" => 24, "\131" => 25, "\132" => 26, "\x61" => 1, "\x62" => 2, "\143" => 3, "\144" => 4, "\x65" => 5, "\x66" => 6, "\147" => 7, "\x68" => 8, "\151" => 9, "\152" => 10, "\x6b" => 11, "\x6c" => 12, "\x6d" => 13, "\156" => 14, "\157" => 15, "\x70" => 16, "\x71" => 17, "\162" => 18, "\x73" => 19, "\x74" => 20, "\x75" => 21, "\x76" => 22, "\x77" => 23, "\170" => 24, "\171" => 25, "\172" => 26); goto rq7b2; rq7b2: if (isset($pString[0])) { if (!isset($pString[1])) { $_indexCache[$pString] = $_columnLookup[$pString]; return $_indexCache[$pString]; } elseif (!isset($pString[2])) { $_indexCache[$pString] = $_columnLookup[$pString[0]] * 26 + $_columnLookup[$pString[1]]; return $_indexCache[$pString]; } elseif (!isset($pString[3])) { $_indexCache[$pString] = $_columnLookup[$pString[0]] * 676 + $_columnLookup[$pString[1]] * 26 + $_columnLookup[$pString[2]]; return $_indexCache[$pString]; } } goto cVzOU; hGMIb: } public static function stringFromColumnIndex($pColumnIndex = 0) { goto DuxC3; Mp8Ur: return $_indexCache[$pColumnIndex]; goto A3IO6; DuxC3: static $_indexCache = array(); goto uJ4lq; uJ4lq: if (!isset($_indexCache[$pColumnIndex])) { if ($pColumnIndex < 26) { $_indexCache[$pColumnIndex] = chr(65 + $pColumnIndex); } elseif ($pColumnIndex < 702) { $_indexCache[$pColumnIndex] = chr(64 + $pColumnIndex / 26) . chr(65 + $pColumnIndex % 26); } else { $_indexCache[$pColumnIndex] = chr(64 + ($pColumnIndex - 26) / 676) . chr(65 + ($pColumnIndex - 26) % 676 / 26) . chr(65 + $pColumnIndex % 26); } } goto Mp8Ur; A3IO6: } public static function extractAllCellReferencesInRange($pRange = "\x41\61") { goto ocMvx; IXE0n: foreach ($cellBlocks as $cellBlock) { goto JMWZP; JMWZP: if (strpos($cellBlock, "\72") === false && strpos($cellBlock, "\x2c") === false) { $returnValue[] = $cellBlock; continue; } goto jxHJd; yhMgh: foreach ($ranges as $range) { goto XKgHf; O4nyh: $currentCol = $startCol; goto SZJYV; zXo0N: while ($currentCol != $endCol) { while ($currentRow <= $endRow) { $returnValue[] = $currentCol . $currentRow; ++$currentRow; } ++$currentCol; $currentRow = $startRow; } goto VYq6y; SZJYV: $currentRow = $startRow; goto zXo0N; fS1HI: ++$endCol; goto O4nyh; BgBdJ: sscanf($rangeEnd, "\x25\x5b\101\x2d\132\x5d\45\144", $endCol, $endRow); goto fS1HI; R1GA8: sscanf($rangeStart, "\45\x5b\x41\55\x5a\135\x25\x64", $startCol, $startRow); goto BgBdJ; XKgHf: if (!isset($range[1])) { $returnValue[] = $range[0]; continue; } goto KIJVn; KIJVn: list($rangeStart, $rangeEnd) = $range; goto R1GA8; VYq6y: } goto LfIy3; jxHJd: $ranges = self::splitRange($cellBlock); goto yhMgh; LfIy3: } goto BNGDa; aNAzQ: ksort($sortKeys); goto KwtPg; BNGDa: $sortKeys = array(); goto o5ers; M96TI: $cellBlocks = explode("\x20", str_replace("\44", '', strtoupper($pRange))); goto IXE0n; o5ers: foreach (array_unique($returnValue) as $coord) { sscanf($coord, "\45\x5b\101\x2d\x5a\135\x25\x64", $column, $row); $sortKeys[sprintf("\x25\x33\x73\45\x30\71\x64", $column, $row)] = $coord; } goto aNAzQ; ocMvx: $returnValue = array(); goto M96TI; KwtPg: return array_values($sortKeys); goto lKsUK; lKsUK: } public static function compareCells(PHPExcel_Cell $a, PHPExcel_Cell $b) { if ($a->getRow() < $b->getRow()) { return -1; } elseif ($a->getRow() > $b->getRow()) { return 1; } elseif (self::columnIndexFromString($a->getColumn()) < self::columnIndexFromString($b->getColumn())) { return -1; } else { return 1; } } public static function getValueBinder() { if (self::$valueBinder === null) { self::$valueBinder = new PHPExcel_Cell_DefaultValueBinder(); } return self::$valueBinder; } public static function setValueBinder(PHPExcel_Cell_IValueBinder $binder = null) { if ($binder === null) { throw new PHPExcel_Exception("\101\40\120\x48\120\x45\x78\x63\145\x6c\137\103\x65\154\154\x5f\x49\x56\141\x6c\x75\145\102\151\156\x64\145\162\x20\151\x73\40\162\145\x71\x75\151\x72\x65\144\40\146\157\x72\40\x50\110\x50\105\170\x63\x65\x6c\40\164\x6f\x20\x66\165\156\143\x74\x69\157\x6e\x20\x63\x6f\x72\162\145\143\x74\154\171\56"); } self::$valueBinder = $binder; } public function __clone() { $vars = get_object_vars($this); foreach ($vars as $key => $value) { if (is_object($value) && $key != "\x70\141\x72\x65\x6e\x74") { $this->{$key} = clone $value; } else { $this->{$key} = $value; } } } public function getXfIndex() { return $this->xfIndex; } public function setXfIndex($pValue = 0) { $this->xfIndex = $pValue; return $this->notifyCacheController(); } public function setFormulaAttributes($pAttributes) { $this->formulaAttributes = $pAttributes; return $this; } public function getFormulaAttributes() { return $this->formulaAttributes; } public function __toString() { return (string) $this->getValue(); } }
