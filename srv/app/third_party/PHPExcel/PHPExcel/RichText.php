<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:07              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_RichText implements PHPExcel_IComparable { private $richTextElements; public function __construct(PHPExcel_Cell $pCell = null) { $this->richTextElements = array(); if ($pCell !== null) { if ($pCell->getValue() != '') { goto qrL3p; qrL3p: $objRun = new PHPExcel_RichText_Run($pCell->getValue()); goto Npmbw; inC0v: $this->addText($objRun); goto tdCpF; Npmbw: $objRun->setFont(clone $pCell->getParent()->getStyle($pCell->getCoordinate())->getFont()); goto inC0v; tdCpF: } $pCell->setValueExplicit($this, PHPExcel_Cell_DataType::TYPE_STRING); } } public function addText(PHPExcel_RichText_ITextElement $pText = null) { $this->richTextElements[] = $pText; return $this; } public function createText($pText = '') { goto kvzwX; ukhcH: $this->addText($objText); goto krpoW; krpoW: return $objText; goto r6dkr; kvzwX: $objText = new PHPExcel_RichText_TextElement($pText); goto ukhcH; r6dkr: } public function createTextRun($pText = '') { goto av1uI; av1uI: $objText = new PHPExcel_RichText_Run($pText); goto NLm_N; m9XWm: return $objText; goto Xsn0f; NLm_N: $this->addText($objText); goto m9XWm; Xsn0f: } public function getPlainText() { goto yAXcw; yAXcw: $returnValue = ''; goto YMIdB; d0Qm2: return $returnValue; goto v0kV1; YMIdB: foreach ($this->richTextElements as $text) { $returnValue .= $text->getText(); } goto d0Qm2; v0kV1: } public function __toString() { return $this->getPlainText(); } public function getRichTextElements() { return $this->richTextElements; } public function setRichTextElements($pElements = null) { if (is_array($pElements)) { $this->richTextElements = $pElements; } else { throw new PHPExcel_Exception("\x49\156\166\x61\154\x69\144\x20\x50\x48\120\x45\170\143\x65\x6c\137\x52\x69\x63\x68\124\145\x78\x74\x5f\x49\x54\x65\170\164\x45\154\145\x6d\145\156\164\133\x5d\40\141\162\162\141\171\40\160\x61\163\163\145\x64\56"); } return $this; } public function getHashCode() { goto GTKGh; zsWLD: return md5($hashElements . __CLASS__); goto fRec5; ehyO4: foreach ($this->richTextElements as $element) { $hashElements .= $element->getHashCode(); } goto zsWLD; GTKGh: $hashElements = ''; goto ehyO4; fRec5: } public function __clone() { $vars = get_object_vars($this); foreach ($vars as $key => $value) { if (is_object($value)) { $this->{$key} = clone $value; } else { $this->{$key} = $value; } } } }
