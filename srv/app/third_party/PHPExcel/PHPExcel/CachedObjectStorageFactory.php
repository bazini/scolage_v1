<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:05              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_CachedObjectStorageFactory { const cache_in_memory = "\x4d\x65\x6d\x6f\x72\x79"; const cache_in_memory_gzip = "\115\x65\155\157\162\x79\x47\x5a\x69\x70"; const cache_in_memory_serialized = "\115\x65\x6d\157\162\171\x53\x65\162\x69\141\154\x69\x7a\x65\144"; const cache_igbinary = "\111\x67\x62\151\156\x61\x72\x79"; const cache_to_discISAM = "\x44\x69\163\x63\x49\123\101\115"; const cache_to_apc = "\x41\120\103"; const cache_to_memcache = "\x4d\x65\x6d\x63\141\x63\x68\145"; const cache_to_phpTemp = "\120\110\120\124\145\x6d\x70"; const cache_to_wincache = "\x57\x69\156\x63\x61\x63\x68\145"; const cache_to_sqlite = "\x53\121\114\x69\x74\145"; const cache_to_sqlite3 = "\123\121\114\151\x74\145\63"; private static $cacheStorageMethod = null; private static $cacheStorageClass = null; private static $storageMethods = array(self::cache_in_memory, self::cache_in_memory_gzip, self::cache_in_memory_serialized, self::cache_igbinary, self::cache_to_phpTemp, self::cache_to_discISAM, self::cache_to_apc, self::cache_to_memcache, self::cache_to_wincache, self::cache_to_sqlite, self::cache_to_sqlite3); private static $storageMethodDefaultParameters = array(self::cache_in_memory => array(), self::cache_in_memory_gzip => array(), self::cache_in_memory_serialized => array(), self::cache_igbinary => array(), self::cache_to_phpTemp => array("\155\x65\155\157\162\x79\x43\141\x63\150\145\123\151\x7a\x65" => "\61\115\x42"), self::cache_to_discISAM => array("\144\151\162" => null), self::cache_to_apc => array("\x63\141\x63\x68\x65\x54\151\x6d\145" => 600), self::cache_to_memcache => array("\155\x65\x6d\x63\x61\x63\150\x65\x53\145\x72\166\145\162" => "\154\157\143\141\154\150\157\163\164", "\155\145\x6d\x63\x61\x63\x68\145\120\157\162\x74" => 11211, "\x63\141\x63\150\x65\x54\151\155\145" => 600), self::cache_to_wincache => array("\x63\x61\x63\x68\145\124\x69\x6d\145" => 600), self::cache_to_sqlite => array(), self::cache_to_sqlite3 => array()); private static $storageMethodParameters = array(); public static function getCacheStorageMethod() { return self::$cacheStorageMethod; } public static function getCacheStorageClass() { return self::$cacheStorageClass; } public static function getAllCacheStorageMethods() { return self::$storageMethods; } public static function getCacheStorageMethods() { goto u20UY; u20UY: $activeMethods = array(); goto ylr6b; XPJU1: return $activeMethods; goto aie4X; ylr6b: foreach (self::$storageMethods as $storageMethod) { $cacheStorageClass = "\120\110\x50\x45\170\x63\x65\154\137\103\x61\x63\x68\x65\x64\117\x62\x6a\x65\143\x74\123\x74\x6f\162\141\x67\x65\x5f" . $storageMethod; if (call_user_func(array($cacheStorageClass, "\x63\x61\143\x68\145\x4d\x65\x74\x68\x6f\144\111\x73\101\x76\x61\x69\x6c\x61\142\x6c\x65"))) { $activeMethods[] = $storageMethod; } } goto XPJU1; aie4X: } public static function initialize($method = self::cache_in_memory, $arguments = array()) { goto O6T9N; IdBqn: if (!call_user_func(array($cacheStorageClass, "\x63\x61\143\x68\x65\x4d\145\164\x68\x6f\144\111\x73\101\166\x61\151\154\x61\142\154\x65"))) { return false; } goto sSA5W; mFD8P: return true; goto M5yUD; sSA5W: self::$storageMethodParameters[$method] = self::$storageMethodDefaultParameters[$method]; goto JW_ZS; y73dH: if (self::$cacheStorageMethod === null) { self::$cacheStorageClass = "\x50\110\x50\105\170\x63\x65\x6c\x5f\103\x61\143\x68\145\144\117\142\152\145\x63\x74\x53\x74\x6f\x72\x61\x67\145\137" . $method; self::$cacheStorageMethod = $method; } goto mFD8P; O6T9N: if (!in_array($method, self::$storageMethods)) { return false; } goto jmtkc; jmtkc: $cacheStorageClass = "\x50\x48\x50\105\170\143\x65\154\137\x43\141\x63\150\x65\x64\117\x62\x6a\x65\x63\164\x53\x74\157\162\141\147\145\x5f" . $method; goto IdBqn; JW_ZS: foreach ($arguments as $k => $v) { if (array_key_exists($k, self::$storageMethodParameters[$method])) { self::$storageMethodParameters[$method][$k] = $v; } } goto y73dH; M5yUD: } public static function getInstance(PHPExcel_Worksheet $parent) { goto LcuaQ; LcuaQ: $cacheMethodIsAvailable = true; goto F1Wkj; THRZ_: return false; goto X2FEM; h8wTd: if ($cacheMethodIsAvailable) { $instance = new self::$cacheStorageClass($parent, self::$storageMethodParameters[self::$cacheStorageMethod]); if ($instance !== null) { return $instance; } } goto THRZ_; F1Wkj: if (self::$cacheStorageMethod === null) { $cacheMethodIsAvailable = self::initialize(); } goto h8wTd; X2FEM: } public static function finalize() { goto OmJNJ; P22fv: self::$cacheStorageClass = null; goto OhURj; OhURj: self::$storageMethodParameters = array(); goto UOG_F; OmJNJ: self::$cacheStorageMethod = null; goto P22fv; UOG_F: } }
