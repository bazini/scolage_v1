<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:07              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Cell_DataValidation { const TYPE_NONE = "\x6e\x6f\156\145"; const TYPE_CUSTOM = "\x63\x75\163\x74\x6f\x6d"; const TYPE_DATE = "\144\141\164\145"; const TYPE_DECIMAL = "\x64\145\x63\151\x6d\x61\x6c"; const TYPE_LIST = "\x6c\x69\163\x74"; const TYPE_TEXTLENGTH = "\164\x65\x78\164\114\x65\156\147\x74\x68"; const TYPE_TIME = "\x74\x69\155\x65"; const TYPE_WHOLE = "\x77\x68\x6f\154\x65"; const STYLE_STOP = "\163\x74\157\160"; const STYLE_WARNING = "\167\x61\x72\156\x69\x6e\x67"; const STYLE_INFORMATION = "\x69\156\x66\x6f\x72\155\141\x74\151\x6f\x6e"; const OPERATOR_BETWEEN = "\142\x65\x74\x77\145\145\156"; const OPERATOR_EQUAL = "\145\x71\x75\141\154"; const OPERATOR_GREATERTHAN = "\x67\162\x65\x61\164\x65\162\124\x68\x61\x6e"; const OPERATOR_GREATERTHANOREQUAL = "\x67\x72\x65\141\x74\x65\162\124\x68\141\156\117\162\105\161\x75\x61\154"; const OPERATOR_LESSTHAN = "\154\145\163\x73\124\150\x61\x6e"; const OPERATOR_LESSTHANOREQUAL = "\154\x65\163\163\x54\x68\x61\x6e\117\x72\x45\x71\165\x61\x6c"; const OPERATOR_NOTBETWEEN = "\x6e\157\164\x42\x65\x74\167\x65\x65\156"; const OPERATOR_NOTEQUAL = "\156\x6f\x74\105\x71\x75\141\154"; private $formula1; private $formula2; private $type = PHPExcel_Cell_DataValidation::TYPE_NONE; private $errorStyle = PHPExcel_Cell_DataValidation::STYLE_STOP; private $operator; private $allowBlank; private $showDropDown; private $showInputMessage; private $showErrorMessage; private $errorTitle; private $error; private $promptTitle; private $prompt; public function __construct() { goto uqjni; pTcsf: $this->promptTitle = ''; goto QbOcJ; eXMfz: $this->showErrorMessage = false; goto Nlacz; wGAHW: $this->operator = ''; goto mnitl; ulc_T: $this->showDropDown = false; goto LIEQG; UGh1v: $this->error = ''; goto pTcsf; QbOcJ: $this->prompt = ''; goto QYw17; mnitl: $this->allowBlank = false; goto ulc_T; Nlacz: $this->errorTitle = ''; goto UGh1v; uqjni: $this->formula1 = ''; goto tTQWA; Uz_3C: $this->errorStyle = PHPExcel_Cell_DataValidation::STYLE_STOP; goto wGAHW; LIEQG: $this->showInputMessage = false; goto eXMfz; tTQWA: $this->formula2 = ''; goto SPzbz; SPzbz: $this->type = PHPExcel_Cell_DataValidation::TYPE_NONE; goto Uz_3C; QYw17: } public function getFormula1() { return $this->formula1; } public function setFormula1($value = '') { $this->formula1 = $value; return $this; } public function getFormula2() { return $this->formula2; } public function setFormula2($value = '') { $this->formula2 = $value; return $this; } public function getType() { return $this->type; } public function setType($value = PHPExcel_Cell_DataValidation::TYPE_NONE) { $this->type = $value; return $this; } public function getErrorStyle() { return $this->errorStyle; } public function setErrorStyle($value = PHPExcel_Cell_DataValidation::STYLE_STOP) { $this->errorStyle = $value; return $this; } public function getOperator() { return $this->operator; } public function setOperator($value = '') { $this->operator = $value; return $this; } public function getAllowBlank() { return $this->allowBlank; } public function setAllowBlank($value = false) { $this->allowBlank = $value; return $this; } public function getShowDropDown() { return $this->showDropDown; } public function setShowDropDown($value = false) { $this->showDropDown = $value; return $this; } public function getShowInputMessage() { return $this->showInputMessage; } public function setShowInputMessage($value = false) { $this->showInputMessage = $value; return $this; } public function getShowErrorMessage() { return $this->showErrorMessage; } public function setShowErrorMessage($value = false) { $this->showErrorMessage = $value; return $this; } public function getErrorTitle() { return $this->errorTitle; } public function setErrorTitle($value = '') { $this->errorTitle = $value; return $this; } public function getError() { return $this->error; } public function setError($value = '') { $this->error = $value; return $this; } public function getPromptTitle() { return $this->promptTitle; } public function setPromptTitle($value = '') { $this->promptTitle = $value; return $this; } public function getPrompt() { return $this->prompt; } public function setPrompt($value = '') { $this->prompt = $value; return $this; } public function getHashCode() { return md5($this->formula1 . $this->formula2 . ($this->type = PHPExcel_Cell_DataValidation::TYPE_NONE . ($this->errorStyle = PHPExcel_Cell_DataValidation::STYLE_STOP . $this->operator . ($this->allowBlank ? "\164" : "\146") . ($this->showDropDown ? "\164" : "\x66") . ($this->showInputMessage ? "\164" : "\146") . ($this->showErrorMessage ? "\x74" : "\x66") . $this->errorTitle . $this->error . $this->promptTitle . $this->prompt . __CLASS__))); } public function __clone() { $vars = get_object_vars($this); foreach ($vars as $key => $value) { if (is_object($value)) { $this->{$key} = clone $value; } else { $this->{$key} = $value; } } } }
