<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:04              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 if (!defined("\x50\110\120\105\x58\x43\105\x4c\x5f\122\x4f\x4f\124")) { define("\x50\110\120\x45\x58\103\x45\114\x5f\122\117\x4f\124", dirname(__FILE__) . "\x2f\x2e\56\x2f\56\x2e\x2f"); require PHPEXCEL_ROOT . "\x50\110\x50\105\x78\x63\145\x6c\57\101\x75\164\x6f\154\157\x61\x64\x65\162\x2e\160\150\160"; } class PHPExcel_Calculation_Logical { public static function TRUE() { return true; } public static function FALSE() { return false; } public static function LOGICAL_AND() { goto otBMi; kYsNJ: return $returnValue; goto eho_z; otBMi: $returnValue = true; goto ivO2A; ivO2A: $aArgs = PHPExcel_Calculation_Functions::flattenArray(func_get_args()); goto PxFM0; lHcE6: if ($argCount < 0) { return PHPExcel_Calculation_Functions::VALUE(); } goto kYsNJ; Qervt: foreach ($aArgs as $argCount => $arg) { if (is_bool($arg)) { $returnValue = $returnValue && $arg; } elseif (is_numeric($arg) && !is_string($arg)) { $returnValue = $returnValue && $arg != 0; } elseif (is_string($arg)) { goto pIEZq; npZ9b: if ($arg == "\x54\122\125\x45" || $arg == PHPExcel_Calculation::getTRUE()) { $arg = true; } elseif ($arg == "\106\101\x4c\x53\105" || $arg == PHPExcel_Calculation::getFALSE()) { $arg = false; } else { return PHPExcel_Calculation_Functions::VALUE(); } goto O7HRx; pIEZq: $arg = strtoupper($arg); goto npZ9b; O7HRx: $returnValue = $returnValue && $arg != 0; goto VS9mK; VS9mK: } } goto lHcE6; PxFM0: $argCount = -1; goto Qervt; eho_z: } public static function LOGICAL_OR() { goto uVGdB; ICk5D: return $returnValue; goto k97D4; G6nt6: if ($argCount < 0) { return PHPExcel_Calculation_Functions::VALUE(); } goto ICk5D; cyJhL: $argCount = -1; goto naq91; uVGdB: $returnValue = false; goto j5I7f; j5I7f: $aArgs = PHPExcel_Calculation_Functions::flattenArray(func_get_args()); goto cyJhL; naq91: foreach ($aArgs as $argCount => $arg) { if (is_bool($arg)) { $returnValue = $returnValue || $arg; } elseif (is_numeric($arg) && !is_string($arg)) { $returnValue = $returnValue || $arg != 0; } elseif (is_string($arg)) { goto dmUDD; OFljk: $returnValue = $returnValue || $arg != 0; goto CRMwe; EjVib: if ($arg == "\124\122\x55\105" || $arg == PHPExcel_Calculation::getTRUE()) { $arg = true; } elseif ($arg == "\106\x41\114\x53\105" || $arg == PHPExcel_Calculation::getFALSE()) { $arg = false; } else { return PHPExcel_Calculation_Functions::VALUE(); } goto OFljk; dmUDD: $arg = strtoupper($arg); goto EjVib; CRMwe: } } goto G6nt6; k97D4: } public static function NOT($logical = false) { goto Dz5xV; Z9tEa: return !$logical; goto aqIuy; Dz5xV: $logical = PHPExcel_Calculation_Functions::flattenSingleValue($logical); goto Ou1VS; Ou1VS: if (is_string($logical)) { $logical = strtoupper($logical); if ($logical == "\124\122\125\x45" || $logical == PHPExcel_Calculation::getTRUE()) { return false; } elseif ($logical == "\106\x41\x4c\x53\x45" || $logical == PHPExcel_Calculation::getFALSE()) { return true; } else { return PHPExcel_Calculation_Functions::VALUE(); } } goto Z9tEa; aqIuy: } public static function STATEMENT_IF($condition = true, $returnIfTrue = 0, $returnIfFalse = false) { goto VVypN; x5DTj: $returnIfTrue = is_null($returnIfTrue) ? 0 : PHPExcel_Calculation_Functions::flattenSingleValue($returnIfTrue); goto i9cTt; VVypN: $condition = is_null($condition) ? true : (bool) PHPExcel_Calculation_Functions::flattenSingleValue($condition); goto x5DTj; ufEc0: return $condition ? $returnIfTrue : $returnIfFalse; goto cAOQ8; i9cTt: $returnIfFalse = is_null($returnIfFalse) ? false : PHPExcel_Calculation_Functions::flattenSingleValue($returnIfFalse); goto ufEc0; cAOQ8: } public static function IFERROR($testValue = '', $errorpart = '') { goto BFLyo; BFLyo: $testValue = is_null($testValue) ? '' : PHPExcel_Calculation_Functions::flattenSingleValue($testValue); goto KlT6X; sQWHK: return self::STATEMENT_IF(PHPExcel_Calculation_Functions::IS_ERROR($testValue), $errorpart, $testValue); goto GdrVt; KlT6X: $errorpart = is_null($errorpart) ? '' : PHPExcel_Calculation_Functions::flattenSingleValue($errorpart); goto sQWHK; GdrVt: } }
