<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:04              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 goto OEDHj; TGyup: define("\105\x55\x4c\105\122", 2.718281828459045); goto ZEu1V; OEDHj: if (!defined("\120\x48\x50\x45\130\103\105\114\137\122\117\x4f\124")) { define("\x50\x48\120\105\x58\103\105\114\137\122\117\x4f\x54", dirname(__FILE__) . "\x2f\x2e\56\x2f\56\56\57"); require PHPEXCEL_ROOT . "\120\110\120\x45\x78\x63\145\154\x2f\x41\165\x74\x6f\154\x6f\x61\144\145\162\x2e\160\150\160"; } goto TGyup; ZEu1V: class PHPExcel_Calculation_Engineering { private static $conversionUnits = array("\147" => array("\x47\x72\157\x75\160" => "\115\141\x73\x73", "\x55\156\x69\x74\40\x4e\141\155\145" => "\x47\162\141\x6d", "\101\154\x6c\157\167\x50\x72\145\146\151\170" => true), "\x73\147" => array("\107\x72\157\165\x70" => "\x4d\141\163\x73", "\125\156\151\x74\40\116\141\155\145" => "\x53\x6c\x75\x67", "\101\x6c\154\157\167\120\x72\x65\146\151\170" => false), "\x6c\142\155" => array("\107\162\157\x75\160" => "\x4d\141\163\x73", "\x55\156\x69\164\40\116\141\x6d\145" => "\120\157\165\x6e\x64\x20\x6d\141\163\163\40\50\x61\166\157\151\x72\x64\165\x70\x6f\151\163\51", "\101\x6c\154\157\167\x50\162\145\146\151\170" => false), "\165" => array("\x47\x72\x6f\x75\160" => "\x4d\141\x73\x73", "\x55\x6e\151\164\x20\x4e\141\x6d\x65" => "\x55\x20\50\x61\x74\157\155\x69\x63\x20\x6d\x61\163\x73\x20\x75\x6e\x69\164\51", "\101\154\x6c\x6f\x77\x50\x72\145\146\151\x78" => true), "\x6f\172\155" => array("\107\162\x6f\x75\160" => "\115\141\x73\163", "\125\x6e\x69\x74\40\x4e\141\155\145" => "\117\x75\156\143\145\x20\x6d\x61\163\163\40\x28\141\x76\157\x69\x72\144\x75\160\157\x69\163\51", "\x41\x6c\154\157\167\x50\162\145\146\x69\170" => false), "\x6d" => array("\x47\x72\157\165\160" => "\104\x69\x73\x74\141\156\143\145", "\125\x6e\151\x74\40\x4e\x61\x6d\145" => "\x4d\x65\x74\x65\162", "\x41\x6c\x6c\157\x77\120\162\x65\146\x69\x78" => true), "\155\x69" => array("\x47\x72\157\x75\x70" => "\104\x69\x73\164\141\x6e\143\145", "\x55\x6e\151\x74\40\116\x61\x6d\145" => "\x53\x74\141\x74\165\x74\x65\x20\x6d\x69\154\145", "\101\x6c\154\x6f\167\120\x72\145\x66\x69\170" => false), "\x4e\x6d\x69" => array("\x47\x72\x6f\x75\160" => "\104\151\x73\x74\141\x6e\x63\x65", "\x55\156\x69\164\x20\116\141\x6d\x65" => "\116\x61\165\x74\151\x63\141\x6c\40\x6d\151\154\x65", "\101\154\x6c\157\167\120\162\x65\146\151\x78" => false), "\151\x6e" => array("\107\x72\157\165\160" => "\x44\x69\163\x74\141\156\x63\x65", "\x55\156\151\164\x20\116\141\x6d\145" => "\x49\156\x63\150", "\x41\154\x6c\157\167\x50\162\145\x66\151\170" => false), "\x66\x74" => array("\107\162\157\165\160" => "\104\x69\163\164\141\x6e\143\x65", "\125\x6e\x69\x74\x20\x4e\141\155\x65" => "\106\157\157\164", "\x41\154\x6c\157\x77\x50\162\x65\146\x69\x78" => false), "\171\x64" => array("\x47\x72\x6f\165\160" => "\104\151\x73\x74\141\x6e\x63\x65", "\x55\156\x69\164\x20\116\x61\x6d\145" => "\x59\141\x72\144", "\101\154\154\x6f\x77\120\x72\145\146\151\x78" => false), "\141\156\147" => array("\107\x72\157\165\160" => "\x44\151\163\x74\x61\x6e\143\x65", "\x55\156\151\164\40\116\x61\155\x65" => "\101\156\147\x73\x74\x72\157\155", "\101\154\154\157\167\120\x72\x65\x66\151\170" => true), "\120\151\x63\141" => array("\107\x72\x6f\x75\160" => "\x44\151\x73\x74\141\156\143\145", "\x55\156\151\164\x20\x4e\x61\x6d\x65" => "\x50\x69\143\x61\40\x28\x31\x2f\67\62\40\x69\x6e\51", "\x41\154\154\157\167\x50\x72\145\x66\x69\170" => false), "\171\x72" => array("\x47\162\157\165\160" => "\124\x69\155\x65", "\x55\156\x69\164\40\116\x61\155\x65" => "\131\145\x61\162", "\x41\154\x6c\157\x77\120\x72\145\x66\x69\170" => false), "\144\x61\171" => array("\107\162\x6f\165\160" => "\124\151\x6d\145", "\125\x6e\x69\x74\x20\x4e\141\155\145" => "\104\x61\x79", "\x41\154\x6c\x6f\167\x50\x72\x65\146\151\170" => false), "\150\x72" => array("\x47\162\157\165\x70" => "\124\x69\155\x65", "\x55\x6e\x69\x74\40\116\141\x6d\145" => "\x48\x6f\165\x72", "\101\x6c\154\157\167\120\x72\145\x66\151\x78" => false), "\155\x6e" => array("\107\162\x6f\165\160" => "\124\x69\155\x65", "\x55\156\x69\x74\40\116\141\x6d\145" => "\115\151\156\165\x74\x65", "\101\154\x6c\x6f\167\120\162\x65\146\151\170" => false), "\163\x65\x63" => array("\107\162\x6f\165\x70" => "\124\x69\155\145", "\125\x6e\x69\164\x20\x4e\141\x6d\x65" => "\x53\x65\143\x6f\156\144", "\101\154\154\x6f\x77\x50\162\x65\146\x69\x78" => true), "\x50\141" => array("\x47\x72\157\x75\160" => "\120\x72\145\x73\x73\x75\162\145", "\125\156\151\x74\40\x4e\x61\155\x65" => "\x50\x61\x73\143\141\154", "\101\x6c\154\x6f\167\120\x72\x65\x66\x69\170" => true), "\160" => array("\x47\162\157\165\160" => "\x50\x72\145\x73\x73\165\x72\x65", "\x55\x6e\x69\164\40\x4e\x61\x6d\x65" => "\120\x61\163\143\x61\154", "\101\x6c\x6c\x6f\x77\x50\162\x65\x66\x69\170" => true), "\141\164\155" => array("\x47\x72\x6f\x75\x70" => "\x50\162\145\163\x73\165\162\x65", "\125\156\x69\164\40\116\x61\x6d\x65" => "\101\x74\155\157\x73\160\x68\145\x72\145", "\x41\154\x6c\x6f\167\120\x72\145\146\151\x78" => true), "\141\164" => array("\x47\162\157\165\x70" => "\120\x72\x65\163\x73\165\162\x65", "\x55\x6e\x69\x74\40\116\141\x6d\145" => "\x41\164\155\157\163\x70\150\145\162\x65", "\101\x6c\154\157\167\120\162\x65\x66\151\x78" => true), "\x6d\155\x48\x67" => array("\x47\162\x6f\x75\x70" => "\120\x72\x65\163\163\x75\162\x65", "\x55\156\151\x74\x20\x4e\141\x6d\145" => "\155\x6d\x20\157\x66\x20\115\145\162\x63\x75\162\x79", "\101\x6c\154\157\x77\x50\x72\145\146\151\x78" => true), "\x4e" => array("\107\162\157\165\x70" => "\x46\157\162\143\145", "\125\156\151\164\x20\116\x61\155\x65" => "\116\145\167\x74\157\156", "\101\x6c\154\x6f\x77\120\x72\x65\146\151\170" => true), "\x64\x79\x6e" => array("\107\x72\x6f\x75\160" => "\x46\157\162\143\x65", "\x55\x6e\x69\x74\40\x4e\x61\155\x65" => "\104\x79\156\145", "\101\x6c\154\x6f\167\x50\162\x65\146\x69\x78" => true), "\144\171" => array("\107\162\157\165\160" => "\x46\157\x72\143\x65", "\125\156\x69\164\x20\x4e\141\155\x65" => "\104\x79\x6e\x65", "\101\154\154\x6f\167\x50\x72\x65\x66\151\170" => true), "\154\x62\x66" => array("\107\162\x6f\x75\x70" => "\106\157\x72\143\x65", "\x55\156\x69\164\x20\116\141\x6d\x65" => "\x50\157\x75\156\144\40\x66\157\x72\143\x65", "\x41\154\154\x6f\x77\120\x72\145\146\x69\170" => false), "\x4a" => array("\x47\162\157\165\x70" => "\x45\156\x65\x72\x67\171", "\125\156\x69\x74\x20\x4e\141\155\145" => "\x4a\x6f\165\154\x65", "\101\x6c\154\x6f\167\x50\162\145\146\x69\x78" => true), "\x65" => array("\x47\x72\x6f\x75\x70" => "\105\x6e\x65\x72\147\x79", "\125\x6e\151\x74\x20\x4e\x61\x6d\x65" => "\105\x72\x67", "\x41\x6c\154\x6f\x77\x50\162\145\146\x69\170" => true), "\143" => array("\107\162\x6f\x75\160" => "\x45\156\x65\162\147\171", "\x55\156\151\164\x20\116\141\x6d\145" => "\124\150\x65\162\x6d\x6f\144\x79\156\141\155\151\x63\x20\143\141\x6c\157\162\x69\145", "\101\x6c\x6c\157\167\x50\162\x65\146\151\x78" => true), "\143\141\154" => array("\x47\x72\157\x75\160" => "\x45\156\x65\162\147\171", "\x55\x6e\151\164\40\116\x61\155\145" => "\111\124\x20\x63\141\x6c\x6f\162\x69\145", "\101\154\x6c\157\x77\120\162\x65\146\x69\170" => true), "\145\126" => array("\107\x72\x6f\x75\160" => "\x45\156\145\162\x67\x79", "\125\x6e\151\164\40\116\141\x6d\x65" => "\105\x6c\145\x63\164\x72\157\156\x20\166\157\154\164", "\x41\154\x6c\x6f\x77\120\162\x65\x66\x69\170" => true), "\x65\166" => array("\x47\162\157\165\x70" => "\x45\x6e\145\x72\147\171", "\125\156\x69\x74\x20\x4e\141\x6d\145" => "\105\x6c\x65\x63\x74\162\x6f\156\40\166\x6f\154\164", "\x41\154\x6c\157\167\x50\x72\x65\x66\151\170" => true), "\x48\x50\x68" => array("\107\x72\157\165\160" => "\105\x6e\145\162\147\x79", "\x55\x6e\x69\x74\40\x4e\141\155\x65" => "\x48\157\162\163\145\x70\x6f\167\145\162\x2d\150\x6f\x75\x72", "\101\x6c\154\x6f\x77\120\x72\145\146\151\x78" => false), "\x68\x68" => array("\107\162\x6f\165\x70" => "\105\x6e\x65\162\147\171", "\125\156\151\164\40\x4e\141\155\x65" => "\110\157\x72\x73\145\x70\157\x77\145\x72\x2d\150\157\x75\162", "\x41\154\154\x6f\x77\x50\x72\145\x66\151\170" => false), "\127\150" => array("\x47\162\x6f\x75\x70" => "\x45\x6e\145\x72\x67\x79", "\125\156\x69\x74\40\116\x61\155\x65" => "\127\x61\164\164\x2d\x68\x6f\x75\x72", "\101\154\154\157\167\x50\x72\145\146\151\x78" => true), "\x77\x68" => array("\107\162\x6f\x75\x70" => "\x45\x6e\145\162\x67\x79", "\125\x6e\x69\164\40\x4e\x61\155\x65" => "\x57\141\x74\x74\55\150\x6f\x75\x72", "\x41\154\154\x6f\167\120\x72\145\x66\x69\170" => true), "\146\154\142" => array("\107\162\x6f\x75\x70" => "\105\x6e\145\x72\x67\171", "\x55\156\151\x74\x20\x4e\141\x6d\145" => "\x46\x6f\157\164\55\x70\157\165\x6e\144", "\x41\154\154\x6f\167\120\x72\145\146\x69\x78" => false), "\x42\x54\125" => array("\x47\162\157\165\x70" => "\x45\156\145\x72\x67\x79", "\x55\x6e\151\x74\x20\x4e\141\x6d\x65" => "\102\124\x55", "\x41\x6c\154\157\167\x50\x72\x65\146\x69\x78" => false), "\x62\164\165" => array("\x47\162\x6f\165\x70" => "\x45\156\x65\x72\x67\171", "\x55\x6e\151\164\40\116\141\x6d\x65" => "\x42\x54\125", "\x41\154\x6c\157\x77\x50\162\145\146\x69\170" => false), "\110\120" => array("\107\x72\x6f\x75\x70" => "\x50\x6f\x77\145\x72", "\x55\x6e\151\x74\x20\116\x61\155\145" => "\x48\157\162\x73\x65\160\x6f\167\145\162", "\101\154\154\x6f\x77\x50\162\x65\146\x69\x78" => false), "\150" => array("\x47\x72\x6f\165\160" => "\120\157\167\x65\162", "\125\x6e\x69\164\40\116\141\x6d\x65" => "\110\x6f\162\163\x65\x70\157\167\x65\162", "\101\154\154\x6f\167\120\162\x65\146\x69\x78" => false), "\x57" => array("\107\x72\157\165\x70" => "\x50\x6f\167\145\x72", "\125\x6e\151\x74\x20\x4e\x61\155\x65" => "\x57\141\164\x74", "\101\154\154\157\167\x50\162\145\146\151\x78" => true), "\167" => array("\107\162\157\165\x70" => "\x50\157\167\x65\162", "\125\x6e\151\x74\40\116\x61\x6d\x65" => "\127\141\x74\164", "\101\x6c\x6c\157\167\x50\162\x65\146\151\x78" => true), "\x54" => array("\107\x72\157\165\x70" => "\x4d\141\147\x6e\145\x74\151\163\x6d", "\125\156\x69\x74\x20\116\141\155\x65" => "\124\x65\x73\154\x61", "\x41\154\154\157\x77\120\x72\145\146\151\x78" => true), "\147\x61" => array("\x47\x72\x6f\x75\160" => "\x4d\141\x67\156\x65\x74\151\163\155", "\125\x6e\151\164\40\116\x61\155\x65" => "\107\x61\x75\x73\x73", "\x41\154\154\157\x77\x50\x72\x65\146\x69\x78" => true), "\x43" => array("\x47\162\x6f\x75\160" => "\x54\145\x6d\x70\145\162\141\x74\x75\x72\x65", "\125\x6e\151\x74\x20\x4e\141\x6d\x65" => "\103\x65\x6c\x73\151\165\x73", "\x41\x6c\x6c\157\x77\x50\x72\145\x66\151\170" => false), "\x63\x65\x6c" => array("\107\162\157\x75\160" => "\x54\x65\155\x70\145\162\141\x74\x75\162\145", "\x55\156\x69\x74\40\116\x61\x6d\145" => "\x43\x65\154\x73\151\165\x73", "\x41\x6c\x6c\157\167\x50\162\145\x66\x69\x78" => false), "\x46" => array("\x47\x72\157\165\x70" => "\x54\145\x6d\160\x65\x72\141\164\165\x72\x65", "\125\156\151\164\40\x4e\x61\155\x65" => "\x46\x61\x68\x72\x65\x6e\x68\x65\151\164", "\101\x6c\154\157\167\120\x72\145\x66\151\x78" => false), "\x66\x61\150" => array("\107\x72\x6f\x75\x70" => "\124\145\x6d\x70\x65\x72\141\164\165\162\x65", "\x55\x6e\x69\x74\x20\x4e\x61\x6d\145" => "\106\x61\150\x72\x65\x6e\x68\x65\x69\164", "\x41\x6c\154\157\x77\x50\x72\145\x66\151\x78" => false), "\x4b" => array("\107\x72\157\x75\160" => "\x54\145\155\x70\x65\x72\141\x74\x75\x72\x65", "\125\156\x69\x74\40\x4e\141\x6d\145" => "\x4b\145\x6c\x76\151\156", "\101\154\154\x6f\x77\x50\x72\x65\146\x69\170" => false), "\153\145\154" => array("\x47\162\157\165\x70" => "\124\x65\155\x70\145\x72\141\x74\x75\162\x65", "\x55\x6e\151\164\40\116\x61\155\x65" => "\113\x65\154\x76\x69\156", "\x41\154\154\x6f\x77\120\x72\145\x66\151\x78" => false), "\164\163\x70" => array("\x47\x72\x6f\165\160" => "\114\x69\x71\x75\151\x64", "\125\x6e\151\164\x20\116\x61\155\x65" => "\x54\145\141\163\x70\x6f\157\156", "\x41\154\x6c\x6f\167\x50\x72\x65\146\151\x78" => false), "\164\x62\x73" => array("\107\162\x6f\x75\160" => "\x4c\151\x71\x75\151\144", "\x55\x6e\x69\164\x20\x4e\141\155\x65" => "\x54\x61\x62\x6c\x65\x73\160\x6f\157\x6e", "\x41\x6c\x6c\157\x77\120\162\x65\x66\151\170" => false), "\x6f\x7a" => array("\x47\x72\157\165\160" => "\114\151\161\165\151\x64", "\125\156\151\x74\x20\x4e\141\155\145" => "\x46\154\x75\x69\x64\40\x4f\165\156\x63\x65", "\101\x6c\154\157\x77\120\162\145\146\151\x78" => false), "\x63\165\160" => array("\x47\162\157\x75\x70" => "\x4c\151\x71\x75\151\144", "\x55\x6e\151\x74\40\116\141\x6d\x65" => "\103\x75\160", "\x41\154\154\x6f\x77\x50\162\x65\x66\151\x78" => false), "\x70\164" => array("\107\162\157\x75\160" => "\114\151\161\165\151\x64", "\125\x6e\151\x74\40\116\x61\x6d\145" => "\125\56\x53\56\40\x50\151\x6e\x74", "\101\154\x6c\157\167\120\162\x65\x66\151\x78" => false), "\165\163\x5f\160\164" => array("\x47\x72\x6f\x75\x70" => "\x4c\x69\161\x75\151\x64", "\125\156\x69\164\x20\x4e\141\155\x65" => "\x55\56\123\x2e\x20\x50\x69\156\x74", "\x41\154\154\157\x77\x50\x72\145\146\x69\x78" => false), "\165\153\x5f\x70\x74" => array("\107\162\157\165\160" => "\114\151\161\165\151\144", "\x55\156\151\x74\x20\116\141\x6d\x65" => "\125\56\113\56\x20\x50\x69\156\x74", "\101\154\x6c\x6f\167\120\x72\x65\x66\151\x78" => false), "\x71\164" => array("\x47\x72\157\165\160" => "\x4c\151\161\x75\x69\144", "\125\156\x69\x74\40\x4e\x61\x6d\x65" => "\x51\165\141\x72\164", "\101\154\154\157\x77\120\162\145\146\151\x78" => false), "\x67\141\154" => array("\107\162\157\x75\x70" => "\114\x69\161\165\151\x64", "\125\x6e\x69\164\x20\x4e\x61\155\145" => "\x47\x61\x6c\x6c\x6f\x6e", "\x41\x6c\x6c\157\167\x50\x72\145\x66\x69\x78" => false), "\154" => array("\x47\162\157\165\160" => "\x4c\151\x71\x75\151\x64", "\125\156\151\164\40\116\x61\155\x65" => "\x4c\151\x74\x72\x65", "\x41\154\x6c\x6f\167\x50\162\145\146\x69\x78" => true), "\154\x74" => array("\x47\162\157\165\x70" => "\x4c\151\161\165\x69\x64", "\x55\156\151\164\40\116\141\155\145" => "\x4c\151\x74\162\x65", "\101\x6c\154\x6f\x77\120\x72\145\x66\151\170" => true)); private static $conversionMultipliers = array("\131" => array("\155\x75\154\x74\x69\x70\154\151\x65\x72" => 1.0E+24, "\x6e\x61\155\x65" => "\171\157\x74\x74\x61"), "\132" => array("\x6d\165\x6c\x74\151\160\154\x69\145\x72" => 1.0E+21, "\156\141\x6d\145" => "\172\x65\164\164\141"), "\x45" => array("\x6d\x75\x6c\164\x69\x70\154\151\145\162" => 1.0E+18, "\156\x61\x6d\145" => "\x65\170\141"), "\120" => array("\x6d\x75\x6c\164\x69\x70\154\x69\x65\x72" => 1000000000000000.0, "\x6e\141\x6d\145" => "\x70\145\164\141"), "\124" => array("\155\165\x6c\164\151\160\154\x69\x65\162" => 1000000000000.0, "\x6e\x61\x6d\145" => "\x74\145\162\141"), "\107" => array("\155\x75\154\x74\151\160\x6c\151\145\162" => 1000000000.0, "\156\141\x6d\x65" => "\x67\151\147\x61"), "\x4d" => array("\155\x75\154\x74\151\x70\154\151\145\x72" => 1000000.0, "\156\141\155\x65" => "\155\145\147\141"), "\x6b" => array("\x6d\x75\x6c\164\151\160\154\x69\145\162" => 1000.0, "\156\x61\155\145" => "\153\x69\154\x6f"), "\x68" => array("\x6d\165\x6c\x74\x69\160\154\x69\x65\162" => 100.0, "\x6e\141\x6d\145" => "\x68\145\x63\164\x6f"), "\x65" => array("\x6d\165\x6c\164\151\x70\x6c\x69\x65\162" => 10.0, "\156\141\x6d\x65" => "\x64\x65\153\x61"), "\144" => array("\155\x75\154\164\x69\x70\154\x69\145\162" => 0.1, "\x6e\x61\155\x65" => "\144\145\143\x69"), "\x63" => array("\x6d\165\x6c\164\151\x70\154\151\x65\x72" => 0.01, "\x6e\141\155\x65" => "\143\145\x6e\164\x69"), "\155" => array("\x6d\165\x6c\164\x69\x70\154\151\145\162" => 0.001, "\x6e\x61\155\x65" => "\x6d\151\154\x6c\x69"), "\165" => array("\155\165\154\164\151\160\154\151\x65\162" => 1.0E-6, "\x6e\141\155\x65" => "\x6d\x69\143\x72\x6f"), "\156" => array("\155\x75\154\x74\151\x70\154\151\x65\162" => 1.0E-9, "\x6e\x61\x6d\x65" => "\x6e\x61\x6e\157"), "\x70" => array("\155\165\154\164\x69\160\x6c\x69\x65\162" => 1.0E-12, "\x6e\141\x6d\145" => "\x70\x69\x63\157"), "\146" => array("\x6d\165\154\164\x69\160\x6c\x69\145\x72" => 1.0E-15, "\156\141\x6d\145" => "\x66\145\x6d\164\x6f"), "\x61" => array("\x6d\165\154\x74\x69\x70\154\x69\145\x72" => 1.0E-18, "\156\x61\155\x65" => "\x61\164\164\157"), "\x7a" => array("\x6d\x75\x6c\164\151\x70\x6c\x69\x65\x72" => 9.999999999999999E-22, "\156\141\155\145" => "\172\145\160\x74\x6f"), "\171" => array("\x6d\x75\154\164\151\160\154\x69\x65\162" => 9.999999999999999E-25, "\x6e\x61\x6d\145" => "\171\x6f\x63\164\157")); private static $unitConversions = array("\x4d\x61\163\163" => array("\147" => array("\147" => 1.0, "\163\147" => 6.85220500053478E-5, "\x6c\142\155" => 0.00220462291469134, "\165" => 6.02217E+23, "\157\172\x6d" => 0.0352739718003627), "\163\x67" => array("\147" => 14593.8424189287, "\163\147" => 1.0, "\x6c\142\x6d" => 32.1739194101647, "\165" => 8.788659999999999E+27, "\x6f\x7a\x6d" => 514.782785944229), "\x6c\142\155" => array("\147" => 453.5923097488115, "\163\x67" => 0.0310810749306493, "\x6c\142\155" => 1.0, "\165" => 2.73161E+26, "\157\172\155" => 16.000002342941), "\x75" => array("\x67" => 1.66053100460465E-24, "\x73\147" => 1.1378298853295E-28, "\154\142\x6d" => 3.66084470330684E-27, "\165" => 1.0, "\x6f\172\155" => 5.85735238300524E-26), "\x6f\172\155" => array("\x67" => 28.3495152079732, "\163\147" => 0.00194256689870811, "\x6c\x62\x6d" => 0.0624999908478882, "\x75" => 1.707256E+25, "\157\x7a\155" => 1.0)), "\104\x69\x73\x74\x61\156\143\x65" => array("\x6d" => array("\155" => 1.0, "\x6d\x69" => 0.000621371192237334, "\116\155\x69" => 0.000539956803455724, "\x69\156" => 39.3700787401575, "\x66\164" => 3.28083989501312, "\x79\x64" => 1.09361329797891, "\141\x6e\x67" => 10000000000.0, "\120\151\143\x61" => 2834.64566929116), "\x6d\151" => array("\x6d" => 1609.344, "\x6d\151" => 1.0, "\x4e\155\x69" => 0.868976241900648, "\151\156" => 63360.0, "\146\x74" => 5280.0, "\x79\x64" => 1760.0, "\141\156\x67" => 16093440000000.0, "\120\x69\143\x61" => 4561919.99999971), "\x4e\x6d\x69" => array("\155" => 1852.0, "\x6d\151" => 1.15077944802354, "\116\x6d\x69" => 1.0, "\x69\x6e" => 72913.3858267717, "\x66\164" => 6076.1154855643, "\171\x64" => 2025.37182785694, "\x61\156\147" => 18520000000000.0, "\120\151\143\141" => 5249763.77952723), "\151\x6e" => array("\x6d" => 0.0254, "\155\151" => 1.57828282828283E-5, "\116\155\x69" => 1.37149028077754E-5, "\x69\x6e" => 1.0, "\146\164" => 0.0833333333333333, "\x79\x64" => 0.0277777777686643, "\141\x6e\x67" => 254000000.0, "\120\151\x63\141" => 71.9999999999955), "\146\x74" => array("\155" => 0.3048, "\x6d\151" => 0.000189393939393939, "\116\155\151" => 0.000164578833693305, "\151\x6e" => 12.0, "\x66\164" => 1.0, "\x79\144" => 0.333333333223972, "\x61\156\x67" => 3048000000.0, "\x50\x69\x63\x61" => 863.999999999946), "\x79\x64" => array("\x6d" => 0.9144000003, "\x6d\x69" => 0.00056818181836823, "\x4e\155\151" => 0.000493736501241901, "\151\x6e" => 36.000000011811, "\x66\164" => 3.0, "\x79\144" => 1.0, "\141\x6e\147" => 9144000003.0, "\120\x69\143\141" => 2592.00000085023), "\141\x6e\x67" => array("\155" => 1.0E-10, "\x6d\x69" => 6.213711922373341E-14, "\x4e\x6d\x69" => 5.39956803455724E-14, "\151\156" => 3.93700787401575E-9, "\x66\x74" => 3.28083989501312E-10, "\x79\x64" => 1.09361329797891E-10, "\x61\156\147" => 1.0, "\x50\x69\143\x61" => 2.83464566929116E-7), "\120\151\143\x61" => array("\155" => 0.0003527777777778, "\x6d\x69" => 2.19205948372629E-7, "\x4e\x6d\x69" => 1.90484761219114E-7, "\x69\156" => 0.0138888888888898, "\x66\164" => 0.00115740740740748, "\171\144" => 0.000385802469009251, "\141\156\x67" => 3527777.777778, "\120\151\x63\x61" => 1.0)), "\x54\x69\x6d\x65" => array("\x79\162" => array("\171\162" => 1.0, "\x64\x61\x79" => 365.25, "\150\x72" => 8766.0, "\x6d\156" => 525960.0, "\x73\x65\x63" => 31557600.0), "\x64\x61\x79" => array("\171\x72" => 0.0027378507871321, "\x64\x61\x79" => 1.0, "\150\162" => 24.0, "\155\x6e" => 1440.0, "\163\145\143" => 86400.0), "\150\x72" => array("\171\162" => 0.000114077116130504, "\144\x61\x79" => 0.0416666666666667, "\x68\162" => 1.0, "\155\156" => 60.0, "\163\x65\x63" => 3600.0), "\x6d\156" => array("\171\x72" => 1.90128526884174E-6, "\144\141\x79" => 0.000694444444444444, "\x68\162" => 0.0166666666666667, "\155\156" => 1.0, "\x73\145\x63" => 60.0), "\163\x65\143" => array("\171\x72" => 3.16880878140289E-8, "\x64\x61\171" => 1.15740740740741E-5, "\x68\162" => 0.000277777777777778, "\x6d\156" => 0.0166666666666667, "\163\145\x63" => 1.0)), "\x50\162\145\163\x73\165\162\x65" => array("\120\141" => array("\120\141" => 1.0, "\160" => 1.0, "\141\x74\x6d" => 9.86923299998193E-6, "\141\164" => 9.86923299998193E-6, "\x6d\155\x48\x67" => 0.00750061707998627), "\160" => array("\120\x61" => 1.0, "\x70" => 1.0, "\141\x74\155" => 9.86923299998193E-6, "\x61\x74" => 9.86923299998193E-6, "\155\x6d\x48\147" => 0.00750061707998627), "\141\x74\155" => array("\x50\141" => 101324.996583, "\x70" => 101324.996583, "\141\x74\x6d" => 1.0, "\141\164" => 1.0, "\x6d\155\110\147" => 760.0), "\x61\164" => array("\120\x61" => 101324.996583, "\x70" => 101324.996583, "\x61\164\x6d" => 1.0, "\x61\164" => 1.0, "\155\155\110\x67" => 760.0), "\155\155\110\147" => array("\x50\x61" => 133.322363925, "\160" => 133.322363925, "\x61\164\155" => 0.00131578947368421, "\141\x74" => 0.00131578947368421, "\155\x6d\x48\x67" => 1.0)), "\106\157\162\x63\x65" => array("\116" => array("\x4e" => 1.0, "\144\x79\156" => 100000.0, "\144\171" => 100000.0, "\154\x62\146" => 0.224808923655339), "\144\171\156" => array("\116" => 1.0E-5, "\144\171\x6e" => 1.0, "\144\x79" => 1.0, "\x6c\x62\x66" => 2.24808923655339E-6), "\x64\x79" => array("\116" => 1.0E-5, "\144\x79\x6e" => 1.0, "\144\x79" => 1.0, "\154\x62\146" => 2.24808923655339E-6), "\154\x62\146" => array("\x4e" => 4.448222, "\144\x79\156" => 444822.2, "\144\x79" => 444822.2, "\154\x62\x66" => 1.0)), "\x45\x6e\x65\162\147\x79" => array("\x4a" => array("\x4a" => 1.0, "\x65" => 9999995.193432311, "\143" => 0.239006249473467, "\143\x61\x6c" => 0.238846190642017, "\145\x56" => 6.241457E+18, "\x65\166" => 6.241457E+18, "\x48\120\150" => 3.72506430801E-7, "\150\150" => 3.72506430801E-7, "\x57\150" => 0.000277777916238711, "\x77\150" => 0.000277777916238711, "\x66\x6c\142" => 23.7304222192651, "\x42\x54\125" => 0.000947815067349015, "\142\x74\165" => 0.000947815067349015), "\145" => array("\x4a" => 1.000000480657E-7, "\145" => 1.0, "\143" => 2.39006364353494E-8, "\x63\141\154" => 2.38846305445111E-8, "\x65\126" => 624146000000.0, "\145\166" => 624146000000.0, "\x48\120\x68" => 3.72506609848824E-14, "\x68\x68" => 3.72506609848824E-14, "\x57\x68" => 2.77778049754611E-11, "\x77\x68" => 2.77778049754611E-11, "\x66\x6c\x62" => 2.37304336254586E-6, "\102\x54\x55" => 9.47815522922962E-11, "\142\164\x75" => 9.47815522922962E-11), "\x63" => array("\112" => 4.18399101363672, "\145" => 41839890.0257312, "\143" => 1.0, "\143\141\154" => 0.999330315287563, "\145\126" => 2.61142E+19, "\145\x76" => 2.61142E+19, "\110\120\x68" => 1.55856355899327E-6, "\150\150" => 1.55856355899327E-6, "\127\x68" => 0.0011622203053295, "\x77\150" => 0.0011622203053295, "\146\x6c\x62" => 99.28787331521021, "\x42\x54\x55" => 0.00396564972437776, "\142\164\x75" => 0.00396564972437776), "\143\x61\154" => array("\x4a" => 4.18679484613929, "\x65" => 41867928.3372801, "\x63" => 1.00067013349059, "\x63\141\x6c" => 1.0, "\x65\126" => 2.61317E+19, "\145\166" => 2.61317E+19, "\110\120\150" => 1.55960800463137E-6, "\150\x68" => 1.55960800463137E-6, "\127\150" => 0.00116299914807955, "\x77\150" => 0.00116299914807955, "\146\x6c\x62" => 99.3544094443283, "\x42\124\x55" => 0.00396830723907002, "\142\164\165" => 0.00396830723907002), "\x65\x56" => array("\112" => 1.60219000146921E-19, "\145" => 1.60218923136574E-12, "\x63" => 3.82933423195043E-20, "\x63\x61\x6c" => 3.82676978535648E-20, "\145\x56" => 1.0, "\x65\166" => 1.0, "\x48\x50\x68" => 5.968260789123441E-26, "\150\x68" => 5.968260789123441E-26, "\127\x68" => 4.45053000026614E-23, "\167\150" => 4.45053000026614E-23, "\x66\x6c\x62" => 3.80206452103492E-18, "\102\x54\125" => 1.51857982414846E-22, "\x62\x74\165" => 1.51857982414846E-22), "\x65\166" => array("\112" => 1.60219000146921E-19, "\x65" => 1.60218923136574E-12, "\x63" => 3.82933423195043E-20, "\143\x61\154" => 3.82676978535648E-20, "\x65\x56" => 1.0, "\x65\x76" => 1.0, "\110\120\150" => 5.968260789123441E-26, "\x68\150" => 5.968260789123441E-26, "\127\x68" => 4.45053000026614E-23, "\x77\150" => 4.45053000026614E-23, "\x66\154\x62" => 3.80206452103492E-18, "\x42\124\125" => 1.51857982414846E-22, "\x62\164\x75" => 1.51857982414846E-22), "\x48\120\150" => array("\112" => 2684517.4131617, "\145" => 26845161228302.4, "\x63" => 641616.438565991, "\x63\141\154" => 641186.7578458349, "\x65\126" => 1.67553E+25, "\145\166" => 1.67553E+25, "\x48\120\150" => 1.0, "\x68\150" => 1.0, "\x57\150" => 745.6996531345929, "\x77\x68" => 745.6996531345929, "\146\154\x62" => 63704731.6692964, "\102\x54\125" => 2544.42605275546, "\142\164\x75" => 2544.42605275546), "\x68\x68" => array("\x4a" => 2684517.4131617, "\145" => 26845161228302.4, "\x63" => 641616.438565991, "\143\x61\x6c" => 641186.7578458349, "\145\x56" => 1.67553E+25, "\x65\x76" => 1.67553E+25, "\x48\x50\x68" => 1.0, "\150\150" => 1.0, "\x57\150" => 745.6996531345929, "\167\150" => 745.6996531345929, "\146\154\x62" => 63704731.6692964, "\102\124\x55" => 2544.42605275546, "\x62\x74\x75" => 2544.42605275546), "\x57\x68" => array("\x4a" => 3599.9982055472, "\x65" => 35999964751.8369, "\143" => 860.422069219046, "\143\141\154" => 859.845857713046, "\x65\x56" => 2.2469234E+22, "\145\x76" => 2.2469234E+22, "\110\x50\150" => 0.00134102248243839, "\x68\150" => 0.00134102248243839, "\127\150" => 1.0, "\167\x68" => 1.0, "\x66\x6c\142" => 85429.4774062316, "\102\124\125" => 3.41213254164705, "\x62\x74\x75" => 3.41213254164705), "\167\x68" => array("\x4a" => 3599.9982055472, "\145" => 35999964751.8369, "\143" => 860.422069219046, "\143\x61\154" => 859.845857713046, "\145\126" => 2.2469234E+22, "\x65\x76" => 2.2469234E+22, "\x48\120\150" => 0.00134102248243839, "\x68\x68" => 0.00134102248243839, "\127\x68" => 1.0, "\x77\150" => 1.0, "\146\154\x62" => 85429.4774062316, "\x42\124\x55" => 3.41213254164705, "\142\x74\x75" => 3.41213254164705), "\146\154\x62" => array("\112" => 0.0421400003236424, "\145" => 421399.80068766, "\143" => 0.0100717234301644, "\x63\x61\154" => 0.0100649785509554, "\145\126" => 2.63015E+17, "\x65\x76" => 2.63015E+17, "\x48\x50\x68" => 1.5697421114513E-8, "\x68\x68" => 1.5697421114513E-8, "\x57\150" => 1.17055614802E-5, "\167\150" => 1.17055614802E-5, "\146\154\142" => 1.0, "\x42\124\x55" => 3.99409272448406E-5, "\x62\x74\165" => 3.99409272448406E-5), "\102\124\125" => array("\112" => 1055.05813786749, "\x65" => 10550576307.4665, "\143" => 252.165488508168, "\143\x61\154" => 251.99661713551, "\x65\126" => 6.5851E+21, "\145\x76" => 6.5851E+21, "\x48\x50\x68" => 0.000393015941224568, "\x68\x68" => 0.000393015941224568, "\127\150" => 0.293071851047526, "\167\150" => 0.293071851047526, "\x66\154\142" => 25036.9750774671, "\102\x54\x55" => 1.0, "\x62\x74\x75" => 1.0), "\142\164\165" => array("\x4a" => 1055.05813786749, "\x65" => 10550576307.4665, "\143" => 252.165488508168, "\x63\141\154" => 251.99661713551, "\x65\x56" => 6.5851E+21, "\x65\166" => 6.5851E+21, "\x48\x50\x68" => 0.000393015941224568, "\150\x68" => 0.000393015941224568, "\127\x68" => 0.293071851047526, "\x77\x68" => 0.293071851047526, "\146\154\142" => 25036.9750774671, "\102\x54\x55" => 1.0, "\142\x74\x75" => 1.0)), "\x50\157\x77\145\x72" => array("\110\120" => array("\110\x50" => 1.0, "\150" => 1.0, "\x57" => 745.701, "\x77" => 745.701), "\x68" => array("\110\x50" => 1.0, "\150" => 1.0, "\x57" => 745.701, "\167" => 745.701), "\127" => array("\x48\x50" => 0.00134102006031908, "\150" => 0.00134102006031908, "\x57" => 1.0, "\x77" => 1.0), "\167" => array("\x48\120" => 0.00134102006031908, "\150" => 0.00134102006031908, "\x57" => 1.0, "\x77" => 1.0)), "\115\141\147\156\x65\164\151\163\x6d" => array("\124" => array("\124" => 1.0, "\x67\x61" => 10000.0), "\x67\x61" => array("\x54" => 0.0001, "\x67\x61" => 1.0)), "\x4c\151\x71\165\x69\144" => array("\164\163\160" => array("\x74\x73\160" => 1.0, "\x74\142\x73" => 0.333333333333333, "\x6f\172" => 0.166666666666667, "\143\165\x70" => 0.0208333333333333, "\x70\x74" => 0.0104166666666667, "\x75\x73\137\160\164" => 0.0104166666666667, "\x75\153\x5f\x70\x74" => 0.008675585168219599, "\161\164" => 0.00520833333333333, "\147\x61\154" => 0.00130208333333333, "\x6c" => 0.0049299940840071, "\154\x74" => 0.0049299940840071), "\x74\142\x73" => array("\x74\x73\160" => 3.0, "\x74\x62\x73" => 1.0, "\157\172" => 0.5, "\x63\x75\160" => 0.0625, "\x70\x74" => 0.03125, "\165\163\137\160\164" => 0.03125, "\165\x6b\137\160\x74" => 0.0260267555046588, "\161\x74" => 0.015625, "\x67\141\x6c" => 0.00390625, "\154" => 0.0147899822520213, "\154\164" => 0.0147899822520213), "\157\172" => array("\164\163\x70" => 6.0, "\164\142\163" => 2.0, "\x6f\x7a" => 1.0, "\143\165\x70" => 0.125, "\x70\164" => 0.0625, "\165\163\137\160\x74" => 0.0625, "\165\x6b\x5f\160\x74" => 0.0520535110093176, "\161\x74" => 0.03125, "\147\141\154" => 0.0078125, "\154" => 0.0295799645040426, "\154\x74" => 0.0295799645040426), "\x63\x75\160" => array("\164\163\x70" => 48.0, "\x74\x62\x73" => 16.0, "\157\x7a" => 8.0, "\143\165\x70" => 1.0, "\x70\x74" => 0.5, "\165\163\x5f\160\x74" => 0.5, "\x75\153\137\160\164" => 0.416428088074541, "\x71\x74" => 0.25, "\147\141\x6c" => 0.0625, "\154" => 0.236639716032341, "\x6c\x74" => 0.236639716032341), "\x70\x74" => array("\164\163\160" => 96.0, "\x74\x62\163" => 32.0, "\x6f\x7a" => 16.0, "\x63\x75\x70" => 2.0, "\160\164" => 1.0, "\165\x73\x5f\x70\x74" => 1.0, "\x75\153\x5f\160\x74" => 0.832856176149081, "\x71\x74" => 0.5, "\x67\141\x6c" => 0.125, "\154" => 0.473279432064682, "\154\164" => 0.473279432064682), "\x75\163\x5f\160\164" => array("\164\163\160" => 96.0, "\x74\x62\x73" => 32.0, "\x6f\172" => 16.0, "\x63\165\160" => 2.0, "\160\164" => 1.0, "\165\x73\137\160\164" => 1.0, "\x75\153\x5f\x70\x74" => 0.832856176149081, "\161\x74" => 0.5, "\147\141\x6c" => 0.125, "\154" => 0.473279432064682, "\154\x74" => 0.473279432064682), "\165\x6b\x5f\x70\164" => array("\164\163\160" => 115.266, "\x74\x62\x73" => 38.422, "\157\172" => 19.211, "\143\165\160" => 2.401375, "\x70\164" => 1.2006875, "\x75\163\x5f\x70\x74" => 1.2006875, "\165\153\x5f\x70\164" => 1.0, "\161\x74" => 0.60034375, "\x67\x61\x6c" => 0.1500859375, "\154" => 0.568260698087162, "\154\164" => 0.568260698087162), "\161\x74" => array("\164\x73\160" => 192.0, "\164\142\x73" => 64.0, "\157\x7a" => 32.0, "\x63\x75\160" => 4.0, "\160\164" => 2.0, "\165\x73\137\160\x74" => 2.0, "\x75\x6b\137\160\x74" => 1.66571235229816, "\x71\164" => 1.0, "\x67\x61\x6c" => 0.25, "\x6c" => 0.946558864129363, "\x6c\x74" => 0.946558864129363), "\147\141\x6c" => array("\x74\163\x70" => 768.0, "\x74\142\x73" => 256.0, "\x6f\172" => 128.0, "\143\165\160" => 16.0, "\x70\164" => 8.0, "\x75\x73\x5f\160\164" => 8.0, "\x75\153\137\x70\164" => 6.66284940919265, "\161\164" => 4.0, "\x67\x61\154" => 1.0, "\154" => 3.78623545651745, "\x6c\x74" => 3.78623545651745), "\154" => array("\164\163\160" => 202.84, "\x74\x62\x73" => 67.6133333333333, "\x6f\172" => 33.8066666666667, "\x63\x75\160" => 4.22583333333333, "\x70\164" => 2.11291666666667, "\165\x73\x5f\x70\164" => 2.11291666666667, "\x75\x6b\x5f\160\x74" => 1.75975569552166, "\x71\164" => 1.05645833333333, "\x67\x61\154" => 0.264114583333333, "\154" => 1.0, "\x6c\x74" => 1.0), "\154\164" => array("\x74\163\160" => 202.84, "\164\x62\x73" => 67.6133333333333, "\157\x7a" => 33.8066666666667, "\143\165\x70" => 4.22583333333333, "\x70\x74" => 2.11291666666667, "\165\x73\137\160\164" => 2.11291666666667, "\x75\x6b\137\x70\x74" => 1.75975569552166, "\x71\x74" => 1.05645833333333, "\x67\x61\154" => 0.264114583333333, "\154" => 1.0, "\154\164" => 1.0))); public static function parseComplex($complexNumber) { goto sUPHs; KFsF2: if (strlen($workString) > 0) { $leadingSign = $workString[0] == "\x2b" || $workString[0] == "\55" ? 1 : 0; } goto GWQRS; JtISM: if ($suffix != '') { $imaginary = substr($workString, strlen($realNumber)); if ($imaginary == '' && ($realNumber == '' || $realNumber == "\53" || $realNumber == "\x2d")) { $imaginary = $realNumber . "\61"; $realNumber = "\60"; } elseif ($imaginary == '') { $imaginary = $realNumber; $realNumber = "\60"; } elseif ($imaginary == "\x2b" || $imaginary == "\55") { $imaginary .= "\x31"; } } goto pAUFv; GWQRS: $power = ''; goto GEp4C; w_AhH: if (!is_numeric($suffix)) { $workString = substr($workString, 0, -1); } else { $suffix = ''; } goto jIdvQ; q1pov: $realNumber = $imaginary = 0; goto r0DLN; o9Ocl: if (strtoupper(substr($realNumber, -1)) == "\x45") { $power = strtok("\53\55"); ++$leadingSign; } goto N9RQX; r0DLN: $suffix = substr($workString, -1); goto w_AhH; sUPHs: $workString = (string) $complexNumber; goto q1pov; pAUFv: return array("\162\145\x61\154" => $realNumber, "\151\x6d\141\x67\x69\156\141\x72\x79" => $imaginary, "\x73\165\x66\146\x69\x78" => $suffix); goto KyVEo; GEp4C: $realNumber = strtok($workString, "\53\x2d"); goto o9Ocl; N9RQX: $realNumber = substr($workString, 0, strlen($realNumber) + strlen($power) + $leadingSign); goto JtISM; jIdvQ: $leadingSign = 0; goto KFsF2; KyVEo: } private static function cleanComplex($complexNumber) { goto nTRhi; nTRhi: if ($complexNumber[0] == "\53") { $complexNumber = substr($complexNumber, 1); } goto ZVAfm; rE0BW: if ($complexNumber[0] == "\56") { $complexNumber = "\x30" . $complexNumber; } goto ShVS3; ShVS3: if ($complexNumber[0] == "\x2b") { $complexNumber = substr($complexNumber, 1); } goto IlIGR; ZVAfm: if ($complexNumber[0] == "\60") { $complexNumber = substr($complexNumber, 1); } goto rE0BW; IlIGR: return $complexNumber; goto H04Zg; H04Zg: } private static function nbrConversionFormat($xVal, $places) { if (!is_null($places)) { if (strlen($xVal) <= $places) { return substr(str_pad($xVal, $places, "\x30", STR_PAD_LEFT), -10); } else { return PHPExcel_Calculation_Functions::NaN(); } } return substr($xVal, -10); } public static function BESSELI($x, $ord) { goto dAa3y; WWP9u: return PHPExcel_Calculation_Functions::VALUE(); goto xDuuc; w6pWP: if (is_numeric($x) && is_numeric($ord)) { goto Tkqa5; Tkqa5: $ord = floor($ord); goto EUDke; TR4kJ: if (abs($x) <= 30) { goto Dtyg1; hzjhW: do { $fTerm *= $fSqrX; $fTerm /= $ordK * ($ordK + $ord); $fResult += $fTerm; } while (abs($fTerm) > 1.0E-12 && ++$ordK < 100); goto N4TgQ; W_JE7: $ordK = 1; goto oEl11; oEl11: $fSqrX = $x * $x / 4; goto hzjhW; Dtyg1: $fResult = $fTerm = pow($x / 2, $ord) / PHPExcel_Calculation_MathTrig::FACT($ord); goto W_JE7; N4TgQ: } else { goto NSVhU; NSVhU: $f_2_PI = 2 * M_PI; goto T09wE; Adlv4: if ($ord & 1 && $x < 0) { $fResult = -$fResult; } goto QY4xY; Hclqs: $fResult = exp($fXAbs) / sqrt($f_2_PI * $fXAbs); goto Adlv4; T09wE: $fXAbs = abs($x); goto Hclqs; QY4xY: } goto Vt5ct; EUDke: if ($ord < 0) { return PHPExcel_Calculation_Functions::NaN(); } goto TR4kJ; Vt5ct: return is_nan($fResult) ? PHPExcel_Calculation_Functions::NaN() : $fResult; goto fTZg7; fTZg7: } goto WWP9u; dAa3y: $x = is_null($x) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($x); goto jU1R1; jU1R1: $ord = is_null($ord) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($ord); goto w6pWP; xDuuc: } public static function BESSELJ($x, $ord) { goto QsZ_l; ZPQse: return PHPExcel_Calculation_Functions::VALUE(); goto uXALG; l1bOp: if (is_numeric($x) && is_numeric($ord)) { goto GDvSR; NCrKt: $fResult = 0; goto Km65W; f_Oxj: if ($ord < 0) { return PHPExcel_Calculation_Functions::NaN(); } goto NCrKt; GDvSR: $ord = floor($ord); goto f_Oxj; a93qu: return is_nan($fResult) ? PHPExcel_Calculation_Functions::NaN() : $fResult; goto S3P7B; Km65W: if (abs($x) <= 30) { goto B0spl; fYqsD: $ordK = 1; goto SgJRL; ND5hd: do { $fTerm *= $fSqrX; $fTerm /= $ordK * ($ordK + $ord); $fResult += $fTerm; } while (abs($fTerm) > 1.0E-12 && ++$ordK < 100); goto HDlo3; B0spl: $fResult = $fTerm = pow($x / 2, $ord) / PHPExcel_Calculation_MathTrig::FACT($ord); goto fYqsD; SgJRL: $fSqrX = $x * $x / -4; goto ND5hd; HDlo3: } else { goto x22Vs; EMfI4: if ($ord & 1 && $x < 0) { $fResult = -$fResult; } goto rHmbT; qbtOO: $fResult = sqrt(M_2DIVPI / $fXAbs) * cos($fXAbs - $ord * $f_PI_DIV_2 - $f_PI_DIV_4); goto EMfI4; x22Vs: $f_PI_DIV_2 = M_PI / 2; goto HVNeI; QY3a4: $fXAbs = abs($x); goto qbtOO; HVNeI: $f_PI_DIV_4 = M_PI / 4; goto QY3a4; rHmbT: } goto a93qu; S3P7B: } goto ZPQse; QsZ_l: $x = is_null($x) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($x); goto KlVwJ; KlVwJ: $ord = is_null($ord) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($ord); goto l1bOp; uXALG: } private static function besselK0($fNum) { if ($fNum <= 2) { goto nzApW; Z_v1Q: $fRet = -log($fNum2) * self::BESSELI($fNum, 0) + (-0.57721566 + $y * (0.4227842 + $y * (0.23069756 + $y * (0.0348859 + $y * (0.00262698 + $y * (0.0001075 + $y * 7.4E-6)))))); goto bOPq4; nzApW: $fNum2 = $fNum * 0.5; goto oT4EO; oT4EO: $y = $fNum2 * $fNum2; goto Z_v1Q; bOPq4: } else { $y = 2 / $fNum; $fRet = exp(-$fNum) / sqrt($fNum) * (1.25331414 + $y * (-0.07832358 + $y * (0.02189568 + $y * (-0.01062446 + $y * (0.00587872 + $y * (-0.0025154 + $y * 0.00053208)))))); } return $fRet; } private static function besselK1($fNum) { if ($fNum <= 2) { goto d1qYk; oJ84u: $fRet = log($fNum2) * self::BESSELI($fNum, 1) + (1 + $y * (0.15443144 + $y * (-0.6727857900000001 + $y * (-0.18156897 + $y * (-0.01919402 + $y * (-0.00110404 + $y * -4.686E-5)))))) / $fNum; goto Wy3LQ; d1qYk: $fNum2 = $fNum * 0.5; goto tNXSs; tNXSs: $y = $fNum2 * $fNum2; goto oJ84u; Wy3LQ: } else { $y = 2 / $fNum; $fRet = exp(-$fNum) / sqrt($fNum) * (1.25331414 + $y * (0.23498619 + $y * (-0.0365562 + $y * (0.01504268 + $y * (-0.00780353 + $y * (0.00325614 + $y * -0.00068245)))))); } return $fRet; } public static function BESSELK($x, $ord) { goto Fmlbr; Fmlbr: $x = is_null($x) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($x); goto ClWJV; ClWJV: $ord = is_null($ord) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($ord); goto y2Ihe; YdMNt: return PHPExcel_Calculation_Functions::VALUE(); goto sOV9V; y2Ihe: if (is_numeric($x) && is_numeric($ord)) { goto e8R0w; iQb_o: switch (floor($ord)) { case 0: return self::besselK0($x); case 1: return self::besselK1($x); default: goto dTO24; dTO24: $fTox = 2 / $x; goto fc2GR; d4Rfx: for ($n = 1; $n < $ord; ++$n) { $fBkp = $fBkm + $n * $fTox * $fBk; $fBkm = $fBk; $fBk = $fBkp; } goto RRBen; a0ve5: $fBk = self::besselK1($x); goto d4Rfx; fc2GR: $fBkm = self::besselK0($x); goto a0ve5; RRBen: } goto qgsK2; e8R0w: if ($ord < 0 || $x == 0.0) { return PHPExcel_Calculation_Functions::NaN(); } goto iQb_o; qgsK2: return is_nan($fBk) ? PHPExcel_Calculation_Functions::NaN() : $fBk; goto GUuwU; GUuwU: } goto YdMNt; sOV9V: } private static function besselY0($fNum) { if ($fNum < 8.0) { goto J6Eu8; vV7cm: $f1 = -2957821389.0 + $y * (7062834065.0 + $y * (-512359803.6 + $y * (10879881.29 + $y * (-86327.92757 + $y * 228.4622733)))); goto lTwF0; eewqt: $fRet = $f1 / $f2 + 0.636619772 * self::BESSELJ($fNum, 0) * log($fNum); goto BfXPw; lTwF0: $f2 = 40076544269.0 + $y * (745249964.8 + $y * (7189466.438 + $y * (47447.2647 + $y * (226.1030244 + $y)))); goto eewqt; J6Eu8: $y = $fNum * $fNum; goto vV7cm; BfXPw: } else { goto IHsMt; S89j7: $f1 = 1 + $y * (-0.001098628627 + $y * (2.734510407E-5 + $y * (-2.073370639E-6 + $y * 2.093887211E-7))); goto XJh4D; XJh4D: $f2 = -0.01562499995 + $y * (0.0001430488765 + $y * (-6.911147651E-6 + $y * (7.621095161000001E-7 + $y * -9.34945152E-8))); goto TqOdr; qsvYc: $y = $z * $z; goto XNFuD; XNFuD: $xx = $fNum - 0.785398164; goto S89j7; IHsMt: $z = 8.0 / $fNum; goto qsvYc; TqOdr: $fRet = sqrt(0.636619772 / $fNum) * (sin($xx) * $f1 + $z * cos($xx) * $f2); goto dyyL2; dyyL2: } return $fRet; } private static function besselY1($fNum) { if ($fNum < 8.0) { goto jMuSC; W51lM: $f1 = $fNum * (-4900604943000.0 + $y * (1275274390000.0 + $y * (-51534381390.0 + $y * (734926455.1 + $y * (-4237922.726 + $y * 8511.937935))))); goto Z723o; jMuSC: $y = $fNum * $fNum; goto W51lM; nMiYP: $fRet = $f1 / $f2 + 0.636619772 * (self::BESSELJ($fNum, 1) * log($fNum) - 1 / $fNum); goto lJKbw; Z723o: $f2 = 24995805700000.0 + $y * (424441966400.0 + $y * (3733650367.0 + $y * (22459040.02 + $y * (102042.605 + $y * (354.9632885 + $y))))); goto nMiYP; lJKbw: } else { $fRet = sqrt(0.636619772 / $fNum) * sin($fNum - 2.356194491); } return $fRet; } public static function BESSELY($x, $ord) { goto MSw41; GLQt8: if (is_numeric($x) && is_numeric($ord)) { goto gB6o5; gB6o5: if ($ord < 0 || $x == 0.0) { return PHPExcel_Calculation_Functions::NaN(); } goto LTTYK; LTTYK: switch (floor($ord)) { case 0: return self::besselY0($x); case 1: return self::besselY1($x); default: goto Z3jrg; Z3jrg: $fTox = 2 / $x; goto jl99K; RPtU9: $fBy = self::besselY1($x); goto uAtMJ; uAtMJ: for ($n = 1; $n < $ord; ++$n) { $fByp = $n * $fTox * $fBy - $fBym; $fBym = $fBy; $fBy = $fByp; } goto J2Yrt; jl99K: $fBym = self::besselY0($x); goto RPtU9; J2Yrt: } goto ESdK0; ESdK0: return is_nan($fBy) ? PHPExcel_Calculation_Functions::NaN() : $fBy; goto iRoz9; iRoz9: } goto oB6Tp; oK_6s: $ord = is_null($ord) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($ord); goto GLQt8; oB6Tp: return PHPExcel_Calculation_Functions::VALUE(); goto HEdEf; MSw41: $x = is_null($x) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($x); goto oK_6s; HEdEf: } public static function BINTODEC($x) { goto x3jzM; lVfFW: return bindec($x); goto E9X1K; z0vXs: if (strlen($x) > 10) { return PHPExcel_Calculation_Functions::NaN(); } elseif (strlen($x) == 10) { $x = substr($x, -9); return "\x2d" . (512 - bindec($x)); } goto lVfFW; ZnxKK: if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_GNUMERIC) { $x = floor($x); } goto BCddK; x3jzM: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto GMMru; BCddK: $x = (string) $x; goto S6Aoz; S6Aoz: if (strlen($x) > preg_match_all("\x2f\133\60\61\x5d\x2f", $x, $out)) { return PHPExcel_Calculation_Functions::NaN(); } goto z0vXs; GMMru: if (is_bool($x)) { if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_OPENOFFICE) { $x = (int) $x; } else { return PHPExcel_Calculation_Functions::VALUE(); } } goto ZnxKK; E9X1K: } public static function BINTOHEX($x, $places = null) { goto Rk_t3; HaQXx: if (strlen($x) > preg_match_all("\x2f\x5b\x30\61\x5d\57", $x, $out)) { return PHPExcel_Calculation_Functions::NaN(); } goto oZydL; oZydL: if (strlen($x) > 10) { return PHPExcel_Calculation_Functions::NaN(); } elseif (strlen($x) == 10) { return str_repeat("\x46", 8) . substr(strtoupper(dechex(bindec(substr($x, -9)))), -2); } goto ERfVd; wY9_L: $places = PHPExcel_Calculation_Functions::flattenSingleValue($places); goto MEOWS; MEOWS: if (is_bool($x)) { if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_OPENOFFICE) { $x = (int) $x; } else { return PHPExcel_Calculation_Functions::VALUE(); } } goto lu8U9; wuiM3: $x = (string) $x; goto HaQXx; GtlQP: return self::nbrConversionFormat($hexVal, $places); goto o8xdM; ERfVd: $hexVal = (string) strtoupper(dechex(bindec($x))); goto GtlQP; lu8U9: if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_GNUMERIC) { $x = floor($x); } goto wuiM3; Rk_t3: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto wY9_L; o8xdM: } public static function BINTOOCT($x, $places = null) { goto BVZPk; gP21e: if (strlen($x) > 10) { return PHPExcel_Calculation_Functions::NaN(); } elseif (strlen($x) == 10) { return str_repeat("\x37", 7) . substr(strtoupper(decoct(bindec(substr($x, -9)))), -3); } goto GO_8G; iZVxm: if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_GNUMERIC) { $x = floor($x); } goto IFwtw; GO_8G: $octVal = (string) decoct(bindec($x)); goto d3FMA; INydf: if (is_bool($x)) { if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_OPENOFFICE) { $x = (int) $x; } else { return PHPExcel_Calculation_Functions::VALUE(); } } goto iZVxm; IFwtw: $x = (string) $x; goto vgo8W; vgo8W: if (strlen($x) > preg_match_all("\57\133\60\61\135\x2f", $x, $out)) { return PHPExcel_Calculation_Functions::NaN(); } goto gP21e; d3FMA: return self::nbrConversionFormat($octVal, $places); goto jhG4s; BVZPk: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto maqEW; maqEW: $places = PHPExcel_Calculation_Functions::flattenSingleValue($places); goto INydf; jhG4s: } public static function DECTOBIN($x, $places = null) { goto NbqM8; DmIdy: $places = PHPExcel_Calculation_Functions::flattenSingleValue($places); goto k5q5e; blOU6: if (strlen($r) == 32) { $r = substr($r, -10); } elseif (strlen($r) > 11) { return PHPExcel_Calculation_Functions::NaN(); } goto aymiC; l0I02: $x = (string) floor($x); goto Wy52w; UGeIA: $x = (string) $x; goto SVTqR; NbqM8: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto DmIdy; k5q5e: if (is_bool($x)) { if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_OPENOFFICE) { $x = (int) $x; } else { return PHPExcel_Calculation_Functions::VALUE(); } } goto UGeIA; aymiC: return self::nbrConversionFormat($r, $places); goto w42cw; SVTqR: if (strlen($x) > preg_match_all("\57\133\55\x30\61\x32\63\x34\65\x36\x37\x38\71\56\x5d\x2f", $x, $out)) { return PHPExcel_Calculation_Functions::VALUE(); } goto l0I02; Wy52w: $r = decbin($x); goto blOU6; w42cw: } public static function DECTOHEX($x, $places = null) { goto Foruo; iZllB: if (strlen($r) == 8) { $r = "\106\x46" . $r; } goto QMTzD; fKuP5: if (is_bool($x)) { if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_OPENOFFICE) { $x = (int) $x; } else { return PHPExcel_Calculation_Functions::VALUE(); } } goto lgdFQ; QMTzD: return self::nbrConversionFormat($r, $places); goto hvRxq; J55OX: $places = PHPExcel_Calculation_Functions::flattenSingleValue($places); goto fKuP5; lgdFQ: $x = (string) $x; goto AreQp; lHgi4: $x = (string) floor($x); goto U8X2k; U8X2k: $r = strtoupper(dechex($x)); goto iZllB; AreQp: if (strlen($x) > preg_match_all("\57\x5b\55\60\61\62\x33\64\x35\x36\67\x38\71\x2e\x5d\x2f", $x, $out)) { return PHPExcel_Calculation_Functions::VALUE(); } goto lHgi4; Foruo: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto J55OX; hvRxq: } public static function DECTOOCT($x, $places = null) { goto r3P7D; Zfd_2: if (strlen($x) > preg_match_all("\57\x5b\55\x30\61\x32\63\x34\65\x36\67\x38\x39\56\x5d\57", $x, $out)) { return PHPExcel_Calculation_Functions::VALUE(); } goto jGEHN; XcM2m: return self::nbrConversionFormat($r, $places); goto B0N8x; HOEkz: $r = decoct($x); goto nR6e2; SmoRN: $x = (string) $x; goto Zfd_2; KX91R: $places = PHPExcel_Calculation_Functions::flattenSingleValue($places); goto P05wL; P05wL: if (is_bool($x)) { if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_OPENOFFICE) { $x = (int) $x; } else { return PHPExcel_Calculation_Functions::VALUE(); } } goto SmoRN; nR6e2: if (strlen($r) == 11) { $r = substr($r, -10); } goto XcM2m; jGEHN: $x = (string) floor($x); goto HOEkz; r3P7D: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto KX91R; B0N8x: } public static function HEXTOBIN($x, $places = null) { goto QtAFc; w_545: return substr(self::nbrConversionFormat($binVal, $places), -10); goto cm1Es; p5Qn2: $binVal = decbin(hexdec($x)); goto w_545; QtAFc: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto epPUo; epPUo: $places = PHPExcel_Calculation_Functions::flattenSingleValue($places); goto KkDYw; nw56P: $x = (string) $x; goto TDEj_; TDEj_: if (strlen($x) > preg_match_all("\x2f\133\60\x31\x32\x33\x34\65\x36\67\70\71\x41\102\x43\104\x45\106\135\x2f", strtoupper($x), $out)) { return PHPExcel_Calculation_Functions::NaN(); } goto p5Qn2; KkDYw: if (is_bool($x)) { return PHPExcel_Calculation_Functions::VALUE(); } goto nw56P; cm1Es: } public static function HEXTODEC($x) { goto lLgUY; lLgUY: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto GTKFe; dC_e9: $x = (string) $x; goto dqRq_; dqRq_: if (strlen($x) > preg_match_all("\57\x5b\60\x31\x32\x33\64\x35\66\67\x38\x39\x41\x42\103\104\105\106\x5d\x2f", strtoupper($x), $out)) { return PHPExcel_Calculation_Functions::NaN(); } goto Y2ZKA; Y2ZKA: return hexdec($x); goto JVuo0; GTKFe: if (is_bool($x)) { return PHPExcel_Calculation_Functions::VALUE(); } goto dC_e9; JVuo0: } public static function HEXTOOCT($x, $places = null) { goto WUx8V; d5Aoy: $octVal = decoct(hexdec($x)); goto hSzai; hSzai: return self::nbrConversionFormat($octVal, $places); goto nlBye; ry67d: if (is_bool($x)) { return PHPExcel_Calculation_Functions::VALUE(); } goto bKNBg; v6dPx: $places = PHPExcel_Calculation_Functions::flattenSingleValue($places); goto ry67d; d6Wa1: if (strlen($x) > preg_match_all("\x2f\x5b\60\x31\x32\63\x34\x35\x36\67\70\71\101\102\x43\104\105\106\x5d\x2f", strtoupper($x), $out)) { return PHPExcel_Calculation_Functions::NaN(); } goto d5Aoy; WUx8V: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto v6dPx; bKNBg: $x = (string) $x; goto d6Wa1; nlBye: } public static function OCTTOBIN($x, $places = null) { goto c42x8; cLfqE: if (is_bool($x)) { return PHPExcel_Calculation_Functions::VALUE(); } goto jpMVv; IcmT7: return self::nbrConversionFormat($r, $places); goto CcQJ1; jpMVv: $x = (string) $x; goto rgbGG; gcFjt: $places = PHPExcel_Calculation_Functions::flattenSingleValue($places); goto cLfqE; rgbGG: if (preg_match_all("\x2f\133\x30\x31\62\63\64\x35\x36\67\x5d\x2f", $x, $out) != strlen($x)) { return PHPExcel_Calculation_Functions::NaN(); } goto LFz5S; LFz5S: $r = decbin(octdec($x)); goto IcmT7; c42x8: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto gcFjt; CcQJ1: } public static function OCTTODEC($x) { goto mIhNF; ChtL2: return octdec($x); goto TiMbK; CFsIA: if (preg_match_all("\57\x5b\x30\x31\62\x33\x34\65\x36\67\135\57", $x, $out) != strlen($x)) { return PHPExcel_Calculation_Functions::NaN(); } goto ChtL2; lplbK: $x = (string) $x; goto CFsIA; mIhNF: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto MSvC5; MSvC5: if (is_bool($x)) { return PHPExcel_Calculation_Functions::VALUE(); } goto lplbK; TiMbK: } public static function OCTTOHEX($x, $places = null) { goto eiIyU; yt2H_: if (preg_match_all("\57\x5b\60\61\62\x33\x34\x35\66\x37\x5d\57", $x, $out) != strlen($x)) { return PHPExcel_Calculation_Functions::NaN(); } goto BX6qi; BX6qi: $hexVal = strtoupper(dechex(octdec($x))); goto Z1xeJ; Z1xeJ: return self::nbrConversionFormat($hexVal, $places); goto BQLmm; HXafP: $places = PHPExcel_Calculation_Functions::flattenSingleValue($places); goto y6rEN; y6rEN: if (is_bool($x)) { return PHPExcel_Calculation_Functions::VALUE(); } goto L9ubf; eiIyU: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto HXafP; L9ubf: $x = (string) $x; goto yt2H_; BQLmm: } public static function COMPLEX($realNumber = 0.0, $imaginary = 0.0, $suffix = "\x69") { goto Kz0fN; Kz0fN: $realNumber = is_null($realNumber) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($realNumber); goto u324O; l8ysC: return PHPExcel_Calculation_Functions::VALUE(); goto bM53C; EEK8q: if (is_numeric($realNumber) && is_numeric($imaginary) && ($suffix == "\151" || $suffix == "\x6a" || $suffix == '')) { goto Xqg0I; K7_M6: return (string) $realNumber . $imaginary . $suffix; goto jPlZ9; MFN5W: if ($realNumber == 0.0) { if ($imaginary == 0.0) { return (string) "\x30"; } elseif ($imaginary == 1.0) { return (string) $suffix; } elseif ($imaginary == -1.0) { return (string) "\x2d" . $suffix; } return (string) $imaginary . $suffix; } elseif ($imaginary == 0.0) { return (string) $realNumber; } elseif ($imaginary == 1.0) { return (string) $realNumber . "\x2b" . $suffix; } elseif ($imaginary == -1.0) { return (string) $realNumber . "\55" . $suffix; } goto ePhaJ; FcECI: if ($suffix == '') { $suffix = "\151"; } goto MFN5W; ePhaJ: if ($imaginary > 0) { $imaginary = (string) "\53" . $imaginary; } goto K7_M6; Z2Ude: $imaginary = (float) $imaginary; goto FcECI; Xqg0I: $realNumber = (float) $realNumber; goto Z2Ude; jPlZ9: } goto l8ysC; u324O: $imaginary = is_null($imaginary) ? 0.0 : PHPExcel_Calculation_Functions::flattenSingleValue($imaginary); goto fEJgf; fEJgf: $suffix = is_null($suffix) ? "\x69" : PHPExcel_Calculation_Functions::flattenSingleValue($suffix); goto EEK8q; bM53C: } public static function IMAGINARY($complexNumber) { goto qrvHD; qqqjE: $parsedComplex = self::parseComplex($complexNumber); goto tz0kV; tz0kV: return $parsedComplex["\151\155\141\147\151\x6e\x61\162\x79"]; goto dBDnW; qrvHD: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto qqqjE; dBDnW: } public static function IMREAL($complexNumber) { goto vaySn; fTQUO: return $parsedComplex["\162\x65\x61\154"]; goto Y8pRl; bgG2u: $parsedComplex = self::parseComplex($complexNumber); goto fTQUO; vaySn: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto bgG2u; Y8pRl: } public static function IMABS($complexNumber) { goto caSkN; Y3cST: return sqrt($parsedComplex["\162\x65\141\x6c"] * $parsedComplex["\x72\145\141\154"] + $parsedComplex["\151\x6d\x61\x67\x69\x6e\x61\x72\x79"] * $parsedComplex["\151\x6d\141\147\x69\x6e\141\x72\x79"]); goto jG8M5; caSkN: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto A4O6F; A4O6F: $parsedComplex = self::parseComplex($complexNumber); goto Y3cST; jG8M5: } public static function IMARGUMENT($complexNumber) { goto jbFk2; jbFk2: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto oGOPw; oGOPw: $parsedComplex = self::parseComplex($complexNumber); goto IXTC7; IXTC7: if ($parsedComplex["\x72\x65\x61\154"] == 0.0) { if ($parsedComplex["\x69\155\x61\x67\151\156\x61\162\171"] == 0.0) { return 0.0; } elseif ($parsedComplex["\x69\155\x61\147\x69\x6e\x61\162\x79"] < 0.0) { return M_PI / -2; } else { return M_PI / 2; } } elseif ($parsedComplex["\x72\x65\x61\154"] > 0.0) { return atan($parsedComplex["\x69\x6d\141\x67\151\156\x61\x72\x79"] / $parsedComplex["\162\x65\141\x6c"]); } elseif ($parsedComplex["\x69\155\x61\147\151\156\141\x72\x79"] < 0.0) { return 0 - (M_PI - atan(abs($parsedComplex["\151\x6d\x61\147\151\156\x61\162\171"]) / abs($parsedComplex["\162\x65\x61\154"]))); } else { return M_PI - atan($parsedComplex["\151\x6d\141\147\x69\x6e\x61\x72\171"] / abs($parsedComplex["\162\x65\x61\154"])); } goto U2Xr_; U2Xr_: } public static function IMCONJUGATE($complexNumber) { goto pY7Bo; G32e3: $parsedComplex = self::parseComplex($complexNumber); goto TGobc; pY7Bo: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto G32e3; TGobc: if ($parsedComplex["\151\x6d\141\x67\151\156\141\162\x79"] == 0.0) { return $parsedComplex["\x72\145\141\x6c"]; } else { return self::cleanComplex(self::COMPLEX($parsedComplex["\x72\145\141\x6c"], 0 - $parsedComplex["\151\x6d\141\147\151\x6e\x61\162\171"], $parsedComplex["\163\165\x66\146\151\170"])); } goto M0FRa; M0FRa: } public static function IMCOS($complexNumber) { goto Sr_UU; SsOhF: $parsedComplex = self::parseComplex($complexNumber); goto QbLiC; QbLiC: if ($parsedComplex["\151\x6d\x61\147\x69\156\141\162\x79"] == 0.0) { return cos($parsedComplex["\162\x65\141\154"]); } else { return self::IMCONJUGATE(self::COMPLEX(cos($parsedComplex["\162\145\141\154"]) * cosh($parsedComplex["\151\155\x61\147\151\156\x61\162\171"]), sin($parsedComplex["\162\x65\x61\x6c"]) * sinh($parsedComplex["\x69\x6d\x61\x67\151\156\x61\162\171"]), $parsedComplex["\x73\x75\146\x66\x69\x78"])); } goto f97il; Sr_UU: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto SsOhF; f97il: } public static function IMSIN($complexNumber) { goto xWLnI; nDKBM: if ($parsedComplex["\x69\155\x61\x67\x69\156\x61\x72\x79"] == 0.0) { return sin($parsedComplex["\x72\145\x61\x6c"]); } else { return self::COMPLEX(sin($parsedComplex["\x72\x65\x61\154"]) * cosh($parsedComplex["\151\x6d\x61\x67\x69\156\x61\x72\171"]), cos($parsedComplex["\x72\x65\x61\154"]) * sinh($parsedComplex["\x69\155\x61\147\x69\156\x61\x72\171"]), $parsedComplex["\x73\x75\x66\146\151\170"]); } goto n39IS; KQpEW: $parsedComplex = self::parseComplex($complexNumber); goto nDKBM; xWLnI: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto KQpEW; n39IS: } public static function IMSQRT($complexNumber) { goto RPxGO; RPxGO: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto cyuqk; O5r3c: $theta = self::IMARGUMENT($complexNumber); goto CGAez; SxJ0V: if ($parsedComplex["\163\165\146\146\x69\x78"] == '') { return self::COMPLEX($d1 * $r, $d2 * $r); } else { return self::COMPLEX($d1 * $r, $d2 * $r, $parsedComplex["\x73\165\146\146\x69\x78"]); } goto k0sYw; cyuqk: $parsedComplex = self::parseComplex($complexNumber); goto O5r3c; MSj9O: $r = sqrt(sqrt($parsedComplex["\162\x65\x61\x6c"] * $parsedComplex["\162\145\x61\154"] + $parsedComplex["\151\155\x61\x67\x69\x6e\141\x72\x79"] * $parsedComplex["\x69\x6d\141\x67\x69\156\141\x72\171"])); goto SxJ0V; Yszmm: $d2 = sin($theta / 2); goto MSj9O; CGAez: $d1 = cos($theta / 2); goto Yszmm; k0sYw: } public static function IMLN($complexNumber) { goto mEre9; FFvsG: if ($parsedComplex["\162\145\141\x6c"] == 0.0 && $parsedComplex["\151\x6d\x61\x67\151\156\141\162\x79"] == 0.0) { return PHPExcel_Calculation_Functions::NaN(); } goto iZg9w; Nk34K: $t = self::IMARGUMENT($complexNumber); goto qRBWI; iZg9w: $logR = log(sqrt($parsedComplex["\x72\x65\x61\x6c"] * $parsedComplex["\162\145\x61\154"] + $parsedComplex["\151\155\x61\147\x69\x6e\141\162\171"] * $parsedComplex["\x69\x6d\141\147\151\156\141\162\171"])); goto Nk34K; nfzM3: $parsedComplex = self::parseComplex($complexNumber); goto FFvsG; qRBWI: if ($parsedComplex["\x73\165\146\146\151\170"] == '') { return self::COMPLEX($logR, $t); } else { return self::COMPLEX($logR, $t, $parsedComplex["\x73\165\146\146\x69\x78"]); } goto g0P4g; mEre9: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto nfzM3; g0P4g: } public static function IMLOG10($complexNumber) { goto FPLEu; VsBU2: if ($parsedComplex["\162\145\x61\154"] == 0.0 && $parsedComplex["\151\x6d\141\x67\151\x6e\x61\162\171"] == 0.0) { return PHPExcel_Calculation_Functions::NaN(); } elseif ($parsedComplex["\162\x65\x61\154"] > 0.0 && $parsedComplex["\x69\x6d\x61\x67\151\x6e\141\x72\x79"] == 0.0) { return log10($parsedComplex["\162\x65\x61\x6c"]); } goto vlci0; FPLEu: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto b4Ngn; b4Ngn: $parsedComplex = self::parseComplex($complexNumber); goto VsBU2; vlci0: return self::IMPRODUCT(log10(EULER), self::IMLN($complexNumber)); goto bDNXb; bDNXb: } public static function IMLOG2($complexNumber) { goto cBaZz; X0Utr: $parsedComplex = self::parseComplex($complexNumber); goto rGN9l; y1XdZ: return self::IMPRODUCT(log(EULER, 2), self::IMLN($complexNumber)); goto tXRcg; rGN9l: if ($parsedComplex["\x72\145\x61\x6c"] == 0.0 && $parsedComplex["\151\155\x61\x67\x69\x6e\x61\162\171"] == 0.0) { return PHPExcel_Calculation_Functions::NaN(); } elseif ($parsedComplex["\162\x65\141\x6c"] > 0.0 && $parsedComplex["\x69\155\x61\x67\151\156\x61\162\171"] == 0.0) { return log($parsedComplex["\162\x65\141\154"], 2); } goto y1XdZ; cBaZz: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto X0Utr; tXRcg: } public static function IMEXP($complexNumber) { goto R2_Xp; KBLL4: $parsedComplex = self::parseComplex($complexNumber); goto SB2C3; Ze0Rz: $eX = $e * cos($parsedComplex["\x69\x6d\141\147\x69\x6e\141\162\x79"]); goto j0ksE; j0ksE: $eY = $e * sin($parsedComplex["\151\155\141\x67\x69\x6e\x61\162\x79"]); goto rfRn0; W7321: $e = exp($parsedComplex["\162\x65\x61\154"]); goto Ze0Rz; SB2C3: if ($parsedComplex["\162\x65\141\x6c"] == 0.0 && $parsedComplex["\x69\155\141\x67\x69\x6e\x61\x72\171"] == 0.0) { return "\61"; } goto W7321; rfRn0: if ($parsedComplex["\x73\x75\x66\146\x69\x78"] == '') { return self::COMPLEX($eX, $eY); } else { return self::COMPLEX($eX, $eY, $parsedComplex["\x73\x75\x66\146\151\170"]); } goto k9Gph; R2_Xp: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto KBLL4; k9Gph: } public static function IMPOWER($complexNumber, $realNumber) { goto bB6wB; GlM6R: $rPower = pow($r, $realNumber); goto j8gkK; j8gkK: $theta = self::IMARGUMENT($complexNumber) * $realNumber; goto YUdzZ; RsoPU: $r = sqrt($parsedComplex["\162\145\x61\154"] * $parsedComplex["\162\145\x61\154"] + $parsedComplex["\x69\155\x61\147\x69\x6e\141\162\x79"] * $parsedComplex["\151\x6d\x61\x67\151\156\141\162\x79"]); goto GlM6R; K0J0l: $parsedComplex = self::parseComplex($complexNumber); goto RsoPU; ClMvD: $realNumber = PHPExcel_Calculation_Functions::flattenSingleValue($realNumber); goto XlK1F; XlK1F: if (!is_numeric($realNumber)) { return PHPExcel_Calculation_Functions::VALUE(); } goto K0J0l; YUdzZ: if ($theta == 0) { return 1; } elseif ($parsedComplex["\151\155\141\x67\151\156\x61\x72\x79"] == 0.0) { return self::COMPLEX($rPower * cos($theta), $rPower * sin($theta), $parsedComplex["\163\x75\x66\146\x69\x78"]); } else { return self::COMPLEX($rPower * cos($theta), $rPower * sin($theta), $parsedComplex["\x73\165\x66\x66\x69\x78"]); } goto Q0aIc; bB6wB: $complexNumber = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber); goto ClMvD; Q0aIc: } public static function IMDIV($complexDividend, $complexDivisor) { goto dMGvn; Cd85o: $complexDivisor = PHPExcel_Calculation_Functions::flattenSingleValue($complexDivisor); goto bOzFc; idnXT: $i = $d2 / $d3; goto XesoB; MwcZW: $parsedComplexDivisor = self::parseComplex($complexDivisor); goto zC5PS; bOzFc: $parsedComplexDividend = self::parseComplex($complexDividend); goto MwcZW; nu4g3: $d2 = $parsedComplexDividend["\x69\155\x61\147\151\x6e\x61\162\171"] * $parsedComplexDivisor["\162\145\x61\x6c"] - $parsedComplexDividend["\x72\145\141\x6c"] * $parsedComplexDivisor["\x69\155\141\147\151\156\x61\x72\x79"]; goto biL1R; dMGvn: $complexDividend = PHPExcel_Calculation_Functions::flattenSingleValue($complexDividend); goto Cd85o; ltu2M: $d1 = $parsedComplexDividend["\x72\145\x61\154"] * $parsedComplexDivisor["\162\145\x61\x6c"] + $parsedComplexDividend["\151\155\x61\147\151\156\x61\162\x79"] * $parsedComplexDivisor["\x69\155\141\147\151\x6e\141\x72\171"]; goto nu4g3; XesoB: if ($i > 0.0) { return self::cleanComplex($r . "\53" . $i . $parsedComplexDivisor["\163\165\146\146\x69\170"]); } elseif ($i < 0.0) { return self::cleanComplex($r . $i . $parsedComplexDivisor["\163\165\146\x66\151\170"]); } else { return $r; } goto IgcH9; biL1R: $d3 = $parsedComplexDivisor["\162\x65\141\x6c"] * $parsedComplexDivisor["\162\x65\141\154"] + $parsedComplexDivisor["\151\155\141\147\x69\156\141\x72\171"] * $parsedComplexDivisor["\x69\155\x61\x67\151\156\x61\x72\171"]; goto rZdwc; rZdwc: $r = $d1 / $d3; goto idnXT; zC5PS: if ($parsedComplexDividend["\x73\165\x66\146\151\170"] != '' && $parsedComplexDivisor["\163\165\146\x66\151\x78"] != '' && $parsedComplexDividend["\163\165\x66\146\x69\170"] != $parsedComplexDivisor["\163\165\146\x66\x69\x78"]) { return PHPExcel_Calculation_Functions::NaN(); } goto ODvAg; ODvAg: if ($parsedComplexDividend["\163\165\x66\146\x69\x78"] != '' && $parsedComplexDivisor["\163\x75\x66\146\x69\170"] == '') { $parsedComplexDivisor["\x73\165\x66\146\151\170"] = $parsedComplexDividend["\163\x75\146\146\x69\x78"]; } goto ltu2M; IgcH9: } public static function IMSUB($complexNumber1, $complexNumber2) { goto QV3Fq; ZFFcm: $parsedComplex1 = self::parseComplex($complexNumber1); goto IHoSL; QV3Fq: $complexNumber1 = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber1); goto k6k8r; IHoSL: $parsedComplex2 = self::parseComplex($complexNumber2); goto yRQQc; K4o9M: $d1 = $parsedComplex1["\x72\x65\141\154"] - $parsedComplex2["\162\x65\x61\x6c"]; goto UWm01; k6k8r: $complexNumber2 = PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber2); goto ZFFcm; cIJPr: return self::COMPLEX($d1, $d2, $parsedComplex1["\x73\x75\x66\x66\151\170"]); goto d8xCF; UWm01: $d2 = $parsedComplex1["\151\x6d\x61\147\x69\156\141\x72\171"] - $parsedComplex2["\x69\x6d\x61\x67\151\156\141\162\x79"]; goto cIJPr; yRQQc: if ($parsedComplex1["\163\165\146\146\151\x78"] != '' && $parsedComplex2["\163\x75\x66\x66\151\170"] != '' && $parsedComplex1["\163\x75\x66\146\151\170"] != $parsedComplex2["\163\x75\x66\x66\151\x78"]) { return PHPExcel_Calculation_Functions::NaN(); } elseif ($parsedComplex1["\163\x75\146\x66\x69\x78"] == '' && $parsedComplex2["\x73\x75\146\146\151\170"] != '') { $parsedComplex1["\x73\x75\146\146\x69\x78"] = $parsedComplex2["\163\165\x66\x66\x69\x78"]; } goto K4o9M; d8xCF: } public static function IMSUM() { goto TcgKL; NwC0V: foreach ($aArgs as $arg) { goto NF8h_; PQous: $returnValue["\151\155\141\x67\151\x6e\141\162\171"] += $parsedComplex["\x69\155\x61\x67\151\156\141\x72\x79"]; goto EkJ4V; NF8h_: $parsedComplex = self::parseComplex($arg); goto ONWXG; ONWXG: if ($activeSuffix == '') { $activeSuffix = $parsedComplex["\163\165\146\146\x69\x78"]; } elseif ($parsedComplex["\x73\x75\146\146\151\x78"] != '' && $activeSuffix != $parsedComplex["\x73\x75\146\146\151\170"]) { return PHPExcel_Calculation_Functions::VALUE(); } goto Xv1V4; Xv1V4: $returnValue["\x72\145\141\154"] += $parsedComplex["\x72\x65\141\154"]; goto PQous; EkJ4V: } goto HMhUf; LI1N5: $aArgs = PHPExcel_Calculation_Functions::flattenArray(func_get_args()); goto NwC0V; TcgKL: $returnValue = self::parseComplex("\60"); goto jX228; jX228: $activeSuffix = ''; goto LI1N5; HMhUf: if ($returnValue["\x69\x6d\x61\x67\151\x6e\x61\x72\x79"] == 0.0) { $activeSuffix = ''; } goto RylKp; RylKp: return self::COMPLEX($returnValue["\162\x65\141\154"], $returnValue["\151\x6d\x61\x67\x69\x6e\141\x72\x79"], $activeSuffix); goto i1h08; i1h08: } public static function IMPRODUCT() { goto K8E0f; K8E0f: $returnValue = self::parseComplex("\x31"); goto DG7st; DG7st: $activeSuffix = ''; goto gijct; m3DID: foreach ($aArgs as $arg) { goto JXd5S; E5anV: $returnValue["\162\x65\x61\x6c"] = $workValue["\162\145\141\154"] * $parsedComplex["\162\145\141\154"] - $workValue["\x69\x6d\141\x67\151\x6e\x61\x72\171"] * $parsedComplex["\x69\x6d\x61\147\151\156\x61\162\x79"]; goto ezwUF; darYV: if ($parsedComplex["\x73\165\146\146\x69\170"] != '' && $activeSuffix == '') { $activeSuffix = $parsedComplex["\163\x75\x66\x66\x69\x78"]; } elseif ($parsedComplex["\x73\165\146\146\151\170"] != '' && $activeSuffix != $parsedComplex["\163\x75\x66\x66\151\170"]) { return PHPExcel_Calculation_Functions::NaN(); } goto E5anV; JXd5S: $parsedComplex = self::parseComplex($arg); goto vR_dI; vR_dI: $workValue = $returnValue; goto darYV; ezwUF: $returnValue["\x69\x6d\x61\147\151\156\x61\162\x79"] = $workValue["\162\145\x61\154"] * $parsedComplex["\x69\155\x61\x67\151\156\141\162\171"] + $workValue["\x69\x6d\141\x67\x69\156\x61\162\171"] * $parsedComplex["\162\x65\x61\x6c"]; goto xXbOh; xXbOh: } goto LnDvL; LnDvL: if ($returnValue["\151\x6d\x61\x67\151\x6e\x61\162\x79"] == 0.0) { $activeSuffix = ''; } goto R8D28; R8D28: return self::COMPLEX($returnValue["\x72\x65\141\154"], $returnValue["\x69\x6d\x61\x67\151\x6e\x61\162\171"], $activeSuffix); goto vLGay; gijct: $aArgs = PHPExcel_Calculation_Functions::flattenArray(func_get_args()); goto m3DID; vLGay: } public static function DELTA($a, $b = 0) { goto v6qJp; v6qJp: $a = PHPExcel_Calculation_Functions::flattenSingleValue($a); goto Ouae1; Ouae1: $b = PHPExcel_Calculation_Functions::flattenSingleValue($b); goto xk5I1; xk5I1: return (int) ($a == $b); goto T_Ffc; T_Ffc: } public static function GESTEP($number, $step = 0) { goto s2pPw; Vyx1v: return (int) ($number >= $step); goto NAsA2; Bakjv: $step = PHPExcel_Calculation_Functions::flattenSingleValue($step); goto Vyx1v; s2pPw: $number = PHPExcel_Calculation_Functions::flattenSingleValue($number); goto Bakjv; NAsA2: } private static $twoSqrtPi = 1.1283791670955126; public static function erfVal($x) { goto ab7IN; osnK1: return self::$twoSqrtPi * $sum; goto yF4RM; osF5n: $xsqr = $x * $x; goto b1p6V; ab7IN: if (abs($x) > 2.2) { return 1 - self::erfcVal($x); } goto SuvS8; s0cWm: do { $term *= $xsqr / $j; $sum -= $term / (2 * $j + 1); ++$j; $term *= $xsqr / $j; $sum += $term / (2 * $j + 1); ++$j; if ($sum == 0.0) { break; } } while (abs($term / $sum) > PRECISION); goto osnK1; b1p6V: $j = 1; goto s0cWm; SuvS8: $sum = $term = $x; goto osF5n; yF4RM: } public static function ERF($lower, $upper = null) { goto scw6O; goUHP: $upper = PHPExcel_Calculation_Functions::flattenSingleValue($upper); goto DDp0f; scw6O: $lower = PHPExcel_Calculation_Functions::flattenSingleValue($lower); goto goUHP; DDp0f: if (is_numeric($lower)) { if (is_null($upper)) { return self::erfVal($lower); } if (is_numeric($upper)) { return self::erfVal($upper) - self::erfVal($lower); } } goto qX2X1; qX2X1: return PHPExcel_Calculation_Functions::VALUE(); goto Jygp1; Jygp1: } private static $oneSqrtPi = 0.5641895835477563; private static function erfcVal($x) { goto a5ftA; WR_Bo: $b = $c = $x; goto A8_dz; H2oDS: if ($x < 0) { return 2 - self::ERFC(-$x); } goto SVlTN; a5ftA: if (abs($x) < 2.2) { return 1 - self::erfVal($x); } goto H2oDS; aPBNH: $t = 0; goto Mj81Y; Mj81Y: do { $t = $a * $n + $b * $x; $a = $b; $b = $t; $t = $c * $n + $d * $x; $c = $d; $d = $t; $n += 0.5; $q1 = $q2; $q2 = $b / $d; } while (abs($q1 - $q2) / $q2 > PRECISION); goto jcPSi; jhtel: $q1 = $q2 = $b / $d; goto aPBNH; SVlTN: $a = $n = 1; goto WR_Bo; jcPSi: return self::$oneSqrtPi * exp(-$x * $x) * $q2; goto OaUo7; A8_dz: $d = $x * $x + 0.5; goto jhtel; OaUo7: } public static function ERFC($x) { goto EBHUW; TANaC: if (is_numeric($x)) { return self::erfcVal($x); } goto Tu6I2; EBHUW: $x = PHPExcel_Calculation_Functions::flattenSingleValue($x); goto TANaC; Tu6I2: return PHPExcel_Calculation_Functions::VALUE(); goto JvWaZ; JvWaZ: } public static function getConversionGroups() { goto Eywsv; RINZ6: return array_merge(array_unique($conversionGroups)); goto KFiCc; PKhFb: foreach (self::$conversionUnits as $conversionUnit) { $conversionGroups[] = $conversionUnit["\x47\x72\157\165\160"]; } goto RINZ6; Eywsv: $conversionGroups = array(); goto PKhFb; KFiCc: } public static function getConversionGroupUnits($group = null) { goto HKBJD; HKBJD: $conversionGroups = array(); goto hQtph; hQtph: foreach (self::$conversionUnits as $conversionUnit => $conversionGroup) { if (is_null($group) || $conversionGroup["\107\162\157\165\160"] == $group) { $conversionGroups[$conversionGroup["\107\162\157\x75\160"]][] = $conversionUnit; } } goto LorQO; LorQO: return $conversionGroups; goto sjDU1; sjDU1: } public static function getConversionGroupUnitDetails($group = null) { goto pybVe; v4v1r: return $conversionGroups; goto aZScX; W4wre: foreach (self::$conversionUnits as $conversionUnit => $conversionGroup) { if (is_null($group) || $conversionGroup["\x47\162\157\x75\160"] == $group) { $conversionGroups[$conversionGroup["\x47\x72\157\165\160"]][] = array("\x75\156\151\164" => $conversionUnit, "\x64\145\x73\143\x72\151\160\x74\151\x6f\156" => $conversionGroup["\x55\x6e\151\x74\40\x4e\x61\155\145"]); } } goto v4v1r; pybVe: $conversionGroups = array(); goto W4wre; aZScX: } public static function getConversionMultipliers() { return self::$conversionMultipliers; } public static function CONVERTUOM($value, $fromUOM, $toUOM) { goto cfeAp; cIIEu: if (isset(self::$conversionUnits[$toUOM])) { $unitGroup2 = self::$conversionUnits[$toUOM]["\x47\162\157\165\x70"]; } else { goto uaugB; uaugB: $toMultiplier = substr($toUOM, 0, 1); goto d8N6Z; ztbin: if (isset(self::$conversionMultipliers[$toMultiplier])) { $toMultiplier = self::$conversionMultipliers[$toMultiplier]["\155\x75\x6c\164\x69\160\x6c\x69\145\x72"]; } else { return PHPExcel_Calculation_Functions::NA(); } goto mDvm_; d8N6Z: $toUOM = substr($toUOM, 1); goto ztbin; mDvm_: if (isset(self::$conversionUnits[$toUOM]) && self::$conversionUnits[$toUOM]["\101\x6c\154\x6f\167\x50\x72\145\146\x69\x78"]) { $unitGroup2 = self::$conversionUnits[$toUOM]["\x47\x72\157\x75\x70"]; } else { return PHPExcel_Calculation_Functions::NA(); } goto j8qJk; j8qJk: } goto TpWuK; TpWuK: if ($unitGroup1 != $unitGroup2) { return PHPExcel_Calculation_Functions::NA(); } goto zPlYS; tJjFo: return $value * self::$unitConversions[$unitGroup1][$fromUOM][$toUOM] / $toMultiplier; goto NTlPs; JBQ_E: $value *= $fromMultiplier; goto QOzPK; Xy_9P: if (!is_numeric($value)) { return PHPExcel_Calculation_Functions::VALUE(); } goto r9Kjy; zPlYS: if ($fromUOM == $toUOM && $fromMultiplier == $toMultiplier) { return $value / $fromMultiplier; } elseif ($unitGroup1 == "\124\x65\155\x70\145\x72\x61\164\x75\x72\145") { goto EPXk2; z6jzc: if ($toUOM == "\106" || $toUOM == "\x66\x61\x68") { if ($fromUOM == "\113" || $fromUOM == "\x6b\145\154") { $value -= 273.15; } return $value * 1.8 + 32; } goto bj96N; bj96N: if ($toUOM == "\x43" || $toUOM == "\143\x65\154") { return $value - 273.15; } goto H4cXV; EPXk2: if ($fromUOM == "\x46" || $fromUOM == "\146\x61\150") { if ($toUOM == "\106" || $toUOM == "\146\141\150") { return $value; } else { goto Se3g2; EDVX8: return $value; goto dDifN; xPzx8: if ($toUOM == "\113" || $toUOM == "\x6b\x65\x6c") { $value += 273.15; } goto EDVX8; Se3g2: $value = ($value - 32) / 1.8; goto xPzx8; dDifN: } } elseif (($fromUOM == "\x4b" || $fromUOM == "\x6b\145\154") && ($toUOM == "\113" || $toUOM == "\153\x65\x6c")) { return $value; } elseif (($fromUOM == "\x43" || $fromUOM == "\x63\145\154") && ($toUOM == "\x43" || $toUOM == "\x63\145\154")) { return $value; } goto z6jzc; H4cXV: return $value + 273.15; goto zhiHR; zhiHR: } goto tJjFo; cfeAp: $value = PHPExcel_Calculation_Functions::flattenSingleValue($value); goto TNgah; r9Kjy: $fromMultiplier = 1.0; goto EvmtP; QOzPK: $toMultiplier = 1.0; goto cIIEu; EvmtP: if (isset(self::$conversionUnits[$fromUOM])) { $unitGroup1 = self::$conversionUnits[$fromUOM]["\107\x72\x6f\x75\160"]; } else { goto X_8bz; X_8bz: $fromMultiplier = substr($fromUOM, 0, 1); goto sJSVF; sJSVF: $fromUOM = substr($fromUOM, 1); goto wOygX; wOygX: if (isset(self::$conversionMultipliers[$fromMultiplier])) { $fromMultiplier = self::$conversionMultipliers[$fromMultiplier]["\155\x75\154\164\151\160\154\x69\145\x72"]; } else { return PHPExcel_Calculation_Functions::NA(); } goto V8p0i; V8p0i: if (isset(self::$conversionUnits[$fromUOM]) && self::$conversionUnits[$fromUOM]["\101\x6c\x6c\157\167\120\x72\x65\146\x69\170"]) { $unitGroup1 = self::$conversionUnits[$fromUOM]["\107\162\x6f\165\160"]; } else { return PHPExcel_Calculation_Functions::NA(); } goto DWHL8; DWHL8: } goto JBQ_E; IMFab: $toUOM = PHPExcel_Calculation_Functions::flattenSingleValue($toUOM); goto Xy_9P; TNgah: $fromUOM = PHPExcel_Calculation_Functions::flattenSingleValue($fromUOM); goto IMFab; NTlPs: } }
