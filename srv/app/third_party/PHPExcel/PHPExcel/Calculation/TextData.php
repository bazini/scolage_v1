<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:04              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 if (!defined("\120\x48\120\105\x58\103\x45\114\137\122\117\117\124")) { define("\x50\110\x50\x45\x58\x43\x45\114\137\x52\x4f\x4f\x54", dirname(__FILE__) . "\57\x2e\x2e\x2f\56\56\x2f"); require PHPEXCEL_ROOT . "\x50\x48\120\x45\x78\x63\145\154\57\101\165\164\x6f\x6c\x6f\141\x64\x65\162\56\x70\150\x70"; } class PHPExcel_Calculation_TextData { private static $invalidChars; private static function unicodeToOrd($c) { if (ord($c[0]) >= 0 && ord($c[0]) <= 127) { return ord($c[0]); } elseif (ord($c[0]) >= 192 && ord($c[0]) <= 223) { return (ord($c[0]) - 192) * 64 + (ord($c[1]) - 128); } elseif (ord($c[0]) >= 224 && ord($c[0]) <= 239) { return (ord($c[0]) - 224) * 4096 + (ord($c[1]) - 128) * 64 + (ord($c[2]) - 128); } elseif (ord($c[0]) >= 240 && ord($c[0]) <= 247) { return (ord($c[0]) - 240) * 262144 + (ord($c[1]) - 128) * 4096 + (ord($c[2]) - 128) * 64 + (ord($c[3]) - 128); } elseif (ord($c[0]) >= 248 && ord($c[0]) <= 251) { return (ord($c[0]) - 248) * 16777216 + (ord($c[1]) - 128) * 262144 + (ord($c[2]) - 128) * 4096 + (ord($c[3]) - 128) * 64 + (ord($c[4]) - 128); } elseif (ord($c[0]) >= 252 && ord($c[0]) <= 253) { return (ord($c[0]) - 252) * 1073741824 + (ord($c[1]) - 128) * 16777216 + (ord($c[2]) - 128) * 262144 + (ord($c[3]) - 128) * 4096 + (ord($c[4]) - 128) * 64 + (ord($c[5]) - 128); } elseif (ord($c[0]) >= 254 && ord($c[0]) <= 255) { return PHPExcel_Calculation_Functions::VALUE(); } return 0; } public static function CHARACTER($character) { goto YQJD7; hLpzm: if (function_exists("\x6d\x62\137\x63\x6f\156\166\x65\162\x74\x5f\145\156\143\x6f\x64\151\156\x67")) { return mb_convert_encoding("\x26\x23" . intval($character) . "\73", "\125\124\x46\x2d\70", "\x48\124\115\x4c\55\105\116\124\111\x54\x49\105\123"); } else { return chr(intval($character)); } goto NPxDy; YQJD7: $character = PHPExcel_Calculation_Functions::flattenSingleValue($character); goto B8dM8; B8dM8: if (!is_numeric($character) || $character < 0) { return PHPExcel_Calculation_Functions::VALUE(); } goto hLpzm; NPxDy: } public static function TRIMNONPRINTABLE($stringValue = '') { goto xxVdy; JORqA: if (is_bool($stringValue)) { return $stringValue ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } goto PMeyv; tw3a5: return null; goto F6oTS; xxVdy: $stringValue = PHPExcel_Calculation_Functions::flattenSingleValue($stringValue); goto JORqA; YLEY8: if (is_string($stringValue) || is_numeric($stringValue)) { return str_replace(self::$invalidChars, '', trim($stringValue, "\0\56\x2e\37")); } goto tw3a5; PMeyv: if (self::$invalidChars == null) { self::$invalidChars = range(chr(0), chr(31)); } goto YLEY8; F6oTS: } public static function TRIMSPACES($stringValue = '') { goto zrRKd; QGRoH: if (is_string($stringValue) || is_numeric($stringValue)) { return trim(preg_replace("\57\x20\53\57", "\x20", trim($stringValue, "\x20")), "\x20"); } goto rMoSP; rMoSP: return null; goto KwWzW; zrRKd: $stringValue = PHPExcel_Calculation_Functions::flattenSingleValue($stringValue); goto lHBcP; lHBcP: if (is_bool($stringValue)) { return $stringValue ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } goto QGRoH; KwWzW: } public static function ASCIICODE($characters) { goto jRcYG; BBFJg: $character = $characters; goto TaMiq; STAxg: $characters = PHPExcel_Calculation_Functions::flattenSingleValue($characters); goto zj4w_; zj4w_: if (is_bool($characters)) { if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_OPENOFFICE) { $characters = (int) $characters; } else { $characters = $characters ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } } goto BBFJg; jRcYG: if ($characters === null || $characters === '') { return PHPExcel_Calculation_Functions::VALUE(); } goto STAxg; TaMiq: if (function_exists("\x6d\x62\x5f\163\x74\x72\154\x65\156") && function_exists("\155\x62\x5f\163\x75\142\x73\164\162")) { if (mb_strlen($characters, "\x55\x54\106\x2d\x38") > 1) { $character = mb_substr($characters, 0, 1, "\x55\x54\x46\x2d\x38"); } return self::unicodeToOrd($character); } else { if (strlen($characters) > 0) { $character = substr($characters, 0, 1); } return ord($character); } goto Xo45w; Xo45w: } public static function CONCATENATE() { goto N3uOi; N3uOi: $returnValue = ''; goto Ht1pp; rNkC7: foreach ($aArgs as $arg) { if (is_bool($arg)) { if (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_OPENOFFICE) { $arg = (int) $arg; } else { $arg = $arg ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } } $returnValue .= $arg; } goto rFs77; rFs77: return $returnValue; goto SQn5U; Ht1pp: $aArgs = PHPExcel_Calculation_Functions::flattenArray(func_get_args()); goto rNkC7; SQn5U: } public static function DOLLAR($value = 0, $decimals = 2) { goto Ecb63; vQuLd: $decimals = floor($decimals); goto gPFvR; udJtK: return PHPExcel_Style_NumberFormat::toFormattedString($value, $mask); goto qvS4Q; gPFvR: $mask = "\44\43\x2c\43\x23\60"; goto IRr5T; HIiUb: $decimals = is_null($decimals) ? 0 : PHPExcel_Calculation_Functions::flattenSingleValue($decimals); goto flGOf; IRr5T: if ($decimals > 0) { $mask .= "\56" . str_repeat("\x30", $decimals); } else { goto BRw2o; l3ycb: $value = PHPExcel_Calculation_MathTrig::MROUND($value, $round); goto lvKCw; uIdOK: if ($value < 0) { $round = 0 - $round; } goto l3ycb; BRw2o: $round = pow(10, abs($decimals)); goto uIdOK; lvKCw: } goto udJtK; flGOf: if (!is_numeric($value) || !is_numeric($decimals)) { return PHPExcel_Calculation_Functions::NaN(); } goto vQuLd; Ecb63: $value = PHPExcel_Calculation_Functions::flattenSingleValue($value); goto HIiUb; qvS4Q: } public static function SEARCHSENSITIVE($needle, $haystack, $offset = 1) { goto sgqf2; EUkEO: $offset = PHPExcel_Calculation_Functions::flattenSingleValue($offset); goto hpGM7; sgqf2: $needle = PHPExcel_Calculation_Functions::flattenSingleValue($needle); goto aQsQg; aQsQg: $haystack = PHPExcel_Calculation_Functions::flattenSingleValue($haystack); goto EUkEO; hpGM7: if (!is_bool($needle)) { if (is_bool($haystack)) { $haystack = $haystack ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } if ($offset > 0 && PHPExcel_Shared_String::CountCharacters($haystack) > $offset) { goto ieoaZ; oD8RD: if ($pos !== false) { return ++$pos; } goto gVs0f; vDg4x: if (function_exists("\x6d\x62\x5f\x73\x74\x72\x70\157\163")) { $pos = mb_strpos($haystack, $needle, --$offset, "\125\x54\x46\55\x38"); } else { $pos = strpos($haystack, $needle, --$offset); } goto oD8RD; ieoaZ: if (PHPExcel_Shared_String::CountCharacters($needle) == 0) { return $offset; } goto vDg4x; gVs0f: } } goto CeysM; CeysM: return PHPExcel_Calculation_Functions::VALUE(); goto Fb7hD; Fb7hD: } public static function SEARCHINSENSITIVE($needle, $haystack, $offset = 1) { goto O1ZXD; BWMHC: $offset = PHPExcel_Calculation_Functions::flattenSingleValue($offset); goto Mx71C; Mx71C: if (!is_bool($needle)) { if (is_bool($haystack)) { $haystack = $haystack ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } if ($offset > 0 && PHPExcel_Shared_String::CountCharacters($haystack) > $offset) { goto gcy5r; gcy5r: if (PHPExcel_Shared_String::CountCharacters($needle) == 0) { return $offset; } goto J16b0; xDDmf: if ($pos !== false) { return ++$pos; } goto qsxHx; J16b0: if (function_exists("\155\x62\x5f\x73\164\x72\x69\x70\157\x73")) { $pos = mb_stripos($haystack, $needle, --$offset, "\125\x54\x46\55\x38"); } else { $pos = stripos($haystack, $needle, --$offset); } goto xDDmf; qsxHx: } } goto QQqK0; ZQ4sS: $haystack = PHPExcel_Calculation_Functions::flattenSingleValue($haystack); goto BWMHC; O1ZXD: $needle = PHPExcel_Calculation_Functions::flattenSingleValue($needle); goto ZQ4sS; QQqK0: return PHPExcel_Calculation_Functions::VALUE(); goto h90rH; h90rH: } public static function FIXEDFORMAT($value, $decimals = 2, $no_commas = false) { goto JIrg3; ic0ka: $decimals = floor($decimals); goto OMCsa; a_Zl5: return (string) $valueResult; goto viH2g; I2LaX: if (!is_numeric($value) || !is_numeric($decimals)) { return PHPExcel_Calculation_Functions::NaN(); } goto ic0ka; JIrg3: $value = PHPExcel_Calculation_Functions::flattenSingleValue($value); goto mcpK5; uq3SE: if ($decimals < 0) { $decimals = 0; } goto wk7iT; gFDqP: $no_commas = PHPExcel_Calculation_Functions::flattenSingleValue($no_commas); goto I2LaX; wk7iT: if (!$no_commas) { $valueResult = number_format($valueResult, $decimals); } goto a_Zl5; mcpK5: $decimals = PHPExcel_Calculation_Functions::flattenSingleValue($decimals); goto gFDqP; OMCsa: $valueResult = round($value, $decimals); goto uq3SE; viH2g: } public static function LEFT($value = '', $chars = 1) { goto DZdXL; JxZr_: if (function_exists("\155\x62\137\x73\165\142\163\164\162")) { return mb_substr($value, 0, $chars, "\125\x54\x46\55\x38"); } else { return substr($value, 0, $chars); } goto Z681i; RU_lj: if ($chars < 0) { return PHPExcel_Calculation_Functions::VALUE(); } goto XYJbE; DZdXL: $value = PHPExcel_Calculation_Functions::flattenSingleValue($value); goto tIUJJ; tIUJJ: $chars = PHPExcel_Calculation_Functions::flattenSingleValue($chars); goto RU_lj; XYJbE: if (is_bool($value)) { $value = $value ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } goto JxZr_; Z681i: } public static function MID($value = '', $start = 1, $chars = null) { goto NPjcM; BZduF: if (function_exists("\155\x62\x5f\163\x75\142\163\x74\162")) { return mb_substr($value, --$start, $chars, "\x55\124\x46\x2d\x38"); } else { return substr($value, --$start, $chars); } goto dAGVz; i3uc7: if (is_bool($value)) { $value = $value ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } goto BZduF; v5COs: $start = PHPExcel_Calculation_Functions::flattenSingleValue($start); goto k1M8n; NPjcM: $value = PHPExcel_Calculation_Functions::flattenSingleValue($value); goto v5COs; k1M8n: $chars = PHPExcel_Calculation_Functions::flattenSingleValue($chars); goto K6sw5; K6sw5: if ($start < 1 || $chars < 0) { return PHPExcel_Calculation_Functions::VALUE(); } goto i3uc7; dAGVz: } public static function RIGHT($value = '', $chars = 1) { goto qyfQG; nzjfC: if (is_bool($value)) { $value = $value ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } goto s8Jfh; rqxxl: $chars = PHPExcel_Calculation_Functions::flattenSingleValue($chars); goto SlUaI; s8Jfh: if (function_exists("\x6d\x62\x5f\163\x75\142\x73\164\162") && function_exists("\x6d\x62\x5f\x73\164\162\x6c\145\x6e")) { return mb_substr($value, mb_strlen($value, "\125\124\106\x2d\70") - $chars, $chars, "\125\124\x46\55\70"); } else { return substr($value, strlen($value) - $chars); } goto XtGbX; SlUaI: if ($chars < 0) { return PHPExcel_Calculation_Functions::VALUE(); } goto nzjfC; qyfQG: $value = PHPExcel_Calculation_Functions::flattenSingleValue($value); goto rqxxl; XtGbX: } public static function STRINGLENGTH($value = '') { goto IctUF; IctUF: $value = PHPExcel_Calculation_Functions::flattenSingleValue($value); goto L_MTP; L_MTP: if (is_bool($value)) { $value = $value ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } goto PED4x; PED4x: if (function_exists("\155\142\x5f\163\164\162\x6c\x65\x6e")) { return mb_strlen($value, "\x55\x54\106\55\70"); } else { return strlen($value); } goto m8s5A; m8s5A: } public static function LOWERCASE($mixedCaseString) { goto nIPsN; nIPsN: $mixedCaseString = PHPExcel_Calculation_Functions::flattenSingleValue($mixedCaseString); goto CZHJW; CZHJW: if (is_bool($mixedCaseString)) { $mixedCaseString = $mixedCaseString ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } goto cxH49; cxH49: return PHPExcel_Shared_String::StrToLower($mixedCaseString); goto De3QF; De3QF: } public static function UPPERCASE($mixedCaseString) { goto eseqO; eseqO: $mixedCaseString = PHPExcel_Calculation_Functions::flattenSingleValue($mixedCaseString); goto U89nE; U89nE: if (is_bool($mixedCaseString)) { $mixedCaseString = $mixedCaseString ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } goto kaoG4; kaoG4: return PHPExcel_Shared_String::StrToUpper($mixedCaseString); goto BEUam; BEUam: } public static function PROPERCASE($mixedCaseString) { goto V_brM; Ayj7F: return PHPExcel_Shared_String::StrToTitle($mixedCaseString); goto tjVpf; NXIIn: if (is_bool($mixedCaseString)) { $mixedCaseString = $mixedCaseString ? PHPExcel_Calculation::getTRUE() : PHPExcel_Calculation::getFALSE(); } goto Ayj7F; V_brM: $mixedCaseString = PHPExcel_Calculation_Functions::flattenSingleValue($mixedCaseString); goto NXIIn; tjVpf: } public static function REPLACE($oldText = '', $start = 1, $chars = null, $newText) { goto gK05S; tfBwa: $start = PHPExcel_Calculation_Functions::flattenSingleValue($start); goto qNKGn; gK05S: $oldText = PHPExcel_Calculation_Functions::flattenSingleValue($oldText); goto tfBwa; qNKGn: $chars = PHPExcel_Calculation_Functions::flattenSingleValue($chars); goto bEF57; QfFSl: return $left . $newText . $right; goto w1m9T; s41V5: $right = self::RIGHT($oldText, self::STRINGLENGTH($oldText) - ($start + $chars) + 1); goto QfFSl; GH3Kt: $left = self::LEFT($oldText, $start - 1); goto s41V5; bEF57: $newText = PHPExcel_Calculation_Functions::flattenSingleValue($newText); goto GH3Kt; w1m9T: } public static function SUBSTITUTE($text = '', $fromText = '', $toText = '', $instance = 0) { goto dO1EF; fthy2: $toText = PHPExcel_Calculation_Functions::flattenSingleValue($toText); goto AHugW; vwj14: return $text; goto Wm_aE; dO1EF: $text = PHPExcel_Calculation_Functions::flattenSingleValue($text); goto mBjdb; mBjdb: $fromText = PHPExcel_Calculation_Functions::flattenSingleValue($fromText); goto fthy2; AHugW: $instance = floor(PHPExcel_Calculation_Functions::flattenSingleValue($instance)); goto maRhi; maRhi: if ($instance == 0) { if (function_exists("\x6d\x62\x5f\x73\x74\x72\137\162\x65\160\154\x61\143\145")) { return mb_str_replace($fromText, $toText, $text); } else { return str_replace($fromText, $toText, $text); } } else { goto fLDt_; nqoec: while ($instance > 0) { if (function_exists("\x6d\x62\137\163\x74\x72\160\157\x73")) { $pos = mb_strpos($text, $fromText, $pos + 1, "\x55\124\x46\55\70"); } else { $pos = strpos($text, $fromText, $pos + 1); } if ($pos === false) { break; } --$instance; } goto a6dm3; fLDt_: $pos = -1; goto nqoec; a6dm3: if ($pos !== false) { if (function_exists("\155\x62\137\163\x74\162\154\x65\156")) { return self::REPLACE($text, ++$pos, mb_strlen($fromText, "\125\124\106\x2d\x38"), $toText); } else { return self::REPLACE($text, ++$pos, strlen($fromText), $toText); } } goto PI8LC; PI8LC: } goto vwj14; Wm_aE: } public static function RETURNSTRING($testValue = '') { goto mHSEC; mHSEC: $testValue = PHPExcel_Calculation_Functions::flattenSingleValue($testValue); goto ui6yM; y3vBZ: return null; goto lCjuC; ui6yM: if (is_string($testValue)) { return $testValue; } goto y3vBZ; lCjuC: } public static function TEXTFORMAT($value, $format) { goto R9usK; mmL91: if (is_string($value) && !is_numeric($value) && PHPExcel_Shared_Date::isDateTimeFormatCode($format)) { $value = PHPExcel_Calculation_DateTime::DATEVALUE($value); } goto Z9WQW; Z9WQW: return (string) PHPExcel_Style_NumberFormat::toFormattedString($value, $format); goto AFe0x; boLwH: $format = PHPExcel_Calculation_Functions::flattenSingleValue($format); goto mmL91; R9usK: $value = PHPExcel_Calculation_Functions::flattenSingleValue($value); goto boLwH; AFe0x: } public static function VALUE($value = '') { goto yQgL7; zusc8: return (float) $value; goto GeNZx; mgPd6: if (!is_numeric($value)) { goto wiqV0; bWEQg: $dateValue = PHPExcel_Calculation_DateTime::DATEVALUE($value); goto qsez6; rjpKm: $dateSetting = PHPExcel_Calculation_Functions::getReturnDateType(); goto qFmaX; C3ZJG: if (strpos($value, "\72") !== false) { $timeValue = PHPExcel_Calculation_DateTime::TIMEVALUE($value); if ($timeValue !== PHPExcel_Calculation_Functions::VALUE()) { PHPExcel_Calculation_Functions::setReturnDateType($dateSetting); return $timeValue; } } goto bWEQg; qFmaX: PHPExcel_Calculation_Functions::setReturnDateType(PHPExcel_Calculation_Functions::RETURNDATE_EXCEL); goto C3ZJG; X1ehV: PHPExcel_Calculation_Functions::setReturnDateType($dateSetting); goto bWhjD; ty4z5: if (is_numeric($numberValue)) { return (float) $numberValue; } goto rjpKm; wiqV0: $numberValue = str_replace(PHPExcel_Shared_String::getThousandsSeparator(), '', trim($value, "\40\x9\xa\15\x0\13" . PHPExcel_Shared_String::getCurrencyCode())); goto ty4z5; bWhjD: return PHPExcel_Calculation_Functions::VALUE(); goto JUUv4; qsez6: if ($dateValue !== PHPExcel_Calculation_Functions::VALUE()) { PHPExcel_Calculation_Functions::setReturnDateType($dateSetting); return $dateValue; } goto X1ehV; JUUv4: } goto zusc8; yQgL7: $value = PHPExcel_Calculation_Functions::flattenSingleValue($value); goto mgPd6; GeNZx: } }
