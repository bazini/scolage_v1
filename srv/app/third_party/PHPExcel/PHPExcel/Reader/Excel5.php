<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:06              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 if (!defined("\x50\110\x50\x45\x58\103\105\x4c\137\x52\117\117\124")) { define("\x50\x48\x50\105\x58\x43\x45\x4c\x5f\x52\117\117\124", dirname(__FILE__) . "\x2f\x2e\x2e\57\56\x2e\x2f"); require PHPEXCEL_ROOT . "\x50\x48\x50\x45\x78\143\x65\x6c\x2f\x41\x75\x74\x6f\x6c\157\x61\144\x65\x72\56\x70\x68\x70"; } class PHPExcel_Reader_Excel5 extends PHPExcel_Reader_Abstract implements PHPExcel_Reader_IReader { const XLS_BIFF8 = 0x600; const XLS_BIFF7 = 0x500; const XLS_WorkbookGlobals = 0x5; const XLS_Worksheet = 0x10; const XLS_TYPE_FORMULA = 0x6; const XLS_TYPE_EOF = 0xa; const XLS_TYPE_PROTECT = 0x12; const XLS_TYPE_OBJECTPROTECT = 0x63; const XLS_TYPE_SCENPROTECT = 0xdd; const XLS_TYPE_PASSWORD = 0x13; const XLS_TYPE_HEADER = 0x14; const XLS_TYPE_FOOTER = 0x15; const XLS_TYPE_EXTERNSHEET = 0x17; const XLS_TYPE_DEFINEDNAME = 0x18; const XLS_TYPE_VERTICALPAGEBREAKS = 0x1a; const XLS_TYPE_HORIZONTALPAGEBREAKS = 0x1b; const XLS_TYPE_NOTE = 0x1c; const XLS_TYPE_SELECTION = 0x1d; const XLS_TYPE_DATEMODE = 0x22; const XLS_TYPE_EXTERNNAME = 0x23; const XLS_TYPE_LEFTMARGIN = 0x26; const XLS_TYPE_RIGHTMARGIN = 0x27; const XLS_TYPE_TOPMARGIN = 0x28; const XLS_TYPE_BOTTOMMARGIN = 0x29; const XLS_TYPE_PRINTGRIDLINES = 0x2b; const XLS_TYPE_FILEPASS = 0x2f; const XLS_TYPE_FONT = 0x31; const XLS_TYPE_CONTINUE = 0x3c; const XLS_TYPE_PANE = 0x41; const XLS_TYPE_CODEPAGE = 0x42; const XLS_TYPE_DEFCOLWIDTH = 0x55; const XLS_TYPE_OBJ = 0x5d; const XLS_TYPE_COLINFO = 0x7d; const XLS_TYPE_IMDATA = 0x7f; const XLS_TYPE_SHEETPR = 0x81; const XLS_TYPE_HCENTER = 0x83; const XLS_TYPE_VCENTER = 0x84; const XLS_TYPE_SHEET = 0x85; const XLS_TYPE_PALETTE = 0x92; const XLS_TYPE_SCL = 0xa0; const XLS_TYPE_PAGESETUP = 0xa1; const XLS_TYPE_MULRK = 0xbd; const XLS_TYPE_MULBLANK = 0xbe; const XLS_TYPE_DBCELL = 0xd7; const XLS_TYPE_XF = 0xe0; const XLS_TYPE_MERGEDCELLS = 0xe5; const XLS_TYPE_MSODRAWINGGROUP = 0xeb; const XLS_TYPE_MSODRAWING = 0xec; const XLS_TYPE_SST = 0xfc; const XLS_TYPE_LABELSST = 0xfd; const XLS_TYPE_EXTSST = 0xff; const XLS_TYPE_EXTERNALBOOK = 0x1ae; const XLS_TYPE_DATAVALIDATIONS = 0x1b2; const XLS_TYPE_TXO = 0x1b6; const XLS_TYPE_HYPERLINK = 0x1b8; const XLS_TYPE_DATAVALIDATION = 0x1be; const XLS_TYPE_DIMENSION = 0x200; const XLS_TYPE_BLANK = 0x201; const XLS_TYPE_NUMBER = 0x203; const XLS_TYPE_LABEL = 0x204; const XLS_TYPE_BOOLERR = 0x205; const XLS_TYPE_STRING = 0x207; const XLS_TYPE_ROW = 0x208; const XLS_TYPE_INDEX = 0x20b; const XLS_TYPE_ARRAY = 0x221; const XLS_TYPE_DEFAULTROWHEIGHT = 0x225; const XLS_TYPE_WINDOW2 = 0x23e; const XLS_TYPE_RK = 0x27e; const XLS_TYPE_STYLE = 0x293; const XLS_TYPE_FORMAT = 0x41e; const XLS_TYPE_SHAREDFMLA = 0x4bc; const XLS_TYPE_BOF = 0x809; const XLS_TYPE_SHEETPROTECTION = 0x867; const XLS_TYPE_RANGEPROTECTION = 0x868; const XLS_TYPE_SHEETLAYOUT = 0x862; const XLS_TYPE_XFEXT = 0x87d; const XLS_TYPE_PAGELAYOUTVIEW = 0x88b; const XLS_TYPE_UNKNOWN = 0xffff; const MS_BIFF_CRYPTO_NONE = 0; const MS_BIFF_CRYPTO_XOR = 1; const MS_BIFF_CRYPTO_RC4 = 2; const REKEY_BLOCK = 0x400; private $summaryInformation; private $documentSummaryInformation; private $userDefinedProperties; private $data; private $dataSize; private $pos; private $phpExcel; private $phpSheet; private $version; private $codepage; private $formats; private $objFonts; private $palette; private $sheets; private $externalBooks; private $ref; private $externalNames; private $definedname; private $sst; private $frozen; private $isFitToPages; private $objs; private $textObjects; private $cellNotes; private $drawingGroupData; private $drawingData; private $xfIndex; private $mapCellXfIndex; private $mapCellStyleXfIndex; private $sharedFormulas; private $sharedFormulaParts; private $encryption = 0; private $encryptionStartPos = false; private $rc4Key = null; private $rc4Pos = 0; private $md5Ctxt = null; public function __construct() { $this->readFilter = new PHPExcel_Reader_DefaultReadFilter(); } public function canRead($pFilename) { if (!file_exists($pFilename)) { throw new PHPExcel_Reader_Exception("\x43\157\165\154\x64\x20\156\x6f\164\40\157\x70\145\x6e\40" . $pFilename . "\40\146\157\162\40\x72\145\141\x64\x69\x6e\147\41\x20\x46\x69\154\x65\40\144\x6f\x65\x73\x20\x6e\x6f\x74\40\145\x78\151\x73\x74\56"); } try { goto A1aZJ; A1aZJ: $ole = new PHPExcel_Shared_OLERead(); goto T3sY7; T3sY7: $res = $ole->read($pFilename); goto LGmT5; LGmT5: return true; goto v6GPL; v6GPL: } catch (PHPExcel_Exception $e) { return false; } } public function listWorksheetNames($pFilename) { goto l3CK0; HoWtM: return $worksheetNames; goto C4EMq; ojX3U: while ($this->pos < $this->dataSize) { $code = self::getInt2d($this->data, $this->pos); switch ($code) { case self::XLS_TYPE_BOF: $this->readBof(); break; case self::XLS_TYPE_SHEET: $this->readSheet(); break; case self::XLS_TYPE_EOF: $this->readDefault(); break 2; default: $this->readDefault(); break; } } goto UObJw; lhuly: $this->pos = 0; goto gNznm; V0A9I: $this->dataSize = strlen($this->data); goto lhuly; PHrxQ: $worksheetNames = array(); goto zQnaE; gNznm: $this->sheets = array(); goto ojX3U; zQnaE: $this->loadOLE($pFilename); goto V0A9I; l3CK0: if (!file_exists($pFilename)) { throw new PHPExcel_Reader_Exception("\x43\157\165\154\x64\40\x6e\157\164\x20\x6f\160\145\156\40" . $pFilename . "\40\x66\x6f\x72\x20\162\x65\141\x64\151\156\x67\41\x20\106\151\x6c\145\x20\x64\157\145\x73\x20\156\x6f\164\x20\145\170\151\163\164\56"); } goto PHrxQ; UObJw: foreach ($this->sheets as $sheet) { if ($sheet["\163\x68\145\145\164\x54\x79\160\x65"] != 0x0) { continue; } $worksheetNames[] = $sheet["\156\141\155\x65"]; } goto HoWtM; C4EMq: } public function listWorksheetInfo($pFilename) { goto sZAiA; zO1I_: return $worksheetInfo; goto EyfbV; Sbd0A: $this->pos = 0; goto tMyqG; tMyqG: $this->sheets = array(); goto hjwfU; wYQCN: $worksheetInfo = array(); goto wSiMB; hjwfU: while ($this->pos < $this->dataSize) { $code = self::getInt2d($this->data, $this->pos); switch ($code) { case self::XLS_TYPE_BOF: $this->readBof(); break; case self::XLS_TYPE_SHEET: $this->readSheet(); break; case self::XLS_TYPE_EOF: $this->readDefault(); break 2; default: $this->readDefault(); break; } } goto BehfE; P2Rlo: $this->dataSize = strlen($this->data); goto Sbd0A; BehfE: foreach ($this->sheets as $sheet) { goto fGocU; AN_4u: $tmpInfo = array(); goto mXhQI; PpAyw: $tmpInfo["\154\x61\163\164\x43\157\154\x75\155\156\x49\x6e\x64\x65\x78"] = 0; goto HfNC1; YssrZ: $tmpInfo["\154\x61\163\164\x43\x6f\x6c\165\x6d\156\114\x65\164\x74\145\x72"] = PHPExcel_Cell::stringFromColumnIndex($tmpInfo["\154\x61\x73\x74\103\157\x6c\165\x6d\156\x49\x6e\144\145\170"]); goto h1lB5; xF0mV: $tmpInfo["\154\141\x73\x74\x43\x6f\x6c\165\155\156\x4c\145\x74\164\145\162"] = "\101"; goto PpAyw; mXhQI: $tmpInfo["\167\x6f\162\x6b\x73\x68\145\x65\164\x4e\141\x6d\x65"] = $sheet["\156\x61\x6d\145"]; goto xF0mV; fGocU: if ($sheet["\x73\150\x65\x65\164\x54\x79\160\x65"] != 0x0) { continue; } goto AN_4u; t8iYt: $this->pos = $sheet["\x6f\146\146\x73\145\x74"]; goto CAiDo; h1lB5: $tmpInfo["\164\157\164\141\x6c\103\157\x6c\x75\155\156\x73"] = $tmpInfo["\x6c\x61\x73\x74\103\x6f\x6c\165\x6d\156\x49\156\144\x65\170"] + 1; goto n_BVE; n_BVE: $worksheetInfo[] = $tmpInfo; goto b3Gn8; RJ9gJ: $tmpInfo["\164\157\x74\x61\x6c\x43\157\154\165\155\x6e\163"] = 0; goto t8iYt; CAiDo: while ($this->pos <= $this->dataSize - 4) { $code = self::getInt2d($this->data, $this->pos); switch ($code) { case self::XLS_TYPE_RK: case self::XLS_TYPE_LABELSST: case self::XLS_TYPE_NUMBER: case self::XLS_TYPE_FORMULA: case self::XLS_TYPE_BOOLERR: case self::XLS_TYPE_LABEL: goto fVQ4j; SHHi0: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto qchgH; iCJ3D: $tmpInfo["\x6c\141\163\x74\103\157\154\x75\x6d\156\x49\156\144\145\170"] = max($tmpInfo["\154\x61\163\x74\x43\157\x6c\165\x6d\x6e\x49\x6e\144\145\170"], $columnIndex); goto LMVWQ; OafBY: $rowIndex = self::getInt2d($recordData, 0) + 1; goto O1Rd9; O1Rd9: $columnIndex = self::getInt2d($recordData, 2); goto zOeat; qchgH: $this->pos += 4 + $length; goto OafBY; zOeat: $tmpInfo["\x74\x6f\164\141\154\x52\157\167\163"] = max($tmpInfo["\164\157\164\141\x6c\122\157\x77\x73"], $rowIndex); goto iCJ3D; LMVWQ: break; goto gw1wi; fVQ4j: $length = self::getInt2d($this->data, $this->pos + 2); goto SHHi0; gw1wi: case self::XLS_TYPE_BOF: $this->readBof(); break; case self::XLS_TYPE_EOF: $this->readDefault(); break 2; default: $this->readDefault(); break; } } goto YssrZ; HfNC1: $tmpInfo["\164\x6f\164\x61\x6c\122\157\167\x73"] = 0; goto RJ9gJ; b3Gn8: } goto zO1I_; sZAiA: if (!file_exists($pFilename)) { throw new PHPExcel_Reader_Exception("\103\x6f\x75\x6c\144\x20\x6e\x6f\164\x20\x6f\160\145\156\40" . $pFilename . "\40\146\x6f\162\x20\162\x65\x61\144\x69\x6e\x67\41\x20\x46\x69\x6c\145\40\x64\x6f\145\x73\40\x6e\x6f\x74\40\x65\x78\151\x73\x74\56"); } goto wYQCN; wSiMB: $this->loadOLE($pFilename); goto P2Rlo; EyfbV: } public function load($pFilename) { goto rOHAx; IOmYG: $this->dataSize = strlen($this->data); goto uSw4W; VkZtc: $this->drawingGroupData = ''; goto xdtPu; XnSTb: if (!$this->readDataOnly) { $this->phpExcel->removeCellStyleXfByIndex(0); $this->phpExcel->removeCellXfByIndex(0); } goto RGC2I; J4yaL: $this->sst = array(); goto VkZtc; tOe6Q: $this->data = null; goto zMBpT; O8YVs: $this->mapCellXfIndex = array(); goto nXqKw; rOHAx: $this->loadOLE($pFilename); goto dxil2; dxil2: $this->phpExcel = new PHPExcel(); goto IQVbR; uSw4W: $this->pos = 0; goto t8WHX; nXqKw: $this->mapCellStyleXfIndex = array(); goto ZGEav; vQdN2: foreach ($this->definedname as $definedName) { if ($definedName["\x69\x73\102\x75\151\154\164\x49\x6e\116\x61\x6d\x65"]) { switch ($definedName["\x6e\141\x6d\x65"]) { case pack("\103", 0x6): goto Qew7T; E26Vs: $extractedRanges = array(); goto Dz5qH; Qew7T: $ranges = explode("\54", $definedName["\x66\x6f\x72\155\165\x6c\x61"]); goto E26Vs; X6q4q: if ($docSheet = $this->phpExcel->getSheetByName($sheetName)) { $docSheet->getPageSetup()->setPrintArea(implode("\x2c", $extractedRanges)); } goto wqwTP; wqwTP: break; goto GU8aP; Dz5qH: foreach ($ranges as $range) { goto oV8uA; NgXs7: if (count($explodes) == 2) { if (strpos($explodes[1], "\72") === false) { $explodes[1] = $explodes[1] . "\72" . $explodes[1]; } $extractedRanges[] = str_replace("\44", '', $explodes[1]); } goto ENtRn; oV8uA: $explodes = explode("\x21", $range); goto pWLv3; pWLv3: $sheetName = trim($explodes[0], "\x27"); goto NgXs7; ENtRn: } goto X6q4q; GU8aP: case pack("\103", 0x7): goto VksV_; VksV_: $ranges = explode("\54", $definedName["\x66\x6f\162\155\x75\154\141"]); goto p2ZTc; p2ZTc: foreach ($ranges as $range) { $explodes = explode("\41", $range); if (count($explodes) == 2) { if ($docSheet = $this->phpExcel->getSheetByName($explodes[0])) { goto Dpmdk; Dpmdk: $extractedRange = $explodes[1]; goto tnzFs; Q5pEA: $coordinateStrings = explode("\72", $extractedRange); goto v24lG; v24lG: if (count($coordinateStrings) == 2) { goto oitm8; oitm8: list($firstColumn, $firstRow) = PHPExcel_Cell::coordinateFromString($coordinateStrings[0]); goto UCfD4; UCfD4: list($lastColumn, $lastRow) = PHPExcel_Cell::coordinateFromString($coordinateStrings[1]); goto pDBHg; pDBHg: if ($firstColumn == "\x41" and $lastColumn == "\x49\x56") { $docSheet->getPageSetup()->setRowsToRepeatAtTop(array($firstRow, $lastRow)); } elseif ($firstRow == 1 and $lastRow == 65536) { $docSheet->getPageSetup()->setColumnsToRepeatAtLeft(array($firstColumn, $lastColumn)); } goto SDIgs; SDIgs: } goto Ze8bi; tnzFs: $extractedRange = str_replace("\x24", '', $extractedRange); goto Q5pEA; Ze8bi: } } } goto DH8SC; DH8SC: break; goto rh7Tp; rh7Tp: } } else { $explodes = explode("\41", $definedName["\x66\x6f\162\155\x75\154\x61"]); if (count($explodes) == 2) { if (($docSheet = $this->phpExcel->getSheetByName($explodes[0])) || ($docSheet = $this->phpExcel->getSheetByName(trim($explodes[0], "\x27")))) { goto qhTnu; bfv1I: $scope = $definedName["\163\143\157\x70\145"] == 0 ? null : $this->phpExcel->getSheetByName($this->sheets[$definedName["\163\x63\x6f\x70\145"] - 1]["\x6e\141\x6d\x65"]); goto z6f3N; z6f3N: $this->phpExcel->addNamedRange(new PHPExcel_NamedRange((string) $definedName["\156\141\x6d\x65"], $docSheet, $extractedRange, $localOnly, $scope)); goto CAlEf; ARbYt: $extractedRange = str_replace("\44", '', $extractedRange); goto P64yD; qhTnu: $extractedRange = $explodes[1]; goto ARbYt; P64yD: $localOnly = $definedName["\163\x63\x6f\160\145"] == 0 ? false : true; goto bfv1I; CAlEf: } } else { } } } goto tOe6Q; clK_t: $this->externalBooks = array(); goto S9qWI; Bb1d_: $this->sheets = array(); goto clK_t; ZGEav: while ($this->pos < $this->dataSize) { $code = self::getInt2d($this->data, $this->pos); switch ($code) { case self::XLS_TYPE_BOF: $this->readBof(); break; case self::XLS_TYPE_FILEPASS: $this->readFilepass(); break; case self::XLS_TYPE_CODEPAGE: $this->readCodepage(); break; case self::XLS_TYPE_DATEMODE: $this->readDateMode(); break; case self::XLS_TYPE_FONT: $this->readFont(); break; case self::XLS_TYPE_FORMAT: $this->readFormat(); break; case self::XLS_TYPE_XF: $this->readXf(); break; case self::XLS_TYPE_XFEXT: $this->readXfExt(); break; case self::XLS_TYPE_STYLE: $this->readStyle(); break; case self::XLS_TYPE_PALETTE: $this->readPalette(); break; case self::XLS_TYPE_SHEET: $this->readSheet(); break; case self::XLS_TYPE_EXTERNALBOOK: $this->readExternalBook(); break; case self::XLS_TYPE_EXTERNNAME: $this->readExternName(); break; case self::XLS_TYPE_EXTERNSHEET: $this->readExternSheet(); break; case self::XLS_TYPE_DEFINEDNAME: $this->readDefinedName(); break; case self::XLS_TYPE_MSODRAWINGGROUP: $this->readMsoDrawingGroup(); break; case self::XLS_TYPE_SST: $this->readSst(); break; case self::XLS_TYPE_EOF: $this->readDefault(); break 2; default: $this->readDefault(); break; } } goto e1RqF; zMBpT: return $this->phpExcel; goto dsRya; RGC2I: $this->readSummaryInformation(); goto M_PTm; qVXmU: foreach ($this->sheets as $sheet) { goto zbiRC; Wm3BY: $this->textObjRef = -1; goto QMzD2; vqwPd: $this->textObjects = array(); goto Bzwqc; NB5_v: if (!empty($this->cellNotes)) { foreach ($this->cellNotes as $note => $noteDetails) { goto qUwmx; hENZx: $cellAddress = str_replace("\44", '', $noteDetails["\143\145\154\x6c\x52\x65\146"]); goto nJM_t; qUwmx: if (!isset($noteDetails["\157\142\152\x54\145\170\x74\x44\141\164\x61"])) { if (isset($this->textObjects[$note])) { $textObject = $this->textObjects[$note]; $noteDetails["\x6f\x62\152\x54\x65\170\x74\x44\141\164\x61"] = $textObject; } else { $noteDetails["\157\x62\152\124\x65\170\x74\x44\141\x74\x61"]["\x74\x65\170\164"] = ''; } } goto hENZx; nJM_t: $this->phpSheet->getComment($cellAddress)->setAuthor($noteDetails["\141\x75\164\x68\157\x72"])->setText($this->parseRichText($noteDetails["\157\142\x6a\x54\145\x78\164\x44\141\164\x61"]["\164\145\170\x74"])); goto ToQie; ToQie: } } goto El_mW; Bzwqc: $this->cellNotes = array(); goto Wm3BY; zbiRC: if ($sheet["\x73\x68\x65\145\x74\124\x79\160\x65"] != 0x0) { continue; } goto ulda3; QMzD2: while ($this->pos <= $this->dataSize - 4) { $code = self::getInt2d($this->data, $this->pos); switch ($code) { case self::XLS_TYPE_BOF: $this->readBof(); break; case self::XLS_TYPE_PRINTGRIDLINES: $this->readPrintGridlines(); break; case self::XLS_TYPE_DEFAULTROWHEIGHT: $this->readDefaultRowHeight(); break; case self::XLS_TYPE_SHEETPR: $this->readSheetPr(); break; case self::XLS_TYPE_HORIZONTALPAGEBREAKS: $this->readHorizontalPageBreaks(); break; case self::XLS_TYPE_VERTICALPAGEBREAKS: $this->readVerticalPageBreaks(); break; case self::XLS_TYPE_HEADER: $this->readHeader(); break; case self::XLS_TYPE_FOOTER: $this->readFooter(); break; case self::XLS_TYPE_HCENTER: $this->readHcenter(); break; case self::XLS_TYPE_VCENTER: $this->readVcenter(); break; case self::XLS_TYPE_LEFTMARGIN: $this->readLeftMargin(); break; case self::XLS_TYPE_RIGHTMARGIN: $this->readRightMargin(); break; case self::XLS_TYPE_TOPMARGIN: $this->readTopMargin(); break; case self::XLS_TYPE_BOTTOMMARGIN: $this->readBottomMargin(); break; case self::XLS_TYPE_PAGESETUP: $this->readPageSetup(); break; case self::XLS_TYPE_PROTECT: $this->readProtect(); break; case self::XLS_TYPE_SCENPROTECT: $this->readScenProtect(); break; case self::XLS_TYPE_OBJECTPROTECT: $this->readObjectProtect(); break; case self::XLS_TYPE_PASSWORD: $this->readPassword(); break; case self::XLS_TYPE_DEFCOLWIDTH: $this->readDefColWidth(); break; case self::XLS_TYPE_COLINFO: $this->readColInfo(); break; case self::XLS_TYPE_DIMENSION: $this->readDefault(); break; case self::XLS_TYPE_ROW: $this->readRow(); break; case self::XLS_TYPE_DBCELL: $this->readDefault(); break; case self::XLS_TYPE_RK: $this->readRk(); break; case self::XLS_TYPE_LABELSST: $this->readLabelSst(); break; case self::XLS_TYPE_MULRK: $this->readMulRk(); break; case self::XLS_TYPE_NUMBER: $this->readNumber(); break; case self::XLS_TYPE_FORMULA: $this->readFormula(); break; case self::XLS_TYPE_SHAREDFMLA: $this->readSharedFmla(); break; case self::XLS_TYPE_BOOLERR: $this->readBoolErr(); break; case self::XLS_TYPE_MULBLANK: $this->readMulBlank(); break; case self::XLS_TYPE_LABEL: $this->readLabel(); break; case self::XLS_TYPE_BLANK: $this->readBlank(); break; case self::XLS_TYPE_MSODRAWING: $this->readMsoDrawing(); break; case self::XLS_TYPE_OBJ: $this->readObj(); break; case self::XLS_TYPE_WINDOW2: $this->readWindow2(); break; case self::XLS_TYPE_PAGELAYOUTVIEW: $this->readPageLayoutView(); break; case self::XLS_TYPE_SCL: $this->readScl(); break; case self::XLS_TYPE_PANE: $this->readPane(); break; case self::XLS_TYPE_SELECTION: $this->readSelection(); break; case self::XLS_TYPE_MERGEDCELLS: $this->readMergedCells(); break; case self::XLS_TYPE_HYPERLINK: $this->readHyperLink(); break; case self::XLS_TYPE_DATAVALIDATIONS: $this->readDataValidations(); break; case self::XLS_TYPE_DATAVALIDATION: $this->readDataValidation(); break; case self::XLS_TYPE_SHEETLAYOUT: $this->readSheetLayout(); break; case self::XLS_TYPE_SHEETPROTECTION: $this->readSheetProtection(); break; case self::XLS_TYPE_RANGEPROTECTION: $this->readRangeProtection(); break; case self::XLS_TYPE_NOTE: $this->readNote(); break; case self::XLS_TYPE_TXO: $this->readTextObject(); break; case self::XLS_TYPE_CONTINUE: $this->readContinue(); break; case self::XLS_TYPE_EOF: $this->readDefault(); break 2; default: $this->readDefault(); break; } } goto OmfE2; fkojh: $this->sharedFormulaParts = array(); goto EYbtx; PBhUD: $this->drawingData = ''; goto LPOlh; UKv0W: $this->phpSheet->setSheetState($sheet["\x73\x68\145\145\x74\123\164\141\x74\145"]); goto iMScI; OmfE2: if (!$this->readDataOnly && $this->drawingData) { goto MUlW7; xCD9i: $allSpContainers = $escherWorksheet->getDgContainer()->getSpgrContainer()->getAllSpContainers(); goto QnpTk; MUlW7: $escherWorksheet = new PHPExcel_Shared_Escher(); goto uvbYj; uvbYj: $reader = new PHPExcel_Reader_Excel5_Escher($escherWorksheet); goto K5epL; K5epL: $escherWorksheet = $reader->load($this->drawingData); goto xCD9i; QnpTk: } goto ZDaDY; EYbtx: $this->sharedFormulas = array(); goto vqwPd; hp2mN: $this->phpSheet = $this->phpExcel->createSheet(); goto qbAG_; ZDaDY: foreach ($this->objs as $n => $obj) { if (isset($allSpContainers[$n + 1]) && is_object($allSpContainers[$n + 1])) { goto UD7Sa; dwTLK: $startOffsetY = $spContainer->getStartOffsetY(); goto juPxK; dgsgb: list($startColumn, $startRow) = PHPExcel_Cell::coordinateFromString($spContainer->getStartCoordinates()); goto iNlnj; wR4Bo: $width = PHPExcel_Shared_Excel5::getDistanceX($this->phpSheet, $startColumn, $startOffsetX, $endColumn, $endOffsetX); goto pgb3y; kRu1W: $offsetY = $startOffsetY * PHPExcel_Shared_Excel5::sizeRow($this->phpSheet, $startRow) / 256; goto xmABj; UD7Sa: $spContainer = $allSpContainers[$n + 1]; goto qCrlM; iNlnj: list($endColumn, $endRow) = PHPExcel_Cell::coordinateFromString($spContainer->getEndCoordinates()); goto txJ3E; xmABj: switch ($obj["\157\x74\117\x62\152\x54\x79\x70\x65"]) { case 0x19: if (isset($this->cellNotes[$obj["\151\144\x4f\142\x6a\x49\x44"]])) { $cellNote = $this->cellNotes[$obj["\151\144\x4f\x62\x6a\111\104"]]; if (isset($this->textObjects[$obj["\151\144\117\142\152\x49\x44"]])) { $textObject = $this->textObjects[$obj["\151\x64\117\x62\152\111\x44"]]; $this->cellNotes[$obj["\x69\144\117\x62\152\x49\104"]]["\157\x62\152\x54\145\170\164\104\141\164\141"] = $textObject; } } break; case 0x8: goto UCIl1; TUgDv: $BSE = $BSECollection[$BSEindex - 1]; goto JdEhO; UCIl1: $BSEindex = $spContainer->getOPT(0x104); goto cO3db; Id8PG: if ($blip = $BSE->getBlip()) { goto ViVqU; d6YPc: $drawing->setOffsetY($offsetY); goto CprFn; M3gYO: $drawing->setWorksheet($this->phpSheet); goto P4s37; CprFn: switch ($blipType) { case PHPExcel_Shared_Escher_DggContainer_BstoreContainer_BSE::BLIPTYPE_JPEG: goto S7dm5; tzpcx: break; goto jX2Xc; S7dm5: $drawing->setRenderingFunction(PHPExcel_Worksheet_MemoryDrawing::RENDERING_JPEG); goto CenUl; CenUl: $drawing->setMimeType(PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_JPEG); goto tzpcx; jX2Xc: case PHPExcel_Shared_Escher_DggContainer_BstoreContainer_BSE::BLIPTYPE_PNG: goto jX6Zy; LhAh3: $drawing->setMimeType(PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_PNG); goto wu97e; wu97e: break; goto vch_b; jX6Zy: $drawing->setRenderingFunction(PHPExcel_Worksheet_MemoryDrawing::RENDERING_PNG); goto LhAh3; vch_b: } goto M3gYO; ViVqU: $ih = imagecreatefromstring($blip->getData()); goto MI68p; P4s37: $drawing->setCoordinates($spContainer->getStartCoordinates()); goto ekMkD; bnj4a: $drawing->setImageResource($ih); goto ad2zn; ad2zn: $drawing->setResizeProportional(false); goto FTksw; MI68p: $drawing = new PHPExcel_Worksheet_MemoryDrawing(); goto bnj4a; ESjdX: $drawing->setHeight($height); goto hzddW; hzddW: $drawing->setOffsetX($offsetX); goto d6YPc; FTksw: $drawing->setWidth($width); goto ESjdX; ekMkD: } goto nC6FP; cO3db: $BSECollection = $escherWorkbook->getDggContainer()->getBstoreContainer()->getBSECollection(); goto TUgDv; JdEhO: $blipType = $BSE->getBlipType(); goto Id8PG; nC6FP: break; goto Y_ZC8; Y_ZC8: default: break; } goto uPniP; txJ3E: $startOffsetX = $spContainer->getStartOffsetX(); goto dwTLK; VqwSV: $offsetX = $startOffsetX * PHPExcel_Shared_Excel5::sizeCol($this->phpSheet, $startColumn) / 1024; goto kRu1W; pgb3y: $height = PHPExcel_Shared_Excel5::getDistanceY($this->phpSheet, $startRow, $startOffsetY, $endRow, $endOffsetY); goto VqwSV; ilITg: $endOffsetY = $spContainer->getEndOffsetY(); goto wR4Bo; qCrlM: if ($spContainer->getNestingLevel() > 1) { continue; } goto dgsgb; juPxK: $endOffsetX = $spContainer->getEndOffsetX(); goto ilITg; uPniP: } } goto ty590; ty590: if ($this->version == self::XLS_BIFF8) { foreach ($this->sharedFormulaParts as $cell => $baseCell) { list($column, $row) = PHPExcel_Cell::coordinateFromString($cell); if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($column, $row, $this->phpSheet->getTitle())) { $formula = $this->getFormulaFromStructure($this->sharedFormulas[$baseCell], $cell); $this->phpSheet->getCell($cell)->setValueExplicit("\x3d" . $formula, PHPExcel_Cell_DataType::TYPE_FORMULA); } } } goto NB5_v; qbAG_: $this->phpSheet->setTitle($sheet["\x6e\141\x6d\x65"], false); goto UKv0W; iMScI: $this->pos = $sheet["\x6f\146\146\163\145\164"]; goto RJmS1; LPOlh: $this->objs = array(); goto fkojh; ulda3: if (isset($this->loadSheetsOnly) && !in_array($sheet["\156\141\155\145"], $this->loadSheetsOnly)) { continue; } goto hp2mN; RJmS1: $this->isFitToPages = false; goto PBhUD; El_mW: } goto vQdN2; e1RqF: if (!$this->readDataOnly) { foreach ($this->objFonts as $objFont) { if (isset($objFont->colorIndex)) { $color = PHPExcel_Reader_Excel5_Color::map($objFont->colorIndex, $this->palette, $this->version); $objFont->getColor()->setRGB($color["\x72\147\142"]); } } foreach ($this->phpExcel->getCellXfCollection() as $objStyle) { goto jztgg; cbuLK: $right = $objStyle->getBorders()->getRight(); goto b0wQw; l8GtC: if (isset($bottom->colorIndex)) { $borderBottomColor = PHPExcel_Reader_Excel5_Color::map($bottom->colorIndex, $this->palette, $this->version); $bottom->getColor()->setRGB($borderBottomColor["\162\x67\x62"]); } goto IaXJt; N1JQn: if (isset($diagonal->colorIndex)) { $borderDiagonalColor = PHPExcel_Reader_Excel5_Color::map($diagonal->colorIndex, $this->palette, $this->version); $diagonal->getColor()->setRGB($borderDiagonalColor["\162\x67\x62"]); } goto RHZvw; O_yZl: $top = $objStyle->getBorders()->getTop(); goto cbuLK; wqczG: if (isset($top->colorIndex)) { $borderTopColor = PHPExcel_Reader_Excel5_Color::map($top->colorIndex, $this->palette, $this->version); $top->getColor()->setRGB($borderTopColor["\x72\147\x62"]); } goto fohE4; jztgg: $fill = $objStyle->getFill(); goto qialb; qialb: if (isset($fill->startcolorIndex)) { $startColor = PHPExcel_Reader_Excel5_Color::map($fill->startcolorIndex, $this->palette, $this->version); $fill->getStartColor()->setRGB($startColor["\162\147\x62"]); } goto vtizD; fohE4: if (isset($right->colorIndex)) { $borderRightColor = PHPExcel_Reader_Excel5_Color::map($right->colorIndex, $this->palette, $this->version); $right->getColor()->setRGB($borderRightColor["\x72\147\x62"]); } goto l8GtC; b0wQw: $bottom = $objStyle->getBorders()->getBottom(); goto mr_5W; mr_5W: $left = $objStyle->getBorders()->getLeft(); goto Y6SD2; Y6SD2: $diagonal = $objStyle->getBorders()->getDiagonal(); goto wqczG; IaXJt: if (isset($left->colorIndex)) { $borderLeftColor = PHPExcel_Reader_Excel5_Color::map($left->colorIndex, $this->palette, $this->version); $left->getColor()->setRGB($borderLeftColor["\162\147\x62"]); } goto N1JQn; vtizD: if (isset($fill->endcolorIndex)) { $endColor = PHPExcel_Reader_Excel5_Color::map($fill->endcolorIndex, $this->palette, $this->version); $fill->getEndColor()->setRGB($endColor["\x72\147\x62"]); } goto O_yZl; RHZvw: } } goto sEuiE; IQVbR: $this->phpExcel->removeSheetByIndex(0); goto XnSTb; bna1g: $this->definedname = array(); goto J4yaL; HE3XF: $this->objFonts = array(); goto DLvbT; sEuiE: if (!$this->readDataOnly && $this->drawingGroupData) { goto Li339; TFeUY: $escherWorkbook = $reader->load($this->drawingGroupData); goto VCw4K; coAY7: $reader = new PHPExcel_Reader_Excel5_Escher($escherWorkbook); goto TFeUY; Li339: $escherWorkbook = new PHPExcel_Shared_Escher(); goto coAY7; VCw4K: } goto qVXmU; S9qWI: $this->ref = array(); goto bna1g; M_PTm: $this->readDocumentSummaryInformation(); goto IOmYG; hjREl: $this->formats = array(); goto HE3XF; DLvbT: $this->palette = array(); goto Bb1d_; xdtPu: $this->xfIndex = ''; goto O8YVs; t8WHX: $this->codepage = "\x43\120\61\62\65\62"; goto hjREl; dsRya: } private function readRecordData($data, $pos, $len) { goto VQWFx; udfy5: if ($this->encryption == self::MS_BIFF_CRYPTO_RC4) { goto DPPES; sYYyQ: $this->rc4Key->RC4(str_repeat("\x0", $step)); goto yi9aa; cJSv6: $endBlock = floor(($pos + $len) / self::REKEY_BLOCK); goto AcJDb; DPPES: $oldBlock = floor($this->rc4Pos / self::REKEY_BLOCK); goto S6Pit; AcJDb: if ($block != $oldBlock || $pos < $this->rc4Pos || !$this->rc4Key) { $this->rc4Key = $this->makeKey($block, $this->md5Ctxt); $step = $pos % self::REKEY_BLOCK; } else { $step = $pos - $this->rc4Pos; } goto sYYyQ; OZyd5: $recordData .= $this->rc4Key->RC4(substr($data, 0, $len)); goto IqgGG; yi9aa: while ($block != $endBlock) { $step = self::REKEY_BLOCK - $pos % self::REKEY_BLOCK; $recordData .= $this->rc4Key->RC4(substr($data, 0, $step)); $data = substr($data, $step); $pos += $step; $len -= $step; $block++; $this->rc4Key = $this->makeKey($block, $this->md5Ctxt); } goto OZyd5; S6Pit: $block = floor($pos / self::REKEY_BLOCK); goto cJSv6; IqgGG: $this->rc4Pos = $pos + $len; goto OOtGT; OOtGT: } elseif ($this->encryption == self::MS_BIFF_CRYPTO_XOR) { throw new PHPExcel_Reader_Exception("\130\x4f\x72\x20\x65\156\143\x72\171\x70\x74\x69\x6f\156\x20\x6e\x6f\x74\40\x73\x75\160\160\157\x72\164\145\144"); } goto LsE1n; VQWFx: $data = substr($data, $pos, $len); goto xlM1s; xlM1s: if ($this->encryption == self::MS_BIFF_CRYPTO_NONE || $pos < $this->encryptionStartPos) { return $data; } goto YiyBG; LsE1n: return $recordData; goto B0iWP; YiyBG: $recordData = ''; goto udfy5; B0iWP: } private function loadOLE($pFilename) { goto uEpw8; SikB1: $this->summaryInformation = $ole->getStream($ole->summaryInformation); goto a96zJ; ksThq: $this->data = $ole->getStream($ole->wrkbook); goto SikB1; a96zJ: $this->documentSummaryInformation = $ole->getStream($ole->documentSummaryInformation); goto JpHda; uEpw8: $ole = new PHPExcel_Shared_OLERead(); goto aRCtY; aRCtY: $res = $ole->read($pFilename); goto ksThq; JpHda: } private function readSummaryInformation() { goto ZzLA9; lezrV: for ($i = 0; $i < $countProperties; ++$i) { $id = self::getInt4d($this->summaryInformation, $secOffset + 8 + 8 * $i); $offset = self::getInt4d($this->summaryInformation, $secOffset + 12 + 8 * $i); $type = self::getInt4d($this->summaryInformation, $secOffset + $offset); $value = null; switch ($type) { case 0x2: $value = self::getInt2d($this->summaryInformation, $secOffset + 4 + $offset); break; case 0x3: $value = self::getInt4d($this->summaryInformation, $secOffset + 4 + $offset); break; case 0x13: break; case 0x1e: goto bTtox; UFz5q: $value = PHPExcel_Shared_String::ConvertEncoding($value, "\x55\124\x46\x2d\70", $codePage); goto B32WX; IDSR0: $value = substr($this->summaryInformation, $secOffset + 8 + $offset, $byteLength); goto UFz5q; B32WX: $value = rtrim($value); goto SoNAL; bTtox: $byteLength = self::getInt4d($this->summaryInformation, $secOffset + 4 + $offset); goto IDSR0; SoNAL: break; goto ZO3Rp; ZO3Rp: case 0x40: $value = PHPExcel_Shared_OLE::OLE2LocalDate(substr($this->summaryInformation, $secOffset + 4 + $offset, 8)); break; case 0x47: break; } switch ($id) { case 0x1: $codePage = PHPExcel_Shared_CodePage::NumberToName($value); break; case 0x2: $this->phpExcel->getProperties()->setTitle($value); break; case 0x3: $this->phpExcel->getProperties()->setSubject($value); break; case 0x4: $this->phpExcel->getProperties()->setCreator($value); break; case 0x5: $this->phpExcel->getProperties()->setKeywords($value); break; case 0x6: $this->phpExcel->getProperties()->setDescription($value); break; case 0x7: break; case 0x8: $this->phpExcel->getProperties()->setLastModifiedBy($value); break; case 0x9: break; case 0xa: break; case 0xb: break; case 0xc: $this->phpExcel->getProperties()->setCreated($value); break; case 0xd: $this->phpExcel->getProperties()->setModified($value); break; case 0xe: break; case 0xf: break; case 0x10: break; case 0x11: break; case 0x12: break; case 0x13: break; } } goto XDnQo; He2df: $secCount = self::getInt4d($this->summaryInformation, 24); goto q_hT0; ZzLA9: if (!isset($this->summaryInformation)) { return; } goto He2df; q_hT0: $secOffset = self::getInt4d($this->summaryInformation, 44); goto zxBXz; u40to: $codePage = "\103\x50\61\62\65\x32"; goto lezrV; zxBXz: $secLength = self::getInt4d($this->summaryInformation, $secOffset); goto nwWxD; nwWxD: $countProperties = self::getInt4d($this->summaryInformation, $secOffset + 4); goto u40to; XDnQo: } private function readDocumentSummaryInformation() { goto OEVsW; t_rT0: for ($i = 0; $i < $countProperties; ++$i) { $id = self::getInt4d($this->documentSummaryInformation, $secOffset + 8 + 8 * $i); $offset = self::getInt4d($this->documentSummaryInformation, $secOffset + 12 + 8 * $i); $type = self::getInt4d($this->documentSummaryInformation, $secOffset + $offset); $value = null; switch ($type) { case 0x2: $value = self::getInt2d($this->documentSummaryInformation, $secOffset + 4 + $offset); break; case 0x3: $value = self::getInt4d($this->documentSummaryInformation, $secOffset + 4 + $offset); break; case 0xb: goto delBB; CymdZ: $value = $value == 0 ? false : true; goto T_V_D; delBB: $value = self::getInt2d($this->documentSummaryInformation, $secOffset + 4 + $offset); goto CymdZ; T_V_D: break; goto binMA; binMA: case 0x13: break; case 0x1e: goto eWhU0; vK4B8: $value = PHPExcel_Shared_String::ConvertEncoding($value, "\x55\124\x46\x2d\70", $codePage); goto cF8co; ejFrl: break; goto braPN; XEke1: $value = substr($this->documentSummaryInformation, $secOffset + 8 + $offset, $byteLength); goto vK4B8; cF8co: $value = rtrim($value); goto ejFrl; eWhU0: $byteLength = self::getInt4d($this->documentSummaryInformation, $secOffset + 4 + $offset); goto XEke1; braPN: case 0x40: $value = PHPExcel_Shared_OLE::OLE2LocalDate(substr($this->documentSummaryInformation, $secOffset + 4 + $offset, 8)); break; case 0x47: break; } switch ($id) { case 0x1: $codePage = PHPExcel_Shared_CodePage::NumberToName($value); break; case 0x2: $this->phpExcel->getProperties()->setCategory($value); break; case 0x3: break; case 0x4: break; case 0x5: break; case 0x6: break; case 0x7: break; case 0x8: break; case 0x9: break; case 0xa: break; case 0xb: break; case 0xc: break; case 0xd: break; case 0xe: $this->phpExcel->getProperties()->setManager($value); break; case 0xf: $this->phpExcel->getProperties()->setCompany($value); break; case 0x10: break; } } goto C8N75; PX7n9: $secLength = self::getInt4d($this->documentSummaryInformation, $secOffset); goto u0nRV; OEVsW: if (!isset($this->documentSummaryInformation)) { return; } goto mBJG0; mBJG0: $secCount = self::getInt4d($this->documentSummaryInformation, 24); goto rcelZ; qL0Uf: $codePage = "\103\120\61\x32\65\x32"; goto t_rT0; rcelZ: $secOffset = self::getInt4d($this->documentSummaryInformation, 44); goto PX7n9; u0nRV: $countProperties = self::getInt4d($this->documentSummaryInformation, $secOffset + 4); goto qL0Uf; C8N75: } private function readDefault() { $length = self::getInt2d($this->data, $this->pos + 2); $this->pos += 4 + $length; } private function readNote() { goto CxNJg; Gx155: if ($this->version == self::XLS_BIFF8) { goto Pkpsf; pb8RR: $this->cellNotes[$noteObjID] = array("\x63\x65\154\154\122\145\146" => $cellAddress, "\157\x62\152\x65\x63\x74\111\104" => $noteObjID, "\x61\x75\x74\x68\157\162" => $noteAuthor); goto iJKDT; e55BO: $noteAuthor = $noteAuthor["\x76\x61\154\x75\x65"]; goto pb8RR; RcxyN: $noteAuthor = self::readUnicodeStringLong(substr($recordData, 8)); goto e55BO; Pkpsf: $noteObjID = self::getInt2d($recordData, 6); goto RcxyN; iJKDT: } else { goto Hu4OF; McXqn: $noteText = trim(substr($recordData, 6)); goto OBLDq; CMhPk: $cellAddress = str_replace("\44", '', $cellAddress); goto ueGTC; ueGTC: $noteLength = self::getInt2d($recordData, 4); goto McXqn; OBLDq: if ($extension) { goto zdFRL; zdFRL: $comment = $this->phpSheet->getComment($cellAddress); goto fWs6v; fWs6v: $commentText = $comment->getText()->getPlainText(); goto uN8UJ; uN8UJ: $comment->setText($this->parseRichText($commentText . $noteText)); goto tk7Ua; tk7Ua: } else { $this->phpSheet->getComment($cellAddress)->setText($this->parseRichText($noteText)); } goto UqfyI; Hu4OF: $extension = false; goto tKbgr; tKbgr: if ($cellAddress == "\x24\102\x24\x36\65\65\63\66") { goto U_0P6; U_0P6: $row = self::getInt2d($recordData, 0); goto EfBf1; GjET0: $cellAddress = array_pop(array_keys($this->phpSheet->getComments())); goto AOwQx; EfBf1: $extension = true; goto GjET0; AOwQx: } goto CMhPk; UqfyI: } goto bpZt4; ID6L4: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto gaZox; gaZox: $this->pos += 4 + $length; goto XuImT; CxNJg: $length = self::getInt2d($this->data, $this->pos + 2); goto ID6L4; XuImT: if ($this->readDataOnly) { return; } goto zjiRR; zjiRR: $cellAddress = $this->readBIFF8CellAddress(substr($recordData, 0, 4)); goto Gx155; bpZt4: } private function readTextObject() { goto OW9i3; zljqe: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto d8ZHB; Xa04L: if ($this->readDataOnly) { return; } goto Aw6Fv; kaPZA: $rot = self::getInt2d($recordData, 2); goto St5W5; OW9i3: $length = self::getInt2d($this->data, $this->pos + 2); goto zljqe; St5W5: $cchText = self::getInt2d($recordData, 10); goto nGjth; Aw6Fv: $grbitOpts = self::getInt2d($recordData, 0); goto kaPZA; E7lbR: $text = $this->getSplicedRecordData(); goto I2eGX; I2eGX: $this->textObjects[$this->textObjRef] = array("\x74\x65\x78\164" => substr($text["\x72\145\x63\157\162\x64\x44\x61\x74\141"], $text["\163\x70\154\151\x63\x65\117\x66\146\163\x65\164\x73"][0] + 1, $cchText), "\x66\x6f\x72\x6d\141\x74" => substr($text["\x72\145\x63\x6f\162\144\104\141\x74\141"], $text["\x73\160\154\x69\x63\x65\x4f\x66\x66\x73\145\164\163"][1], $cbRuns), "\141\x6c\151\x67\156\155\145\x6e\164" => $grbitOpts, "\162\x6f\x74\x61\x74\151\x6f\156" => $rot); goto fxX_C; d8ZHB: $this->pos += 4 + $length; goto Xa04L; nGjth: $cbRuns = self::getInt2d($recordData, 12); goto E7lbR; fxX_C: } private function readBof() { goto hFDLF; h3hbo: $recordData = substr($this->data, $this->pos + 4, $length); goto jfGpU; jfGpU: $this->pos += 4 + $length; goto t3woC; cYn3s: switch ($substreamType) { case self::XLS_WorkbookGlobals: goto epm31; Ly3kU: $this->version = $version; goto YS3J3; YS3J3: break; goto o_KxE; iS2gr: if ($version != self::XLS_BIFF8 && $version != self::XLS_BIFF7) { throw new PHPExcel_Reader_Exception("\103\x61\156\156\157\164\40\x72\145\x61\x64\40\164\x68\x69\163\x20\x45\170\143\145\x6c\x20\x66\x69\x6c\x65\x2e\40\126\x65\x72\163\x69\157\x6e\40\x69\163\40\164\x6f\x6f\x20\157\x6c\x64\x2e"); } goto Ly3kU; epm31: $version = self::getInt2d($recordData, 0); goto iS2gr; o_KxE: case self::XLS_Worksheet: break; default: do { $code = self::getInt2d($this->data, $this->pos); $this->readDefault(); } while ($code != self::XLS_TYPE_EOF && $this->pos < $this->dataSize); break; } goto d8kB3; t3woC: $substreamType = self::getInt2d($recordData, 2); goto cYn3s; hFDLF: $length = self::getInt2d($this->data, $this->pos + 2); goto h3hbo; d8kB3: } private function readFilepass() { goto cC1Rz; WWUwS: $this->encryptionStartPos = $this->pos + self::getInt2d($this->data, $this->pos + 2); goto wiLOT; CbhXe: if (!$this->verifyPassword("\126\x65\x6c\x76\x65\x74\x53\x77\145\141\x74\163\150\157\160", substr($recordData, 6, 16), substr($recordData, 22, 16), substr($recordData, 38, 16), $this->md5Ctxt)) { throw new PHPExcel_Reader_Exception("\104\145\143\x72\171\x70\164\x69\157\x6e\40\x70\141\163\163\167\x6f\162\144\40\151\156\x63\x6f\x72\x72\x65\143\x74"); } goto PkjGC; rC6io: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto vmcIN; vmcIN: $this->pos += 4 + $length; goto CbhXe; MSg9V: if ($length != 54) { throw new PHPExcel_Reader_Exception("\125\x6e\x65\170\160\145\143\x74\145\144\x20\x66\x69\154\145\40\x70\141\163\163\x20\162\x65\x63\x6f\x72\144\x20\x6c\x65\x6e\147\164\x68"); } goto rC6io; PkjGC: $this->encryption = self::MS_BIFF_CRYPTO_RC4; goto WWUwS; cC1Rz: $length = self::getInt2d($this->data, $this->pos + 2); goto MSg9V; wiLOT: } private function makeKey($block, $valContext) { goto YHk5r; UwB4C: $pwarray[6] = chr($block >> 8 & 0xff); goto eWWZi; YHk5r: $pwarray = str_repeat("\0", 64); goto GI73v; RzUyj: $s = $md5->getContext(); goto JGqwD; hBsZO: $md5 = new PHPExcel_Reader_Excel5_MD5(); goto EL4r4; GI73v: for ($i = 0; $i < 5; $i++) { $pwarray[$i] = $valContext[$i]; } goto V6p8u; WabsX: $pwarray[8] = chr($block >> 24 & 0xff); goto nNkNN; nNkNN: $pwarray[9] = "\200"; goto dBhfE; JGqwD: return new PHPExcel_Reader_Excel5_RC4($s); goto LQET1; eWWZi: $pwarray[7] = chr($block >> 16 & 0xff); goto WabsX; EL4r4: $md5->add($pwarray); goto RzUyj; V6p8u: $pwarray[5] = chr($block & 0xff); goto UwB4C; dBhfE: $pwarray[56] = "\110"; goto hBsZO; LQET1: } private function verifyPassword($password, $docid, $salt_data, $hashedsalt_data, &$valContext) { goto QGSkc; n5AZf: return $mdContext2 == $hashedsalt; goto Mwt09; oBD6J: $mdContext2 = $md5->getContext(); goto n5AZf; DOEJ8: $hashedsalt = $key->RC4($hashedsalt_data); goto mzKiR; y540h: $salt = $key->RC4($salt_data); goto DOEJ8; BC9Mc: $pwarray[56] = chr($i << 4 & 0xff); goto MrRns; o1gQc: $md5->add($pwarray); goto XeFJM; xZlUa: $mdContext1 = $md5->getContext(); goto lIjCi; MrRns: $md5 = new PHPExcel_Reader_Excel5_MD5(); goto MyP_Q; lIjCi: $offset = 0; goto co3IN; Uo9ND: $tocopy = 5; goto R8WNu; xB2fd: $md5->add($salt); goto oBD6J; Faqm_: $pwarray[16] = "\200"; goto GJJL_; XeFJM: $valContext = $md5->getContext(); goto EVwEC; co3IN: $keyoffset = 0; goto Uo9ND; ZNh8E: $pwarray[2 * $i] = chr(0x80); goto BC9Mc; LBYeG: $pwarray[56] = "\x80"; goto esv30; mzKiR: $salt .= "\x80" . str_repeat("\x0", 47); goto wLaPS; GJJL_: for ($i = 0; $i < 47; $i++) { $pwarray[17 + $i] = "\x0"; } goto LBYeG; esv30: $pwarray[57] = "\xa"; goto o1gQc; EVwEC: $key = $this->makeKey(0, $valContext); goto y540h; MyP_Q: $md5->add($pwarray); goto xZlUa; QGSkc: $pwarray = str_repeat("\0", 64); goto cAxZU; wLaPS: $salt[56] = "\x80"; goto x6djM; cAxZU: for ($i = 0; $i < strlen($password); $i++) { $o = ord(substr($password, $i, 1)); $pwarray[2 * $i] = chr($o & 0xff); $pwarray[2 * $i + 1] = chr($o >> 8 & 0xff); } goto ZNh8E; R8WNu: $md5->reset(); goto LjqZt; LjqZt: while ($offset != 16) { if (64 - $offset < 5) { $tocopy = 64 - $offset; } for ($i = 0; $i <= $tocopy; $i++) { $pwarray[$offset + $i] = $mdContext1[$keyoffset + $i]; } $offset += $tocopy; if ($offset == 64) { goto VhJKG; XecDE: $offset = 0; goto z5tzi; Scbkj: $keyoffset = $tocopy; goto uPBzb; z5tzi: continue; goto Ek_N1; uPBzb: $tocopy = 5 - $tocopy; goto XecDE; VhJKG: $md5->add($pwarray); goto Scbkj; Ek_N1: } $keyoffset = 0; $tocopy = 5; for ($i = 0; $i < 16; $i++) { $pwarray[$offset + $i] = $docid[$i]; } $offset += 16; } goto Faqm_; x6djM: $md5->reset(); goto xB2fd; Mwt09: } private function readCodepage() { goto NHD1U; V184a: $this->codepage = PHPExcel_Shared_CodePage::NumberToName($codepage); goto meIdh; NHD1U: $length = self::getInt2d($this->data, $this->pos + 2); goto N0vSD; ywRe4: $this->pos += 4 + $length; goto iZiqH; iZiqH: $codepage = self::getInt2d($recordData, 0); goto V184a; N0vSD: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto ywRe4; meIdh: } private function readDateMode() { goto Aha1L; q6t6t: $this->pos += 4 + $length; goto YbOKv; Aha1L: $length = self::getInt2d($this->data, $this->pos + 2); goto jDP7A; YbOKv: PHPExcel_Shared_Date::setExcelCalendar(PHPExcel_Shared_Date::CALENDAR_WINDOWS_1900); goto dyZRN; dyZRN: if (ord($recordData[0]) == 1) { PHPExcel_Shared_Date::setExcelCalendar(PHPExcel_Shared_Date::CALENDAR_MAC_1904); } goto M3c9q; jDP7A: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto q6t6t; M3c9q: } private function readFont() { goto jHRK1; Vj2tA: if (!$this->readDataOnly) { goto tum1Y; q5M8S: $this->objFonts[] = $objFont; goto tXtQo; L38ku: if ($this->version == self::XLS_BIFF8) { $string = self::readUnicodeStringShort(substr($recordData, 14)); } else { $string = $this->readByteStringShort(substr($recordData, 14)); } goto JU60N; SEzag: $size = self::getInt2d($recordData, 0); goto KRK0A; k9vX_: $colorIndex = self::getInt2d($recordData, 4); goto r0f2a; JfW3F: switch ($weight) { case 0x2bc: $objFont->setBold(true); break; } goto RG_KQ; S0q2Z: switch ($underlineType) { case 0x0: break; case 0x1: $objFont->setUnderline(PHPExcel_Style_Font::UNDERLINE_SINGLE); break; case 0x2: $objFont->setUnderline(PHPExcel_Style_Font::UNDERLINE_DOUBLE); break; case 0x21: $objFont->setUnderline(PHPExcel_Style_Font::UNDERLINE_SINGLEACCOUNTING); break; case 0x22: $objFont->setUnderline(PHPExcel_Style_Font::UNDERLINE_DOUBLEACCOUNTING); break; } goto L38ku; H7DlJ: $underlineType = ord($recordData[10]); goto S0q2Z; DPEpv: $isStrike = (0x8 & self::getInt2d($recordData, 2)) >> 3; goto z3RUQ; RG_KQ: $escapement = self::getInt2d($recordData, 8); goto xputc; iKIje: if ($isItalic) { $objFont->setItalic(true); } goto DPEpv; r0f2a: $objFont->colorIndex = $colorIndex; goto RqrMH; z3RUQ: if ($isStrike) { $objFont->setStrikethrough(true); } goto k9vX_; tum1Y: $objFont = new PHPExcel_Style_Font(); goto SEzag; JU60N: $objFont->setName($string["\166\141\154\x75\x65"]); goto q5M8S; KRK0A: $objFont->setSize($size / 20); goto dJJZ_; RqrMH: $weight = self::getInt2d($recordData, 6); goto JfW3F; xputc: switch ($escapement) { case 0x1: $objFont->setSuperScript(true); break; case 0x2: $objFont->setSubScript(true); break; } goto H7DlJ; dJJZ_: $isItalic = (0x2 & self::getInt2d($recordData, 2)) >> 1; goto iKIje; tXtQo: } goto T4l6Z; jo3Li: $this->pos += 4 + $length; goto Vj2tA; WZcSl: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto jo3Li; jHRK1: $length = self::getInt2d($this->data, $this->pos + 2); goto WZcSl; T4l6Z: } private function readFormat() { goto cFWDA; iDy72: $this->pos += 4 + $length; goto edZjv; edZjv: if (!$this->readDataOnly) { goto k3Mkz; k3Mkz: $indexCode = self::getInt2d($recordData, 0); goto v_vMB; iFncH: $formatString = $string["\x76\x61\154\165\145"]; goto ugSKU; ugSKU: $this->formats[$indexCode] = $formatString; goto cV1aV; v_vMB: if ($this->version == self::XLS_BIFF8) { $string = self::readUnicodeStringLong(substr($recordData, 2)); } else { $string = $this->readByteStringShort(substr($recordData, 2)); } goto iFncH; cV1aV: } goto KxTsC; cFWDA: $length = self::getInt2d($this->data, $this->pos + 2); goto wuQVQ; wuQVQ: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto iDy72; KxTsC: } private function readXf() { goto XAw0R; OpcpP: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto noHC1; noHC1: $this->pos += 4 + $length; goto wpoJn; Ik76J: if (!$this->readDataOnly) { goto gFTMe; ukg_j: $objStyle->setFont($this->objFonts[$fontIndex]); goto Sbvav; Hbv09: switch ($wrapText) { case 0: $objStyle->getAlignment()->setWrapText(false); break; case 1: $objStyle->getAlignment()->setWrapText(true); break; } goto ALHCT; Sbvav: $numberFormatIndex = self::getInt2d($recordData, 2); goto ABtDF; urOz0: switch ($horAlign) { case 0: $objStyle->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_GENERAL); break; case 1: $objStyle->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT); break; case 2: $objStyle->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER); break; case 3: $objStyle->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT); break; case 4: $objStyle->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_FILL); break; case 5: $objStyle->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_JUSTIFY); break; case 6: $objStyle->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER_CONTINUOUS); break; } goto b1aVV; J_0W7: if ($isCellStyleXf) { if ($this->xfIndex == 0) { $this->phpExcel->addCellStyleXf($objStyle); $this->mapCellStyleXfIndex[$this->xfIndex] = 0; } } else { $this->phpExcel->addCellXf($objStyle); $this->mapCellXfIndex[$this->xfIndex] = count($this->phpExcel->getCellXfCollection()) - 1; } goto IA3ee; nVuSm: $horAlign = (0x7 & ord($recordData[6])) >> 0; goto urOz0; gFTMe: if (self::getInt2d($recordData, 0) < 4) { $fontIndex = self::getInt2d($recordData, 0); } else { $fontIndex = self::getInt2d($recordData, 0) - 1; } goto ukg_j; PNRNs: $xfTypeProt = self::getInt2d($recordData, 4); goto KauaQ; zQWmD: $objStyle->getNumberFormat()->setFormatCode($numberformat["\143\x6f\144\145"]); goto PNRNs; ALHCT: $vertAlign = (0x70 & ord($recordData[6])) >> 4; goto FHDI9; XnQj1: $isHidden = (0x2 & $xfTypeProt) >> 1; goto V1aY2; bo8bU: $isCellStyleXf = (0x4 & $xfTypeProt) >> 2; goto nVuSm; OoURv: $objStyle->getProtection()->setLocked($isLocked ? PHPExcel_Style_Protection::PROTECTION_INHERIT : PHPExcel_Style_Protection::PROTECTION_UNPROTECTED); goto XnQj1; ABtDF: if (isset($this->formats[$numberFormatIndex])) { $numberformat = array("\x63\x6f\144\x65" => $this->formats[$numberFormatIndex]); } elseif (($code = PHPExcel_Style_NumberFormat::builtInFormatCode($numberFormatIndex)) !== '') { $numberformat = array("\143\157\x64\x65" => $code); } else { $numberformat = array("\143\x6f\x64\x65" => "\x47\145\x6e\x65\162\x61\154"); } goto zQWmD; b1aVV: $wrapText = (0x8 & ord($recordData[6])) >> 3; goto Hbv09; FHDI9: switch ($vertAlign) { case 0: $objStyle->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_TOP); break; case 1: $objStyle->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER); break; case 2: $objStyle->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_BOTTOM); break; case 3: $objStyle->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_JUSTIFY); break; } goto vQMWd; vQMWd: if ($this->version == self::XLS_BIFF8) { goto T1Tba; CGdjt: $rotation = 0; goto Gw5TS; tXe26: $objStyle->getBorders()->getRight()->colorIndex = (0x3f800000 & self::getInt4d($recordData, 10)) >> 23; goto sFjeS; PXvOy: $objStyle->getBorders()->getDiagonal()->colorIndex = (0x1fc000 & self::getInt4d($recordData, 14)) >> 14; goto S_vFr; Iu6GU: $indent = (0xf & ord($recordData[8])) >> 0; goto OUbAl; T1Tba: $angle = ord($recordData[7]); goto CGdjt; tM6JF: if ($bordersRightStyle = PHPExcel_Reader_Excel5_Style_Border::lookup((0xf0 & self::getInt4d($recordData, 10)) >> 4)) { $objStyle->getBorders()->getRight()->setBorderStyle($bordersRightStyle); } goto D4NS8; sFjeS: $diagonalDown = (0x40000000 & self::getInt4d($recordData, 10)) >> 30 ? true : false; goto PhodU; hGror: $objStyle->getBorders()->getTop()->colorIndex = (0x7f & self::getInt4d($recordData, 14)) >> 0; goto vE8Ok; ZlimD: if ($diagonalUp == false && $diagonalDown == false) { $objStyle->getBorders()->setDiagonalDirection(PHPExcel_Style_Borders::DIAGONAL_NONE); } elseif ($diagonalUp == true && $diagonalDown == false) { $objStyle->getBorders()->setDiagonalDirection(PHPExcel_Style_Borders::DIAGONAL_UP); } elseif ($diagonalUp == false && $diagonalDown == true) { $objStyle->getBorders()->setDiagonalDirection(PHPExcel_Style_Borders::DIAGONAL_DOWN); } elseif ($diagonalUp == true && $diagonalDown == true) { $objStyle->getBorders()->setDiagonalDirection(PHPExcel_Style_Borders::DIAGONAL_BOTH); } goto hGror; zXjdC: if ($fillType = PHPExcel_Reader_Excel5_Style_FillPattern::lookup((0xfc000000 & self::getInt4d($recordData, 14)) >> 26)) { $objStyle->getFill()->setFillType($fillType); } goto QGbAM; Pdi3G: $objStyle->getBorders()->getLeft()->colorIndex = (0x7f0000 & self::getInt4d($recordData, 10)) >> 16; goto tXe26; PhodU: $diagonalUp = (0x80000000 & self::getInt4d($recordData, 10)) >> 31 ? true : false; goto ZlimD; MSKW3: $shrinkToFit = (0x10 & ord($recordData[8])) >> 4; goto YvbT1; S_vFr: if ($bordersDiagonalStyle = PHPExcel_Reader_Excel5_Style_Border::lookup((0x1e00000 & self::getInt4d($recordData, 14)) >> 21)) { $objStyle->getBorders()->getDiagonal()->setBorderStyle($bordersDiagonalStyle); } goto zXjdC; lIA6h: $objStyle->getAlignment()->setTextRotation($rotation); goto Iu6GU; QGbAM: $objStyle->getFill()->startcolorIndex = (0x7f & self::getInt2d($recordData, 18)) >> 0; goto Ifr_g; YvbT1: switch ($shrinkToFit) { case 0: $objStyle->getAlignment()->setShrinkToFit(false); break; case 1: $objStyle->getAlignment()->setShrinkToFit(true); break; } goto s3xa_; dLbqA: if ($bordersBottomStyle = PHPExcel_Reader_Excel5_Style_Border::lookup((0xf000 & self::getInt4d($recordData, 10)) >> 12)) { $objStyle->getBorders()->getBottom()->setBorderStyle($bordersBottomStyle); } goto Pdi3G; Gw5TS: if ($angle <= 90) { $rotation = $angle; } elseif ($angle <= 180) { $rotation = 90 - $angle; } elseif ($angle == 255) { $rotation = -165; } goto lIA6h; D4NS8: if ($bordersTopStyle = PHPExcel_Reader_Excel5_Style_Border::lookup((0xf00 & self::getInt4d($recordData, 10)) >> 8)) { $objStyle->getBorders()->getTop()->setBorderStyle($bordersTopStyle); } goto dLbqA; Ifr_g: $objStyle->getFill()->endcolorIndex = (0x3f80 & self::getInt2d($recordData, 18)) >> 7; goto e5SUv; s3xa_: if ($bordersLeftStyle = PHPExcel_Reader_Excel5_Style_Border::lookup((0xf & self::getInt4d($recordData, 10)) >> 0)) { $objStyle->getBorders()->getLeft()->setBorderStyle($bordersLeftStyle); } goto tM6JF; vE8Ok: $objStyle->getBorders()->getBottom()->colorIndex = (0x3f80 & self::getInt4d($recordData, 14)) >> 7; goto PXvOy; OUbAl: $objStyle->getAlignment()->setIndent($indent); goto MSKW3; e5SUv: } else { goto jL0Ha; HqA9M: $objStyle->getBorders()->getBottom()->setBorderStyle(PHPExcel_Reader_Excel5_Style_Border::lookup((0x1c00000 & $borderAndBackground) >> 22)); goto dwM3L; zXDd0: $objStyle->getBorders()->getTop()->setBorderStyle(PHPExcel_Reader_Excel5_Style_Border::lookup((0x7 & $borderLines) >> 0)); goto MK8It; lAIU2: $borderLines = self::getInt4d($recordData, 12); goto zXDd0; dDRoA: $objStyle->getFill()->endcolorIndex = (0x3f80 & $borderAndBackground) >> 7; goto w_vgG; BGCxU: $objStyle->getBorders()->getRight()->setBorderStyle(PHPExcel_Reader_Excel5_Style_Border::lookup((0x1c0 & $borderLines) >> 6)); goto Ppocy; sIxHF: $objStyle->getBorders()->getLeft()->colorIndex = (0x7f0000 & $borderLines) >> 16; goto hCLOd; jL0Ha: $orientationAndFlags = ord($recordData[7]); goto YRRXm; FYspT: $borderAndBackground = self::getInt4d($recordData, 8); goto riJzU; Ppocy: $objStyle->getBorders()->getTop()->colorIndex = (0xfe00 & $borderLines) >> 9; goto sIxHF; riJzU: $objStyle->getFill()->startcolorIndex = (0x7f & $borderAndBackground) >> 0; goto dDRoA; YRRXm: $xfOrientation = (0x3 & $orientationAndFlags) >> 0; goto Eziyi; MK8It: $objStyle->getBorders()->getLeft()->setBorderStyle(PHPExcel_Reader_Excel5_Style_Border::lookup((0x38 & $borderLines) >> 3)); goto BGCxU; hCLOd: $objStyle->getBorders()->getRight()->colorIndex = (0x3f800000 & $borderLines) >> 23; goto MtKtg; dwM3L: $objStyle->getBorders()->getBottom()->colorIndex = (0xfe000000 & $borderAndBackground) >> 25; goto lAIU2; Eziyi: switch ($xfOrientation) { case 0: $objStyle->getAlignment()->setTextRotation(0); break; case 1: $objStyle->getAlignment()->setTextRotation(-165); break; case 2: $objStyle->getAlignment()->setTextRotation(90); break; case 3: $objStyle->getAlignment()->setTextRotation(-90); break; } goto FYspT; w_vgG: $objStyle->getFill()->setFillType(PHPExcel_Reader_Excel5_Style_FillPattern::lookup((0x3f0000 & $borderAndBackground) >> 16)); goto HqA9M; MtKtg: } goto J_0W7; V1aY2: $objStyle->getProtection()->setHidden($isHidden ? PHPExcel_Style_Protection::PROTECTION_PROTECTED : PHPExcel_Style_Protection::PROTECTION_UNPROTECTED); goto bo8bU; IA3ee: ++$this->xfIndex; goto EovZ8; KauaQ: $isLocked = (0x1 & $xfTypeProt) >> 0; goto OoURv; EovZ8: } goto iAn0Y; XAw0R: $length = self::getInt2d($this->data, $this->pos + 2); goto OpcpP; wpoJn: $objStyle = new PHPExcel_Style(); goto Ik76J; iAn0Y: } private function readXfExt() { goto unIVN; DM7t1: $this->pos += 4 + $length; goto SJJrD; SJJrD: if (!$this->readDataOnly) { goto BEqP6; LrUfG: while ($offset < $length) { $extType = self::getInt2d($recordData, $offset); $cb = self::getInt2d($recordData, $offset + 2); $extData = substr($recordData, $offset + 4, $cb); switch ($extType) { case 4: goto tLafg; aeQ8E: break; goto XBGsx; TN7op: if ($xclfType == 2) { $rgb = sprintf("\x25\60\62\130\x25\x30\62\130\x25\60\62\130", ord($xclrValue[0]), ord($xclrValue[1]), ord($xclrValue[2])); if (isset($this->mapCellXfIndex[$ixfe])) { goto W2sOZ; l1fv1: unset($fill->startcolorIndex); goto gbrMb; W2sOZ: $fill = $this->phpExcel->getCellXfByIndex($this->mapCellXfIndex[$ixfe])->getFill(); goto qnNWp; qnNWp: $fill->getStartColor()->setRGB($rgb); goto l1fv1; gbrMb: } } goto aeQ8E; nZM4C: $xclrValue = substr($extData, 4, 4); goto TN7op; tLafg: $xclfType = self::getInt2d($extData, 0); goto nZM4C; XBGsx: case 5: goto HBDBb; Z_NXY: $xclrValue = substr($extData, 4, 4); goto Fbe3C; HBDBb: $xclfType = self::getInt2d($extData, 0); goto Z_NXY; ngRIh: break; goto NVgPB; Fbe3C: if ($xclfType == 2) { $rgb = sprintf("\45\x30\62\x58\45\x30\62\x58\x25\60\x32\130", ord($xclrValue[0]), ord($xclrValue[1]), ord($xclrValue[2])); if (isset($this->mapCellXfIndex[$ixfe])) { goto EZ_jx; oE1Sy: unset($fill->endcolorIndex); goto g3z_b; EZ_jx: $fill = $this->phpExcel->getCellXfByIndex($this->mapCellXfIndex[$ixfe])->getFill(); goto DC0uV; DC0uV: $fill->getEndColor()->setRGB($rgb); goto oE1Sy; g3z_b: } } goto ngRIh; NVgPB: case 7: goto oUl2V; T0KHP: if ($xclfType == 2) { $rgb = sprintf("\45\60\62\130\45\x30\62\x58\x25\60\62\x58", ord($xclrValue[0]), ord($xclrValue[1]), ord($xclrValue[2])); if (isset($this->mapCellXfIndex[$ixfe])) { goto Uo9dN; omr5l: $top->getColor()->setRGB($rgb); goto BB2b1; Uo9dN: $top = $this->phpExcel->getCellXfByIndex($this->mapCellXfIndex[$ixfe])->getBorders()->getTop(); goto omr5l; BB2b1: unset($top->colorIndex); goto zLN8I; zLN8I: } } goto loMpg; oUl2V: $xclfType = self::getInt2d($extData, 0); goto lYoiz; lYoiz: $xclrValue = substr($extData, 4, 4); goto T0KHP; loMpg: break; goto xTP3f; xTP3f: case 8: goto tL3e8; tL3e8: $xclfType = self::getInt2d($extData, 0); goto PPLUR; PPLUR: $xclrValue = substr($extData, 4, 4); goto i7Tff; i7Tff: if ($xclfType == 2) { $rgb = sprintf("\45\60\62\x58\45\60\x32\x58\45\x30\x32\x58", ord($xclrValue[0]), ord($xclrValue[1]), ord($xclrValue[2])); if (isset($this->mapCellXfIndex[$ixfe])) { goto Q2AXj; JgYwj: unset($bottom->colorIndex); goto d1LiE; a7dQY: $bottom->getColor()->setRGB($rgb); goto JgYwj; Q2AXj: $bottom = $this->phpExcel->getCellXfByIndex($this->mapCellXfIndex[$ixfe])->getBorders()->getBottom(); goto a7dQY; d1LiE: } } goto HSt_c; HSt_c: break; goto kFpP4; kFpP4: case 9: goto NzRI3; NzRI3: $xclfType = self::getInt2d($extData, 0); goto Qntt0; Qntt0: $xclrValue = substr($extData, 4, 4); goto wwZJD; wwZJD: if ($xclfType == 2) { $rgb = sprintf("\45\x30\x32\x58\45\60\62\x58\x25\x30\62\x58", ord($xclrValue[0]), ord($xclrValue[1]), ord($xclrValue[2])); if (isset($this->mapCellXfIndex[$ixfe])) { goto iZMBN; iZMBN: $left = $this->phpExcel->getCellXfByIndex($this->mapCellXfIndex[$ixfe])->getBorders()->getLeft(); goto ojMaz; ojMaz: $left->getColor()->setRGB($rgb); goto DfM7G; DfM7G: unset($left->colorIndex); goto VMtKB; VMtKB: } } goto i97EK; i97EK: break; goto W_3Zw; W_3Zw: case 10: goto xrXID; DkWR5: break; goto akslg; xrXID: $xclfType = self::getInt2d($extData, 0); goto kqFX_; yQrsR: if ($xclfType == 2) { $rgb = sprintf("\45\x30\62\130\45\x30\62\x58\x25\60\62\130", ord($xclrValue[0]), ord($xclrValue[1]), ord($xclrValue[2])); if (isset($this->mapCellXfIndex[$ixfe])) { goto WL0B0; WL0B0: $right = $this->phpExcel->getCellXfByIndex($this->mapCellXfIndex[$ixfe])->getBorders()->getRight(); goto tvXa0; tvXa0: $right->getColor()->setRGB($rgb); goto rJpQW; rJpQW: unset($right->colorIndex); goto npxwB; npxwB: } } goto DkWR5; kqFX_: $xclrValue = substr($extData, 4, 4); goto yQrsR; akslg: case 11: goto xlDuE; eJ9JD: if ($xclfType == 2) { $rgb = sprintf("\45\x30\62\130\x25\x30\62\x58\x25\60\62\130", ord($xclrValue[0]), ord($xclrValue[1]), ord($xclrValue[2])); if (isset($this->mapCellXfIndex[$ixfe])) { goto WLugc; xMdc8: $diagonal->getColor()->setRGB($rgb); goto M1VU5; M1VU5: unset($diagonal->colorIndex); goto W0wE9; WLugc: $diagonal = $this->phpExcel->getCellXfByIndex($this->mapCellXfIndex[$ixfe])->getBorders()->getDiagonal(); goto xMdc8; W0wE9: } } goto yYJTo; yYJTo: break; goto YXRvp; dnAp_: $xclrValue = substr($extData, 4, 4); goto eJ9JD; xlDuE: $xclfType = self::getInt2d($extData, 0); goto dnAp_; YXRvp: case 13: goto XGnpI; v0vjs: break; goto WjxI1; DxQ1o: if ($xclfType == 2) { $rgb = sprintf("\45\60\62\130\45\60\x32\x58\45\x30\62\130", ord($xclrValue[0]), ord($xclrValue[1]), ord($xclrValue[2])); if (isset($this->mapCellXfIndex[$ixfe])) { goto Ir0ti; Ir0ti: $font = $this->phpExcel->getCellXfByIndex($this->mapCellXfIndex[$ixfe])->getFont(); goto xBinD; xBinD: $font->getColor()->setRGB($rgb); goto ROE9q; ROE9q: unset($font->colorIndex); goto wcYim; wcYim: } } goto v0vjs; XGnpI: $xclfType = self::getInt2d($extData, 0); goto aNMNj; aNMNj: $xclrValue = substr($extData, 4, 4); goto DxQ1o; WjxI1: } $offset += $cb; } goto shhKW; BEqP6: $ixfe = self::getInt2d($recordData, 14); goto VABgj; tl79j: $offset = 20; goto LrUfG; VABgj: $cexts = self::getInt2d($recordData, 18); goto tl79j; shhKW: } goto bNlQx; Qx1or: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto DM7t1; unIVN: $length = self::getInt2d($this->data, $this->pos + 2); goto Qx1or; bNlQx: } private function readStyle() { goto NMjct; jd0_8: $this->pos += 4 + $length; goto mqCXA; NMjct: $length = self::getInt2d($this->data, $this->pos + 2); goto eBbUN; mqCXA: if (!$this->readDataOnly) { goto aXAs7; aXAs7: $ixfe = self::getInt2d($recordData, 0); goto mY1xp; tPeUy: if ($isBuiltIn) { $builtInId = ord($recordData[2]); switch ($builtInId) { case 0x0: break; default: break; } } else { } goto i9Yf8; m1bob: $isBuiltIn = (bool) ((0x8000 & $ixfe) >> 15); goto tPeUy; mY1xp: $xfIndex = (0xfff & $ixfe) >> 0; goto m1bob; i9Yf8: } goto uVBCS; eBbUN: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto jd0_8; uVBCS: } private function readPalette() { goto YEL4e; YEL4e: $length = self::getInt2d($this->data, $this->pos + 2); goto vzt2f; CH5gu: if (!$this->readDataOnly) { $nm = self::getInt2d($recordData, 0); for ($i = 0; $i < $nm; ++$i) { $rgb = substr($recordData, 2 + 4 * $i, 4); $this->palette[] = self::readRGB($rgb); } } goto lJ1Ig; A4O4E: $this->pos += 4 + $length; goto CH5gu; vzt2f: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto A4O4E; lJ1Ig: } private function readSheet() { goto VbJAm; A2eoM: $this->sheets[] = array("\x6e\x61\155\x65" => $rec_name, "\157\x66\x66\x73\145\164" => $rec_offset, "\163\150\145\x65\164\123\164\x61\164\x65" => $sheetState, "\163\x68\145\x65\x74\124\171\160\x65" => $sheetType); goto tzOYY; daEC6: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto eSJLD; Dv9ef: $this->pos += 4 + $length; goto b6AI4; KrbIM: if ($this->version == self::XLS_BIFF8) { $string = self::readUnicodeStringShort(substr($recordData, 6)); $rec_name = $string["\166\x61\154\x75\x65"]; } elseif ($this->version == self::XLS_BIFF7) { $string = $this->readByteStringShort(substr($recordData, 6)); $rec_name = $string["\x76\141\154\165\x65"]; } goto A2eoM; b6AI4: switch (ord($recordData[4])) { case 0x0: $sheetState = PHPExcel_Worksheet::SHEETSTATE_VISIBLE; break; case 0x1: $sheetState = PHPExcel_Worksheet::SHEETSTATE_HIDDEN; break; case 0x2: $sheetState = PHPExcel_Worksheet::SHEETSTATE_VERYHIDDEN; break; default: $sheetState = PHPExcel_Worksheet::SHEETSTATE_VISIBLE; break; } goto laRjp; laRjp: $sheetType = ord($recordData[5]); goto KrbIM; eSJLD: $rec_offset = self::getInt4d($this->data, $this->pos + 4); goto Dv9ef; VbJAm: $length = self::getInt2d($this->data, $this->pos + 2); goto daEC6; tzOYY: } private function readExternalBook() { goto t3aEi; t3aEi: $length = self::getInt2d($this->data, $this->pos + 2); goto AMSpP; s5zzZ: $this->pos += 4 + $length; goto K_K0U; AMSpP: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto s5zzZ; K_K0U: $offset = 0; goto hCFIm; hCFIm: if (strlen($recordData) > 4) { goto MZTYw; hMZAy: $this->externalBooks[] = array("\164\171\160\x65" => "\145\x78\x74\145\x72\x6e\x61\x6c", "\x65\x6e\143\x6f\144\x65\144\x55\x72\x6c" => $encodedUrlString["\166\141\154\165\x65"], "\x65\x78\x74\x65\162\x6e\x61\x6c\x53\x68\x65\145\x74\x4e\141\x6d\145\x73" => $externalSheetNames); goto TyWrf; nAURM: $offset += $encodedUrlString["\x73\151\x7a\x65"]; goto ctEaY; MZTYw: $nm = self::getInt2d($recordData, 0); goto llYss; IiwVt: for ($i = 0; $i < $nm; ++$i) { $externalSheetNameString = self::readUnicodeStringLong(substr($recordData, $offset)); $externalSheetNames[] = $externalSheetNameString["\166\x61\154\x75\x65"]; $offset += $externalSheetNameString["\x73\151\172\x65"]; } goto hMZAy; cAvyk: $encodedUrlString = self::readUnicodeStringLong(substr($recordData, 2)); goto nAURM; ctEaY: $externalSheetNames = array(); goto IiwVt; llYss: $offset += 2; goto cAvyk; TyWrf: } elseif (substr($recordData, 2, 2) == pack("\x43\103", 0x1, 0x4)) { $this->externalBooks[] = array("\164\x79\x70\x65" => "\151\156\164\x65\x72\x6e\141\154"); } elseif (substr($recordData, 0, 4) == pack("\166\x43\x43", 0x1, 0x1, 0x3a)) { $this->externalBooks[] = array("\x74\x79\x70\x65" => "\141\144\144\x49\156\x46\165\156\143\164\x69\x6f\x6e"); } elseif (substr($recordData, 0, 2) == pack("\x76", 0x0)) { $this->externalBooks[] = array("\x74\x79\160\x65" => "\x44\x44\105\157\x72\x4f\114\x45"); } goto X1IVk; X1IVk: } private function readExternName() { goto ItOhD; xRSTu: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto iN1bT; ItOhD: $length = self::getInt2d($this->data, $this->pos + 2); goto xRSTu; SF1Ua: if ($this->version == self::XLS_BIFF8) { goto q63Ai; EVqlz: $this->externalNames[] = array("\156\x61\x6d\x65" => $nameString["\166\141\x6c\x75\x65"], "\x66\157\162\x6d\x75\154\x61" => $formula); goto yOmui; D5_2I: $nameString = self::readUnicodeStringShort(substr($recordData, 6)); goto vvuJ9; vvuJ9: $offset = 6 + $nameString["\x73\151\172\x65"]; goto P0nc1; P0nc1: $formula = $this->getFormulaFromStructure(substr($recordData, $offset)); goto EVqlz; q63Ai: $options = self::getInt2d($recordData, 0); goto D5_2I; yOmui: } goto kUBe7; iN1bT: $this->pos += 4 + $length; goto SF1Ua; kUBe7: } private function readExternSheet() { goto z47Ot; asF08: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto GQ_lu; abxoe: if ($this->version == self::XLS_BIFF8) { $nm = self::getInt2d($recordData, 0); for ($i = 0; $i < $nm; ++$i) { $this->ref[] = array("\145\x78\x74\145\162\156\141\154\102\157\x6f\x6b\111\156\x64\x65\170" => self::getInt2d($recordData, 2 + 6 * $i), "\146\x69\162\163\x74\123\x68\x65\145\x74\x49\156\144\145\170" => self::getInt2d($recordData, 4 + 6 * $i), "\154\141\163\x74\123\150\145\145\x74\x49\156\144\x65\x78" => self::getInt2d($recordData, 6 + 6 * $i)); } } goto y0xOQ; GQ_lu: $this->pos += 4 + $length; goto abxoe; z47Ot: $length = self::getInt2d($this->data, $this->pos + 2); goto asF08; y0xOQ: } private function readDefinedName() { goto TvoLL; n8k7I: $this->pos += 4 + $length; goto xnD0I; TvoLL: $length = self::getInt2d($this->data, $this->pos + 2); goto b4rTc; xnD0I: if ($this->version == self::XLS_BIFF8) { goto k7rlV; yE30J: $formulaStructure = pack("\x76", $flen) . substr($recordData, $offset); goto rc_ZT; n6sXV: $string = self::readUnicodeString(substr($recordData, 14), $nlen); goto pj5yz; k7rlV: $opts = self::getInt2d($recordData, 0); goto E1Ppr; i75cV: $this->definedname[] = array("\x69\x73\102\165\x69\154\164\111\156\x4e\141\x6d\145" => $isBuiltInName, "\156\141\x6d\145" => $string["\x76\141\154\165\145"], "\x66\157\162\x6d\165\x6c\141" => $formula, "\163\143\x6f\x70\x65" => $scope); goto rIL7A; lr6aG: $flen = self::getInt2d($recordData, 4); goto rOx3o; E1Ppr: $isBuiltInName = (0x20 & $opts) >> 5; goto ljUmS; rOx3o: $scope = self::getInt2d($recordData, 8); goto n6sXV; ljUmS: $nlen = ord($recordData[3]); goto lr6aG; rc_ZT: try { $formula = $this->getFormulaFromStructure($formulaStructure); } catch (PHPExcel_Exception $e) { $formula = ''; } goto i75cV; pj5yz: $offset = 14 + $string["\163\151\x7a\x65"]; goto yE30J; rIL7A: } goto XyqwV; b4rTc: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto n8k7I; XyqwV: } private function readMsoDrawingGroup() { goto beqNw; r1oEc: $this->drawingGroupData .= $recordData; goto O5E5e; CB2Fp: $splicedRecordData = $this->getSplicedRecordData(); goto Fmyw0; beqNw: $length = self::getInt2d($this->data, $this->pos + 2); goto CB2Fp; Fmyw0: $recordData = $splicedRecordData["\x72\145\143\x6f\x72\144\x44\x61\164\x61"]; goto r1oEc; O5E5e: } private function readSst() { goto b8Kui; gHprW: $recordData = $splicedRecordData["\162\x65\143\x6f\x72\x64\x44\x61\x74\141"]; goto vJjcN; qa5GP: $splicedRecordData = $this->getSplicedRecordData(); goto gHprW; ZTll_: $nm = self::getInt4d($recordData, 4); goto PiGmM; zkME4: $pos += 4; goto ZTll_; vJjcN: $spliceOffsets = $splicedRecordData["\163\160\x6c\x69\x63\145\x4f\146\x66\x73\145\x74\163"]; goto zkME4; PiGmM: $pos += 4; goto F_4LV; F_4LV: for ($i = 0; $i < $nm; ++$i) { $numChars = self::getInt2d($recordData, $pos); $pos += 2; $optionFlags = ord($recordData[$pos]); ++$pos; $isCompressed = ($optionFlags & 0x1) == 0; $hasAsian = ($optionFlags & 0x4) != 0; $hasRichText = ($optionFlags & 0x8) != 0; if ($hasRichText) { $formattingRuns = self::getInt2d($recordData, $pos); $pos += 2; } if ($hasAsian) { $extendedRunLength = self::getInt4d($recordData, $pos); $pos += 4; } $len = $isCompressed ? $numChars : $numChars * 2; foreach ($spliceOffsets as $spliceOffset) { if ($pos <= $spliceOffset) { $limitpos = $spliceOffset; break; } } if ($pos + $len <= $limitpos) { $retstr = substr($recordData, $pos, $len); $pos += $len; } else { goto fj3CF; LFeTb: while ($charsLeft > 0) { foreach ($spliceOffsets as $spliceOffset) { if ($pos < $spliceOffset) { $limitpos = $spliceOffset; break; } } $option = ord($recordData[$pos]); ++$pos; if ($isCompressed && $option == 0) { goto e60xn; GX01O: $isCompressed = true; goto M9ejP; wWpE3: $retstr .= substr($recordData, $pos, $len); goto jEBl_; jEBl_: $charsLeft -= $len; goto GX01O; e60xn: $len = min($charsLeft, $limitpos - $pos); goto wWpE3; M9ejP: } elseif (!$isCompressed && $option != 0) { goto locKK; locKK: $len = min($charsLeft * 2, $limitpos - $pos); goto tA2TR; EMN66: $charsLeft -= $len / 2; goto TTMr0; tA2TR: $retstr .= substr($recordData, $pos, $len); goto EMN66; TTMr0: $isCompressed = false; goto LW0_k; LW0_k: } elseif (!$isCompressed && $option == 0) { goto Ve5sl; X4gDu: $charsLeft -= $len; goto sGjoZ; sGjoZ: $isCompressed = false; goto eST3X; Ve5sl: $len = min($charsLeft, $limitpos - $pos); goto xtBbf; xtBbf: for ($j = 0; $j < $len; ++$j) { $retstr .= $recordData[$pos + $j] . chr(0); } goto X4gDu; eST3X: } else { goto rz9Ef; HyLRT: $isCompressed = false; goto cwu81; izjj1: $len = min($charsLeft * 2, $limitpos - $pos); goto I0YbC; j9NGz: for ($j = 0; $j < strlen($retstr); ++$j) { $newstr .= $retstr[$j] . chr(0); } goto apyIk; apyIk: $retstr = $newstr; goto izjj1; iNJrM: $charsLeft -= $len / 2; goto HyLRT; I0YbC: $retstr .= substr($recordData, $pos, $len); goto iNJrM; rz9Ef: $newstr = ''; goto j9NGz; cwu81: } $pos += $len; } goto oIMwW; YcgyS: $bytesRead = $limitpos - $pos; goto BI0rk; fj3CF: $retstr = substr($recordData, $pos, $limitpos - $pos); goto YcgyS; BI0rk: $charsLeft = $numChars - ($isCompressed ? $bytesRead : $bytesRead / 2); goto BkL3e; BkL3e: $pos = $limitpos; goto LFeTb; oIMwW: } $retstr = self::encodeUTF16($retstr, $isCompressed); $fmtRuns = array(); if ($hasRichText) { for ($j = 0; $j < $formattingRuns; ++$j) { $charPos = self::getInt2d($recordData, $pos + $j * 4); $fontIndex = self::getInt2d($recordData, $pos + 2 + $j * 4); $fmtRuns[] = array("\x63\x68\x61\x72\x50\x6f\x73" => $charPos, "\146\x6f\x6e\164\x49\x6e\x64\145\x78" => $fontIndex); } $pos += 4 * $formattingRuns; } if ($hasAsian) { $pos += $extendedRunLength; } $this->sst[] = array("\166\141\154\165\x65" => $retstr, "\x66\155\x74\x52\x75\156\x73" => $fmtRuns); } goto w1yf3; b8Kui: $pos = 0; goto qa5GP; w1yf3: } private function readPrintGridlines() { goto PN6eI; PN6eI: $length = self::getInt2d($this->data, $this->pos + 2); goto GLaWn; wI9Ff: if ($this->version == self::XLS_BIFF8 && !$this->readDataOnly) { $printGridlines = (bool) self::getInt2d($recordData, 0); $this->phpSheet->setPrintGridlines($printGridlines); } goto W9oME; HQaFd: $this->pos += 4 + $length; goto wI9Ff; GLaWn: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto HQaFd; W9oME: } private function readDefaultRowHeight() { goto qqszL; qqszL: $length = self::getInt2d($this->data, $this->pos + 2); goto MOQSO; Ji8i1: $this->phpSheet->getDefaultRowDimension()->setRowHeight($height / 20); goto cacp_; MOQSO: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto qSWlp; qSWlp: $this->pos += 4 + $length; goto IsWp3; IsWp3: $height = self::getInt2d($recordData, 2); goto Ji8i1; cacp_: } private function readSheetPr() { goto JV0d4; jm115: $this->phpSheet->setShowSummaryBelow($isSummaryBelow); goto dzz1M; UEz78: $this->pos += 4 + $length; goto C6tF8; dzz1M: $isSummaryRight = (0x80 & self::getInt2d($recordData, 0)) >> 7; goto EguCF; C6tF8: $isSummaryBelow = (0x40 & self::getInt2d($recordData, 0)) >> 6; goto jm115; JV0d4: $length = self::getInt2d($this->data, $this->pos + 2); goto goF5_; goF5_: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto UEz78; Taqwp: $this->isFitToPages = (bool) ((0x100 & self::getInt2d($recordData, 0)) >> 8); goto xXGlq; EguCF: $this->phpSheet->setShowSummaryRight($isSummaryRight); goto Taqwp; xXGlq: } private function readHorizontalPageBreaks() { goto cwWiM; sTQgD: $this->pos += 4 + $length; goto ArgDh; Xokbs: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto sTQgD; cwWiM: $length = self::getInt2d($this->data, $this->pos + 2); goto Xokbs; ArgDh: if ($this->version == self::XLS_BIFF8 && !$this->readDataOnly) { $nm = self::getInt2d($recordData, 0); for ($i = 0; $i < $nm; ++$i) { $r = self::getInt2d($recordData, 2 + 6 * $i); $cf = self::getInt2d($recordData, 2 + 6 * $i + 2); $cl = self::getInt2d($recordData, 2 + 6 * $i + 4); $this->phpSheet->setBreakByColumnAndRow($cf, $r, PHPExcel_Worksheet::BREAK_ROW); } } goto zSKmu; zSKmu: } private function readVerticalPageBreaks() { goto BQ_Wz; Sr3fL: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto mMl8d; mMl8d: $this->pos += 4 + $length; goto dTCKh; dTCKh: if ($this->version == self::XLS_BIFF8 && !$this->readDataOnly) { $nm = self::getInt2d($recordData, 0); for ($i = 0; $i < $nm; ++$i) { $c = self::getInt2d($recordData, 2 + 6 * $i); $rf = self::getInt2d($recordData, 2 + 6 * $i + 2); $rl = self::getInt2d($recordData, 2 + 6 * $i + 4); $this->phpSheet->setBreakByColumnAndRow($c, $rf, PHPExcel_Worksheet::BREAK_COLUMN); } } goto s8aaO; BQ_Wz: $length = self::getInt2d($this->data, $this->pos + 2); goto Sr3fL; s8aaO: } private function readHeader() { goto NyntH; gjE4Z: if (!$this->readDataOnly) { if ($recordData) { goto c03oF; c03oF: if ($this->version == self::XLS_BIFF8) { $string = self::readUnicodeStringLong($recordData); } else { $string = $this->readByteStringShort($recordData); } goto SKX9B; SKX9B: $this->phpSheet->getHeaderFooter()->setOddHeader($string["\x76\x61\x6c\165\x65"]); goto RzHOu; RzHOu: $this->phpSheet->getHeaderFooter()->setEvenHeader($string["\x76\x61\x6c\165\x65"]); goto lizuD; lizuD: } } goto tekXy; xk2mQ: $this->pos += 4 + $length; goto gjE4Z; zcLoV: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto xk2mQ; NyntH: $length = self::getInt2d($this->data, $this->pos + 2); goto zcLoV; tekXy: } private function readFooter() { goto p56J7; dKB9x: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto XLqLF; XLqLF: $this->pos += 4 + $length; goto Cfqwt; Cfqwt: if (!$this->readDataOnly) { if ($recordData) { goto l7nwh; nEA5s: $this->phpSheet->getHeaderFooter()->setEvenFooter($string["\x76\141\x6c\x75\x65"]); goto JkOx3; l7nwh: if ($this->version == self::XLS_BIFF8) { $string = self::readUnicodeStringLong($recordData); } else { $string = $this->readByteStringShort($recordData); } goto x02i6; x02i6: $this->phpSheet->getHeaderFooter()->setOddFooter($string["\x76\x61\x6c\165\x65"]); goto nEA5s; JkOx3: } } goto l3wUf; p56J7: $length = self::getInt2d($this->data, $this->pos + 2); goto dKB9x; l3wUf: } private function readHcenter() { goto aYMVi; aYMVi: $length = self::getInt2d($this->data, $this->pos + 2); goto y8ocu; a4O5f: if (!$this->readDataOnly) { $isHorizontalCentered = (bool) self::getInt2d($recordData, 0); $this->phpSheet->getPageSetup()->setHorizontalCentered($isHorizontalCentered); } goto HJmhb; reuOq: $this->pos += 4 + $length; goto a4O5f; y8ocu: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto reuOq; HJmhb: } private function readVcenter() { goto AX5st; AX5st: $length = self::getInt2d($this->data, $this->pos + 2); goto oCojZ; oCojZ: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto JFrrZ; D2Ctg: if (!$this->readDataOnly) { $isVerticalCentered = (bool) self::getInt2d($recordData, 0); $this->phpSheet->getPageSetup()->setVerticalCentered($isVerticalCentered); } goto dmWLF; JFrrZ: $this->pos += 4 + $length; goto D2Ctg; dmWLF: } private function readLeftMargin() { goto PfuWR; ruRj3: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto FDzFd; PfuWR: $length = self::getInt2d($this->data, $this->pos + 2); goto ruRj3; FDzFd: $this->pos += 4 + $length; goto l77tL; l77tL: if (!$this->readDataOnly) { $this->phpSheet->getPageMargins()->setLeft(self::extractNumber($recordData)); } goto PO5Vj; PO5Vj: } private function readRightMargin() { goto kSUKB; drYhX: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto SyDwz; woRYz: if (!$this->readDataOnly) { $this->phpSheet->getPageMargins()->setRight(self::extractNumber($recordData)); } goto pGqcj; SyDwz: $this->pos += 4 + $length; goto woRYz; kSUKB: $length = self::getInt2d($this->data, $this->pos + 2); goto drYhX; pGqcj: } private function readTopMargin() { goto rcrb_; kT8M8: if (!$this->readDataOnly) { $this->phpSheet->getPageMargins()->setTop(self::extractNumber($recordData)); } goto MiuPf; sjMHP: $this->pos += 4 + $length; goto kT8M8; rcrb_: $length = self::getInt2d($this->data, $this->pos + 2); goto TOcqr; TOcqr: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto sjMHP; MiuPf: } private function readBottomMargin() { goto Ke3y0; LfUkQ: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto wYnED; Ke3y0: $length = self::getInt2d($this->data, $this->pos + 2); goto LfUkQ; e6HKy: if (!$this->readDataOnly) { $this->phpSheet->getPageMargins()->setBottom(self::extractNumber($recordData)); } goto n1PP7; wYnED: $this->pos += 4 + $length; goto e6HKy; n1PP7: } private function readPageSetup() { goto zstTF; rDrYt: $this->pos += 4 + $length; goto zVj4k; zVj4k: if (!$this->readDataOnly) { goto BgRqi; ZVj3W: $isNotInit = (0x4 & self::getInt2d($recordData, 10)) >> 2; goto GBqCF; r0aep: $fitToWidth = self::getInt2d($recordData, 6); goto BC9rs; GBqCF: if (!$isNotInit) { goto hSSxo; Un30F: switch ($isPortrait) { case 0: $this->phpSheet->getPageSetup()->setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE); break; case 1: $this->phpSheet->getPageSetup()->setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_PORTRAIT); break; } goto g6RBa; K__Wb: $this->phpSheet->getPageSetup()->setFitToPage((bool) $this->isFitToPages); goto t8iTF; hSSxo: $this->phpSheet->getPageSetup()->setPaperSize($paperSize); goto Un30F; g6RBa: $this->phpSheet->getPageSetup()->setScale($scale, false); goto K__Wb; t8iTF: $this->phpSheet->getPageSetup()->setFitToWidth($fitToWidth, false); goto EYRuU; EYRuU: $this->phpSheet->getPageSetup()->setFitToHeight($fitToHeight, false); goto colBJ; colBJ: } goto d8RDd; BgRqi: $paperSize = self::getInt2d($recordData, 0); goto EE7fF; p0kRo: $marginFooter = self::extractNumber(substr($recordData, 24, 8)); goto d0BCu; d0BCu: $this->phpSheet->getPageMargins()->setFooter($marginFooter); goto nNr7b; He7wO: $this->phpSheet->getPageMargins()->setHeader($marginHeader); goto p0kRo; BqMHh: $isPortrait = (0x2 & self::getInt2d($recordData, 10)) >> 1; goto ZVj3W; EE7fF: $scale = self::getInt2d($recordData, 2); goto r0aep; d8RDd: $marginHeader = self::extractNumber(substr($recordData, 16, 8)); goto He7wO; BC9rs: $fitToHeight = self::getInt2d($recordData, 8); goto BqMHh; nNr7b: } goto LqvRX; zstTF: $length = self::getInt2d($this->data, $this->pos + 2); goto b1nHt; b1nHt: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto rDrYt; LqvRX: } private function readProtect() { goto ykThd; E2OgH: if ($this->readDataOnly) { return; } goto rk2x6; kg4dD: $this->pos += 4 + $length; goto E2OgH; jX01T: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto kg4dD; rk2x6: $bool = (0x1 & self::getInt2d($recordData, 0)) >> 0; goto hWAY4; hWAY4: $this->phpSheet->getProtection()->setSheet((bool) $bool); goto uYx4G; ykThd: $length = self::getInt2d($this->data, $this->pos + 2); goto jX01T; uYx4G: } private function readScenProtect() { goto rGwzw; ICqkk: if ($this->readDataOnly) { return; } goto mNM65; mNM65: $bool = (0x1 & self::getInt2d($recordData, 0)) >> 0; goto fJfOU; XvEZQ: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto BSnUa; rGwzw: $length = self::getInt2d($this->data, $this->pos + 2); goto XvEZQ; BSnUa: $this->pos += 4 + $length; goto ICqkk; fJfOU: $this->phpSheet->getProtection()->setScenarios((bool) $bool); goto VG46B; VG46B: } private function readObjectProtect() { goto BU4Ju; nMyPI: $this->pos += 4 + $length; goto Gv5jt; YsSXT: $this->phpSheet->getProtection()->setObjects((bool) $bool); goto NeQ4w; Gv5jt: if ($this->readDataOnly) { return; } goto GtBg5; BU4Ju: $length = self::getInt2d($this->data, $this->pos + 2); goto s0Sn1; s0Sn1: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto nMyPI; GtBg5: $bool = (0x1 & self::getInt2d($recordData, 0)) >> 0; goto YsSXT; NeQ4w: } private function readPassword() { goto fZLu8; GynId: if (!$this->readDataOnly) { $password = strtoupper(dechex(self::getInt2d($recordData, 0))); $this->phpSheet->getProtection()->setPassword($password, true); } goto crCEV; eT2Xh: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto BOxQU; fZLu8: $length = self::getInt2d($this->data, $this->pos + 2); goto eT2Xh; BOxQU: $this->pos += 4 + $length; goto GynId; crCEV: } private function readDefColWidth() { goto qtCCy; ogtD1: $this->pos += 4 + $length; goto lM2Xg; xkbno: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto ogtD1; lM2Xg: $width = self::getInt2d($recordData, 0); goto kBe0F; kBe0F: if ($width != 8) { $this->phpSheet->getDefaultColumnDimension()->setWidth($width); } goto ju0oB; qtCCy: $length = self::getInt2d($this->data, $this->pos + 2); goto xkbno; ju0oB: } private function readColInfo() { goto ngX5i; jMR9O: $this->pos += 4 + $length; goto Qwl8M; ngX5i: $length = self::getInt2d($this->data, $this->pos + 2); goto yyTtt; yyTtt: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto jMR9O; Qwl8M: if (!$this->readDataOnly) { goto AaRv3; DHX5N: $lc = self::getInt2d($recordData, 2); goto lkT8b; vAR9V: $isHidden = (0x1 & self::getInt2d($recordData, 8)) >> 0; goto XEkh3; yJefh: for ($i = $fc; $i <= $lc; ++$i) { if ($lc == 255 || $lc == 256) { $this->phpSheet->getDefaultColumnDimension()->setWidth($width / 256); break; } $this->phpSheet->getColumnDimensionByColumn($i)->setWidth($width / 256); $this->phpSheet->getColumnDimensionByColumn($i)->setVisible(!$isHidden); $this->phpSheet->getColumnDimensionByColumn($i)->setOutlineLevel($level); $this->phpSheet->getColumnDimensionByColumn($i)->setCollapsed($isCollapsed); $this->phpSheet->getColumnDimensionByColumn($i)->setXfIndex($this->mapCellXfIndex[$xfIndex]); } goto DAUTw; Fb1e4: $isCollapsed = (0x1000 & self::getInt2d($recordData, 8)) >> 12; goto yJefh; lkT8b: $width = self::getInt2d($recordData, 4); goto Bs1g9; XEkh3: $level = (0x700 & self::getInt2d($recordData, 8)) >> 8; goto Fb1e4; Bs1g9: $xfIndex = self::getInt2d($recordData, 6); goto vAR9V; AaRv3: $fc = self::getInt2d($recordData, 0); goto DHX5N; DAUTw: } goto MXjXg; MXjXg: } private function readRow() { goto yoNOz; yoNOz: $length = self::getInt2d($this->data, $this->pos + 2); goto aL7m0; W35Rj: $this->pos += 4 + $length; goto eyVJE; aL7m0: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto W35Rj; eyVJE: if (!$this->readDataOnly) { goto ieue1; kI8zC: $isCollapsed = (0x10 & self::getInt4d($recordData, 12)) >> 4; goto Nj9EZ; skWJU: $this->phpSheet->getRowDimension($r + 1)->setOutlineLevel($level); goto kI8zC; KNo7O: $useDefaultHeight = (0x8000 & self::getInt2d($recordData, 6)) >> 15; goto bdibF; Wh1cG: $xfIndex = (0xfff0000 & self::getInt4d($recordData, 12)) >> 16; goto zD0mF; zfJwX: $level = (0x7 & self::getInt4d($recordData, 12)) >> 0; goto skWJU; bLyoe: $isHidden = (0x20 & self::getInt4d($recordData, 12)) >> 5; goto Yf4JJ; Nj9EZ: $this->phpSheet->getRowDimension($r + 1)->setCollapsed($isCollapsed); goto bLyoe; bdibF: if (!$useDefaultHeight) { $this->phpSheet->getRowDimension($r + 1)->setRowHeight($height / 20); } goto zfJwX; Ef6Dz: $hasExplicitFormat = (0x80 & self::getInt4d($recordData, 12)) >> 7; goto Wh1cG; Yf4JJ: $this->phpSheet->getRowDimension($r + 1)->setVisible(!$isHidden); goto Ef6Dz; N1ixe: $height = (0x7fff & self::getInt2d($recordData, 6)) >> 0; goto KNo7O; zD0mF: if ($hasExplicitFormat) { $this->phpSheet->getRowDimension($r + 1)->setXfIndex($this->mapCellXfIndex[$xfIndex]); } goto Govu8; ieue1: $r = self::getInt2d($recordData, 0); goto N1ixe; Govu8: } goto ouEXu; ouEXu: } private function readRk() { goto udVHe; KEJK3: $columnString = PHPExcel_Cell::stringFromColumnIndex($column); goto Gfo4l; CGIKg: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto phZX2; udVHe: $length = self::getInt2d($this->data, $this->pos + 2); goto CGIKg; Xs0a4: $column = self::getInt2d($recordData, 2); goto KEJK3; phZX2: $this->pos += 4 + $length; goto C2y3T; Gfo4l: if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($columnString, $row + 1, $this->phpSheet->getTitle())) { goto KxonY; pGtRh: $numValue = self::getIEEE754($rknum); goto ukBQt; KxonY: $xfIndex = self::getInt2d($recordData, 4); goto leCdA; ukBQt: $cell = $this->phpSheet->getCell($columnString . ($row + 1)); goto S8vMf; bOyGU: $cell->setValueExplicit($numValue, PHPExcel_Cell_DataType::TYPE_NUMERIC); goto pgSKy; S8vMf: if (!$this->readDataOnly) { $cell->setXfIndex($this->mapCellXfIndex[$xfIndex]); } goto bOyGU; leCdA: $rknum = self::getInt4d($recordData, 6); goto pGtRh; pgSKy: } goto EU2N5; C2y3T: $row = self::getInt2d($recordData, 0); goto Xs0a4; EU2N5: } private function readLabelSst() { goto FpDZt; eQ49c: if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($columnString, $row + 1, $this->phpSheet->getTitle())) { goto IFqv8; Efec9: if (!$this->readDataOnly && !$emptyCell) { $cell->setXfIndex($this->mapCellXfIndex[$xfIndex]); } goto AsEAa; pRzHM: if (($fmtRuns = $this->sst[$index]["\146\155\164\122\165\x6e\163"]) && !$this->readDataOnly) { goto ZI7QF; k4ity: $charPos = 0; goto JDfY4; yo9W3: if ($this->readEmptyCells || trim($richText->getPlainText()) !== '') { goto bNpbK; jLKO7: $emptyCell = false; goto uSEDb; idP7_: $cell->setValueExplicit($richText, PHPExcel_Cell_DataType::TYPE_STRING); goto jLKO7; bNpbK: $cell = $this->phpSheet->getCell($columnString . ($row + 1)); goto idP7_; uSEDb: } goto s_TRp; ZI7QF: $richText = new PHPExcel_RichText(); goto k4ity; JDfY4: $sstCount = count($this->sst[$index]["\x66\155\x74\122\x75\x6e\x73"]); goto K0T9p; K0T9p: for ($i = 0; $i <= $sstCount; ++$i) { if (isset($fmtRuns[$i])) { $text = PHPExcel_Shared_String::Substring($this->sst[$index]["\x76\141\154\165\x65"], $charPos, $fmtRuns[$i]["\x63\x68\141\162\120\157\x73"] - $charPos); $charPos = $fmtRuns[$i]["\143\x68\x61\x72\x50\157\x73"]; } else { $text = PHPExcel_Shared_String::Substring($this->sst[$index]["\x76\x61\154\165\x65"], $charPos, PHPExcel_Shared_String::CountCharacters($this->sst[$index]["\x76\x61\x6c\x75\x65"])); } if (PHPExcel_Shared_String::CountCharacters($text) > 0) { if ($i == 0) { $richText->createText($text); } else { $textRun = $richText->createTextRun($text); if (isset($fmtRuns[$i - 1])) { if ($fmtRuns[$i - 1]["\146\157\156\164\111\x6e\x64\x65\x78"] < 4) { $fontIndex = $fmtRuns[$i - 1]["\146\x6f\x6e\164\x49\156\x64\145\170"]; } else { $fontIndex = $fmtRuns[$i - 1]["\146\157\x6e\x74\x49\x6e\144\x65\170"] - 1; } $textRun->setFont(clone $this->objFonts[$fontIndex]); } } } } goto yo9W3; s_TRp: } else { if ($this->readEmptyCells || trim($this->sst[$index]["\166\x61\154\165\145"]) !== '') { goto PARlr; PARlr: $cell = $this->phpSheet->getCell($columnString . ($row + 1)); goto L1Xyp; cp_lG: $emptyCell = false; goto Wc5gJ; L1Xyp: $cell->setValueExplicit($this->sst[$index]["\166\x61\154\x75\145"], PHPExcel_Cell_DataType::TYPE_STRING); goto cp_lG; Wc5gJ: } } goto Efec9; IFqv8: $xfIndex = self::getInt2d($recordData, 4); goto i5vRx; i5vRx: $index = self::getInt4d($recordData, 6); goto pRzHM; AsEAa: } goto X4D48; zhvVB: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto NL3Ju; xj1aW: $row = self::getInt2d($recordData, 0); goto azGq9; FpDZt: $length = self::getInt2d($this->data, $this->pos + 2); goto zhvVB; iMRhs: $emptyCell = true; goto eQ49c; NL3Ju: $this->pos += 4 + $length; goto xj1aW; azGq9: $column = self::getInt2d($recordData, 2); goto hqWrL; hqWrL: $columnString = PHPExcel_Cell::stringFromColumnIndex($column); goto iMRhs; X4D48: } private function readMulRk() { goto sXERM; N6i82: $colLast = self::getInt2d($recordData, $length - 2); goto PWfmH; PWfmH: $columns = $colLast - $colFirst + 1; goto zV8jD; ewMYU: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto NLeKc; z68sV: $colFirst = self::getInt2d($recordData, 2); goto N6i82; sXERM: $length = self::getInt2d($this->data, $this->pos + 2); goto ewMYU; zV8jD: $offset = 4; goto IiZat; NLeKc: $this->pos += 4 + $length; goto ceEbk; IiZat: for ($i = 0; $i < $columns; ++$i) { $columnString = PHPExcel_Cell::stringFromColumnIndex($colFirst + $i); if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($columnString, $row + 1, $this->phpSheet->getTitle())) { goto BCAXw; DWCxN: $numValue = self::getIEEE754(self::getInt4d($recordData, $offset + 2)); goto hP1EA; epWif: if (!$this->readDataOnly) { $cell->setXfIndex($this->mapCellXfIndex[$xfIndex]); } goto oP3Z0; BCAXw: $xfIndex = self::getInt2d($recordData, $offset); goto DWCxN; oP3Z0: $cell->setValueExplicit($numValue, PHPExcel_Cell_DataType::TYPE_NUMERIC); goto Z8f2R; hP1EA: $cell = $this->phpSheet->getCell($columnString . ($row + 1)); goto epWif; Z8f2R: } $offset += 6; } goto lsU8N; ceEbk: $row = self::getInt2d($recordData, 0); goto z68sV; lsU8N: } private function readNumber() { goto RPUUV; sttRv: $columnString = PHPExcel_Cell::stringFromColumnIndex($column); goto hURrV; WUHBO: $column = self::getInt2d($recordData, 2); goto sttRv; RPUUV: $length = self::getInt2d($this->data, $this->pos + 2); goto dIJD3; dIJD3: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto ug2sw; ug2sw: $this->pos += 4 + $length; goto EhF0V; EhF0V: $row = self::getInt2d($recordData, 0); goto WUHBO; hURrV: if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($columnString, $row + 1, $this->phpSheet->getTitle())) { goto Kpugw; LDOFv: $cell->setValueExplicit($numValue, PHPExcel_Cell_DataType::TYPE_NUMERIC); goto rE8fC; l6Sg9: $cell = $this->phpSheet->getCell($columnString . ($row + 1)); goto ajcOD; Kpugw: $xfIndex = self::getInt2d($recordData, 4); goto P9HRi; ajcOD: if (!$this->readDataOnly) { $cell->setXfIndex($this->mapCellXfIndex[$xfIndex]); } goto LDOFv; P9HRi: $numValue = self::extractNumber(substr($recordData, 6, 8)); goto l6Sg9; rE8fC: } goto xD3H1; xD3H1: } private function readFormula() { goto byhEo; okCbr: $formulaStructure = substr($recordData, 20); goto v_IDf; InSlP: $columnString = PHPExcel_Cell::stringFromColumnIndex($column); goto okCbr; byhEo: $length = self::getInt2d($this->data, $this->pos + 2); goto IOupN; Kh9Mk: $column = self::getInt2d($recordData, 2); goto InSlP; MQ3wa: $isPartOfSharedFormula = $isPartOfSharedFormula && ord($formulaStructure[2]) == 0x1; goto Rdqks; IOupN: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto D84Pu; Rdqks: if ($isPartOfSharedFormula) { goto O2Icm; DRzYR: $baseCol = self::getInt2d($formulaStructure, 5); goto ulosl; ulosl: $this->_baseCell = PHPExcel_Cell::stringFromColumnIndex($baseCol) . ($baseRow + 1); goto C3g1r; O2Icm: $baseRow = self::getInt2d($formulaStructure, 3); goto DRzYR; C3g1r: } goto EDG_N; v_IDf: $options = self::getInt2d($recordData, 14); goto tpnGB; Q0LUr: $row = self::getInt2d($recordData, 0); goto Kh9Mk; tpnGB: $isPartOfSharedFormula = (bool) (0x8 & $options); goto MQ3wa; D84Pu: $this->pos += 4 + $length; goto Q0LUr; EDG_N: if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($columnString, $row + 1, $this->phpSheet->getTitle())) { goto H1dn_; mpr0a: if (!$isPartOfSharedFormula) { try { goto LQXz9; LQXz9: if ($this->version != self::XLS_BIFF8) { throw new PHPExcel_Reader_Exception("\x4e\x6f\x74\x20\x42\111\x46\106\x38\x2e\40\103\141\x6e\40\x6f\156\154\x79\40\x72\145\x61\144\40\102\111\106\x46\70\x20\146\x6f\162\155\x75\154\x61\x73"); } goto uTNbY; uTNbY: $formula = $this->getFormulaFromStructure($formulaStructure); goto lAxnP; lAxnP: $cell->setValueExplicit("\x3d" . $formula, PHPExcel_Cell_DataType::TYPE_FORMULA); goto YLw3U; YLw3U: } catch (PHPExcel_Exception $e) { $cell->setValueExplicit($value, $dataType); } } else { if ($this->version == self::XLS_BIFF8) { } else { $cell->setValueExplicit($value, $dataType); } } goto bk2RE; H1dn_: if ($isPartOfSharedFormula) { $this->sharedFormulaParts[$columnString . ($row + 1)] = $this->_baseCell; } goto l2xa3; evl0a: if (ord($recordData[6]) == 0 && ord($recordData[12]) == 255 && ord($recordData[13]) == 255) { goto r5iwK; r5iwK: $dataType = PHPExcel_Cell_DataType::TYPE_STRING; goto lXsgj; lXsgj: $code = self::getInt2d($this->data, $this->pos); goto hr8gs; hr8gs: if ($code == self::XLS_TYPE_SHAREDFMLA) { $this->readSharedFmla(); } goto jtRq8; jtRq8: $value = $this->readString(); goto XMURq; XMURq: } elseif (ord($recordData[6]) == 1 && ord($recordData[12]) == 255 && ord($recordData[13]) == 255) { $dataType = PHPExcel_Cell_DataType::TYPE_BOOL; $value = (bool) ord($recordData[8]); } elseif (ord($recordData[6]) == 2 && ord($recordData[12]) == 255 && ord($recordData[13]) == 255) { $dataType = PHPExcel_Cell_DataType::TYPE_ERROR; $value = PHPExcel_Reader_Excel5_ErrorCode::lookup(ord($recordData[8])); } elseif (ord($recordData[6]) == 3 && ord($recordData[12]) == 255 && ord($recordData[13]) == 255) { $dataType = PHPExcel_Cell_DataType::TYPE_NULL; $value = ''; } else { $dataType = PHPExcel_Cell_DataType::TYPE_NUMERIC; $value = self::extractNumber(substr($recordData, 6, 8)); } goto ueqSv; H4DrI: if (!$this->readDataOnly) { $cell->setXfIndex($this->mapCellXfIndex[$xfIndex]); } goto mpr0a; l2xa3: $xfIndex = self::getInt2d($recordData, 4); goto evl0a; bk2RE: $cell->setCalculatedValue($value); goto wsSpO; ueqSv: $cell = $this->phpSheet->getCell($columnString . ($row + 1)); goto H4DrI; wsSpO: } goto P6txA; P6txA: } private function readSharedFmla() { goto RBQ_0; xmiPP: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto V9SBm; RBQ_0: $length = self::getInt2d($this->data, $this->pos + 2); goto xmiPP; Onj2V: $this->sharedFormulas[$this->_baseCell] = $formula; goto Cu3iM; XV_g2: $cellRange = $this->readBIFF5CellRangeAddressFixed($cellRange); goto WfuxP; V9SBm: $this->pos += 4 + $length; goto wTKaw; wTKaw: $cellRange = substr($recordData, 0, 6); goto XV_g2; WfuxP: $no = ord($recordData[7]); goto o60_G; o60_G: $formula = substr($recordData, 8); goto Onj2V; Cu3iM: } private function readString() { goto trzex; B1QwP: if ($this->version == self::XLS_BIFF8) { $string = self::readUnicodeStringLong($recordData); $value = $string["\166\x61\154\x75\x65"]; } else { $string = $this->readByteStringLong($recordData); $value = $string["\166\141\154\165\145"]; } goto PY_qb; trzex: $length = self::getInt2d($this->data, $this->pos + 2); goto nA2kw; PY_qb: return $value; goto QL1ek; r7ZY7: $this->pos += 4 + $length; goto B1QwP; nA2kw: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto r7ZY7; QL1ek: } private function readBoolErr() { goto Js30c; wTLYS: if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($columnString, $row + 1, $this->phpSheet->getTitle())) { goto ztj3a; ztj3a: $xfIndex = self::getInt2d($recordData, 4); goto NYY9P; N6cVA: if (!$this->readDataOnly) { $cell->setXfIndex($this->mapCellXfIndex[$xfIndex]); } goto Fy488; NYY9P: $boolErr = ord($recordData[6]); goto evkXP; ewFb6: switch ($isError) { case 0: goto rOZdA; nJEuk: $cell->setValueExplicit($value, PHPExcel_Cell_DataType::TYPE_BOOL); goto gYGqi; rOZdA: $value = (bool) $boolErr; goto nJEuk; gYGqi: break; goto fDRoY; fDRoY: case 1: goto O6aZ2; O6aZ2: $value = PHPExcel_Reader_Excel5_ErrorCode::lookup($boolErr); goto AJT2M; AJT2M: $cell->setValueExplicit($value, PHPExcel_Cell_DataType::TYPE_ERROR); goto SfLIi; SfLIi: break; goto OajpM; OajpM: } goto N6cVA; wHqL9: $cell = $this->phpSheet->getCell($columnString . ($row + 1)); goto ewFb6; evkXP: $isError = ord($recordData[7]); goto wHqL9; Fy488: } goto jTjBJ; MFs2i: $row = self::getInt2d($recordData, 0); goto p1vgQ; a24YY: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto Ssisi; SAbTx: $columnString = PHPExcel_Cell::stringFromColumnIndex($column); goto wTLYS; p1vgQ: $column = self::getInt2d($recordData, 2); goto SAbTx; Ssisi: $this->pos += 4 + $length; goto MFs2i; Js30c: $length = self::getInt2d($this->data, $this->pos + 2); goto a24YY; jTjBJ: } private function readMulBlank() { goto v0cfx; RjyLI: $fc = self::getInt2d($recordData, 2); goto TH9oX; QF2qS: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto uE1On; v0cfx: $length = self::getInt2d($this->data, $this->pos + 2); goto QF2qS; TH9oX: if (!$this->readDataOnly && $this->readEmptyCells) { for ($i = 0; $i < $length / 2 - 3; ++$i) { $columnString = PHPExcel_Cell::stringFromColumnIndex($fc + $i); if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($columnString, $row + 1, $this->phpSheet->getTitle())) { $xfIndex = self::getInt2d($recordData, 4 + 2 * $i); $this->phpSheet->getCell($columnString . ($row + 1))->setXfIndex($this->mapCellXfIndex[$xfIndex]); } } } goto aTBkA; L4boI: $row = self::getInt2d($recordData, 0); goto RjyLI; uE1On: $this->pos += 4 + $length; goto L4boI; aTBkA: } private function readLabel() { goto f7u3K; E8niB: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto G7iZf; qe_3U: if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($columnString, $row + 1, $this->phpSheet->getTitle())) { goto cip77; mUBI4: if ($this->version == self::XLS_BIFF8) { $string = self::readUnicodeStringLong(substr($recordData, 6)); $value = $string["\x76\x61\154\x75\145"]; } else { $string = $this->readByteStringLong(substr($recordData, 6)); $value = $string["\x76\141\154\x75\145"]; } goto gm2nb; cip77: $xfIndex = self::getInt2d($recordData, 4); goto mUBI4; gm2nb: if ($this->readEmptyCells || trim($value) !== '') { goto XcDuv; nICW2: if (!$this->readDataOnly) { $cell->setXfIndex($this->mapCellXfIndex[$xfIndex]); } goto zca2A; uMpBv: $cell->setValueExplicit($value, PHPExcel_Cell_DataType::TYPE_STRING); goto nICW2; XcDuv: $cell = $this->phpSheet->getCell($columnString . ($row + 1)); goto uMpBv; zca2A: } goto vWH7N; vWH7N: } goto cVrAW; f7u3K: $length = self::getInt2d($this->data, $this->pos + 2); goto E8niB; FO7IS: $row = self::getInt2d($recordData, 0); goto qSh3n; qSh3n: $column = self::getInt2d($recordData, 2); goto DLPlu; DLPlu: $columnString = PHPExcel_Cell::stringFromColumnIndex($column); goto qe_3U; G7iZf: $this->pos += 4 + $length; goto FO7IS; cVrAW: } private function readBlank() { goto az96R; az96R: $length = self::getInt2d($this->data, $this->pos + 2); goto W_7Gs; W_7Gs: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto bzZMj; bzZMj: $this->pos += 4 + $length; goto joEC4; joEC4: $row = self::getInt2d($recordData, 0); goto gZOO4; y5RBc: if ($this->getReadFilter() !== null && $this->getReadFilter()->readCell($columnString, $row + 1, $this->phpSheet->getTitle())) { $xfIndex = self::getInt2d($recordData, 4); if (!$this->readDataOnly && $this->readEmptyCells) { $this->phpSheet->getCell($columnString . ($row + 1))->setXfIndex($this->mapCellXfIndex[$xfIndex]); } } goto GY6JC; gZOO4: $col = self::getInt2d($recordData, 2); goto FrYJF; FrYJF: $columnString = PHPExcel_Cell::stringFromColumnIndex($col); goto y5RBc; GY6JC: } private function readMsoDrawing() { goto kKLno; bOko9: $recordData = $splicedRecordData["\162\x65\143\157\162\x64\x44\x61\x74\x61"]; goto lFbrU; W0HkO: $splicedRecordData = $this->getSplicedRecordData(); goto bOko9; lFbrU: $this->drawingData .= $recordData; goto CLdgs; kKLno: $length = self::getInt2d($this->data, $this->pos + 2); goto W0HkO; CLdgs: } private function readObj() { goto LIOrA; K7Avs: $this->textObjRef = $idObjID; goto jSCFE; UMDMZ: $grbitOpts = self::getInt2d($recordData, 6); goto igwI3; LIOrA: $length = self::getInt2d($this->data, $this->pos + 2); goto arDGp; wkqup: $otObjType = self::getInt2d($recordData, 4); goto ksGI4; d0b4D: $ftCmoType = self::getInt2d($recordData, 0); goto t3KR7; igwI3: $this->objs[] = array("\146\164\x43\155\x6f\124\x79\x70\x65" => $ftCmoType, "\x63\x62\x43\x6d\157\123\151\172\145" => $cbCmoSize, "\x6f\164\117\142\x6a\x54\171\x70\145" => $otObjType, "\x69\x64\117\142\x6a\x49\104" => $idObjID, "\x67\x72\x62\151\164\117\x70\x74\x73" => $grbitOpts); goto K7Avs; ksGI4: $idObjID = self::getInt2d($recordData, 6); goto UMDMZ; q4spT: $this->pos += 4 + $length; goto SMkkD; SMkkD: if ($this->readDataOnly || $this->version != self::XLS_BIFF8) { return; } goto d0b4D; t3KR7: $cbCmoSize = self::getInt2d($recordData, 2); goto wkqup; arDGp: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto q4spT; jSCFE: } private function readWindow2() { goto MVW6v; z7Ccd: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto DiiPM; XfnEh: $firstVisibleRow = self::getInt2d($recordData, 2); goto UBVvl; jIR_s: $showRowColHeaders = (bool) ((0x4 & $options) >> 2); goto ma5TR; f5WBt: $showGridlines = (bool) ((0x2 & $options) >> 1); goto LTx7T; FanwC: $this->frozen = (bool) ((0x8 & $options) >> 3); goto lJ0sL; qaVF1: $isActive = (bool) ((0x400 & $options) >> 10); goto ntwkO; ntwkO: if ($isActive) { $this->phpExcel->setActiveSheetIndex($this->phpExcel->getIndex($this->phpSheet)); } goto k9m73; DiiPM: $this->pos += 4 + $length; goto I1ySH; k9m73: $isPageBreakPreview = (bool) ((0x800 & $options) >> 11); goto UMbs8; lJ0sL: $this->phpSheet->setRightToLeft((bool) ((0x40 & $options) >> 6)); goto qaVF1; ma5TR: $this->phpSheet->setShowRowColHeaders($showRowColHeaders); goto FanwC; MVW6v: $length = self::getInt2d($this->data, $this->pos + 2); goto z7Ccd; UBVvl: $firstVisibleColumn = self::getInt2d($recordData, 4); goto b8uOb; UMbs8: if ($this->phpSheet->getSheetView()->getView() !== PHPExcel_Worksheet_SheetView::SHEETVIEW_PAGE_LAYOUT) { goto FnK47; FnK47: $view = $isPageBreakPreview ? PHPExcel_Worksheet_SheetView::SHEETVIEW_PAGE_BREAK_PREVIEW : PHPExcel_Worksheet_SheetView::SHEETVIEW_NORMAL; goto hPV4_; hPV4_: $this->phpSheet->getSheetView()->setView($view); goto R1G2M; R1G2M: if ($this->version === self::XLS_BIFF8) { goto fJYdW; fJYdW: $zoomScale = $isPageBreakPreview ? $zoomscaleInPageBreakPreview : $zoomscaleInNormalView; goto hw2MW; oKjP1: $this->phpSheet->getSheetView()->setZoomScaleNormal($zoomscaleInNormalView); goto GROE2; hw2MW: $this->phpSheet->getSheetView()->setZoomScale($zoomScale); goto oKjP1; GROE2: } goto zQN2P; zQN2P: } goto PJPhI; LTx7T: $this->phpSheet->setShowGridlines($showGridlines); goto jIR_s; I1ySH: $options = self::getInt2d($recordData, 0); goto XfnEh; b8uOb: if ($this->version === self::XLS_BIFF8) { goto fwK1O; fwK1O: $zoomscaleInPageBreakPreview = self::getInt2d($recordData, 10); goto lAIAo; XVzjo: if ($zoomscaleInNormalView === 0) { $zoomscaleInNormalView = 100; } goto KRTdd; lAIAo: if ($zoomscaleInPageBreakPreview === 0) { $zoomscaleInPageBreakPreview = 60; } goto L4qMs; L4qMs: $zoomscaleInNormalView = self::getInt2d($recordData, 12); goto XVzjo; KRTdd: } goto f5WBt; PJPhI: } private function readPageLayoutView() { goto jd3me; Ij4e0: $fRulerVisible = $grbit >> 1 & 0x1; goto k1sQ3; q3OX6: $grbit = self::getInt2d($recordData, 14); goto U_Y5_; k1sQ3: $fWhitespaceHidden = $grbit >> 3 & 0x1; goto U_c2F; Tppuk: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto md5ko; jd3me: $length = self::getInt2d($this->data, $this->pos + 2); goto Tppuk; U_c2F: if ($fPageLayoutView === 1) { $this->phpSheet->getSheetView()->setView(PHPExcel_Worksheet_SheetView::SHEETVIEW_PAGE_LAYOUT); $this->phpSheet->getSheetView()->setZoomScale($wScalePLV); } goto G0kqM; U_Y5_: $fPageLayoutView = $grbit & 0x1; goto Ij4e0; OXkJs: $wScalePLV = self::getInt2d($recordData, 12); goto q3OX6; FI6OA: $rt = self::getInt2d($recordData, 0); goto K8rfa; K8rfa: $grbitFrt = self::getInt2d($recordData, 2); goto OXkJs; md5ko: $this->pos += 4 + $length; goto FI6OA; G0kqM: } private function readScl() { goto TOm82; Ny6XB: $this->phpSheet->getSheetView()->setZoomScale($numerator * 100 / $denumerator); goto gI1Jp; LLJsC: $numerator = self::getInt2d($recordData, 0); goto ohWJ4; ZoDSY: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto NorGK; ohWJ4: $denumerator = self::getInt2d($recordData, 2); goto Ny6XB; NorGK: $this->pos += 4 + $length; goto LLJsC; TOm82: $length = self::getInt2d($this->data, $this->pos + 2); goto ZoDSY; gI1Jp: } private function readPane() { goto qVHhu; ahfIz: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto WYBTb; qVHhu: $length = self::getInt2d($this->data, $this->pos + 2); goto ahfIz; WYBTb: $this->pos += 4 + $length; goto lpyua; lpyua: if (!$this->readDataOnly) { goto JSzoU; B0ftv: if ($this->frozen) { $this->phpSheet->freezePane(PHPExcel_Cell::stringFromColumnIndex($px) . ($py + 1)); } else { } goto mXfDY; tp_KM: $py = self::getInt2d($recordData, 2); goto B0ftv; JSzoU: $px = self::getInt2d($recordData, 0); goto tp_KM; mXfDY: } goto YR0mp; YR0mp: } private function readSelection() { goto sO_jm; j5Ca8: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto tokQP; pyu1R: if (!$this->readDataOnly) { goto HROIK; HROIK: $paneId = ord($recordData[0]); goto B8yN_; b7r01: $cellRangeAddressList = $this->readBIFF5CellRangeAddressList($data); goto QBcXq; QBcXq: $selectedCells = $cellRangeAddressList["\143\x65\x6c\154\x52\141\156\x67\x65\101\x64\144\162\x65\x73\163\x65\163"][0]; goto OiQvA; HY7vH: $index = self::getInt2d($recordData, 5); goto Hiktz; O_1AY: if (preg_match("\x2f\x5e\x28\101\x5b\x30\x2d\71\135\x2b\134\72\51\111\x56\50\133\x30\x2d\71\x5d\53\51\44\57", $selectedCells)) { $selectedCells = preg_replace("\x2f\x5e\50\x41\133\x30\x2d\71\135\53\x5c\72\x29\x49\126\x28\133\x30\x2d\71\x5d\53\51\44\x2f", "\44\x7b\61\175\x58\106\104\x24\x7b\62\x7d", $selectedCells); } goto JcsG2; JcsG2: $this->phpSheet->setSelectedCells($selectedCells); goto Rk8cJ; sZaEZ: if (preg_match("\57\x5e\50\133\101\x2d\x5a\x5d\53\x31\x5c\x3a\x5b\x41\x2d\x5a\135\x2b\x29\66\65\x35\63\66\44\57", $selectedCells)) { $selectedCells = preg_replace("\57\136\50\x5b\101\x2d\x5a\x5d\53\x31\134\x3a\x5b\x41\55\x5a\135\53\x29\66\x35\65\x33\66\x24\57", "\44\173\61\x7d\61\60\x34\x38\65\67\x36", $selectedCells); } goto O_1AY; Hiktz: $data = substr($recordData, 7); goto b7r01; B8yN_: $r = self::getInt2d($recordData, 1); goto BujfC; BujfC: $c = self::getInt2d($recordData, 3); goto HY7vH; OiQvA: if (preg_match("\x2f\136\x28\x5b\101\x2d\x5a\x5d\x2b\61\x5c\72\x5b\x41\x2d\x5a\135\x2b\x29\x31\66\63\70\64\x24\x2f", $selectedCells)) { $selectedCells = preg_replace("\x2f\136\x28\133\x41\x2d\x5a\135\x2b\x31\x5c\72\133\x41\x2d\132\x5d\x2b\x29\61\66\63\x38\64\x24\x2f", "\44\x7b\61\175\x31\60\x34\x38\65\x37\x36", $selectedCells); } goto sZaEZ; Rk8cJ: } goto yywkm; tokQP: $this->pos += 4 + $length; goto pyu1R; sO_jm: $length = self::getInt2d($this->data, $this->pos + 2); goto j5Ca8; yywkm: } private function includeCellRangeFiltered($cellRangeAddress) { goto oDvfJ; h6cG4: if ($this->getReadFilter() !== null) { goto yjiWG; yjiWG: $includeCellRange = false; goto sXUvj; u88JB: for ($row = $rangeBoundaries[0][1]; $row <= $rangeBoundaries[1][1]; $row++) { for ($column = $rangeBoundaries[0][0]; $column != $rangeBoundaries[1][0]; $column++) { if ($this->getReadFilter()->readCell($column, $row, $this->phpSheet->getTitle())) { $includeCellRange = true; break 2; } } } goto V3fpg; sXUvj: $rangeBoundaries = PHPExcel_Cell::getRangeBoundaries($cellRangeAddress); goto xdtQH; xdtQH: $rangeBoundaries[1][0]++; goto u88JB; V3fpg: } goto Kxp0p; oDvfJ: $includeCellRange = true; goto h6cG4; Kxp0p: return $includeCellRange; goto ZbCqb; ZbCqb: } private function readMergedCells() { goto Qwdm3; gdxtP: $this->pos += 4 + $length; goto aXhWC; aXhWC: if ($this->version == self::XLS_BIFF8 && !$this->readDataOnly) { $cellRangeAddressList = $this->readBIFF8CellRangeAddressList($recordData); foreach ($cellRangeAddressList["\x63\145\x6c\x6c\x52\x61\156\x67\x65\x41\x64\144\162\x65\x73\x73\145\x73"] as $cellRangeAddress) { if (strpos($cellRangeAddress, "\x3a") !== false && $this->includeCellRangeFiltered($cellRangeAddress)) { $this->phpSheet->mergeCells($cellRangeAddress); } } } goto vuZ4h; Qwdm3: $length = self::getInt2d($this->data, $this->pos + 2); goto Dtr8h; Dtr8h: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto gdxtP; vuZ4h: } private function readHyperLink() { goto jdZnd; zmUIj: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto GX3va; xScZe: if (!$this->readDataOnly) { goto o3Sgd; MIoS5: if ($hasDesc) { goto N4jVY; GzcvT: $desc = self::encodeUTF16(substr($recordData, 36, 2 * ($dl - 1)), false); goto PFMDL; N4jVY: $dl = self::getInt4d($recordData, 32); goto GzcvT; PFMDL: $offset += 4 + 2 * $dl; goto dUFUE; dUFUE: } goto eMI0M; HXZC5: $offset = 32; goto MIoS5; cybk3: $hasDesc = (0x14 & self::getInt2d($recordData, 28)) >> 2; goto myvKp; OehX9: foreach (PHPExcel_Cell::extractAllCellReferencesInRange($cellRange) as $coordinate) { $this->phpSheet->getCell($coordinate)->getHyperLink()->setUrl($url); } goto Fc8sl; eMI0M: if ($hasFrame) { $fl = self::getInt4d($recordData, $offset); $offset += 4 + 2 * $fl; } goto FHlIX; FHlIX: $hyperlinkType = null; goto JTHmp; iXb7W: $isAbsPathOrUrl = (0x1 & self::getInt2d($recordData, 28)) >> 1; goto cybk3; JTHmp: if ($isUNC) { $hyperlinkType = "\x55\116\x43"; } elseif (!$isFileLinkOrUrl) { $hyperlinkType = "\x77\x6f\162\x6b\x62\x6f\x6f\153"; } elseif (ord($recordData[$offset]) == 0x3) { $hyperlinkType = "\154\x6f\x63\x61\x6c"; } elseif (ord($recordData[$offset]) == 0xe0) { $hyperlinkType = "\125\122\x4c"; } goto KH0iV; myvKp: $hasText = (0x8 & self::getInt2d($recordData, 28)) >> 3; goto w06Fa; QTayM: if ($hasText) { goto pkCv6; IpQaT: $text = self::encodeUTF16(substr($recordData, $offset, 2 * ($tl - 1)), false); goto eD2pq; pkCv6: $tl = self::getInt4d($recordData, $offset); goto PaLWU; eD2pq: $url .= $text; goto XpsMi; PaLWU: $offset += 4; goto IpQaT; XpsMi: } goto OehX9; o3Sgd: try { $cellRange = $this->readBIFF8CellRangeAddressFixed($recordData, 0, 8); } catch (PHPExcel_Exception $e) { return; } goto DOMeo; KH0iV: switch ($hyperlinkType) { case "\x55\122\114": goto K2MGR; ghEnU: break; goto wvH1x; eid01: $offset += $us; goto ghEnU; K2MGR: $offset += 16; goto h9xJ8; Cdrmm: $offset += 4; goto tpyrs; Qrap4: if ($nullOffset) { $url = substr($url, 0, $nullOffset); } goto ecEXb; tpyrs: $url = self::encodeUTF16(substr($recordData, $offset, $us - 2), false); goto x93Iv; x93Iv: $nullOffset = strpos($url, 0x0); goto Qrap4; ecEXb: $url .= $hasText ? "\x23" : ''; goto eid01; h9xJ8: $us = self::getInt4d($recordData, $offset); goto Cdrmm; wvH1x: case "\x6c\x6f\x63\x61\154": goto e9qS0; HpqYP: $offset += 24; goto IYJBX; DLNTN: $offset += 4; goto eMFNY; IYJBX: $sz = self::getInt4d($recordData, $offset); goto DLNTN; A0gL2: $url .= $sz > 0 ? $extendedFilePath : $shortenedFilePath; goto DObN7; oFfIV: $sl = self::getInt4d($recordData, $offset); goto Eqqbh; icAYB: $shortenedFilePath = self::encodeUTF16($shortenedFilePath, true); goto Av95r; gyTjK: $url = str_repeat("\56\56\134", $upLevelCount); goto A0gL2; DObN7: $url .= $hasText ? "\43" : ''; goto xXyp3; FfF8z: $shortenedFilePath = substr($recordData, $offset, $sl); goto icAYB; mrhd1: $offset += $sl; goto HpqYP; eMFNY: if ($sz > 0) { goto cvBY5; wDQ_n: $offset += 2; goto xKkU2; cvBY5: $xl = self::getInt4d($recordData, $offset); goto JxPKR; F9OIw: $extendedFilePath = self::encodeUTF16($extendedFilePath, false); goto xoBzj; xKkU2: $extendedFilePath = substr($recordData, $offset, $xl); goto F9OIw; JxPKR: $offset += 4; goto wDQ_n; xoBzj: $offset += $xl; goto xyO6p; xyO6p: } goto gyTjK; Eqqbh: $offset += 4; goto FfF8z; tESPx: $upLevelCount = self::getInt2d($recordData, $offset); goto KbfnF; Av95r: $shortenedFilePath = substr($shortenedFilePath, 0, -1); goto mrhd1; xXyp3: break; goto wdH3N; e9qS0: $offset += 16; goto tESPx; KbfnF: $offset += 2; goto oFfIV; wdH3N: case "\125\116\x43": return; case "\x77\157\162\x6b\142\157\157\x6b": $url = "\163\150\145\x65\x74\72\x2f\x2f"; break; default: return; } goto QTayM; PrpMR: $isUNC = (0x100 & self::getInt2d($recordData, 28)) >> 8; goto HXZC5; DOMeo: $isFileLinkOrUrl = (0x1 & self::getInt2d($recordData, 28)) >> 0; goto iXb7W; w06Fa: $hasFrame = (0x80 & self::getInt2d($recordData, 28)) >> 7; goto PrpMR; Fc8sl: } goto jObf8; GX3va: $this->pos += 4 + $length; goto xScZe; jdZnd: $length = self::getInt2d($this->data, $this->pos + 2); goto zmUIj; jObf8: } private function readDataValidations() { goto kIkpN; QApLf: $this->pos += 4 + $length; goto EDRy5; LCPWK: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto QApLf; kIkpN: $length = self::getInt2d($this->data, $this->pos + 2); goto LCPWK; EDRy5: } private function readDataValidation() { goto XWCp2; slD1l: $formula2 = substr($recordData, $offset, $sz2); goto xTZ2w; XVWum: $offset += $string["\x73\151\x7a\x65"]; goto Klnkr; HITpK: $offset += $sz1; goto ZaSO0; gnn7R: $string = self::readUnicodeStringLong(substr($recordData, $offset)); goto mXF3g; GNFiy: $cellRangeAddresses = $cellRangeAddressList["\x63\x65\x6c\154\122\141\156\x67\145\x41\x64\144\x72\145\163\163\x65\163"]; goto bWTs1; kL_UT: $operator = (0xf00000 & $options) >> 20; goto V7VSh; lKE7Z: $sz1 = self::getInt2d($recordData, $offset); goto CSVUx; npKNs: $errorStyle = (0x70 & $options) >> 4; goto W2pNR; W2pNR: switch ($errorStyle) { case 0x0: $errorStyle = PHPExcel_Cell_DataValidation::STYLE_STOP; break; case 0x1: $errorStyle = PHPExcel_Cell_DataValidation::STYLE_WARNING; break; case 0x2: $errorStyle = PHPExcel_Cell_DataValidation::STYLE_INFORMATION; break; } goto wcZnc; W0y4Q: switch ($type) { case 0x0: $type = PHPExcel_Cell_DataValidation::TYPE_NONE; break; case 0x1: $type = PHPExcel_Cell_DataValidation::TYPE_WHOLE; break; case 0x2: $type = PHPExcel_Cell_DataValidation::TYPE_DECIMAL; break; case 0x3: $type = PHPExcel_Cell_DataValidation::TYPE_LIST; break; case 0x4: $type = PHPExcel_Cell_DataValidation::TYPE_DATE; break; case 0x5: $type = PHPExcel_Cell_DataValidation::TYPE_TIME; break; case 0x6: $type = PHPExcel_Cell_DataValidation::TYPE_TEXTLENGTH; break; case 0x7: $type = PHPExcel_Cell_DataValidation::TYPE_CUSTOM; break; } goto npKNs; IihlE: $error = $string["\166\141\154\x75\145"] !== chr(0) ? $string["\166\x61\154\x75\x65"] : ''; goto prQ0Z; CSVUx: $offset += 2; goto hrfPA; BDmft: try { $formula1 = $this->getFormulaFromStructure($formula1); if ($type == PHPExcel_Cell_DataValidation::TYPE_LIST) { $formula1 = str_replace(chr(0), "\x2c", $formula1); } } catch (PHPExcel_Exception $e) { return; } goto HITpK; M_3WM: $allowBlank = (0x100 & $options) >> 8; goto XThSK; lMXPI: $offset += 2; goto slD1l; xmS7w: $options = self::getInt4d($recordData, 0); goto gtvwV; XWCp2: $length = self::getInt2d($this->data, $this->pos + 2); goto DuFk1; DuFk1: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto N8nHR; SGvFY: $offset += $string["\163\151\x7a\145"]; goto gnn7R; yPBTF: $string = self::readUnicodeStringLong(substr($recordData, $offset)); goto e_4vq; RTh_a: $offset += 2; goto lMXPI; Xr6hC: $prompt = $string["\166\x61\x6c\165\x65"] !== chr(0) ? $string["\166\141\154\165\145"] : ''; goto TrT6M; bWTs1: foreach ($cellRangeAddresses as $cellRange) { $stRange = $this->phpSheet->shrinkRangeToFit($cellRange); foreach (PHPExcel_Cell::extractAllCellReferencesInRange($stRange) as $coordinate) { goto X5jii; VmcR1: $objValidation->setAllowBlank((bool) $allowBlank); goto ZbOEo; lOj_4: $objValidation->setFormula1($formula1); goto GwgTz; GLVSi: $objValidation->setShowErrorMessage((bool) $showErrorMessage); goto MWHui; GwgTz: $objValidation->setFormula2($formula2); goto UEnMF; Fizff: $objValidation->setError($error); goto n6G2d; ZbOEo: $objValidation->setShowInputMessage((bool) $showInputMessage); goto GLVSi; wFeJ6: $objValidation->setType($type); goto wkPOF; X5jii: $objValidation = $this->phpSheet->getCell($coordinate)->getDataValidation(); goto wFeJ6; n6G2d: $objValidation->setPromptTitle($promptTitle); goto LK_pJ; wkPOF: $objValidation->setErrorStyle($errorStyle); goto VmcR1; LK_pJ: $objValidation->setPrompt($prompt); goto lOj_4; PbHj9: $objValidation->setOperator($operator); goto hwcca; MWHui: $objValidation->setShowDropDown(!$suppressDropDown); goto PbHj9; hwcca: $objValidation->setErrorTitle($errorTitle); goto Fizff; UEnMF: } } goto GbD5a; SMRg3: if ($this->readDataOnly) { return; } goto xmS7w; gtvwV: $type = (0xf & $options) >> 0; goto W0y4Q; V7VSh: switch ($operator) { case 0x0: $operator = PHPExcel_Cell_DataValidation::OPERATOR_BETWEEN; break; case 0x1: $operator = PHPExcel_Cell_DataValidation::OPERATOR_NOTBETWEEN; break; case 0x2: $operator = PHPExcel_Cell_DataValidation::OPERATOR_EQUAL; break; case 0x3: $operator = PHPExcel_Cell_DataValidation::OPERATOR_NOTEQUAL; break; case 0x4: $operator = PHPExcel_Cell_DataValidation::OPERATOR_GREATERTHAN; break; case 0x5: $operator = PHPExcel_Cell_DataValidation::OPERATOR_LESSTHAN; break; case 0x6: $operator = PHPExcel_Cell_DataValidation::OPERATOR_GREATERTHANOREQUAL; break; case 0x7: $operator = PHPExcel_Cell_DataValidation::OPERATOR_LESSTHANOREQUAL; break; } goto xq1Wr; e2Q__: $showInputMessage = (0x40000 & $options) >> 18; goto LPzRw; ZaSO0: $sz2 = self::getInt2d($recordData, $offset); goto RTh_a; TrT6M: $offset += $string["\163\x69\172\145"]; goto q0ozt; XThSK: $suppressDropDown = (0x200 & $options) >> 9; goto e2Q__; Klnkr: $string = self::readUnicodeStringLong(substr($recordData, $offset)); goto Xr6hC; qzNCf: try { $formula2 = $this->getFormulaFromStructure($formula2); } catch (PHPExcel_Exception $e) { return; } goto jagbt; Wzulq: $formula1 = substr($recordData, $offset, $sz1); goto KabIY; e_4vq: $promptTitle = $string["\x76\141\154\165\145"] !== chr(0) ? $string["\x76\141\154\x75\145"] : ''; goto SGvFY; xTZ2w: $formula2 = pack("\x76", $sz2) . $formula2; goto qzNCf; KabIY: $formula1 = pack("\x76", $sz1) . $formula1; goto BDmft; mXF3g: $errorTitle = $string["\166\141\x6c\x75\x65"] !== chr(0) ? $string["\166\141\154\x75\145"] : ''; goto XVWum; wcZnc: $explicitFormula = (0x80 & $options) >> 7; goto M_3WM; N8nHR: $this->pos += 4 + $length; goto SMRg3; jagbt: $offset += $sz2; goto VCmlR; xq1Wr: $offset = 4; goto yPBTF; q0ozt: $string = self::readUnicodeStringLong(substr($recordData, $offset)); goto IihlE; VCmlR: $cellRangeAddressList = $this->readBIFF8CellRangeAddressList(substr($recordData, $offset)); goto GNFiy; prQ0Z: $offset += $string["\163\151\x7a\145"]; goto lKE7Z; LPzRw: $showErrorMessage = (0x80000 & $options) >> 19; goto kL_UT; hrfPA: $offset += 2; goto Wzulq; GbD5a: } private function readSheetLayout() { goto wgdTO; Hnc5N: if (!$this->readDataOnly) { $sz = self::getInt4d($recordData, 12); switch ($sz) { case 0x14: goto jH8ME; jH8ME: $colorIndex = self::getInt2d($recordData, 16); goto Y3sfG; Y3sfG: $color = PHPExcel_Reader_Excel5_Color::map($colorIndex, $this->palette, $this->version); goto zpxRt; zpxRt: $this->phpSheet->getTabColor()->setRGB($color["\x72\147\142"]); goto UCUjP; UCUjP: break; goto gfBjK; gfBjK: case 0x28: return; break; } } goto b0F5l; wgdTO: $length = self::getInt2d($this->data, $this->pos + 2); goto cmRJY; cmRJY: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto bWCZb; MC9xL: $offset = 0; goto Hnc5N; bWCZb: $this->pos += 4 + $length; goto MC9xL; b0F5l: } private function readSheetProtection() { goto kvktU; SJ0uf: $this->phpSheet->getProtection()->setObjects(!$bool); goto ax9TZ; urx63: $this->phpSheet->getProtection()->setSelectLockedCells(!$bool); goto fb43h; kf5ln: $bool = (0x80 & $options) >> 7; goto blxBS; CIFMQ: $bool = (0x400 & $options) >> 10; goto urx63; kvktU: $length = self::getInt2d($this->data, $this->pos + 2); goto JDqvG; jWLGa: $bool = (0x10 & $options) >> 4; goto L0gc6; blxBS: $this->phpSheet->getProtection()->setInsertHyperlinks(!$bool); goto DdwUZ; ax9TZ: $bool = (0x2 & $options) >> 1; goto iDL8f; Mz0X5: $bool = (0x4000 & $options) >> 14; goto FseIp; xGwxh: $bool = (0x200 & $options) >> 9; goto TxzHW; IyxR8: $this->phpSheet->getProtection()->setInsertColumns(!$bool); goto UIlAs; CNxf_: $bool = (0x8 & $options) >> 3; goto xDu1G; JDqvG: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto SeVO5; xDu1G: $this->phpSheet->getProtection()->setFormatColumns(!$bool); goto jWLGa; QHoPq: $bool = (0x1 & $options) >> 0; goto SJ0uf; w34id: $options = self::getInt2d($recordData, 19); goto QHoPq; AwXf0: $bool = (0x2000 & $options) >> 13; goto U5QDN; FseIp: $this->phpSheet->getProtection()->setSelectUnlockedCells(!$bool); goto k_Y7n; JjV2E: $this->phpSheet->getProtection()->setFormatCells(!$bool); goto CNxf_; KxKg7: if ($this->readDataOnly) { return; } goto GxJzb; iQ7b_: if ($isf != 2) { return; } goto w34id; fb43h: $bool = (0x800 & $options) >> 11; goto sjEtJ; DdwUZ: $bool = (0x100 & $options) >> 8; goto Hr_Fc; L0gc6: $this->phpSheet->getProtection()->setFormatRows(!$bool); goto zy0f8; gBS73: $bool = (0x4 & $options) >> 2; goto JjV2E; Hr_Fc: $this->phpSheet->getProtection()->setDeleteColumns(!$bool); goto xGwxh; TxzHW: $this->phpSheet->getProtection()->setDeleteRows(!$bool); goto CIFMQ; zy0f8: $bool = (0x20 & $options) >> 5; goto IyxR8; pZP27: $bool = (0x1000 & $options) >> 12; goto dShzM; UIlAs: $bool = (0x40 & $options) >> 6; goto hHzBV; sjEtJ: $this->phpSheet->getProtection()->setSort(!$bool); goto pZP27; dShzM: $this->phpSheet->getProtection()->setAutoFilter(!$bool); goto AwXf0; iDL8f: $this->phpSheet->getProtection()->setScenarios(!$bool); goto gBS73; hHzBV: $this->phpSheet->getProtection()->setInsertRows(!$bool); goto kf5ln; U5QDN: $this->phpSheet->getProtection()->setPivotTables(!$bool); goto Mz0X5; SeVO5: $this->pos += 4 + $length; goto KxKg7; GxJzb: $isf = self::getInt2d($recordData, 12); goto iQ7b_; k_Y7n: } private function readRangeProtection() { goto PEYaD; ARx2I: $offset = 0; goto ZqbiY; LmdC3: $this->pos += 4 + $length; goto ARx2I; PEYaD: $length = self::getInt2d($this->data, $this->pos + 2); goto v_1NS; ZqbiY: if (!$this->readDataOnly) { goto vYM_X; G5P6x: $offset += 5; goto SDU6Q; vYM_X: $offset += 12; goto i3A1J; SxKQN: $offset += 2; goto G5P6x; xCNZW: $wPassword = self::getInt4d($recordData, $offset); goto KjuIr; k2vwK: for ($i = 0; $i < $cref; ++$i) { try { $cellRange = $this->readBIFF8CellRangeAddressFixed(substr($recordData, 27 + 8 * $i, 8)); } catch (PHPExcel_Exception $e) { return; } $cellRanges[] = $cellRange; $offset += 8; } goto zgDqC; fkGiZ: $offset += 4; goto xCNZW; KjuIr: $offset += 4; goto hl9LN; LoCXC: $offset += 6; goto OD5DM; OD5DM: $cellRanges = array(); goto k2vwK; zgDqC: $rgbFeat = substr($recordData, $offset); goto fkGiZ; i3A1J: $isf = self::getInt2d($recordData, 12); goto pZdXx; SDU6Q: $cref = self::getInt2d($recordData, 19); goto bmMRc; hl9LN: if ($cellRanges) { $this->phpSheet->protectCells(implode("\40", $cellRanges), strtoupper(dechex($wPassword)), true); } goto iIeKp; pZdXx: if ($isf != 2) { return; } goto SxKQN; bmMRc: $offset += 2; goto LoCXC; iIeKp: } goto noYyb; v_1NS: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto LmdC3; noYyb: } private function readImData() { goto nt3SF; TmJ0G: $lcb = self::getInt4d($recordData, 4); goto Rlo65; nt3SF: $length = self::getInt2d($this->data, $this->pos + 2); goto eV3Bv; NM3q_: switch ($cf) { case 0x9: goto rJ3Pg; jtXXO: break; goto XS1dh; Xzm3H: $x = 0; goto VL0jK; uRIjx: $rgbTriples = array(); goto lk4aj; Y026G: foreach ($rgbTriples as $i => $rgbTriple) { goto yxrfe; lsifu: $y = $y + floor(($x + 1) / $bcWidth); goto EvEws; s_lKz: $x = ($x + 1) % $bcWidth; goto lsifu; yxrfe: $color = imagecolorallocate($ih, $rgbTriple["\162"], $rgbTriple["\147"], $rgbTriple["\142"]); goto yZGDh; yZGDh: imagesetpixel($ih, $x, $bcHeight - 1 - $y, $color); goto s_lKz; EvEws: } goto Jzsv0; Fo59a: $drawing->setWorksheet($this->phpSheet); goto jtXXO; LdP0b: $ih = imagecreatetruecolor($bcWidth, $bcHeight); goto RDAcL; TwHA6: $rgbString = substr($iData, 12); goto uRIjx; rJ3Pg: $bcSize = self::getInt4d($iData, 0); goto K9Fqi; aofo_: $drawing->setPath($filename); goto Fo59a; tV063: $bcHeight = self::getInt2d($iData, 6); goto LdP0b; RDAcL: $bcBitCount = self::getInt2d($iData, 10); goto TwHA6; Jzsv0: $drawing = new PHPExcel_Worksheet_Drawing(); goto aofo_; K9Fqi: $bcWidth = self::getInt2d($iData, 4); goto tV063; VL0jK: $y = 0; goto Y026G; lk4aj: while (strlen($rgbString) > 0) { $rgbTriples[] = unpack("\103\142\x2f\x43\147\57\103\162", $rgbString); $rgbString = substr($rgbString, 3); } goto Xzm3H; XS1dh: case 0x2: case 0xe: default: break; } goto eJNec; aQix5: $env = self::getInt2d($recordData, 2); goto TmJ0G; NjVvj: $cf = self::getInt2d($recordData, 0); goto aQix5; Rlo65: $iData = substr($recordData, 8); goto NM3q_; eV3Bv: $splicedRecordData = $this->getSplicedRecordData(); goto K494b; K494b: $recordData = $splicedRecordData["\x72\x65\143\157\162\144\x44\x61\x74\x61"]; goto NjVvj; eJNec: } private function readContinue() { goto kO4nV; w3Ie0: $recordData = $this->readRecordData($this->data, $this->pos + 4, $length); goto s3oy6; nQp1o: if ($length < 4) { $this->pos += 4 + $length; return; } goto ikd4y; abBPs: $this->pos += 4 + $length; goto oB5K6; Gi9VF: if (in_array($splitPoint, $validSplitPoints)) { goto ZZc70; ZP4j7: $this->drawingData .= $splicedRecordData["\162\145\x63\x6f\x72\144\104\x61\x74\141"]; goto yW3ga; yW3ga: return; goto D0mto; ZZc70: $splicedRecordData = $this->getSplicedRecordData(); goto ZP4j7; D0mto: } goto abBPs; j6r3w: $splitPoint = self::getInt2d($recordData, 2); goto Gi9VF; ikd4y: $validSplitPoints = array(0xf003, 0xf004, 0xf00d); goto j6r3w; s3oy6: if ($this->drawingData == '') { $this->pos += 4 + $length; return; } goto nQp1o; kO4nV: $length = self::getInt2d($this->data, $this->pos + 2); goto w3Ie0; oB5K6: } private function getSplicedRecordData() { goto hNmb0; Xc6Ra: $i = 0; goto Iy38c; rwuEp: $splicedData = array("\162\x65\x63\157\162\x64\104\x61\x74\141" => $data, "\x73\160\x6c\151\x63\x65\x4f\x66\146\163\145\164\x73" => $spliceOffsets); goto h3CCl; h3CCl: return $splicedData; goto uxbz6; hNmb0: $data = ''; goto GksOY; Iy38c: $spliceOffsets[0] = 0; goto Bs5Un; Bs5Un: do { ++$i; $identifier = self::getInt2d($this->data, $this->pos); $length = self::getInt2d($this->data, $this->pos + 2); $data .= $this->readRecordData($this->data, $this->pos + 4, $length); $spliceOffsets[$i] = $spliceOffsets[$i - 1] + $length; $this->pos += 4 + $length; $nextIdentifier = self::getInt2d($this->data, $this->pos); } while ($nextIdentifier == self::XLS_TYPE_CONTINUE); goto rwuEp; GksOY: $spliceOffsets = array(); goto Xc6Ra; uxbz6: } private function getFormulaFromStructure($formulaStructure, $baseCell = "\101\x31") { goto lICfy; lICfy: $sz = self::getInt2d($formulaStructure, 0); goto HzgU2; s7AlS: if (strlen($formulaStructure) > 2 + $sz) { $additionalData = substr($formulaStructure, 2 + $sz); } else { $additionalData = ''; } goto Ftq67; HzgU2: $formulaData = substr($formulaStructure, 2, $sz); goto s7AlS; Ftq67: return $this->getFormulaFromData($formulaData, $additionalData, $baseCell); goto a_Zqr; a_Zqr: } private function getFormulaFromData($formulaData, $additionalData = '', $baseCell = "\x41\x31") { goto E6V_P; sSWxy: return $formulaString; goto NByKE; E6V_P: $tokens = array(); goto lQdCm; lQdCm: while (strlen($formulaData) > 0 and $token = $this->getNextToken($formulaData, $baseCell)) { $tokens[] = $token; $formulaData = substr($formulaData, $token["\x73\151\x7a\x65"]); } goto k9eGC; k9eGC: $formulaString = $this->createFormulaFromTokens($tokens, $additionalData); goto sSWxy; NByKE: } private function createFormulaFromTokens($tokens, $additionalData) { goto z1G_q; z1G_q: if (empty($tokens)) { return ''; } goto IxSLv; embFW: $formulaString = $formulaStrings[0]; goto Dr2yW; IxSLv: $formulaStrings = array(); goto uDPIm; uDPIm: foreach ($tokens as $token) { goto qT1b5; GW1B8: $space4 = isset($space4) ? $space4 : ''; goto nVA3l; uwUzW: $space2 = isset($space2) ? $space2 : ''; goto ibvgF; qT1b5: $space0 = isset($space0) ? $space0 : ''; goto Xnini; Xnini: $space1 = isset($space1) ? $space1 : ''; goto uwUzW; nVA3l: $space5 = isset($space5) ? $space5 : ''; goto bbXsb; bbXsb: switch ($token["\156\141\x6d\x65"]) { case "\164\x41\144\x64": case "\164\103\157\156\143\141\164": case "\164\x44\151\166": case "\164\x45\x51": case "\x74\x47\x45": case "\164\x47\124": case "\164\111\163\145\143\164": case "\164\114\105": case "\x74\x4c\x69\163\164": case "\164\114\124": case "\x74\115\x75\154": case "\164\x4e\105": case "\x74\120\157\x77\x65\x72": case "\x74\x52\x61\x6e\147\x65": case "\x74\x53\165\142": goto CUpOw; eJZtU: $op1 = array_pop($formulaStrings); goto mBk4q; mBk4q: $formulaStrings[] = "{$op1}{$space1}{$space0}{$token["\144\141\x74\x61"]}{$op2}"; goto jbg0f; CUpOw: $op2 = array_pop($formulaStrings); goto eJZtU; KBAPE: break; goto LWAmX; jbg0f: unset($space0, $space1); goto KBAPE; LWAmX: case "\x74\125\160\x6c\x75\x73": case "\164\x55\x6d\151\x6e\165\x73": goto wL86_; Y34oQ: $formulaStrings[] = "{$space1}{$space0}{$token["\144\141\x74\x61"]}{$op}"; goto xhKs0; hrhkx: break; goto h2S2M; wL86_: $op = array_pop($formulaStrings); goto Y34oQ; xhKs0: unset($space0, $space1); goto hrhkx; h2S2M: case "\x74\120\145\162\x63\145\x6e\164": goto mwQu9; rhPxX: break; goto UJUNL; mwQu9: $op = array_pop($formulaStrings); goto x_h5f; kiQE0: unset($space0, $space1); goto rhPxX; x_h5f: $formulaStrings[] = "{$op}{$space1}{$space0}{$token["\144\141\164\x61"]}"; goto kiQE0; UJUNL: case "\x74\101\x74\164\x72\126\157\154\141\x74\x69\154\x65": case "\x74\101\x74\164\162\x49\x66": case "\164\101\x74\x74\162\123\x6b\151\x70": case "\164\101\x74\x74\162\x43\150\157\157\x73\145": break; case "\x74\x41\164\x74\x72\x53\x70\141\x63\145": switch ($token["\x64\x61\164\x61"]["\x73\x70\141\143\145\164\x79\160\x65"]) { case "\164\171\x70\x65\60": $space0 = str_repeat("\x20", $token["\x64\x61\164\141"]["\163\x70\141\x63\145\x63\157\x75\x6e\x74"]); break; case "\164\x79\160\x65\61": $space1 = str_repeat("\xa", $token["\144\141\164\141"]["\x73\160\141\143\x65\x63\157\x75\156\164"]); break; case "\x74\171\x70\x65\x32": $space2 = str_repeat("\40", $token["\144\x61\x74\141"]["\x73\x70\x61\x63\x65\x63\157\x75\156\x74"]); break; case "\x74\171\x70\145\63": $space3 = str_repeat("\xa", $token["\x64\x61\x74\x61"]["\163\160\x61\x63\145\143\x6f\x75\x6e\164"]); break; case "\164\171\x70\145\x34": $space4 = str_repeat("\40", $token["\144\x61\x74\141"]["\x73\160\141\x63\145\143\x6f\165\x6e\x74"]); break; case "\164\171\160\145\x35": $space5 = str_repeat("\12", $token["\144\x61\164\x61"]["\x73\x70\x61\x63\x65\143\x6f\x75\x6e\x74"]); break; } break; case "\x74\101\164\x74\x72\123\165\155": goto mfVE_; ywA9G: break; goto hYd3I; TKIE8: $formulaStrings[] = "{$space1}{$space0}\123\125\x4d\50{$op}\51"; goto xAfSW; mfVE_: $op = array_pop($formulaStrings); goto TKIE8; xAfSW: unset($space0, $space1); goto ywA9G; hYd3I: case "\164\x46\x75\x6e\x63": case "\x74\106\165\156\x63\126": if ($token["\144\141\x74\x61"]["\146\x75\x6e\143\164\x69\x6f\156"] != '') { goto jqHkw; JMOmH: for ($i = 0; $i < $token["\x64\141\164\141"]["\141\162\147\x73"]; ++$i) { $ops[] = array_pop($formulaStrings); } goto aS9ef; Y4WH3: unset($space0, $space1); goto slriU; jqHkw: $ops = array(); goto JMOmH; aS9ef: $ops = array_reverse($ops); goto AeMiF; AeMiF: $formulaStrings[] = "{$space1}{$space0}{$token["\x64\x61\x74\x61"]["\x66\165\156\x63\164\151\157\x6e"]}\50" . implode("\x2c", $ops) . "\x29"; goto Y4WH3; slriU: } else { goto Jv8KG; yF11m: $function = array_pop($formulaStrings); goto EHAfQ; EHAfQ: $formulaStrings[] = "{$space1}{$space0}{$function}\50" . implode("\54", $ops) . "\x29"; goto bzHDU; bzHDU: unset($space0, $space1); goto c0JXv; tAQVr: for ($i = 0; $i < $token["\x64\x61\x74\141"]["\x61\x72\147\x73"] - 1; ++$i) { $ops[] = array_pop($formulaStrings); } goto FXdsz; Jv8KG: $ops = array(); goto tAQVr; FXdsz: $ops = array_reverse($ops); goto yF11m; c0JXv: } break; case "\x74\x50\x61\162\x65\x6e": goto icmT3; g_nMy: $formulaStrings[] = "{$space3}{$space2}\50{$expression}{$space5}{$space4}\x29"; goto RjNfH; icmT3: $expression = array_pop($formulaStrings); goto g_nMy; RE3r_: break; goto grPcA; RjNfH: unset($space2, $space3, $space4, $space5); goto RE3r_; grPcA: case "\x74\x41\162\162\x61\x79": goto hXfNB; zgz0Z: $formulaStrings[] = $space1 . $space0 . $constantArray["\x76\x61\x6c\165\x65"]; goto O4S6l; tSFB9: break; goto cmk2Y; hXfNB: $constantArray = self::readBIFF8ConstantArray($additionalData); goto zgz0Z; O4S6l: $additionalData = substr($additionalData, $constantArray["\x73\151\172\145"]); goto zP5B0; zP5B0: unset($space0, $space1); goto tSFB9; cmk2Y: case "\164\115\145\x6d\x41\162\x65\x61": goto PgSPX; Iwq_9: break; goto mrMoP; KitWG: $formulaStrings[] = "{$space1}{$space0}{$token["\144\141\164\141"]}"; goto cFqdZ; PgSPX: $cellRangeAddressList = $this->readBIFF8CellRangeAddressList($additionalData); goto ikQHJ; ikQHJ: $additionalData = substr($additionalData, $cellRangeAddressList["\x73\x69\172\x65"]); goto KitWG; cFqdZ: unset($space0, $space1); goto Iwq_9; mrMoP: case "\x74\x41\162\145\141": case "\x74\102\157\157\x6c": case "\x74\105\162\162": case "\164\111\x6e\x74": case "\164\x4d\x65\x6d\105\x72\162": case "\164\115\x65\x6d\106\x75\x6e\x63": case "\x74\x4d\151\163\163\101\162\147": case "\x74\x4e\141\155\145": case "\x74\x4e\x61\155\145\130": case "\x74\116\x75\155": case "\x74\x52\145\x66": case "\x74\122\x65\146\x33\144": case "\164\101\x72\x65\141\x33\x64": case "\164\x52\x65\x66\116": case "\164\101\162\145\x61\x4e": case "\x74\x53\x74\162": goto e8oH8; fakH7: unset($space0, $space1); goto Mlv12; e8oH8: $formulaStrings[] = "{$space1}{$space0}{$token["\x64\141\164\141"]}"; goto fakH7; Mlv12: break; goto hcF8x; hcF8x: } goto qrB3h; ibvgF: $space3 = isset($space3) ? $space3 : ''; goto GW1B8; qrB3h: } goto embFW; Dr2yW: return $formulaString; goto GJfU3; GJfU3: } private function getNextToken($formulaData, $baseCell = "\101\x31") { goto EsT9C; yc1BI: return array("\x69\144" => $id, "\x6e\141\155\145" => $name, "\x73\151\172\x65" => $size, "\144\x61\x74\x61" => $data); goto P1Vdb; xR9tM: switch ($id) { case 0x3: goto vRZEA; Tg8TD: $size = 1; goto PyV5Y; HDCSE: break; goto qAYT_; PyV5Y: $data = "\53"; goto HDCSE; vRZEA: $name = "\164\101\144\144"; goto Tg8TD; qAYT_: case 0x4: goto YqjDv; uJNfW: break; goto fTO8n; e3Rxr: $data = "\55"; goto uJNfW; SpzeA: $size = 1; goto e3Rxr; YqjDv: $name = "\164\x53\x75\142"; goto SpzeA; fTO8n: case 0x5: goto KHNqs; rPzFQ: $data = "\x2a"; goto VDmm7; gdYKH: $size = 1; goto rPzFQ; KHNqs: $name = "\x74\x4d\x75\154"; goto gdYKH; VDmm7: break; goto SgXQ1; SgXQ1: case 0x6: goto IlnrV; tP3WE: $data = "\x2f"; goto yu5W3; d13N4: $size = 1; goto tP3WE; yu5W3: break; goto GDcPG; IlnrV: $name = "\164\104\151\166"; goto d13N4; GDcPG: case 0x7: goto AIc0X; FJ3nS: break; goto mlCaP; VX6p2: $size = 1; goto cG2ZB; cG2ZB: $data = "\136"; goto FJ3nS; AIc0X: $name = "\164\x50\157\x77\145\x72"; goto VX6p2; mlCaP: case 0x8: goto sXKBO; t3O33: $data = "\46"; goto hoUSJ; sXKBO: $name = "\x74\x43\x6f\156\143\x61\x74"; goto HhgY2; HhgY2: $size = 1; goto t3O33; hoUSJ: break; goto temBg; temBg: case 0x9: goto EdG2d; ux4YZ: $data = "\74"; goto DSB_O; H9SCw: $size = 1; goto ux4YZ; EdG2d: $name = "\164\x4c\124"; goto H9SCw; DSB_O: break; goto UB6Zv; UB6Zv: case 0xa: goto ze_JP; n1NFn: break; goto J2v6e; RmgM4: $size = 1; goto PRhE2; ze_JP: $name = "\164\114\105"; goto RmgM4; PRhE2: $data = "\x3c\x3d"; goto n1NFn; J2v6e: case 0xb: goto DigzR; sLDWY: $data = "\x3d"; goto TLzcJ; DigzR: $name = "\164\x45\121"; goto e_r3g; TLzcJ: break; goto dAmdr; e_r3g: $size = 1; goto sLDWY; dAmdr: case 0xc: goto pnFMZ; zOEbE: break; goto t7yds; pnFMZ: $name = "\x74\107\105"; goto zSJSm; zSJSm: $size = 1; goto a0yqr; a0yqr: $data = "\76\75"; goto zOEbE; t7yds: case 0xd: goto ExRu2; nT23t: break; goto jlA1n; ExRu2: $name = "\x74\x47\124"; goto zgaXh; vf769: $data = "\x3e"; goto nT23t; zgaXh: $size = 1; goto vf769; jlA1n: case 0xe: goto c8qxm; TMHUs: $data = "\74\76"; goto m5jLQ; L_WLr: $size = 1; goto TMHUs; c8qxm: $name = "\x74\x4e\105"; goto L_WLr; m5jLQ: break; goto sSsa5; sSsa5: case 0xf: goto AVClM; GTmez: break; goto g163H; WHHPG: $size = 1; goto wh05B; AVClM: $name = "\x74\111\163\x65\143\164"; goto WHHPG; wh05B: $data = "\40"; goto GTmez; g163H: case 0x10: goto q_7CQ; I7fYv: $size = 1; goto rrGij; rrGij: $data = "\54"; goto pEZ71; pEZ71: break; goto e6UpA; q_7CQ: $name = "\x74\114\x69\163\x74"; goto I7fYv; e6UpA: case 0x11: goto JqTAV; SVWYo: $size = 1; goto HJiur; JqTAV: $name = "\x74\122\x61\156\x67\145"; goto SVWYo; fBQDU: break; goto FuPIo; HJiur: $data = "\72"; goto fBQDU; FuPIo: case 0x12: goto D9Trj; jiX6q: $data = "\53"; goto cSy86; cSy86: break; goto FtLtu; RPukV: $size = 1; goto jiX6q; D9Trj: $name = "\164\125\x70\x6c\x75\163"; goto RPukV; FtLtu: case 0x13: goto MeF9w; MeF9w: $name = "\x74\125\x6d\151\156\165\x73"; goto DA63k; DA63k: $size = 1; goto xm0Hd; xm0Hd: $data = "\55"; goto KGLIr; KGLIr: break; goto Ty1W0; Ty1W0: case 0x14: goto e4hNb; Ufte6: $size = 1; goto PYyGj; PYyGj: $data = "\x25"; goto DZTG2; DZTG2: break; goto l9tsN; e4hNb: $name = "\164\x50\145\162\x63\145\156\164"; goto Ufte6; l9tsN: case 0x15: goto cbwRw; uJdRP: $size = 1; goto KBT2o; KBT2o: $data = null; goto tnutZ; cbwRw: $name = "\164\120\x61\162\145\x6e"; goto uJdRP; tnutZ: break; goto LZFIJ; LZFIJ: case 0x16: goto r8ATj; ONS9f: break; goto qmhZj; r8ATj: $name = "\x74\115\x69\x73\163\x41\x72\x67"; goto UyHk6; n15_o: $data = ''; goto ONS9f; UyHk6: $size = 1; goto n15_o; qmhZj: case 0x17: goto oOmSJ; QKkQ1: $size = 1 + $string["\163\x69\x7a\145"]; goto VCXJ0; vduHi: break; goto X4UWO; oOmSJ: $name = "\164\123\x74\162"; goto bymnv; bymnv: $string = self::readUnicodeStringShort(substr($formulaData, 1)); goto QKkQ1; VCXJ0: $data = self::UTF8toExcelDoubleQuoted($string["\166\x61\x6c\165\145"]); goto vduHi; X4UWO: case 0x19: switch (ord($formulaData[1])) { case 0x1: goto Y0nRt; q6N8m: $data = null; goto hppGj; Y0nRt: $name = "\x74\x41\x74\164\162\x56\157\x6c\141\164\151\154\x65"; goto zngX7; zngX7: $size = 4; goto q6N8m; hppGj: break; goto uYWux; uYWux: case 0x2: goto Kp7oQ; Kp7oQ: $name = "\164\101\164\x74\162\111\146"; goto bwbvj; GGIYC: break; goto uFimk; i8u2f: $data = null; goto GGIYC; bwbvj: $size = 4; goto i8u2f; uFimk: case 0x4: goto S84yP; S84yP: $name = "\x74\x41\x74\x74\162\103\150\x6f\157\163\x65"; goto EWDui; mY8Si: break; goto nQb8Q; Vf57I: $size = 2 * $nc + 6; goto rNyu2; EWDui: $nc = self::getInt2d($formulaData, 2); goto Vf57I; rNyu2: $data = null; goto mY8Si; nQb8Q: case 0x8: goto T2fMN; qSZgN: $size = 4; goto lCI50; lCI50: $data = null; goto MDLp3; T2fMN: $name = "\164\x41\x74\x74\x72\x53\x6b\x69\x70"; goto qSZgN; MDLp3: break; goto maGch; maGch: case 0x10: goto wnUVf; EGI5h: break; goto TJz9A; wnUVf: $name = "\164\101\164\x74\162\123\165\x6d"; goto CZEeH; McR6K: $data = null; goto EGI5h; CZEeH: $size = 4; goto McR6K; TJz9A: case 0x40: case 0x41: goto fwli6; fwli6: $name = "\x74\x41\x74\x74\x72\123\x70\x61\x63\x65"; goto C3579; IKYMo: switch (ord($formulaData[2])) { case 0x0: $spacetype = "\164\x79\x70\x65\x30"; break; case 0x1: $spacetype = "\164\x79\x70\x65\x31"; break; case 0x2: $spacetype = "\x74\x79\160\145\x32"; break; case 0x3: $spacetype = "\164\x79\x70\145\63"; break; case 0x4: $spacetype = "\x74\x79\160\145\x34"; break; case 0x5: $spacetype = "\164\171\160\x65\65"; break; default: throw new PHPExcel_Reader_Exception("\x55\x6e\x72\x65\143\x6f\x67\156\151\x7a\x65\144\x20\x73\x70\141\143\x65\40\164\x79\x70\145\x20\151\156\x20\x74\x41\164\x74\162\123\160\141\x63\145\x20\x74\157\x6b\x65\156"); break; } goto NKGpd; L_n_2: break; goto Bu0Sk; XYApa: $data = array("\x73\x70\x61\143\x65\x74\x79\160\145" => $spacetype, "\x73\x70\141\143\x65\x63\157\165\156\164" => $spacecount); goto L_n_2; C3579: $size = 4; goto IKYMo; NKGpd: $spacecount = ord($formulaData[3]); goto XYApa; Bu0Sk: default: throw new PHPExcel_Reader_Exception("\125\156\162\x65\143\157\147\x6e\151\x7a\x65\144\x20\141\x74\164\162\x69\142\165\x74\145\40\x66\x6c\x61\x67\40\x69\x6e\x20\164\101\164\x74\162\x20\x74\x6f\153\145\x6e"); break; } break; case 0x1c: goto QpVks; QpVks: $name = "\x74\x45\x72\x72"; goto YhT3Y; YhT3Y: $size = 2; goto l_mgA; mfDo4: break; goto culqq; l_mgA: $data = PHPExcel_Reader_Excel5_ErrorCode::lookup(ord($formulaData[1])); goto mfDo4; culqq: case 0x1d: goto lJU7x; Mvw1R: $data = ord($formulaData[1]) ? "\x54\x52\x55\105" : "\106\101\x4c\x53\105"; goto ZL43R; lJU7x: $name = "\x74\x42\157\x6f\154"; goto oVpl6; ZL43R: break; goto vyvn3; oVpl6: $size = 2; goto Mvw1R; vyvn3: case 0x1e: goto N5Ghb; xU1_y: break; goto q9rkX; cjQHJ: $size = 3; goto sQwsd; sQwsd: $data = self::getInt2d($formulaData, 1); goto xU1_y; N5Ghb: $name = "\x74\x49\156\164"; goto cjQHJ; q9rkX: case 0x1f: goto JlLnn; UlgkD: $size = 9; goto sKWq8; i8UWJ: break; goto WM4v7; Z45zT: $data = str_replace("\x2c", "\x2e", (string) $data); goto i8UWJ; sKWq8: $data = self::extractNumber(substr($formulaData, 1)); goto Z45zT; JlLnn: $name = "\164\x4e\165\x6d"; goto UlgkD; WM4v7: case 0x20: case 0x40: case 0x60: goto X0zr0; PlPyg: $size = 8; goto m5eBu; X0zr0: $name = "\164\x41\162\x72\x61\171"; goto PlPyg; rhEbB: break; goto na2ql; m5eBu: $data = null; goto rhEbB; na2ql: case 0x21: case 0x41: case 0x61: goto breHP; lF1D_: switch (self::getInt2d($formulaData, 1)) { case 2: goto SgziH; v690X: break; goto NxbqK; SgziH: $function = "\x49\123\x4e\101"; goto Awh4x; Awh4x: $args = 1; goto v690X; NxbqK: case 3: goto s0z2P; ZxQI1: break; goto b0Mng; A6eMH: $args = 1; goto ZxQI1; s0z2P: $function = "\x49\x53\x45\122\122\117\122"; goto A6eMH; b0Mng: case 10: goto tYLbn; W2DRz: break; goto di0gu; upKwL: $args = 0; goto W2DRz; tYLbn: $function = "\116\101"; goto upKwL; di0gu: case 15: goto awSRV; a1wml: break; goto vLkBL; DHrHY: $args = 1; goto a1wml; awSRV: $function = "\x53\111\116"; goto DHrHY; vLkBL: case 16: goto pJIee; WLrRK: break; goto UCiuP; SfJw4: $args = 1; goto WLrRK; pJIee: $function = "\x43\x4f\x53"; goto SfJw4; UCiuP: case 17: goto f35iG; jc7Dw: $args = 1; goto TAefF; f35iG: $function = "\124\x41\116"; goto jc7Dw; TAefF: break; goto vQbJj; vQbJj: case 18: goto DY03A; DY03A: $function = "\x41\124\101\x4e"; goto mWhME; LCdc7: break; goto CRmV4; mWhME: $args = 1; goto LCdc7; CRmV4: case 19: goto GIanp; yxsSv: break; goto kdi1l; AsDBp: $args = 0; goto yxsSv; GIanp: $function = "\120\111"; goto AsDBp; kdi1l: case 20: goto MgleD; MgleD: $function = "\x53\x51\x52\124"; goto Kneqb; OXtsj: break; goto UUeF2; Kneqb: $args = 1; goto OXtsj; UUeF2: case 21: goto nhWjd; kz2Py: $args = 1; goto DUWS4; nhWjd: $function = "\x45\x58\x50"; goto kz2Py; DUWS4: break; goto m251w; m251w: case 22: goto rdqWq; PEB_I: $args = 1; goto DdgHv; rdqWq: $function = "\x4c\x4e"; goto PEB_I; DdgHv: break; goto Oofpm; Oofpm: case 23: goto RewGY; RewGY: $function = "\x4c\x4f\107\61\60"; goto bZh6y; gitA5: break; goto az2ZU; bZh6y: $args = 1; goto gitA5; az2ZU: case 24: goto koZA4; koZA4: $function = "\x41\x42\x53"; goto k_9xe; k_9xe: $args = 1; goto T35Oh; T35Oh: break; goto HgagM; HgagM: case 25: goto pvChI; SyBfV: break; goto Ot3U1; mYDOk: $args = 1; goto SyBfV; pvChI: $function = "\111\x4e\124"; goto mYDOk; Ot3U1: case 26: goto AlYkj; H2Wta: $args = 1; goto Ee_37; Ee_37: break; goto IwGiR; AlYkj: $function = "\123\111\107\116"; goto H2Wta; IwGiR: case 27: goto xYpSc; xYpSc: $function = "\122\x4f\x55\x4e\x44"; goto zCBmJ; ObIcZ: break; goto vblIb; zCBmJ: $args = 2; goto ObIcZ; vblIb: case 30: goto ooKS1; b7Mgw: $args = 2; goto IfPLh; ooKS1: $function = "\122\x45\120\124"; goto b7Mgw; IfPLh: break; goto DP9Na; DP9Na: case 31: goto rCB5Z; X_Sg7: $args = 3; goto MEdWR; rCB5Z: $function = "\115\111\104"; goto X_Sg7; MEdWR: break; goto HL2ul; HL2ul: case 32: goto tlooI; C1tB_: break; goto dnYo2; PAoq3: $args = 1; goto C1tB_; tlooI: $function = "\x4c\105\116"; goto PAoq3; dnYo2: case 33: goto NZ78Y; NZ78Y: $function = "\x56\101\114\125\x45"; goto rrSvu; rrSvu: $args = 1; goto lvtNQ; lvtNQ: break; goto aXWI7; aXWI7: case 34: goto JYz0R; JYz0R: $function = "\x54\x52\125\105"; goto Bf6S6; Bf6S6: $args = 0; goto ePXqj; ePXqj: break; goto AnI52; AnI52: case 35: goto NeRw2; oBqxJ: break; goto H3mL6; NeRw2: $function = "\106\x41\x4c\x53\105"; goto HuTbP; HuTbP: $args = 0; goto oBqxJ; H3mL6: case 38: goto RRTN4; RRTN4: $function = "\116\x4f\x54"; goto vaN07; vaN07: $args = 1; goto j8nt0; j8nt0: break; goto HCfiM; HCfiM: case 39: goto NGRem; QxIWK: $args = 2; goto LKUt3; NGRem: $function = "\115\x4f\104"; goto QxIWK; LKUt3: break; goto rJXpo; rJXpo: case 40: goto llj3Q; llj3Q: $function = "\x44\103\x4f\x55\116\124"; goto jSH7n; DhnyK: break; goto CVvQj; jSH7n: $args = 3; goto DhnyK; CVvQj: case 41: goto Pn595; Pn595: $function = "\104\x53\x55\115"; goto s9AEO; s9AEO: $args = 3; goto G2hSe; G2hSe: break; goto g3FkG; g3FkG: case 42: goto zmqx5; zmqx5: $function = "\x44\x41\x56\x45\x52\x41\x47\105"; goto bf0c7; MH5TB: break; goto xfCal; bf0c7: $args = 3; goto MH5TB; xfCal: case 43: goto TIxB6; rgRSl: break; goto nVsLi; TIxB6: $function = "\x44\115\x49\x4e"; goto Kyviq; Kyviq: $args = 3; goto rgRSl; nVsLi: case 44: goto C8gVc; HBcWo: $args = 3; goto Cp6_5; Cp6_5: break; goto XUH7f; C8gVc: $function = "\x44\x4d\101\x58"; goto HBcWo; XUH7f: case 45: goto ixDvQ; n0xmi: $args = 3; goto vVRt8; ixDvQ: $function = "\104\x53\124\104\105\x56"; goto n0xmi; vVRt8: break; goto FPikj; FPikj: case 48: goto XPqDq; DQweR: $args = 2; goto JAlcv; XPqDq: $function = "\124\x45\130\x54"; goto DQweR; JAlcv: break; goto hgPN4; hgPN4: case 61: goto MHqDi; MHqDi: $function = "\115\111\x52\122"; goto Az2dn; Az2dn: $args = 3; goto stJsj; stJsj: break; goto KwIdW; KwIdW: case 63: goto jGCZQ; JHS4x: $args = 0; goto SA3qk; SA3qk: break; goto KtEA4; jGCZQ: $function = "\122\x41\x4e\x44"; goto JHS4x; KtEA4: case 65: goto ztcJE; R097i: break; goto e9ljI; LGWRl: $args = 3; goto R097i; ztcJE: $function = "\x44\x41\124\x45"; goto LGWRl; e9ljI: case 66: goto XtI9c; XtI9c: $function = "\124\111\115\x45"; goto Z_007; owtHH: break; goto SRyP5; Z_007: $args = 3; goto owtHH; SRyP5: case 67: goto uk_Mi; XbFhG: break; goto eGhAQ; uk_Mi: $function = "\x44\101\131"; goto mi_I7; mi_I7: $args = 1; goto XbFhG; eGhAQ: case 68: goto N_QMh; jmlPM: $args = 1; goto vl9N9; N_QMh: $function = "\x4d\117\x4e\124\110"; goto jmlPM; vl9N9: break; goto hcPqU; hcPqU: case 69: goto xrgdD; xrgdD: $function = "\131\105\x41\122"; goto SID4z; GiLB2: break; goto T2rJJ; SID4z: $args = 1; goto GiLB2; T2rJJ: case 71: goto CDQLg; CDQLg: $function = "\110\117\x55\122"; goto SSz1Q; uuzpl: break; goto paWj7; SSz1Q: $args = 1; goto uuzpl; paWj7: case 72: goto xEOEy; A5Xg9: break; goto JIL7B; xEOEy: $function = "\115\111\116\125\x54\x45"; goto Wcdm5; Wcdm5: $args = 1; goto A5Xg9; JIL7B: case 73: goto Wwz0o; Wwz0o: $function = "\123\x45\103\117\116\104"; goto agBPo; agBPo: $args = 1; goto zFOk_; zFOk_: break; goto iaSNw; iaSNw: case 74: goto gyB38; fa0VW: break; goto YKySj; vYCOY: $args = 0; goto fa0VW; gyB38: $function = "\x4e\117\x57"; goto vYCOY; YKySj: case 75: goto bZv0T; bZv0T: $function = "\x41\x52\x45\x41\123"; goto rtMD1; rtMD1: $args = 1; goto LV4q6; LV4q6: break; goto zDS4v; zDS4v: case 76: goto cXATe; cXATe: $function = "\122\x4f\127\123"; goto UGF5S; ddloJ: break; goto zTn06; UGF5S: $args = 1; goto ddloJ; zTn06: case 77: goto dyhst; e3w7R: $args = 1; goto hbLgL; hbLgL: break; goto lX3sS; dyhst: $function = "\103\117\x4c\125\x4d\x4e\x53"; goto e3w7R; lX3sS: case 83: goto sfHza; V7SUf: break; goto xhmxR; sfHza: $function = "\124\122\x41\116\x53\120\117\x53\105"; goto qRRtc; qRRtc: $args = 1; goto V7SUf; xhmxR: case 86: goto TrNLH; Ftp6z: $args = 1; goto se9hM; TrNLH: $function = "\124\x59\x50\105"; goto Ftp6z; se9hM: break; goto C0f75; C0f75: case 97: goto IZ9S0; sb5c4: $args = 2; goto dYwOp; dYwOp: break; goto t2M52; IZ9S0: $function = "\x41\x54\x41\116\x32"; goto sb5c4; t2M52: case 98: goto vZc5V; qWjs0: $args = 1; goto rtrIf; vZc5V: $function = "\x41\x53\x49\x4e"; goto qWjs0; rtrIf: break; goto UAgD6; UAgD6: case 99: goto mwb29; U11Cs: $args = 1; goto CJAzu; mwb29: $function = "\x41\103\117\123"; goto U11Cs; CJAzu: break; goto uwVSY; uwVSY: case 105: goto mPGB0; mPGB0: $function = "\x49\123\122\105\106"; goto Cg7DD; Cg7DD: $args = 1; goto ze25N; ze25N: break; goto SqdVo; SqdVo: case 111: goto JkIvd; JkIvd: $function = "\103\110\101\x52"; goto n_RRE; n_RRE: $args = 1; goto dKbMl; dKbMl: break; goto o5Yio; o5Yio: case 112: goto Oc1Fo; kOkdI: $args = 1; goto Szwj8; Oc1Fo: $function = "\114\x4f\x57\105\122"; goto kOkdI; Szwj8: break; goto Ww83l; Ww83l: case 113: goto Qs4VD; Qs4VD: $function = "\x55\120\120\x45\122"; goto bNiaa; bNiaa: $args = 1; goto hSRDI; hSRDI: break; goto houH7; houH7: case 114: goto Hh7rS; HGbVm: break; goto I4b1n; o8MNQ: $args = 1; goto HGbVm; Hh7rS: $function = "\120\122\x4f\x50\105\122"; goto o8MNQ; I4b1n: case 117: goto XVbaS; Pqsuu: break; goto KIpY1; fnGob: $args = 2; goto Pqsuu; XVbaS: $function = "\105\x58\x41\103\124"; goto fnGob; KIpY1: case 118: goto dKaJX; dKaJX: $function = "\124\122\x49\x4d"; goto x22SA; tOoly: break; goto RcDTG; x22SA: $args = 1; goto tOoly; RcDTG: case 119: goto CkxTh; cgMJq: break; goto QfsWL; njNi5: $args = 4; goto cgMJq; CkxTh: $function = "\122\105\120\x4c\x41\103\x45"; goto njNi5; QfsWL: case 121: goto gXYva; dp_06: $args = 1; goto FfysG; FfysG: break; goto RwAm7; gXYva: $function = "\x43\x4f\104\x45"; goto dp_06; RwAm7: case 126: goto fkj6F; fkj6F: $function = "\x49\x53\105\122\x52"; goto urhgO; kDIHf: break; goto ZPcUO; urhgO: $args = 1; goto kDIHf; ZPcUO: case 127: goto XoPDM; I0RLl: $args = 1; goto DMrrx; DMrrx: break; goto zH5x3; XoPDM: $function = "\111\123\124\x45\x58\124"; goto I0RLl; zH5x3: case 128: goto QUlGP; QUlGP: $function = "\x49\x53\x4e\125\x4d\x42\x45\x52"; goto E2hoC; rrfT0: break; goto znwYl; E2hoC: $args = 1; goto rrfT0; znwYl: case 129: goto qW0aX; rSWuv: break; goto Bout1; apkwH: $args = 1; goto rSWuv; qW0aX: $function = "\x49\x53\x42\114\x41\x4e\x4b"; goto apkwH; Bout1: case 130: goto Qz4Uk; m2F8l: break; goto q3FSM; a6Arv: $args = 1; goto m2F8l; Qz4Uk: $function = "\x54"; goto a6Arv; q3FSM: case 131: goto AcSCf; AcSCf: $function = "\116"; goto EUYbk; EUYbk: $args = 1; goto bOvV1; bOvV1: break; goto BacB3; BacB3: case 140: goto Tz5Kv; Tz5Kv: $function = "\104\101\124\x45\126\x41\114\x55\105"; goto Z1HLE; Z1HLE: $args = 1; goto o1YfD; o1YfD: break; goto n44u4; n44u4: case 141: goto Ip4ef; LTMnZ: $args = 1; goto bx2U5; bx2U5: break; goto H_xq3; Ip4ef: $function = "\x54\111\x4d\105\126\x41\x4c\x55\x45"; goto LTMnZ; H_xq3: case 142: goto WQX8l; WQX8l: $function = "\123\x4c\x4e"; goto MPAM7; JfwT7: break; goto Bs0gZ; MPAM7: $args = 3; goto JfwT7; Bs0gZ: case 143: goto Ldz12; Ldz12: $function = "\123\131\104"; goto hHrOf; oPh1Q: break; goto d_fih; hHrOf: $args = 4; goto oPh1Q; d_fih: case 162: goto X18DI; paO91: break; goto ncN__; X18DI: $function = "\x43\114\x45\x41\116"; goto wGgL5; wGgL5: $args = 1; goto paO91; ncN__: case 163: goto Vvips; s8ZcY: break; goto qUzZH; Vvips: $function = "\x4d\x44\105\x54\105\x52\x4d"; goto iS7Nk; iS7Nk: $args = 1; goto s8ZcY; qUzZH: case 164: goto AMEzN; t5ZR8: $args = 1; goto dpYuU; AMEzN: $function = "\115\111\x4e\x56\x45\x52\123\105"; goto t5ZR8; dpYuU: break; goto oHswH; oHswH: case 165: goto oCuAE; pBSvy: $args = 2; goto tT0vP; tT0vP: break; goto nE4cT; oCuAE: $function = "\115\115\125\x4c\124"; goto pBSvy; nE4cT: case 184: goto GoURw; QJDCs: break; goto AWmN6; GoURw: $function = "\x46\101\103\x54"; goto bPQRV; bPQRV: $args = 1; goto QJDCs; AWmN6: case 189: goto HRTxL; HRTxL: $function = "\x44\120\x52\117\x44\125\103\124"; goto gDPYA; gDPYA: $args = 3; goto M7BTP; M7BTP: break; goto UhZ1o; UhZ1o: case 190: goto rJWji; rJWji: $function = "\x49\123\x4e\117\x4e\124\x45\x58\x54"; goto tIpqR; tIpqR: $args = 1; goto Oa7sm; Oa7sm: break; goto Xksrl; Xksrl: case 195: goto p312p; vQy2O: break; goto AQiPf; WRTB4: $args = 3; goto vQy2O; p312p: $function = "\x44\123\x54\x44\x45\x56\x50"; goto WRTB4; AQiPf: case 196: goto s8ePX; nBBu_: break; goto Eytul; s8ePX: $function = "\x44\126\101\122\120"; goto QGAp3; QGAp3: $args = 3; goto nBBu_; Eytul: case 198: goto kJ56X; Vz8mP: break; goto u6DaK; fQOyX: $args = 1; goto Vz8mP; kJ56X: $function = "\x49\x53\114\117\107\x49\103\x41\x4c"; goto fQOyX; u6DaK: case 199: goto yC3dd; yC3dd: $function = "\104\103\x4f\125\116\x54\x41"; goto wapg_; T08KY: break; goto L0P5P; wapg_: $args = 3; goto T08KY; L0P5P: case 207: goto cfgWO; m5qjX: $args = 4; goto QVyoi; cfgWO: $function = "\122\105\x50\x4c\101\103\x45\x42"; goto m5qjX; QVyoi: break; goto oX7P1; oX7P1: case 210: goto YZNPT; YZNPT: $function = "\115\111\x44\x42"; goto afG23; wuLbn: break; goto Yqx3_; afG23: $args = 3; goto wuLbn; Yqx3_: case 211: goto bOzbc; wvvJR: break; goto HWU_n; e_ok8: $args = 1; goto wvvJR; bOzbc: $function = "\x4c\105\x4e\x42"; goto e_ok8; HWU_n: case 212: goto X5Zia; T1NL7: break; goto R8gEn; X5Zia: $function = "\x52\117\125\x4e\104\125\x50"; goto FUI00; FUI00: $args = 2; goto T1NL7; R8gEn: case 213: goto RrLR9; KO0Yf: $args = 2; goto btwCV; btwCV: break; goto cHsb2; RrLR9: $function = "\x52\x4f\x55\116\104\x44\x4f\127\116"; goto KO0Yf; cHsb2: case 214: goto q0XCh; LwO4c: $args = 1; goto EsaVB; EsaVB: break; goto l8lWD; q0XCh: $function = "\101\x53\x43"; goto LwO4c; l8lWD: case 215: goto RSRDE; oyMVG: break; goto D3D8u; agUzg: $args = 1; goto oyMVG; RSRDE: $function = "\104\102\103\x53"; goto agUzg; D3D8u: case 221: goto xvvuQ; xvvuQ: $function = "\x54\117\x44\101\131"; goto RzF7N; RzF7N: $args = 0; goto e0xRe; e0xRe: break; goto txSqF; txSqF: case 229: goto Sfzjf; KMxS1: $args = 1; goto xycfE; Sfzjf: $function = "\x53\111\116\x48"; goto KMxS1; xycfE: break; goto rkpbN; rkpbN: case 230: goto Cz7B2; HJ0Uq: $args = 1; goto K5mHV; K5mHV: break; goto h36FR; Cz7B2: $function = "\103\117\x53\110"; goto HJ0Uq; h36FR: case 231: goto uqFcn; s0xi2: break; goto qpvz2; uqFcn: $function = "\124\101\x4e\110"; goto kHx0W; kHx0W: $args = 1; goto s0xi2; qpvz2: case 232: goto fRo6H; MU61O: $args = 1; goto FN_9O; FN_9O: break; goto g23as; fRo6H: $function = "\x41\x53\111\x4e\110"; goto MU61O; g23as: case 233: goto gMpuM; g27L3: break; goto PzyB0; Lu1WS: $args = 1; goto g27L3; gMpuM: $function = "\101\x43\x4f\123\110"; goto Lu1WS; PzyB0: case 234: goto gMgas; gMgas: $function = "\x41\x54\101\x4e\x48"; goto ASADC; ASADC: $args = 1; goto PNsjV; PNsjV: break; goto wx4Ev; wx4Ev: case 235: goto JamiM; JamiM: $function = "\x44\107\105\x54"; goto CItiZ; CItiZ: $args = 3; goto nEl8p; nEl8p: break; goto hj3_v; hj3_v: case 244: goto mhBnR; BMU2C: break; goto kT4fN; pL3CN: $args = 1; goto BMU2C; mhBnR: $function = "\111\116\106\117"; goto pL3CN; kT4fN: case 252: goto XSyS8; XSyS8: $function = "\106\x52\x45\121\125\x45\x4e\103\131"; goto p10QK; p10QK: $args = 2; goto FvnWB; FvnWB: break; goto wnP0X; wnP0X: case 261: goto MTfis; i32m1: break; goto pheuT; MTfis: $function = "\105\122\x52\117\122\56\124\131\120\105"; goto VlhlB; VlhlB: $args = 1; goto i32m1; pheuT: case 271: goto VtYfa; VtYfa: $function = "\107\101\115\x4d\101\114\116"; goto Ogq4F; Ogq4F: $args = 1; goto MjTFh; MjTFh: break; goto pcSYJ; pcSYJ: case 273: goto PNGpK; PNGpK: $function = "\102\111\x4e\x4f\x4d\104\x49\x53\124"; goto CzHwG; CzHwG: $args = 4; goto gghDL; gghDL: break; goto aDgfk; aDgfk: case 274: goto d8rQ2; ZmDE7: $args = 2; goto v3bdG; v3bdG: break; goto J56Hn; d8rQ2: $function = "\103\110\111\104\x49\x53\x54"; goto ZmDE7; J56Hn: case 275: goto woWnX; s7jgQ: $args = 2; goto EwIu2; EwIu2: break; goto Bl1Ng; woWnX: $function = "\103\110\x49\x49\116\126"; goto s7jgQ; Bl1Ng: case 276: goto klPWL; d9lGA: $args = 2; goto LR1Wj; LR1Wj: break; goto usRfe; klPWL: $function = "\x43\x4f\115\x42\111\x4e"; goto d9lGA; usRfe: case 277: goto TJ8fE; q0n6Z: $args = 3; goto LKL0n; TJ8fE: $function = "\x43\x4f\x4e\x46\x49\x44\105\116\103\105"; goto q0n6Z; LKL0n: break; goto qCjiH; qCjiH: case 278: goto xq3Uy; C24eR: $args = 3; goto l_tqq; l_tqq: break; goto E2R4b; xq3Uy: $function = "\103\x52\x49\124\102\111\116\x4f\115"; goto C24eR; E2R4b: case 279: goto adunV; kIToq: $args = 1; goto GL00L; adunV: $function = "\105\126\x45\x4e"; goto kIToq; GL00L: break; goto IoTMS; IoTMS: case 280: goto lOhXI; JQzor: $args = 3; goto FDb7y; lOhXI: $function = "\105\x58\120\117\x4e\x44\111\123\x54"; goto JQzor; FDb7y: break; goto Nq7VR; Nq7VR: case 281: goto V3Tee; ydXDx: break; goto G9NY2; V3Tee: $function = "\x46\104\111\123\124"; goto FFN4J; FFN4J: $args = 3; goto ydXDx; G9NY2: case 282: goto pfOz_; Gg5gP: $args = 3; goto RZIFj; RZIFj: break; goto bxLte; pfOz_: $function = "\x46\x49\116\126"; goto Gg5gP; bxLte: case 283: goto E9GKv; E9GKv: $function = "\x46\111\123\x48\105\122"; goto zRAh3; zRAh3: $args = 1; goto qtLsz; qtLsz: break; goto pCefG; pCefG: case 284: goto y2EJb; dWRVm: $args = 1; goto A5HNh; y2EJb: $function = "\106\x49\x53\x48\105\x52\x49\x4e\x56"; goto dWRVm; A5HNh: break; goto m2dXJ; m2dXJ: case 285: goto WPnRL; PDJH1: $args = 2; goto ucSqu; WPnRL: $function = "\106\x4c\117\117\x52"; goto PDJH1; ucSqu: break; goto nlv01; nlv01: case 286: goto qU2ch; Sl6kw: break; goto QRQNS; VBthe: $args = 4; goto Sl6kw; qU2ch: $function = "\x47\x41\115\115\x41\x44\111\x53\124"; goto VBthe; QRQNS: case 287: goto hFahq; hFahq: $function = "\107\101\x4d\115\x41\111\x4e\x56"; goto l25HL; l25HL: $args = 3; goto jyUx1; jyUx1: break; goto JfbZs; JfbZs: case 288: goto rK2M4; q0DOW: $args = 2; goto p48es; rK2M4: $function = "\103\x45\x49\x4c\x49\116\x47"; goto q0DOW; p48es: break; goto nUacK; nUacK: case 289: goto XrTcZ; i2i5j: break; goto jTdo8; XrTcZ: $function = "\110\x59\x50\x47\x45\117\x4d\104\111\x53\124"; goto LGXvu; LGXvu: $args = 4; goto i2i5j; jTdo8: case 290: goto L75PC; BVVZk: $args = 3; goto Jga31; Jga31: break; goto zgPIj; L75PC: $function = "\114\x4f\107\116\x4f\x52\x4d\x44\x49\x53\124"; goto BVVZk; zgPIj: case 291: goto Lfl3H; UyiNP: break; goto sl_kh; Lfl3H: $function = "\114\117\107\x49\x4e\x56"; goto FewY2; FewY2: $args = 3; goto UyiNP; sl_kh: case 292: goto xTHe4; VokPB: $args = 3; goto zpUuJ; zpUuJ: break; goto cV5iw; xTHe4: $function = "\x4e\x45\107\102\x49\116\117\x4d\x44\x49\123\124"; goto VokPB; cV5iw: case 293: goto Rzk7G; Rzk7G: $function = "\x4e\x4f\x52\115\104\x49\123\124"; goto DBuVU; DBuVU: $args = 4; goto b4WGZ; b4WGZ: break; goto VrzSL; VrzSL: case 294: goto X8ff8; cjiH1: break; goto c34t2; ZIwLl: $args = 1; goto cjiH1; X8ff8: $function = "\x4e\x4f\122\x4d\x53\104\x49\x53\124"; goto ZIwLl; c34t2: case 295: goto YyyBQ; Z7XNL: $args = 3; goto bLj6d; bLj6d: break; goto ZRwW1; YyyBQ: $function = "\116\x4f\x52\x4d\111\116\x56"; goto Z7XNL; ZRwW1: case 296: goto s1016; s1016: $function = "\x4e\x4f\122\x4d\x53\x49\x4e\x56"; goto v3fji; v3fji: $args = 1; goto uVz2y; uVz2y: break; goto j4G_q; j4G_q: case 297: goto eQwv4; xc7uR: break; goto EVFa5; c5hir: $args = 3; goto xc7uR; eQwv4: $function = "\x53\124\x41\116\104\101\x52\x44\x49\x5a\x45"; goto c5hir; EVFa5: case 298: goto tFozV; on32f: break; goto bxBcb; HxWdA: $args = 1; goto on32f; tFozV: $function = "\117\x44\x44"; goto HxWdA; bxBcb: case 299: goto DI4nU; YoUjY: $args = 2; goto ayAlr; ayAlr: break; goto PkcfM; DI4nU: $function = "\x50\105\122\x4d\125\x54"; goto YoUjY; PkcfM: case 300: goto dCfDN; dCfDN: $function = "\120\117\111\x53\x53\117\x4e"; goto GBbK0; GBbK0: $args = 3; goto KPvNX; KPvNX: break; goto vLdqN; vLdqN: case 301: goto FGut2; Mhx0t: break; goto OeKLU; gTPvd: $args = 3; goto Mhx0t; FGut2: $function = "\124\104\x49\123\x54"; goto gTPvd; OeKLU: case 302: goto y_Y24; eJKXU: $args = 4; goto yL58X; yL58X: break; goto uidDD; y_Y24: $function = "\x57\105\x49\x42\125\x4c\114"; goto eJKXU; uidDD: case 303: goto btioC; KiVNz: break; goto N4sY2; lawzl: $args = 2; goto KiVNz; btioC: $function = "\x53\125\115\x58\x4d\x59\x32"; goto lawzl; N4sY2: case 304: goto iTy6L; Ize6M: $args = 2; goto ELPBP; iTy6L: $function = "\x53\125\x4d\x58\x32\115\x59\x32"; goto Ize6M; ELPBP: break; goto DSjj5; DSjj5: case 305: goto nRQTI; nRQTI: $function = "\123\125\x4d\x58\62\x50\131\62"; goto U6bgL; U6bgL: $args = 2; goto BjEqj; BjEqj: break; goto yZvxH; yZvxH: case 306: goto Jl1kv; N1Ynk: break; goto C_EO0; QR8OK: $args = 2; goto N1Ynk; Jl1kv: $function = "\x43\x48\111\x54\105\x53\124"; goto QR8OK; C_EO0: case 307: goto Qa5gm; Vv_3d: break; goto Lb9dK; b1v9O: $args = 2; goto Vv_3d; Qa5gm: $function = "\103\x4f\x52\122\x45\x4c"; goto b1v9O; Lb9dK: case 308: goto POIp8; SgbAu: break; goto lsZID; POIp8: $function = "\103\x4f\126\x41\x52"; goto boQR_; boQR_: $args = 2; goto SgbAu; lsZID: case 309: goto yOdHf; ajcCI: $args = 3; goto MCvSJ; MCvSJ: break; goto JDLT1; yOdHf: $function = "\106\117\x52\x45\x43\101\123\124"; goto ajcCI; JDLT1: case 310: goto BB7Og; BB7Og: $function = "\x46\124\x45\x53\x54"; goto CfIyB; ab4rd: break; goto TR8rM; CfIyB: $args = 2; goto ab4rd; TR8rM: case 311: goto CSoiE; KSqUU: $args = 2; goto jRZwm; jRZwm: break; goto YHb0t; CSoiE: $function = "\x49\116\x54\x45\x52\103\105\120\124"; goto KSqUU; YHb0t: case 312: goto n4NvN; sylp_: break; goto HxjTq; jVdcf: $args = 2; goto sylp_; n4NvN: $function = "\120\x45\101\x52\x53\117\x4e"; goto jVdcf; HxjTq: case 313: goto Ny8zq; Ny8zq: $function = "\x52\123\x51"; goto iPpuO; Wv51N: break; goto a0H51; iPpuO: $args = 2; goto Wv51N; a0H51: case 314: goto CncGk; CncGk: $function = "\123\124\x45\x59\x58"; goto V2Y34; XRnh_: break; goto r2tLb; V2Y34: $args = 2; goto XRnh_; r2tLb: case 315: goto Rvuay; EAPF6: $args = 2; goto eqqTr; Rvuay: $function = "\123\x4c\117\x50\105"; goto EAPF6; eqqTr: break; goto I5frU; I5frU: case 316: goto GOem1; vpxPc: break; goto fBJkV; AoZgz: $args = 4; goto vpxPc; GOem1: $function = "\124\x54\105\123\x54"; goto AoZgz; fBJkV: case 325: goto HqikC; HyVeZ: $args = 2; goto utP2i; HqikC: $function = "\x4c\101\x52\x47\105"; goto HyVeZ; utP2i: break; goto Vxb0C; Vxb0C: case 326: goto R8BhD; Ud1cP: $args = 2; goto R63ZT; R63ZT: break; goto wP0uM; R8BhD: $function = "\x53\x4d\x41\x4c\114"; goto Ud1cP; wP0uM: case 327: goto f4UL3; ozsSL: break; goto mGZet; f4UL3: $function = "\121\x55\x41\x52\x54\x49\114\105"; goto tAxeK; tAxeK: $args = 2; goto ozsSL; mGZet: case 328: goto HnvBq; HnvBq: $function = "\x50\x45\x52\x43\105\x4e\x54\x49\x4c\105"; goto awnNL; awnNL: $args = 2; goto JYrSG; JYrSG: break; goto wdJkH; wdJkH: case 331: goto TtjJj; TtjJj: $function = "\x54\x52\x49\115\x4d\105\101\116"; goto nIfyS; Hvk9P: break; goto svuQV; nIfyS: $args = 2; goto Hvk9P; svuQV: case 332: goto FR2R4; FR2R4: $function = "\124\111\116\x56"; goto BKhP5; BKhP5: $args = 2; goto vtOKh; vtOKh: break; goto tQqAD; tQqAD: case 337: goto WPvp6; oVYkL: break; goto z_rjA; RzsY8: $args = 2; goto oVYkL; WPvp6: $function = "\x50\x4f\127\105\x52"; goto RzsY8; z_rjA: case 342: goto ReK2W; Zz8fn: break; goto acSzi; lSdBy: $args = 1; goto Zz8fn; ReK2W: $function = "\122\x41\104\x49\x41\116\123"; goto lSdBy; acSzi: case 343: goto ymRYE; PdGfF: break; goto x3Xv3; ymRYE: $function = "\104\x45\x47\122\x45\105\x53"; goto W215C; W215C: $args = 1; goto PdGfF; x3Xv3: case 346: goto FDeeF; h8P0R: $args = 2; goto ztbau; ztbau: break; goto SWblP; FDeeF: $function = "\103\117\125\x4e\124\111\106"; goto h8P0R; SWblP: case 347: goto llvL6; g_1vh: break; goto ivVp8; llvL6: $function = "\x43\x4f\x55\116\x54\x42\x4c\101\x4e\113"; goto Mt4g2; Mt4g2: $args = 1; goto g_1vh; ivVp8: case 350: goto yTuFq; wK10r: $args = 4; goto gcuz1; gcuz1: break; goto sHjE5; yTuFq: $function = "\111\x53\120\115\x54"; goto wK10r; sHjE5: case 351: goto s8WWT; nZs9m: $args = 3; goto wVwOw; s8WWT: $function = "\104\101\x54\105\104\x49\x46"; goto nZs9m; wVwOw: break; goto hwWMY; hwWMY: case 352: goto J8Lxs; ubb_8: break; goto FNukS; J8Lxs: $function = "\x44\101\x54\x45\x53\124\x52\x49\116\107"; goto WD0Xs; WD0Xs: $args = 1; goto ubb_8; FNukS: case 353: goto oz4n6; jdETz: break; goto W3J4S; s4KQX: $args = 2; goto jdETz; oz4n6: $function = "\116\x55\x4d\x42\x45\122\123\x54\122\111\x4e\107"; goto s4KQX; W3J4S: case 360: goto LXYNB; eCZA6: $args = 1; goto XhYGX; XhYGX: break; goto RPohG; LXYNB: $function = "\120\x48\x4f\116\105\124\x49\103"; goto eCZA6; RPohG: case 368: goto xeyTM; xeyTM: $function = "\x42\101\110\124\124\x45\130\x54"; goto qycI8; qycI8: $args = 1; goto AB0aJ; AB0aJ: break; goto ytqIf; ytqIf: default: throw new PHPExcel_Reader_Exception("\125\x6e\162\145\x63\x6f\x67\156\151\x7a\145\x64\x20\x66\x75\156\143\164\x69\x6f\156\40\x69\x6e\x20\x66\157\x72\x6d\165\154\141"); break; } goto koBkB; nBu7g: $size = 3; goto lF1D_; koBkB: $data = array("\x66\165\156\x63\x74\x69\x6f\x6e" => $function, "\141\x72\x67\163" => $args); goto e30KQ; e30KQ: break; goto o1y6K; breHP: $name = "\164\x46\x75\156\x63"; goto nBu7g; o1y6K: case 0x22: case 0x42: case 0x62: goto S41zV; S41zV: $name = "\164\106\x75\156\143\126"; goto tYW3D; k0LQf: $data = array("\x66\x75\156\143\x74\x69\157\156" => $function, "\141\162\x67\163" => $args); goto dOIF2; mijco: $index = self::getInt2d($formulaData, 2); goto hfiWD; dOIF2: break; goto jChSN; tYW3D: $size = 4; goto nf08M; hfiWD: switch ($index) { case 0: $function = "\x43\x4f\125\116\124"; break; case 1: $function = "\111\x46"; break; case 4: $function = "\x53\125\115"; break; case 5: $function = "\x41\x56\x45\x52\101\x47\105"; break; case 6: $function = "\115\111\116"; break; case 7: $function = "\x4d\x41\x58"; break; case 8: $function = "\x52\x4f\x57"; break; case 9: $function = "\103\x4f\x4c\125\115\x4e"; break; case 11: $function = "\116\120\x56"; break; case 12: $function = "\x53\x54\104\105\126"; break; case 13: $function = "\104\x4f\x4c\114\101\122"; break; case 14: $function = "\x46\x49\130\x45\104"; break; case 28: $function = "\114\117\117\113\125\120"; break; case 29: $function = "\111\116\104\105\130"; break; case 36: $function = "\101\116\x44"; break; case 37: $function = "\x4f\122"; break; case 46: $function = "\126\101\122"; break; case 49: $function = "\114\111\116\105\123\x54"; break; case 50: $function = "\x54\122\x45\x4e\x44"; break; case 51: $function = "\114\117\x47\105\123\124"; break; case 52: $function = "\107\x52\x4f\127\124\110"; break; case 56: $function = "\x50\126"; break; case 57: $function = "\106\126"; break; case 58: $function = "\x4e\120\x45\122"; break; case 59: $function = "\120\x4d\124"; break; case 60: $function = "\x52\101\x54\105"; break; case 62: $function = "\111\122\122"; break; case 64: $function = "\x4d\101\x54\x43\x48"; break; case 70: $function = "\127\105\x45\113\x44\x41\x59"; break; case 78: $function = "\x4f\106\x46\123\105\x54"; break; case 82: $function = "\x53\105\101\122\103\110"; break; case 100: $function = "\x43\110\x4f\x4f\123\x45"; break; case 101: $function = "\110\114\x4f\x4f\x4b\x55\x50"; break; case 102: $function = "\x56\114\117\x4f\x4b\x55\x50"; break; case 109: $function = "\114\117\x47"; break; case 115: $function = "\x4c\x45\106\124"; break; case 116: $function = "\122\111\107\x48\124"; break; case 120: $function = "\123\x55\x42\x53\x54\111\x54\125\124\x45"; break; case 124: $function = "\106\x49\x4e\104"; break; case 125: $function = "\103\105\x4c\114"; break; case 144: $function = "\104\x44\102"; break; case 148: $function = "\x49\x4e\x44\111\x52\105\x43\124"; break; case 167: $function = "\111\120\115\124"; break; case 168: $function = "\x50\120\x4d\124"; break; case 169: $function = "\x43\117\125\116\x54\101"; break; case 183: $function = "\120\x52\117\104\125\x43\124"; break; case 193: $function = "\x53\124\x44\x45\x56\120"; break; case 194: $function = "\x56\x41\122\x50"; break; case 197: $function = "\124\x52\x55\116\103"; break; case 204: $function = "\x55\123\x44\117\x4c\x4c\x41\122"; break; case 205: $function = "\x46\x49\116\x44\102"; break; case 206: $function = "\123\105\101\x52\103\x48\x42"; break; case 208: $function = "\114\105\x46\x54\102"; break; case 209: $function = "\122\x49\107\x48\x54\102"; break; case 216: $function = "\x52\x41\116\x4b"; break; case 219: $function = "\101\104\x44\122\x45\x53\x53"; break; case 220: $function = "\104\x41\131\x53\x33\x36\x30"; break; case 222: $function = "\x56\104\102"; break; case 227: $function = "\x4d\105\x44\111\101\116"; break; case 228: $function = "\123\x55\x4d\120\122\x4f\104\x55\x43\124"; break; case 247: $function = "\x44\x42"; break; case 255: $function = ''; break; case 269: $function = "\x41\x56\105\x44\x45\x56"; break; case 270: $function = "\x42\x45\x54\101\x44\x49\123\x54"; break; case 272: $function = "\102\x45\124\101\111\116\x56"; break; case 317: $function = "\x50\122\117\x42"; break; case 318: $function = "\x44\x45\126\x53\x51"; break; case 319: $function = "\x47\105\x4f\115\105\101\116"; break; case 320: $function = "\x48\101\x52\115\x45\x41\116"; break; case 321: $function = "\123\125\115\x53\x51"; break; case 322: $function = "\x4b\x55\122\124"; break; case 323: $function = "\x53\113\105\x57"; break; case 324: $function = "\x5a\x54\105\x53\x54"; break; case 329: $function = "\x50\x45\x52\103\x45\116\x54\122\x41\116\113"; break; case 330: $function = "\115\117\x44\x45"; break; case 336: $function = "\103\x4f\x4e\103\101\124\x45\x4e\x41\124\x45"; break; case 344: $function = "\123\125\102\124\117\x54\101\114"; break; case 345: $function = "\123\x55\x4d\x49\x46"; break; case 354: $function = "\122\x4f\x4d\101\x4e"; break; case 358: $function = "\107\x45\124\x50\x49\126\x4f\124\x44\101\x54\x41"; break; case 359: $function = "\x48\131\x50\x45\x52\114\111\x4e\x4b"; break; case 361: $function = "\x41\x56\x45\122\101\107\x45\x41"; break; case 362: $function = "\x4d\x41\130\101"; break; case 363: $function = "\x4d\x49\x4e\x41"; break; case 364: $function = "\x53\x54\104\x45\x56\x50\101"; break; case 365: $function = "\x56\x41\122\x50\x41"; break; case 366: $function = "\123\x54\x44\105\x56\x41"; break; case 367: $function = "\x56\101\x52\101"; break; default: throw new PHPExcel_Reader_Exception("\125\156\x72\145\x63\157\x67\156\x69\x7a\145\x64\40\146\x75\156\x63\x74\151\x6f\x6e\40\151\156\40\x66\157\x72\x6d\165\154\x61"); break; } goto k0LQf; nf08M: $args = ord($formulaData[1]); goto mijco; jChSN: case 0x23: case 0x43: case 0x63: goto OlAIG; OlAIG: $name = "\164\x4e\141\155\x65"; goto m02ux; PhoRg: $definedNameIndex = self::getInt2d($formulaData, 1) - 1; goto OFLJ2; qVgBg: break; goto q2Kdk; m02ux: $size = 5; goto PhoRg; OFLJ2: $data = $this->definedname[$definedNameIndex]["\156\x61\x6d\x65"]; goto qVgBg; q2Kdk: case 0x24: case 0x44: case 0x64: goto zi2pM; zi2pM: $name = "\164\x52\x65\146"; goto QWuui; QWuui: $size = 5; goto OVMw7; MelaY: break; goto Y4O3I; OVMw7: $data = $this->readBIFF8CellAddress(substr($formulaData, 1, 4)); goto MelaY; Y4O3I: case 0x25: case 0x45: case 0x65: goto r08v4; UUC8j: break; goto tuJAf; Bu3KN: $data = $this->readBIFF8CellRangeAddress(substr($formulaData, 1, 8)); goto UUC8j; r08v4: $name = "\x74\101\162\145\141"; goto vVLOi; vVLOi: $size = 9; goto Bu3KN; tuJAf: case 0x26: case 0x46: case 0x66: goto POWu7; hIrxU: $size = 7 + $subSize; goto NC47e; PxhQD: $subSize = self::getInt2d($formulaData, 5); goto hIrxU; NC47e: $data = $this->getFormulaFromData(substr($formulaData, 7, $subSize)); goto KKjYN; KKjYN: break; goto AZQ5G; POWu7: $name = "\x74\x4d\x65\x6d\101\162\145\x61"; goto PxhQD; AZQ5G: case 0x27: case 0x47: case 0x67: goto GKths; AZC69: $data = $this->getFormulaFromData(substr($formulaData, 7, $subSize)); goto B0CHB; GGEyA: $size = 7 + $subSize; goto AZC69; gIVOB: $subSize = self::getInt2d($formulaData, 5); goto GGEyA; B0CHB: break; goto LMApm; GKths: $name = "\x74\x4d\x65\155\105\x72\x72"; goto gIVOB; LMApm: case 0x29: case 0x49: case 0x69: goto EaH1m; ihQiN: $subSize = self::getInt2d($formulaData, 1); goto Ys3Bk; sXQEg: $data = $this->getFormulaFromData(substr($formulaData, 3, $subSize)); goto Y8YzW; EaH1m: $name = "\164\x4d\145\x6d\x46\x75\156\x63"; goto ihQiN; Ys3Bk: $size = 3 + $subSize; goto sXQEg; Y8YzW: break; goto QtHbw; QtHbw: case 0x2c: case 0x4c: case 0x6c: goto UxfWP; UxfWP: $name = "\164\122\145\x66\x4e"; goto QDWuB; W80az: $data = $this->readBIFF8CellAddressB(substr($formulaData, 1, 4), $baseCell); goto RkEJX; QDWuB: $size = 5; goto W80az; RkEJX: break; goto AuXsY; AuXsY: case 0x2d: case 0x4d: case 0x6d: goto kJyDd; QdN0r: $size = 9; goto mGQ9F; kJyDd: $name = "\164\101\x72\x65\x61\116"; goto QdN0r; mGQ9F: $data = $this->readBIFF8CellRangeAddressB(substr($formulaData, 1, 8), $baseCell); goto WVHk7; WVHk7: break; goto oGhgA; oGhgA: case 0x39: case 0x59: case 0x79: goto RDscv; JB5Td: $index = self::getInt2d($formulaData, 3); goto asm9y; RDscv: $name = "\164\x4e\x61\x6d\x65\130"; goto L7Pqs; hO4xL: break; goto wGyCr; asm9y: $data = $this->externalNames[$index - 1]["\156\141\155\145"]; goto hO4xL; L7Pqs: $size = 7; goto JB5Td; wGyCr: case 0x3a: case 0x5a: case 0x7a: goto CzhDN; ODTm2: $size = 7; goto jL6Xo; jL6Xo: try { goto YYu0E; vx1oJ: $cellAddress = $this->readBIFF8CellAddress(substr($formulaData, 3, 4)); goto RbauF; YYu0E: $sheetRange = $this->readSheetRangeByRefIndex(self::getInt2d($formulaData, 1)); goto vx1oJ; RbauF: $data = "{$sheetRange}\41{$cellAddress}"; goto pXbJa; pXbJa: } catch (PHPExcel_Exception $e) { $data = "\x23\x52\105\x46\x21"; } goto gvDd3; gvDd3: break; goto lCQ95; CzhDN: $name = "\x74\122\145\146\63\x64"; goto ODTm2; lCQ95: case 0x3b: case 0x5b: case 0x7b: goto OJkKa; wHrcI: try { goto huP_Y; s53GG: $cellRangeAddress = $this->readBIFF8CellRangeAddress(substr($formulaData, 3, 8)); goto qGRD1; huP_Y: $sheetRange = $this->readSheetRangeByRefIndex(self::getInt2d($formulaData, 1)); goto s53GG; qGRD1: $data = "{$sheetRange}\x21{$cellRangeAddress}"; goto ZOQqu; ZOQqu: } catch (PHPExcel_Exception $e) { $data = "\x23\122\x45\106\x21"; } goto y7Oki; OJkKa: $name = "\164\x41\x72\x65\141\63\144"; goto Hm0MN; Hm0MN: $size = 11; goto wHrcI; y7Oki: break; goto x9axK; x9axK: default: throw new PHPExcel_Reader_Exception("\x55\156\162\145\143\157\147\x6e\x69\172\x65\x64\40\164\157\153\145\156\x20" . sprintf("\x25\x30\62\130", $id) . "\40\x69\x6e\x20\x66\157\x72\x6d\x75\154\141"); break; } goto yc1BI; ruhd4: $name = false; goto xR9tM; EsT9C: $id = ord($formulaData[0]); goto ruhd4; P1Vdb: } private function readBIFF8CellAddress($cellAddressStructure) { goto zrBVO; j8Kf_: if (!(0x8000 & self::getInt2d($cellAddressStructure, 2))) { $row = "\44" . $row; } goto hfliR; d2dq5: $column = PHPExcel_Cell::stringFromColumnIndex(0xff & self::getInt2d($cellAddressStructure, 2)); goto Gk5Ui; zrBVO: $row = self::getInt2d($cellAddressStructure, 0) + 1; goto d2dq5; hfliR: return $column . $row; goto Cl6oZ; Gk5Ui: if (!(0x4000 & self::getInt2d($cellAddressStructure, 2))) { $column = "\44" . $column; } goto j8Kf_; Cl6oZ: } private function readBIFF8CellAddressB($cellAddressStructure, $baseCell = "\x41\x31") { goto RW92N; OC6_X: $row = self::getInt2d($cellAddressStructure, 0) + 1; goto j6bi3; rLrI8: return $column . $row; goto SVOhb; RW92N: list($baseCol, $baseRow) = PHPExcel_Cell::coordinateFromString($baseCell); goto JHLNA; JHLNA: $baseCol = PHPExcel_Cell::columnIndexFromString($baseCol) - 1; goto E5q4V; IXPgT: if (!(0x8000 & self::getInt2d($cellAddressStructure, 2))) { $row = "\x24" . $row; } else { $rowIndex = $rowIndex <= 32767 ? $rowIndex : $rowIndex - 65536; $row = $baseRow + $rowIndex; } goto rLrI8; n3blE: if (!(0x4000 & self::getInt2d($cellAddressStructure, 2))) { $column = PHPExcel_Cell::stringFromColumnIndex($colIndex); $column = "\44" . $column; } else { $colIndex = $colIndex <= 127 ? $colIndex : $colIndex - 256; $column = PHPExcel_Cell::stringFromColumnIndex($baseCol + $colIndex); } goto IXPgT; E5q4V: $rowIndex = self::getInt2d($cellAddressStructure, 0); goto OC6_X; j6bi3: $colIndex = 0xff & self::getInt2d($cellAddressStructure, 2); goto n3blE; SVOhb: } private function readBIFF5CellRangeAddressFixed($subData) { goto sE7H7; pNO1R: $fc = ord($subData[4]); goto M_Xup; sE7H7: $fr = self::getInt2d($subData, 0) + 1; goto dJPAh; ffba6: if ($fr > $lr || $fc > $lc) { throw new PHPExcel_Reader_Exception("\116\x6f\164\40\x61\40\143\145\154\x6c\40\x72\141\x6e\x67\145\40\141\144\144\162\145\x73\x73"); } goto eAJ0n; HYeVB: $lc = PHPExcel_Cell::stringFromColumnIndex($lc); goto lmTG2; eAJ0n: $fc = PHPExcel_Cell::stringFromColumnIndex($fc); goto HYeVB; dJPAh: $lr = self::getInt2d($subData, 2) + 1; goto pNO1R; LOPku: return "{$fc}{$fr}\72{$lc}{$lr}"; goto Pz5nO; M_Xup: $lc = ord($subData[5]); goto ffba6; lmTG2: if ($fr == $lr and $fc == $lc) { return "{$fc}{$fr}"; } goto LOPku; Pz5nO: } private function readBIFF8CellRangeAddressFixed($subData) { goto Q08rh; elUAd: return "{$fc}{$fr}\x3a{$lc}{$lr}"; goto SA546; ykTBW: $lc = self::getInt2d($subData, 6); goto whEg2; Q08rh: $fr = self::getInt2d($subData, 0) + 1; goto njfjp; T90Tb: $fc = PHPExcel_Cell::stringFromColumnIndex($fc); goto b6MUT; wrRb0: $fc = self::getInt2d($subData, 4); goto ykTBW; b6MUT: $lc = PHPExcel_Cell::stringFromColumnIndex($lc); goto dQbx1; njfjp: $lr = self::getInt2d($subData, 2) + 1; goto wrRb0; whEg2: if ($fr > $lr || $fc > $lc) { throw new PHPExcel_Reader_Exception("\x4e\x6f\x74\40\x61\x20\143\x65\154\154\40\162\x61\156\x67\145\40\x61\x64\144\162\x65\163\163"); } goto T90Tb; dQbx1: if ($fr == $lr and $fc == $lc) { return "{$fc}{$fr}"; } goto elUAd; SA546: } private function readBIFF8CellRangeAddress($subData) { goto ZOjaM; eFs26: return "{$fc}{$fr}\72{$lc}{$lr}"; goto vDlW1; vVSvA: if (!(0x8000 & self::getInt2d($subData, 6))) { $lr = "\44" . $lr; } goto eFs26; uGzLa: if (!(0x4000 & self::getInt2d($subData, 6))) { $lc = "\44" . $lc; } goto vVSvA; Gz7jQ: if (!(0x4000 & self::getInt2d($subData, 4))) { $fc = "\x24" . $fc; } goto m9lVr; rSq07: $lr = self::getInt2d($subData, 2) + 1; goto dU_Zq; m9lVr: if (!(0x8000 & self::getInt2d($subData, 4))) { $fr = "\44" . $fr; } goto HroED; HroED: $lc = PHPExcel_Cell::stringFromColumnIndex(0xff & self::getInt2d($subData, 6)); goto uGzLa; dU_Zq: $fc = PHPExcel_Cell::stringFromColumnIndex(0xff & self::getInt2d($subData, 4)); goto Gz7jQ; ZOjaM: $fr = self::getInt2d($subData, 0) + 1; goto rSq07; vDlW1: } private function readBIFF8CellRangeAddressB($subData, $baseCell = "\101\61") { goto dmmUE; xYcIl: $fcIndex = 0xff & self::getInt2d($subData, 4); goto pE1Qj; f3C53: if (!(0x4000 & self::getInt2d($subData, 6))) { $lc = PHPExcel_Cell::stringFromColumnIndex($lcIndex); $lc = "\44" . $lc; } else { $lcIndex = $lcIndex <= 127 ? $lcIndex : $lcIndex - 256; $lc = PHPExcel_Cell::stringFromColumnIndex($baseCol + $lcIndex); } goto vRMwZ; pE1Qj: if (!(0x4000 & self::getInt2d($subData, 4))) { $fc = PHPExcel_Cell::stringFromColumnIndex($fcIndex); $fc = "\x24" . $fc; } else { $fcIndex = $fcIndex <= 127 ? $fcIndex : $fcIndex - 256; $fc = PHPExcel_Cell::stringFromColumnIndex($baseCol + $fcIndex); } goto gBeSx; gBeSx: if (!(0x8000 & self::getInt2d($subData, 4))) { $fr = $frIndex + 1; $fr = "\44" . $fr; } else { $frIndex = $frIndex <= 32767 ? $frIndex : $frIndex - 65536; $fr = $baseRow + $frIndex; } goto XGH6e; WeYEo: $lrIndex = self::getInt2d($subData, 2); goto xYcIl; wPCZW: $frIndex = self::getInt2d($subData, 0); goto WeYEo; Wiiqp: $baseCol = PHPExcel_Cell::columnIndexFromString($baseCol) - 1; goto wPCZW; NQGcQ: return "{$fc}{$fr}\x3a{$lc}{$lr}"; goto v6OZ4; dmmUE: list($baseCol, $baseRow) = PHPExcel_Cell::coordinateFromString($baseCell); goto Wiiqp; vRMwZ: if (!(0x8000 & self::getInt2d($subData, 6))) { $lr = $lrIndex + 1; $lr = "\44" . $lr; } else { $lrIndex = $lrIndex <= 32767 ? $lrIndex : $lrIndex - 65536; $lr = $baseRow + $lrIndex; } goto NQGcQ; XGH6e: $lcIndex = 0xff & self::getInt2d($subData, 6); goto KM5sc; H3TuN: $lc = PHPExcel_Cell::stringFromColumnIndex($baseCol + $lcIndex); goto f3C53; KM5sc: $lcIndex = $lcIndex <= 127 ? $lcIndex : $lcIndex - 256; goto H3TuN; v6OZ4: } private function readBIFF8CellRangeAddressList($subData) { goto NeR1r; NeR1r: $cellRangeAddresses = array(); goto M_Qjt; ewU4Q: return array("\x73\151\x7a\145" => 2 + 8 * $nm, "\143\145\x6c\x6c\x52\x61\156\147\145\x41\x64\x64\162\x65\163\x73\145\163" => $cellRangeAddresses); goto SUkGr; E7VQd: $offset = 2; goto HVQ4k; HVQ4k: for ($i = 0; $i < $nm; ++$i) { $cellRangeAddresses[] = $this->readBIFF8CellRangeAddressFixed(substr($subData, $offset, 8)); $offset += 8; } goto ewU4Q; M_Qjt: $nm = self::getInt2d($subData, 0); goto E7VQd; SUkGr: } private function readBIFF5CellRangeAddressList($subData) { goto b9Mx4; wmyuM: $offset = 2; goto OEBi5; b9Mx4: $cellRangeAddresses = array(); goto Oq8iM; GX6gq: return array("\x73\x69\x7a\145" => 2 + 6 * $nm, "\143\x65\x6c\154\x52\141\x6e\x67\x65\101\x64\144\x72\x65\x73\163\145\163" => $cellRangeAddresses); goto frEQD; OEBi5: for ($i = 0; $i < $nm; ++$i) { $cellRangeAddresses[] = $this->readBIFF5CellRangeAddressFixed(substr($subData, $offset, 6)); $offset += 6; } goto GX6gq; Oq8iM: $nm = self::getInt2d($subData, 0); goto wmyuM; frEQD: } private function readSheetRangeByRefIndex($index) { if (isset($this->ref[$index])) { $type = $this->externalBooks[$this->ref[$index]["\x65\170\x74\145\162\x6e\141\154\x42\x6f\x6f\153\x49\x6e\x64\145\x78"]]["\x74\x79\160\x65"]; switch ($type) { case "\151\156\x74\145\162\156\141\x6c": goto C9U56; ditGq: if (preg_match("\57\x5b\x20\41\x22\100\43\xc2\243\x24\45\x26\173\x28\x29\175\x3c\x3e\x3d\x2b\47\x7c\136\54\73\55\135\x2f", $sheetRange)) { $sheetRange = "\47{$sheetRange}\x27"; } goto Obh1R; L7A5N: if ($firstSheetName == $lastSheetName) { $sheetRange = $firstSheetName; } else { $sheetRange = "{$firstSheetName}\72{$lastSheetName}"; } goto ZPcbX; Obh1R: return $sheetRange; goto oCFx6; Ox0Sz: $lastSheetName = $this->sheets[$this->ref[$index]["\x6c\x61\163\x74\x53\150\x65\x65\x74\x49\x6e\144\145\x78"]]["\x6e\141\x6d\x65"]; goto L7A5N; ZPcbX: $sheetRange = str_replace("\47", "\47\x27", $sheetRange); goto ditGq; oCFx6: break; goto HyMkh; eCkNF: $firstSheetName = $this->sheets[$this->ref[$index]["\146\x69\x72\x73\x74\x53\x68\145\x65\164\x49\156\144\145\x78"]]["\156\x61\155\145"]; goto Ox0Sz; C9U56: if ($this->ref[$index]["\146\151\x72\163\164\x53\x68\x65\145\164\x49\156\x64\x65\170"] == 0xffff or $this->ref[$index]["\154\x61\163\x74\x53\150\x65\x65\x74\111\156\144\x65\170"] == 0xffff) { throw new PHPExcel_Reader_Exception("\x44\x65\x6c\145\x74\145\x64\40\x73\150\145\145\x74\x20\162\x65\146\145\162\x65\156\143\x65"); } goto eCkNF; HyMkh: default: throw new PHPExcel_Reader_Exception("\105\x78\143\x65\x6c\65\40\162\145\x61\x64\x65\x72\x20\157\x6e\x6c\x79\x20\163\x75\160\x70\x6f\162\x74\x73\x20\x69\156\164\x65\162\156\x61\x6c\40\x73\x68\x65\x65\x74\163\40\151\156\x20\146\x6f\155\165\x6c\x61\x73"); break; } } return false; } private static function readBIFF8ConstantArray($arrayData) { goto hWICO; qwvCE: for ($r = 1; $r <= $nr + 1; ++$r) { $items = array(); for ($c = 1; $c <= $nc + 1; ++$c) { $constant = self::readBIFF8Constant($arrayData); $items[] = $constant["\166\x61\154\165\x65"]; $arrayData = substr($arrayData, $constant["\163\x69\x7a\x65"]); $size += $constant["\163\x69\172\x65"]; } $matrixChunks[] = implode("\54", $items); } goto JMER3; Y_4BM: $size = 3; goto d9yWs; RGgJ3: return array("\x76\x61\x6c\x75\145" => $matrix, "\163\151\172\x65" => $size); goto F2T55; hWICO: $nc = ord($arrayData[0]); goto BhJuM; SeVEj: $matrixChunks = array(); goto qwvCE; BhJuM: $nr = self::getInt2d($arrayData, 1); goto Y_4BM; d9yWs: $arrayData = substr($arrayData, 3); goto SeVEj; JMER3: $matrix = "\173" . implode("\x3b", $matrixChunks) . "\175"; goto RGgJ3; F2T55: } private static function readBIFF8Constant($valueData) { goto jPM3R; F3ipO: switch ($identifier) { case 0x0: goto beMFo; beMFo: $value = ''; goto gn_K6; w4XLv: break; goto ySIc2; gn_K6: $size = 9; goto w4XLv; ySIc2: case 0x1: goto d5ZhU; d5ZhU: $value = self::extractNumber(substr($valueData, 1, 8)); goto g9CnY; g9CnY: $size = 9; goto LFKq0; LFKq0: break; goto WVoF6; WVoF6: case 0x2: goto DrDVg; md2Xd: $value = "\x22" . $string["\166\141\x6c\165\145"] . "\42"; goto oWQ60; oWQ60: $size = 1 + $string["\x73\151\172\x65"]; goto mIU5u; DrDVg: $string = self::readUnicodeStringLong(substr($valueData, 1)); goto md2Xd; mIU5u: break; goto jSwfE; jSwfE: case 0x4: goto v4TMJ; HQkK1: break; goto DcmQ5; v4TMJ: if (ord($valueData[1])) { $value = "\x54\x52\x55\105"; } else { $value = "\x46\101\114\123\x45"; } goto noywo; noywo: $size = 9; goto HQkK1; DcmQ5: case 0x10: goto J_W3c; J_W3c: $value = PHPExcel_Reader_Excel5_ErrorCode::lookup(ord($valueData[1])); goto VUaQZ; VUaQZ: $size = 9; goto NMuCc; NMuCc: break; goto Igh40; Igh40: } goto UMCSM; jPM3R: $identifier = ord($valueData[0]); goto F3ipO; UMCSM: return array("\166\x61\154\165\x65" => $value, "\163\151\x7a\x65" => $size); goto YHEt7; YHEt7: } private static function readRGB($rgb) { goto Jedmu; B3tSt: return array("\162\147\x62" => $rgb); goto fpow4; qtJeF: $g = ord($rgb[1]); goto Cmo2L; Jedmu: $r = ord($rgb[0]); goto qtJeF; Cmo2L: $b = ord($rgb[2]); goto AmZSm; AmZSm: $rgb = sprintf("\45\x30\x32\130\45\60\x32\x58\45\60\62\130", $r, $g, $b); goto B3tSt; fpow4: } private function readByteStringShort($subData) { goto jGgGw; RjnhB: $value = $this->decodeCodepage(substr($subData, 1, $ln)); goto bdWAn; bdWAn: return array("\x76\x61\154\165\x65" => $value, "\163\x69\172\x65" => 1 + $ln); goto rEjwa; jGgGw: $ln = ord($subData[0]); goto RjnhB; rEjwa: } private function readByteStringLong($subData) { goto KZThA; Jd4Hh: $value = $this->decodeCodepage(substr($subData, 2)); goto vzZw1; KZThA: $ln = self::getInt2d($subData, 0); goto Jd4Hh; vzZw1: return array("\x76\141\154\165\x65" => $value, "\163\151\172\145" => 2 + $ln); goto FaUT1; FaUT1: } private static function readUnicodeStringShort($subData) { goto zAfg9; DkZF5: $string = self::readUnicodeString(substr($subData, 1), $characterCount); goto GFX3L; BzAdO: return $string; goto AIi3N; zAfg9: $value = ''; goto fbBLT; GFX3L: $string["\x73\151\172\x65"] += 1; goto BzAdO; fbBLT: $characterCount = ord($subData[0]); goto DkZF5; AIi3N: } private static function readUnicodeStringLong($subData) { goto G1wJq; ESnJC: return $string; goto e65qK; I2FQH: $characterCount = self::getInt2d($subData, 0); goto poZYo; poZYo: $string = self::readUnicodeString(substr($subData, 2), $characterCount); goto W9wmp; G1wJq: $value = ''; goto I2FQH; W9wmp: $string["\163\151\x7a\145"] += 2; goto ESnJC; e65qK: } private static function readUnicodeString($subData, $characterCount) { goto jBB9q; fCvZs: $value = self::encodeUTF16(substr($subData, 1, $isCompressed ? $characterCount : 2 * $characterCount), $isCompressed); goto FvuDt; FvuDt: return array("\166\x61\154\165\145" => $value, "\x73\x69\172\x65" => $isCompressed ? 1 + $characterCount : 1 + 2 * $characterCount); goto aktLJ; uXJvS: $hasRichText = 0x8 & ord($subData[0]) >> 3; goto fCvZs; thHWO: $hasAsian = 0x4 & ord($subData[0]) >> 2; goto uXJvS; jBB9q: $value = ''; goto lN8nS; lN8nS: $isCompressed = !((0x1 & ord($subData[0])) >> 0); goto thHWO; aktLJ: } private static function UTF8toExcelDoubleQuoted($value) { return "\x22" . str_replace("\42", "\42\42", $value) . "\42"; } private static function extractNumber($data) { goto QCiEH; RK2eE: $mantissa = 0x100000 | $rknumhigh & 0xfffff; goto XOvaO; LG5bU: $value = $mantissa / pow(2, 20 - $exp); goto dUncR; eMn70: $exp = (($rknumhigh & 0x7ff00000) >> 20) - 1023; goto RK2eE; sZelZ: $rknumlow = self::getInt4d($data, 0); goto SvQTe; C9Tcm: if ($sign) { $value *= -1; } goto KqRW0; b_s1P: $value += $mantissalow2 / pow(2, 52 - $exp); goto C9Tcm; KqRW0: return $value; goto AuAQ9; SvQTe: $sign = ($rknumhigh & 0x80000000) >> 31; goto eMn70; XOvaO: $mantissalow1 = ($rknumlow & 0x80000000) >> 31; goto OfpRT; dUncR: if ($mantissalow1 != 0) { $value += 1 / pow(2, 21 - $exp); } goto b_s1P; OfpRT: $mantissalow2 = $rknumlow & 0x7fffffff; goto LG5bU; QCiEH: $rknumhigh = self::getInt4d($data, 4); goto sZelZ; AuAQ9: } private static function getIEEE754($rknum) { goto ne1Sx; ma2nN: return $value; goto iG7Au; Uz70V: if (($rknum & 0x1) != 0) { $value /= 100; } goto ma2nN; ne1Sx: if (($rknum & 0x2) != 0) { $value = $rknum >> 2; } else { goto nbe5p; I2_bx: $mantissa = 0x100000 | $rknum & 0xffffc; goto tF0_5; tF0_5: $value = $mantissa / pow(2, 20 - ($exp - 1023)); goto kRFSN; kRFSN: if ($sign) { $value = -1 * $value; } goto ILHne; nbe5p: $sign = ($rknum & 0x80000000) >> 31; goto e7I3S; e7I3S: $exp = ($rknum & 0x7ff00000) >> 20; goto I2_bx; ILHne: } goto Uz70V; iG7Au: } private static function encodeUTF16($string, $compressed = '') { if ($compressed) { $string = self::uncompressByteString($string); } return PHPExcel_Shared_String::ConvertEncoding($string, "\x55\x54\x46\x2d\70", "\125\x54\x46\55\61\x36\x4c\x45"); } private static function uncompressByteString($string) { goto HO6u2; UieIz: for ($i = 0; $i < $strLen; ++$i) { $uncompressedString .= $string[$i] . "\x0"; } goto bCJ6u; bCJ6u: return $uncompressedString; goto zEAlx; SRecn: $strLen = strlen($string); goto UieIz; HO6u2: $uncompressedString = ''; goto SRecn; zEAlx: } private function decodeCodepage($string) { return PHPExcel_Shared_String::ConvertEncoding($string, "\x55\x54\106\x2d\x38", $this->codepage); } public static function getInt2d($data, $pos) { return ord($data[$pos]) | ord($data[$pos + 1]) << 8; } public static function getInt4d($data, $pos) { goto RiyqX; f90bZ: return ord($data[$pos]) | ord($data[$pos + 1]) << 8 | ord($data[$pos + 2]) << 16 | $_ord_24; goto EmZsS; uS5EG: if ($_or_24 >= 128) { $_ord_24 = -abs(256 - $_or_24 << 24); } else { $_ord_24 = ($_or_24 & 127) << 24; } goto f90bZ; RiyqX: $_or_24 = ord($data[$pos + 3]); goto uS5EG; EmZsS: } private function parseRichText($is = '') { goto QGzqM; sDuvW: return $value; goto yNkOz; A7l2T: $value->createText($is); goto sDuvW; QGzqM: $value = new PHPExcel_RichText(); goto A7l2T; yNkOz: } }
