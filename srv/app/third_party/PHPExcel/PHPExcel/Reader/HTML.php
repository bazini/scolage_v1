<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:06              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 if (!defined("\120\110\120\105\130\103\105\x4c\137\x52\x4f\x4f\x54")) { define("\120\110\x50\105\x58\103\x45\x4c\x5f\x52\117\117\x54", dirname(__FILE__) . "\x2f\56\x2e\x2f\x2e\56\57"); require PHPEXCEL_ROOT . "\120\110\120\x45\170\x63\x65\x6c\x2f\101\165\164\x6f\154\x6f\141\144\x65\162\56\x70\150\160"; } class PHPExcel_Reader_HTML extends PHPExcel_Reader_Abstract implements PHPExcel_Reader_IReader { protected $inputEncoding = "\x41\116\123\x49"; protected $sheetIndex = 0; protected $formats = array("\150\x31" => array("\146\157\x6e\x74" => array("\142\157\154\x64" => true, "\163\x69\x7a\x65" => 24)), "\150\x32" => array("\146\x6f\156\164" => array("\x62\157\x6c\144" => true, "\x73\151\x7a\x65" => 18)), "\x68\x33" => array("\x66\x6f\156\x74" => array("\142\157\154\x64" => true, "\163\x69\x7a\x65" => 13.5)), "\x68\64" => array("\x66\x6f\156\x74" => array("\x62\157\x6c\x64" => true, "\x73\x69\x7a\x65" => 12)), "\150\65" => array("\x66\157\156\164" => array("\x62\x6f\154\x64" => true, "\163\x69\x7a\145" => 10)), "\x68\x36" => array("\x66\x6f\x6e\164" => array("\x62\x6f\154\144" => true, "\x73\x69\x7a\x65" => 7.5)), "\141" => array("\x66\157\156\x74" => array("\x75\x6e\144\145\x72\x6c\151\x6e\x65" => true, "\143\x6f\x6c\x6f\162" => array("\x61\162\147\142" => PHPExcel_Style_Color::COLOR_BLUE))), "\150\162" => array("\x62\x6f\x72\x64\x65\162\163" => array("\142\x6f\x74\x74\x6f\x6d" => array("\x73\164\171\x6c\x65" => PHPExcel_Style_Border::BORDER_THIN, "\x63\157\x6c\x6f\162" => array(PHPExcel_Style_Color::COLOR_BLACK))))); protected $rowspan = array(); public function __construct() { $this->readFilter = new PHPExcel_Reader_DefaultReadFilter(); } protected function isValidFormat() { goto d390c; d390c: $data = fread($this->fileHandle, 2048); goto QJbpe; WmOuW: return false; goto bY9pz; QJbpe: if (strpos($data, "\74") !== false && strlen($data) !== strlen(strip_tags($data))) { return true; } goto WmOuW; bY9pz: } public function load($pFilename) { $objPHPExcel = new PHPExcel(); return $this->loadIntoExisting($pFilename, $objPHPExcel); } public function setInputEncoding($pValue = "\101\116\x53\x49") { $this->inputEncoding = $pValue; return $this; } public function getInputEncoding() { return $this->inputEncoding; } protected $dataArray = array(); protected $tableLevel = 0; protected $nestedColumn = array("\101"); protected function setTableStartColumn($column) { goto YK0u2; Oz9JP: return $this->nestedColumn[$this->tableLevel]; goto mwXXg; v6zv3: $this->nestedColumn[$this->tableLevel] = $column; goto Oz9JP; YK0u2: if ($this->tableLevel == 0) { $column = "\x41"; } goto SS6fu; SS6fu: ++$this->tableLevel; goto v6zv3; mwXXg: } protected function getTableStartColumn() { return $this->nestedColumn[$this->tableLevel]; } protected function releaseTableStartColumn() { --$this->tableLevel; return array_pop($this->nestedColumn); } protected function flushCell($sheet, $column, $row, &$cellContent) { if (is_string($cellContent)) { if (trim($cellContent) > '') { $sheet->setCellValue($column . $row, $cellContent, true); $this->dataArray[$row][$column] = $cellContent; } } else { $this->dataArray[$row][$column] = "\122\x49\103\110\40\124\x45\130\124\72\40" . $cellContent; } $cellContent = (string) ''; } protected function processDomElement(DOMNode $element, $sheet, &$row, &$column, &$cellContent, $format = null) { foreach ($element->childNodes as $child) { if ($child instanceof DOMText) { $domText = preg_replace("\x2f\134\x73\x2b\x2f\165", "\40", trim($child->nodeValue)); if (is_string($cellContent)) { $cellContent .= $domText; } else { } } elseif ($child instanceof DOMElement) { goto k9VWd; mOYPu: foreach ($child->attributes as $attribute) { $attributeArray[$attribute->name] = $attribute->value; } goto nSaWc; nSaWc: switch ($child->nodeName) { case "\155\145\x74\141": goto OxnsD; hmFTT: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto mPBcd; mPBcd: break; goto XzmGt; OxnsD: foreach ($attributeArray as $attributeName => $attributeValue) { switch ($attributeName) { case "\143\157\156\164\145\156\x74": break; } } goto hmFTT; XzmGt: case "\164\151\x74\154\x65": goto NdnHL; sg0ep: $sheet->setTitle($cellContent); goto vPzcv; sLwW8: break; goto BVnIh; NdnHL: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto sg0ep; vPzcv: $cellContent = ''; goto sLwW8; BVnIh: case "\x73\x70\x61\x6e": case "\x64\x69\x76": case "\146\157\x6e\164": case "\x69": case "\145\155": case "\x73\164\162\157\x6e\x67": case "\x62": goto nZT7Q; Hlrmo: break; goto lAbxd; nZT7Q: if ($cellContent > '') { $cellContent .= "\40"; } goto Q4XXV; Q4XXV: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto b7HKE; b7HKE: if ($cellContent > '') { $cellContent .= "\x20"; } goto Hlrmo; lAbxd: case "\150\x72": goto rGLvR; rGLvR: $this->flushCell($sheet, $column, $row, $cellContent); goto DZRLJ; VXPoK: ++$row; goto OKQZK; pXyoB: if (isset($this->formats[$child->nodeName])) { $sheet->getStyle($column . $row)->applyFromArray($this->formats[$child->nodeName]); } else { $cellContent = "\x2d\x2d\x2d\x2d\x2d\55\55\55\55\55"; $this->flushCell($sheet, $column, $row, $cellContent); } goto VXPoK; DZRLJ: ++$row; goto pXyoB; OKQZK: case "\x62\x72": if ($this->tableLevel > 0) { $cellContent .= "\xa"; } else { $this->flushCell($sheet, $column, $row, $cellContent); ++$row; } break; case "\x61": goto XOhMo; Fk2dg: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto HW7lW; XOhMo: foreach ($attributeArray as $attributeName => $attributeValue) { switch ($attributeName) { case "\x68\x72\145\146": goto REDvh; ZV9Zl: if (isset($this->formats[$child->nodeName])) { $sheet->getStyle($column . $row)->applyFromArray($this->formats[$child->nodeName]); } goto STA5I; REDvh: $sheet->getCell($column . $row)->getHyperlink()->setUrl($attributeValue); goto ZV9Zl; STA5I: break; goto QPJ_z; QPJ_z: } } goto Nsqn6; HW7lW: break; goto XAJfP; Nsqn6: $cellContent .= "\40"; goto Fk2dg; XAJfP: case "\x68\x31": case "\150\x32": case "\150\x33": case "\150\64": case "\x68\x35": case "\x68\66": case "\157\x6c": case "\x75\154": case "\160": if ($this->tableLevel > 0) { $cellContent .= "\xa"; $this->processDomElement($child, $sheet, $row, $column, $cellContent); } else { goto HORw6; HORw6: if ($cellContent > '') { $this->flushCell($sheet, $column, $row, $cellContent); $row++; } goto ckpmo; ouD7D: $this->flushCell($sheet, $column, $row, $cellContent); goto O1y7u; O1y7u: if (isset($this->formats[$child->nodeName])) { $sheet->getStyle($column . $row)->applyFromArray($this->formats[$child->nodeName]); } goto OOOuH; ckpmo: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto ouD7D; sYUhQ: $column = "\x41"; goto eRjCr; OOOuH: $row++; goto sYUhQ; eRjCr: } break; case "\154\x69": if ($this->tableLevel > 0) { $cellContent .= "\12"; $this->processDomElement($child, $sheet, $row, $column, $cellContent); } else { goto nVcTR; vxFQd: ++$row; goto x2qNB; dilXI: $column = "\x41"; goto ts_b3; Rdosf: $this->flushCell($sheet, $column, $row, $cellContent); goto dilXI; x2qNB: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto Rdosf; nVcTR: if ($cellContent > '') { $this->flushCell($sheet, $column, $row, $cellContent); } goto vxFQd; ts_b3: } break; case "\x74\x61\142\154\x65": goto pdFbw; pdFbw: $this->flushCell($sheet, $column, $row, $cellContent); goto IVZED; ha5Sw: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto Qywfk; TZiQy: if ($this->tableLevel > 1) { ++$column; } else { ++$row; } goto nHoYK; nHoYK: break; goto Lo4pM; IVZED: $column = $this->setTableStartColumn($column); goto ncGEm; ncGEm: if ($this->tableLevel > 1) { --$row; } goto ha5Sw; Qywfk: $column = $this->releaseTableStartColumn(); goto TZiQy; Lo4pM: case "\164\150\x65\x61\144": case "\164\142\157\x64\171": $this->processDomElement($child, $sheet, $row, $column, $cellContent); break; case "\164\x72": goto waS81; N0brJ: ++$row; goto lppR4; waS81: $column = $this->getTableStartColumn(); goto heALG; lppR4: break; goto bsbEy; heALG: $cellContent = ''; goto Q_br8; Q_br8: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto N0brJ; bsbEy: case "\164\150": case "\164\144": goto b9thq; zvNoS: $this->flushCell($sheet, $column, $row, $cellContent); goto fF4WD; Svi6w: while (isset($this->rowspan[$column . $row])) { ++$column; } goto zvNoS; b9thq: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto Svi6w; fF4WD: if (isset($attributeArray["\x72\x6f\x77\x73\x70\x61\156"]) && isset($attributeArray["\x63\157\154\163\x70\141\x6e"])) { goto R6_TW; lZPev: $sheet->mergeCells($range); goto PMh7Z; R6_TW: $columnTo = $column; goto OvXnp; MJqYj: foreach (\PHPExcel_Cell::extractAllCellReferencesInRange($range) as $value) { $this->rowspan[$value] = true; } goto lZPev; PMh7Z: $column = $columnTo; goto Wd356; xybNf: $range = $column . $row . "\72" . $columnTo . ($row + $attributeArray["\162\157\x77\163\x70\141\x6e"] - 1); goto MJqYj; OvXnp: for ($i = 0; $i < $attributeArray["\143\x6f\x6c\x73\x70\x61\x6e"] - 1; $i++) { ++$columnTo; } goto xybNf; Wd356: } elseif (isset($attributeArray["\162\x6f\167\163\x70\x61\156"])) { goto CPILe; CPILe: $range = $column . $row . "\72" . $column . ($row + $attributeArray["\162\x6f\x77\163\x70\x61\156"] - 1); goto sxTuC; sxTuC: foreach (\PHPExcel_Cell::extractAllCellReferencesInRange($range) as $value) { $this->rowspan[$value] = true; } goto KwJPZ; KwJPZ: $sheet->mergeCells($range); goto WzI2X; WzI2X: } elseif (isset($attributeArray["\143\x6f\x6c\x73\160\141\x6e"])) { goto kX8be; e_Pc8: $sheet->mergeCells($column . $row . "\72" . $columnTo . $row); goto E0QKV; OLzMK: for ($i = 0; $i < $attributeArray["\x63\x6f\154\x73\160\141\x6e"] - 1; $i++) { ++$columnTo; } goto e_Pc8; kX8be: $columnTo = $column; goto OLzMK; E0QKV: $column = $columnTo; goto ngTuz; ngTuz: } goto MUM1S; MUM1S: ++$column; goto QqdMW; QqdMW: break; goto eb9WI; eb9WI: case "\x62\157\x64\171": goto G7F3y; KY711: $content = ''; goto HLmN0; HLmN0: $this->tableLevel = 0; goto r4SB9; pcKDR: break; goto lmMOf; JOvB4: $column = "\x41"; goto KY711; G7F3y: $row = 1; goto JOvB4; r4SB9: $this->processDomElement($child, $sheet, $row, $column, $cellContent); goto pcKDR; lmMOf: default: $this->processDomElement($child, $sheet, $row, $column, $cellContent); } goto E8yxS; k9VWd: $attributeArray = array(); goto mOYPu; E8yxS: } } } public function loadIntoExisting($pFilename, PHPExcel $objPHPExcel) { goto aMhnK; MRHeN: return $objPHPExcel; goto zfdGy; AVfm2: $dom->preserveWhiteSpace = false; goto CYeZb; xacxz: $dom = new domDocument(); goto Rsjko; NS_zr: fclose($this->fileHandle); goto uyhm6; grFcS: $this->processDomElement($dom, $objPHPExcel->getActiveSheet(), $row, $column, $content); goto MRHeN; CYeZb: $row = 0; goto qUkS0; uyhm6: while ($objPHPExcel->getSheetCount() <= $this->sheetIndex) { $objPHPExcel->createSheet(); } goto VrHCz; qUkS0: $column = "\x41"; goto X3N0b; bSajz: if (!$this->isValidFormat()) { fclose($this->fileHandle); throw new PHPExcel_Reader_Exception($pFilename . "\x20\x69\x73\40\x61\x6e\40\x49\156\166\x61\x6c\x69\144\40\110\x54\115\114\x20\x66\x69\x6c\145\x2e"); } goto NS_zr; aMhnK: $this->openFile($pFilename); goto bSajz; VrHCz: $objPHPExcel->setActiveSheetIndex($this->sheetIndex); goto xacxz; X3N0b: $content = ''; goto grFcS; hNjt6: if ($loaded === false) { throw new PHPExcel_Reader_Exception("\106\x61\151\154\145\x64\x20\x74\157\40\x6c\157\x61\x64\x20" . $pFilename . "\x20\141\x73\40\141\x20\x44\x4f\115\40\104\x6f\143\165\155\x65\x6e\x74"); } goto AVfm2; Rsjko: $loaded = $dom->loadHTML(mb_convert_encoding($this->securityScanFile($pFilename), "\x48\x54\115\114\55\x45\x4e\x54\111\x54\111\105\x53", "\125\x54\x46\55\70")); goto hNjt6; zfdGy: } public function getSheetIndex() { return $this->sheetIndex; } public function setSheetIndex($pValue = 0) { $this->sheetIndex = $pValue; return $this; } public function securityScan($xml) { goto j32kq; mHVxL: return $xml; goto y3d2y; bgf9B: if (preg_match($pattern, $xml)) { throw new PHPExcel_Reader_Exception("\104\145\x74\x65\x63\x74\x65\x64\40\165\x73\x65\40\x6f\x66\x20\x45\x4e\124\x49\124\x59\40\x69\156\40\130\x4d\x4c\x2c\40\163\160\x72\145\141\144\163\150\145\x65\164\40\146\x69\154\145\x20\x6c\x6f\141\x64\x28\x29\40\x61\142\x6f\162\x74\x65\x64\x20\164\157\40\160\x72\145\x76\x65\x6e\x74\40\x58\x58\x45\57\x58\x45\x45\40\x61\164\164\x61\143\153\x73"); } goto mHVxL; j32kq: $pattern = "\57\x5c\x30\77" . implode("\134\x30\77", str_split("\x3c\x21\105\116\x54\x49\124\131")) . "\x5c\x30\x3f\57"; goto bgf9B; y3d2y: } }
