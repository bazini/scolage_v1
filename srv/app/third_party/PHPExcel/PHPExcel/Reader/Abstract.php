<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:05              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 abstract class PHPExcel_Reader_Abstract implements PHPExcel_Reader_IReader { protected $readDataOnly = false; protected $readEmptyCells = true; protected $includeCharts = false; protected $loadSheetsOnly; protected $readFilter; protected $fileHandle = null; public function getReadDataOnly() { return $this->readDataOnly; } public function setReadDataOnly($pValue = false) { $this->readDataOnly = $pValue; return $this; } public function getReadEmptyCells() { return $this->readEmptyCells; } public function setReadEmptyCells($pValue = true) { $this->readEmptyCells = $pValue; return $this; } public function getIncludeCharts() { return $this->includeCharts; } public function setIncludeCharts($pValue = false) { $this->includeCharts = (bool) $pValue; return $this; } public function getLoadSheetsOnly() { return $this->loadSheetsOnly; } public function setLoadSheetsOnly($value = null) { goto xATSg; UFFpu: $this->loadSheetsOnly = is_array($value) ? $value : array($value); goto fxA_j; xATSg: if ($value === null) { return $this->setLoadAllSheets(); } goto UFFpu; fxA_j: return $this; goto g2KWQ; g2KWQ: } public function setLoadAllSheets() { $this->loadSheetsOnly = null; return $this; } public function getReadFilter() { return $this->readFilter; } public function setReadFilter(PHPExcel_Reader_IReadFilter $pValue) { $this->readFilter = $pValue; return $this; } protected function openFile($pFilename) { goto SLCAl; ihtG5: if ($this->fileHandle === false) { throw new PHPExcel_Reader_Exception("\103\157\x75\154\x64\40\156\x6f\x74\x20\x6f\160\145\156\x20\146\151\154\x65\x20" . $pFilename . "\40\146\x6f\x72\40\162\145\141\x64\x69\x6e\147\x2e"); } goto a6Eit; BcNKX: $this->fileHandle = fopen($pFilename, "\162"); goto ihtG5; SLCAl: if (!file_exists($pFilename) || !is_readable($pFilename)) { throw new PHPExcel_Reader_Exception("\x43\157\165\x6c\144\40\156\157\x74\x20\157\x70\145\x6e\x20" . $pFilename . "\40\146\x6f\162\40\x72\x65\141\x64\151\156\147\x21\x20\x46\x69\x6c\x65\40\144\x6f\145\x73\x20\156\157\164\40\145\x78\151\x73\x74\56"); } goto BcNKX; a6Eit: } public function canRead($pFilename) { goto ITalI; hyRLn: fclose($this->fileHandle); goto LbV2z; LbV2z: return $readable; goto rHx7v; qikdP: $readable = $this->isValidFormat(); goto hyRLn; ITalI: try { $this->openFile($pFilename); } catch (Exception $e) { return false; } goto qikdP; rHx7v: } public function securityScan($xml) { goto yd1F0; EMjUl: if (preg_match($pattern, $xml)) { throw new PHPExcel_Reader_Exception("\x44\145\x74\x65\x63\164\x65\144\x20\165\163\145\x20\157\146\x20\x45\116\124\x49\124\131\x20\151\156\x20\130\115\x4c\54\x20\163\160\162\x65\x61\144\163\x68\x65\145\164\x20\x66\151\154\145\40\154\x6f\x61\x64\x28\51\40\x61\142\157\x72\x74\145\x64\40\164\157\40\160\x72\145\x76\x65\156\x74\40\x58\130\x45\x2f\x58\105\105\40\141\164\164\x61\x63\153\x73"); } goto YeESS; yd1F0: $pattern = "\x2f\x5c\x30\77" . implode("\x5c\x30\77", str_split("\74\x21\104\x4f\103\124\x59\120\105")) . "\x5c\60\x3f\57"; goto EMjUl; YeESS: return $xml; goto NJzHN; NJzHN: } public function securityScanFile($filestream) { return $this->securityScan(file_get_contents($filestream)); } }
