<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:06              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class PHPExcel_Comment implements PHPExcel_IComparable { private $author; private $text; private $width = "\x39\x36\x70\164"; private $marginLeft = "\65\x39\56\x32\x35\x70\164"; private $marginTop = "\x31\56\x35\x70\x74"; private $visible = false; private $height = "\x35\65\x2e\65\160\x74"; private $fillColor; private $alignment; public function __construct() { goto PlDru; S26cv: $this->text = new PHPExcel_RichText(); goto lTgxY; PlDru: $this->author = "\101\x75\x74\x68\x6f\162"; goto S26cv; lTgxY: $this->fillColor = new PHPExcel_Style_Color("\106\106\106\106\x46\x46\x45\x31"); goto idRM4; idRM4: $this->alignment = PHPExcel_Style_Alignment::HORIZONTAL_GENERAL; goto C7qpa; C7qpa: } public function getAuthor() { return $this->author; } public function setAuthor($pValue = '') { $this->author = $pValue; return $this; } public function getText() { return $this->text; } public function setText(PHPExcel_RichText $pValue) { $this->text = $pValue; return $this; } public function getWidth() { return $this->width; } public function setWidth($value = "\71\66\160\164") { $this->width = $value; return $this; } public function getHeight() { return $this->height; } public function setHeight($value = "\x35\65\56\x35\160\x74") { $this->height = $value; return $this; } public function getMarginLeft() { return $this->marginLeft; } public function setMarginLeft($value = "\65\x39\56\62\65\160\164") { $this->marginLeft = $value; return $this; } public function getMarginTop() { return $this->marginTop; } public function setMarginTop($value = "\61\56\65\x70\164") { $this->marginTop = $value; return $this; } public function getVisible() { return $this->visible; } public function setVisible($value = false) { $this->visible = $value; return $this; } public function getFillColor() { return $this->fillColor; } public function setAlignment($pValue = PHPExcel_Style_Alignment::HORIZONTAL_GENERAL) { $this->alignment = $pValue; return $this; } public function getAlignment() { return $this->alignment; } public function getHashCode() { return md5($this->author . $this->text->getHashCode() . $this->width . $this->height . $this->marginLeft . $this->marginTop . ($this->visible ? 1 : 0) . $this->fillColor->getHashCode() . $this->alignment . __CLASS__); } public function __clone() { $vars = get_object_vars($this); foreach ($vars as $key => $value) { if (is_object($value)) { $this->{$key} = clone $value; } else { $this->{$key} = $value; } } } public function __toString() { return $this->text->getPlainText(); } }
