<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:03              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class ChiffreEnLettre { public $leChiffreSaisi; public $enLettre = ''; public $chiffre = array(1 => "\165\x6e", 2 => "\144\145\x75\170", 3 => "\x74\x72\157\151\x73", 4 => "\x71\165\141\x74\162\145", 5 => "\x63\151\156\161", 6 => "\x73\x69\170", 7 => "\163\x65\160\x74", 8 => "\150\x75\x69\164", 9 => "\156\x65\165\146", 10 => "\144\x69\x78", 11 => "\157\156\x7a\x65", 12 => "\x64\x6f\165\172\145", 13 => "\x74\162\145\151\x7a\x65", 14 => "\x71\165\141\x74\157\162\x7a\145", 15 => "\161\165\x69\156\x7a\145", 16 => "\x73\145\151\172\x65", 17 => "\x64\151\170\x2d\x73\x65\160\164", 18 => "\144\x69\x78\x2d\x68\165\151\x74", 19 => "\144\151\x78\x2d\x6e\145\x75\146", 20 => "\166\151\x6e\x67\164", 30 => "\x74\x72\x65\x6e\164\x65", 40 => "\x71\x75\141\x72\141\x6e\164\x65", 50 => "\x63\151\x6e\161\x75\x61\156\164\x65", 60 => "\x73\x6f\x69\x78\x61\x6e\x74\145", 70 => "\163\x6f\x69\x78\141\156\x74\145\x2d\144\151\170", 80 => "\161\165\141\164\x72\145\55\x76\x69\x6e\x67\x74", 90 => "\161\165\x61\164\162\x65\x2d\166\151\x6e\147\x74\x2d\144\151\170"); function Conversion($sasie) { goto WT8OJ; czEUe: $nombre = ''; goto LsoXy; LsoXy: $laSsasie = explode("\40", $sasie); goto GbyOR; CLvHR: $sasie = trim($sasie); goto czEUe; GbyOR: foreach ($laSsasie as $partie) { $nombre .= $partie; } goto NhMR1; NhMR1: $nb = strlen($nombre); goto JlUpX; JlUpX: for ($i = 0; $i <= $nb;) { if (substr($nombre, $i, 1) == 0) { $nombre = substr($nombre, $i + 1); $nb = $nb - 1; } elseif (substr($nombre, $i, 1) != 0) { $nombre = substr($nombre, $i); break; } } goto y1jpe; xFE1v: switch ($nb) { case 0: $this->enLettre = "\x7a\303\xa9\162\157"; case 1: if ($nombre == 0) { $this->enLettre = "\x7a\xc3\251\162\x6f"; break; } elseif ($nombre != 0) { $this->Unite($nombre); break; } case 2: goto ydkM6; AoAY3: $dizaine = substr($nombre, 0, 1); goto LfkMA; cQsIh: break; goto RtmpO; ydkM6: $unite = substr($nombre, 1); goto AoAY3; LfkMA: $this->Dizaine(0, $nombre, $unite, $dizaine); goto cQsIh; RtmpO: case 3: goto GSLFB; ro9sg: $dizaine = substr($nombre, 1, 1); goto U6cL_; U6cL_: $centaine = substr($nombre, 0, 1); goto u0jNt; GSLFB: $unite = substr($nombre, 2); goto ro9sg; lWsf6: break; goto iOe2I; u0jNt: $this->Centaine(0, $nombre, $unite, $dizaine, $centaine); goto lWsf6; iOe2I: case $nb > 3 and $nb <= 6: goto wJXl9; dej81: $dizaine = substr($nombre, $nb - 2, 1); goto pn72k; Xu1Z3: break; goto Ar_16; wJXl9: $unite = substr($nombre, $nb - 1); goto dej81; IO86b: $mille = substr($nombre, 0, $nb - 3); goto u1ao3; pn72k: $centaine = substr($nombre, $nb - 3, 1); goto IO86b; u1ao3: $this->Mille($nombre, $unite, $dizaine, $centaine, $mille); goto Xu1Z3; Ar_16: case $nb > 6 and $nb <= 9: goto y4Aoq; DNzKw: $dizaine = substr($nombre, $nb - 2, 1); goto pTz93; pTz93: $centaine = substr($nombre, $nb - 3, 1); goto SSru8; y4Aoq: $unite = substr($nombre, $nb - 1); goto DNzKw; itRDw: $million = substr($nombre, 0, $nb - 6); goto OrqLR; OrqLR: $this->Million($nombre, $unite, $dizaine, $centaine, $mille, $million); goto qwCg9; SSru8: $mille = substr($nombre, -6); goto itRDw; qwCg9: break; goto PELGW; PELGW: } goto A2fNG; y1jpe: $nb = strlen($nombre); goto xFE1v; WT8OJ: $this->enLettre = ''; goto CLvHR; A2fNG: if (!empty($this->enLettre)) { return $this->enLettre; } goto Sxui4; Sxui4: } function Million($nombre, $unite, $dizaine, $centaine, $mille, $million) { goto uR2uR; g25DB: $nb = strlen($reste); goto GxkTS; DjqB5: for ($i = 0; $i <= $nb;) { if (substr($reste, $i, 1) == 0) { $reste = substr($reste, $i + 1); $nb = $nb - 1; } elseif (substr($reste, $i, 1) != 0) { $reste = substr($reste, $i); break; } } goto g25DB; OMybv: $nb = strlen($reste); goto DjqB5; uR2uR: $cent = substr($nombre, -3); goto YtHko; YtHko: $reste = substr($nombre, -6); goto nuK2k; nuK2k: if (strlen($million) == 1) { goto EEXVX; czuXO: if ($million == 1) { $this->enLettre .= "\40\155\151\x6c\154\x69\157\x6e\40"; } else { $this->enLettre .= "\x20\x6d\x69\x6c\x6c\151\157\156\163\x20"; } goto WuwkS; mPaDv: $this->enLettre .= $this->chiffre[$million]; goto czuXO; EEXVX: $mille = substr($nombre, 1, 3); goto mPaDv; WuwkS: } elseif (strlen($million) == 2) { goto SS8Me; YwZZ8: $this->Dizaine(0, $nombre, $unite, $dizaine); goto OSrJg; SS8Me: $mille = substr($nombre, 2, 3); goto NI539; NI539: $nombre = substr($nombre, 0, 2); goto YwZZ8; OSrJg: $this->enLettre .= "\x6d\x69\x6c\x6c\x69\x6f\x6e\163\40"; goto UH5pj; UH5pj: } elseif (strlen($million) == 3) { goto h0Fpg; bm8P8: $this->enLettre .= "\155\x69\x6c\154\151\x6f\x6e\163\40"; goto P2ut2; oV6LE: $nombre = substr($nombre, 0, 3); goto OSAKJ; OSAKJ: $this->Centaine(0, $nombre, $unite, $dizaine, $centaine); goto bm8P8; h0Fpg: $mille = substr($nombre, 3, 3); goto oV6LE; P2ut2: } goto OMybv; GxkTS: if ($nb == 0) { } else { goto LZCeL; LZCeL: $nb = strlen($mille); goto ezZ_8; ASYUX: if ($nb == 0) { } elseif ($nb == 1) { $this->Unite($cent); } elseif ($nb == 2) { $this->Dizaine(0, $cent, $unite, $dizaine); } elseif ($nb == 3) { $this->Centaine(0, $cent, $unite, $dizaine, $centaine); } goto ou_UM; UwOun: if ($nb == 0) { } elseif ($nb == 1) { if ($mille == 1) { $this->enLettre .= "\155\x69\154\154\145\40"; } else { $this->Unite($mille); $this->enLettre .= "\x6d\151\x6c\x6c\x65\x20"; } } elseif ($nb == 2) { $this->Dizaine(1, $mille, $unite, $dizaine); $this->enLettre .= "\155\151\154\154\x65\40"; } elseif ($nb == 3) { $this->Centaine(1, $mille, $unite, $dizaine, $centaine); $this->enLettre .= "\x6d\x69\154\154\145\40"; } goto MNXvk; t5Fa4: for ($i = 0; $i <= $nb;) { if (substr($cent, $i, 1) == 0) { $cent = substr($cent, $i + 1); $nb = $nb - 1; } elseif (substr($cent, $i, 1) != 0) { $cent = substr($cent, $i); break; } } goto J2nbC; J2nbC: $nb = strlen($cent); goto ASYUX; MNXvk: $nb = strlen($cent); goto t5Fa4; ezZ_8: for ($i = 0; $i <= $nb;) { if (substr($mille, $i, 1) == 0) { $mille = substr($mille, $i + 1); $nb = $nb - 1; } elseif (substr($mille, $i, 1) != 0) { $mille = substr($mille, $i); break; } } goto fDIgP; fDIgP: $nb = strlen($mille); goto UwOun; ou_UM: } goto Q11ot; Q11ot: } function Mille($nombre, $unite, $dizaine, $centaine, $mille) { goto rcnOm; ZW_qi: for ($i = 0; $i <= $nb;) { if (substr($cent, $i, 1) == 0) { $cent = substr($cent, $i + 1); $nb = $nb - 1; } elseif (substr($cent, $i, 1) != 0) { $cent = substr($cent, $i); break; } } goto ZzmMz; rcnOm: if (strlen($mille) == 1) { $cent = substr($nombre, 1); if ($mille == 1) { $this->enLettre .= ''; } elseif ($mille != 1) { $this->enLettre .= $this->chiffre[$mille]; } } elseif (strlen($mille) > 1) { if (strlen($mille) == 2) { goto mPMGf; dwkAH: $this->Dizaine(1, $nombre, $unite, $dizaine); goto wTFYa; mPMGf: $cent = substr($nombre, 2); goto mWA0E; mWA0E: $nombre = substr($nombre, 0, 2); goto dwkAH; wTFYa: } if (strlen($mille) == 3) { goto JDEFI; V2TE8: $nombre = substr($nombre, 0, 3); goto b5Jr8; JDEFI: $cent = substr($nombre, 3); goto V2TE8; b5Jr8: $this->Centaine(1, $nombre, $unite, $dizaine, $centaine); goto z5VEk; z5VEk: } } goto MgAml; MgAml: $this->enLettre .= "\155\x69\x6c\154\x65\x20"; goto hxDOv; hxDOv: $nb = strlen($cent); goto ZW_qi; ZzmMz: $nb = strlen($cent); goto eAPMa; eAPMa: if ($nb == 0) { } elseif ($nb == 1) { $this->Unite($cent); } elseif ($nb == 2) { $this->Dizaine(0, $cent, $unite, $dizaine); } elseif ($nb == 3) { $this->Centaine(0, $cent, $unite, $dizaine, $centaine); } goto Vv_OU; Vv_OU: } function Centaine($inmillier, $nombre, $unite, $dizaine, $centaine) { goto iMQxM; Q7Nwl: $dizaine = substr($nombre, 1, 1); goto FnPET; j6zfa: if ($unite == 0 and $dizaine == 0) { if ($centaine == 1) { $this->enLettre .= "\x63\145\x6e\x74"; } elseif ($centaine != 1) { if ($inmillier == 0) { $this->enLettre .= $this->chiffre[$centaine] . "\40\143\x65\156\164\x73" . "\40"; } if ($inmillier == 1) { $this->enLettre .= $this->chiffre[$centaine] . "\40\143\145\156\164" . "\x20"; } } } elseif ($unite != 0 and $dizaine == 0) { if ($centaine == 1) { $this->enLettre .= "\143\145\x6e\164\x20" . $this->chiffre[$unite] . "\40"; } elseif ($centaine != 1) { $this->enLettre .= $this->chiffre[$centaine] . "\x20\x63\145\x6e\x74\x20" . $this->chiffre[$unite] . "\x20"; } } elseif ($unite == 0 and $dizaine != 0) { $nombre = substr($nombre, 1); if ($centaine == 1) { $this->enLettre .= "\x63\x65\156\164\x20"; $this->Dizaine(0, $nombre, $unite, $dizaine) . "\x20"; } elseif ($centaine != 1) { $this->enLettre .= $this->chiffre[$centaine] . "\40\143\145\156\164\40"; $this->Dizaine(0, $nombre, $unite, $dizaine) . "\40"; } } elseif ($unite != 0 and $dizaine != 0) { $nombre = substr($nombre, 1); if ($centaine == 1) { $this->enLettre .= "\x63\145\156\164\40"; $this->Dizaine(0, $nombre, $unite, $dizaine) . "\40"; } elseif ($centaine != 1) { $this->enLettre .= $this->chiffre[$centaine] . "\x20\x63\x65\156\x74\x20"; $this->Dizaine(0, $nombre, $unite, $dizaine) . "\x20"; } } goto aiHzi; FnPET: $centaine = substr($nombre, 0, 1); goto j6zfa; iMQxM: $unite = substr($nombre, 2); goto Q7Nwl; aiHzi: } function Dizaine($inmillier, $nombre, $unite, $dizaine) { goto akoZb; akoZb: $unite = substr($nombre, 1); goto lIlzG; gLELx: if ($unite == 0) { goto Mo_zS; Mo_zS: $val = $dizaine . "\x30"; goto iG1v2; wHsGV: $this->enLettre .= "\x20"; goto XnCe5; iG1v2: $this->enLettre .= $this->chiffre[$val]; goto CSXhc; CSXhc: if ($inmillier == 0 && $val == 80) { $this->enLettre .= "\x73\x20"; } goto wHsGV; XnCe5: } elseif ($unite != 0) { if ($dizaine != 9 and $dizaine != 7) { if ($dizaine == 1) { $val = $dizaine . $unite; $this->enLettre .= $this->chiffre[$val] . "\x20"; } else { $val = $dizaine . "\60"; if ($unite == 1 && $dizaine != 8) { $this->enLettre .= $this->chiffre[$val] . "\40\145\164\40" . $this->chiffre[$unite] . "\x20"; } else { $this->enLettre .= $this->chiffre[$val] . "\x2d" . $this->chiffre[$unite] . "\x20"; } } } elseif ($dizaine == 9) { $this->enLettre .= $this->chiffre[80] . "\x2d" . $this->chiffre["\x31" . $unite] . "\40"; } elseif ($dizaine == 7) { if ($unite == 1) { $this->enLettre .= $this->chiffre[60] . "\x20\145\x74\40" . $this->chiffre["\61" . $unite] . "\x20"; } else { $this->enLettre .= $this->chiffre[60] . "\55" . $this->chiffre["\61" . $unite] . "\x20"; } } } goto DCocO; lIlzG: $dizaine = substr($nombre, 0, 1); goto gLELx; DCocO: } function Unite($unite) { $this->enLettre .= $this->chiffre[$unite] . "\40"; } }
