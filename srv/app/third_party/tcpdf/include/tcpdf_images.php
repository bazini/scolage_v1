<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:18              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class TCPDF_IMAGES { public static $svginheritprop = array("\143\x6c\x69\160\55\x72\165\x6c\145", "\143\157\154\157\x72", "\143\157\x6c\157\x72\x2d\151\156\164\145\x72\x70\x6f\x6c\141\x74\x69\x6f\156", "\x63\157\154\x6f\x72\x2d\x69\156\164\x65\162\160\157\154\x61\164\x69\157\x6e\55\146\x69\x6c\x74\145\162\163", "\x63\x6f\x6c\x6f\162\x2d\x70\x72\x6f\x66\x69\154\145", "\143\157\x6c\x6f\162\x2d\162\x65\156\x64\x65\162\x69\x6e\x67", "\x63\x75\162\163\157\x72", "\x64\x69\162\145\x63\164\151\157\156", "\x64\151\163\x70\x6c\x61\171", "\x66\x69\154\x6c", "\146\x69\x6c\x6c\x2d\157\160\x61\143\151\164\171", "\x66\151\x6c\154\x2d\x72\x75\154\x65", "\x66\x6f\156\x74", "\x66\x6f\x6e\x74\x2d\x66\x61\x6d\151\x6c\171", "\146\x6f\x6e\164\55\163\x69\x7a\145", "\146\x6f\x6e\x74\x2d\163\x69\x7a\145\55\x61\144\152\165\163\x74", "\x66\x6f\156\164\x2d\x73\x74\162\x65\164\143\x68", "\x66\157\x6e\164\55\x73\164\x79\x6c\x65", "\146\157\156\x74\55\x76\141\162\x69\x61\156\x74", "\x66\x6f\x6e\x74\x2d\x77\x65\x69\x67\150\164", "\x67\154\171\160\x68\55\x6f\x72\x69\x65\156\x74\141\x74\151\157\156\x2d\x68\x6f\162\x69\172\157\x6e\x74\141\154", "\147\x6c\x79\x70\150\x2d\157\x72\151\x65\156\164\x61\x74\151\157\156\55\x76\x65\162\x74\x69\143\x61\154", "\151\x6d\x61\147\x65\55\x72\x65\x6e\x64\x65\162\x69\156\147", "\x6b\x65\x72\156\x69\156\x67", "\154\x65\x74\164\x65\162\55\163\160\x61\x63\x69\156\147", "\x6d\x61\x72\x6b\x65\x72", "\155\x61\162\153\x65\x72\55\x65\156\144", "\x6d\141\162\x6b\x65\162\55\x6d\151\144", "\155\x61\162\x6b\145\162\x2d\163\x74\x61\162\x74", "\x70\x6f\x69\x6e\164\145\x72\55\x65\x76\145\156\164\163", "\163\x68\x61\x70\x65\x2d\x72\x65\156\x64\145\162\x69\x6e\x67", "\x73\164\162\157\153\145", "\163\x74\162\x6f\x6b\x65\x2d\144\x61\x73\150\x61\x72\162\x61\171", "\163\x74\162\157\x6b\x65\x2d\144\141\163\150\x6f\x66\x66\163\x65\x74", "\163\164\x72\157\153\x65\x2d\x6c\x69\156\145\x63\141\x70", "\x73\164\x72\157\x6b\145\55\154\x69\156\x65\152\157\151\156", "\x73\x74\162\157\x6b\145\55\155\151\x74\145\162\154\x69\155\x69\164", "\x73\x74\x72\157\153\145\x2d\157\160\141\x63\151\x74\x79", "\163\x74\162\x6f\153\145\x2d\167\x69\x64\164\150", "\164\145\170\x74\55\141\x6e\x63\x68\157\162", "\164\x65\x78\164\x2d\162\145\x6e\144\x65\162\x69\x6e\147", "\x76\151\x73\x69\142\x69\154\x69\164\171", "\167\157\x72\x64\x2d\163\160\141\x63\x69\x6e\147", "\167\x72\x69\164\151\156\147\x2d\155\157\144\145"); public static function getImageFileType($imgfile, $iminfo = array()) { goto Ze2Rq; l0reh: if ($type == "\152\x70\147") { $type = "\152\160\x65\147"; } goto t4LnB; UyMVG: if (empty($type)) { $fileinfo = pathinfo($imgfile); if (isset($fileinfo["\145\170\164\x65\156\163\x69\x6f\156"]) and !TCPDF_STATIC::empty_string($fileinfo["\x65\170\x74\x65\156\163\151\x6f\156"])) { $type = strtolower(trim($fileinfo["\145\170\x74\145\156\x73\151\157\156"])); } } goto l0reh; Ze2Rq: $type = ''; goto pir3X; t4LnB: return $type; goto z80jl; pir3X: if (isset($iminfo["\x6d\x69\x6d\x65"]) and !empty($iminfo["\155\151\155\145"])) { $mime = explode("\x2f", $iminfo["\155\151\155\x65"]); if (count($mime) > 1 and $mime[0] == "\x69\155\x61\147\x65" and !empty($mime[1])) { $type = strtolower(trim($mime[1])); } } goto UyMVG; z80jl: } public static function setGDImageTransparency($new_image, $image) { goto dcASz; mibho: $tid = imagecolorallocate($new_image, $tcol["\162\145\144"], $tcol["\x67\162\145\145\156"], $tcol["\142\x6c\165\x65"]); goto T95Wo; dm3_R: if ($tid >= 0 and $tid < $palletsize) { $tcol = imagecolorsforindex($image, $tid); } goto mibho; M8R2s: imagecolortransparent($new_image, $tid); goto YPwxV; L34ob: $tid = imagecolortransparent($image); goto Om5H0; T95Wo: imagefill($new_image, 0, 0, $tid); goto M8R2s; YPwxV: return $new_image; goto uqUB2; Om5H0: $palletsize = imagecolorstotal($image); goto dm3_R; dcASz: $tcol = array("\162\x65\144" => 255, "\147\162\x65\x65\156" => 255, "\x62\154\x75\x65" => 255); goto L34ob; uqUB2: } public static function _toPNG($image, $tempfile) { goto wGHWG; Y28bQ: imagedestroy($image); goto O32Yy; AAs4u: return $retvars; goto C2lS_; wGHWG: imageinterlace($image, 0); goto nwdMw; O32Yy: $retvars = self::_parsepng($tempfile); goto nAd1B; nAd1B: unlink($tempfile); goto AAs4u; nwdMw: imagepng($image, $tempfile); goto Y28bQ; C2lS_: } public static function _toJPEG($image, $quality, $tempfile) { goto tecy3; BmpGW: return $retvars; goto hEHG2; rCgAB: $retvars = self::_parsejpeg($tempfile); goto s1G3C; tecy3: imagejpeg($image, $tempfile, $quality); goto j2fGH; j2fGH: imagedestroy($image); goto rCgAB; s1G3C: unlink($tempfile); goto BmpGW; hEHG2: } public static function _parsejpeg($file) { goto t5WBV; UFKFw: if (!isset($a["\143\150\141\156\156\145\x6c\x73"])) { $channels = 3; } else { $channels = intval($a["\x63\150\x61\x6e\156\x65\154\163"]); } goto zQ3r2; VpMUV: $a = getimagesize($file); goto x53rV; NOpqe: if ($a[2] != 2) { return false; } goto C30wE; x53rV: if (empty($a)) { return false; } goto NOpqe; vw48a: while (($pos = strpos($data, "\x49\103\x43\x5f\120\x52\x4f\106\111\114\105\0", $offset)) !== false) { $length = TCPDF_STATIC::_getUSHORT($data, $pos - 2) - 16; $msn = max(1, ord($data[$pos + 12])); $nom = max(1, ord($data[$pos + 13])); $icc[$msn - 1] = substr($data, $pos + 14, $length); $offset = $pos + 14 + $length; } goto xi5qb; gSnSm: $offset = 0; goto vw48a; UUU6D: $data = file_get_contents($file); goto haWz1; yeA_C: return array("\x77" => $a[0], "\150" => $a[1], "\143\150" => $channels, "\x69\x63\143" => $icc, "\143\x73" => $colspace, "\142\160\x63" => $bpc, "\x66" => "\x44\103\124\104\145\x63\x6f\x64\145", "\144\141\x74\141" => $data); goto KMvQA; C30wE: $bpc = isset($a["\142\151\164\x73"]) ? intval($a["\x62\151\x74\x73"]) : 8; goto UFKFw; haWz1: $icc = array(); goto gSnSm; xi5qb: if (count($icc) > 0) { goto BeR3I; BeR3I: ksort($icc); goto EwQq4; Wv7mO: if (ord($icc[36]) != 0x61 or ord($icc[37]) != 0x63 or ord($icc[38]) != 0x73 or ord($icc[39]) != 0x70) { $icc = false; } goto k2wbx; EwQq4: $icc = implode('', $icc); goto Wv7mO; k2wbx: } else { $icc = false; } goto yeA_C; t5WBV: if (!@TCPDF_STATIC::file_exists($file)) { return false; } goto VpMUV; zQ3r2: switch ($channels) { case 1: $colspace = "\x44\x65\x76\151\x63\x65\107\162\x61\x79"; break; case 3: $colspace = "\x44\x65\166\x69\x63\x65\122\107\102"; break; case 4: $colspace = "\x44\x65\166\151\143\x65\103\115\131\x4b"; break; default: goto A7A1V; A7A1V: $channels = 3; goto YvMYU; YvMYU: $colspace = "\x44\145\x76\151\143\145\x52\107\x42"; goto nvzrK; nvzrK: break; goto RDYCI; RDYCI: } goto UUU6D; KMvQA: } public static function _parsepng($file) { goto qlWYT; HzShV: $channels = $ct == 2 ? 3 : 1; goto HXSQK; zfgrd: if ($ct == 0) { $colspace = "\x44\x65\166\x69\x63\x65\x47\x72\x61\171"; } elseif ($ct == 2) { $colspace = "\x44\x65\x76\151\143\x65\122\107\x42"; } elseif ($ct == 3) { $colspace = "\x49\x6e\144\x65\170\145\144"; } else { fclose($f); return "\x70\156\x67\141\154\x70\x68\141"; } goto OSMz8; bkgTW: $ct = ord(fread($f, 1)); goto zfgrd; iQjXz: $w = TCPDF_STATIC::_freadint($f); goto bMRpy; pam2f: fread($f, 4); goto Gr2Rn; akb6M: if ($f === false) { return false; } goto mngNU; O4Dl7: $icc = false; goto P8LnS; qlWYT: $f = @fopen($file, "\162\x62"); goto akb6M; OUWuT: if ($colspace == "\111\156\x64\145\x78\x65\x64" and empty($pal)) { fclose($f); return false; } goto kq_EX; PAs5W: $bpc = ord(fread($f, 1)); goto bkgTW; HXSQK: $parms = "\57\x44\x65\x63\x6f\144\x65\120\x61\162\155\x73\x20\74\74\40\57\120\x72\x65\144\x69\143\x74\157\x72\x20\x31\65\40\x2f\103\x6f\154\x6f\x72\163\x20" . $channels . "\x20\57\102\x69\164\x73\x50\145\x72\x43\x6f\x6d\x70\x6f\x6e\145\x6e\164\x20" . $bpc . "\40\x2f\x43\x6f\154\165\155\x6e\x73\40" . $w . "\40\76\x3e"; goto w5Yqw; kq_EX: fclose($f); goto KlFRX; sqsU2: $trns = ''; goto GCBVX; P8LnS: $n = TCPDF_STATIC::_freadint($f); goto V1KuN; w5Yqw: $pal = ''; goto sqsU2; Gr2Rn: if (fread($f, 4) != "\x49\x48\104\122") { return false; } goto iQjXz; NOZzf: if (ord(fread($f, 1)) != 0) { fclose($f); return false; } goto vNwEp; V1KuN: do { $type = fread($f, 4); if ($type == "\x50\114\124\x45") { $pal = TCPDF_STATIC::rfread($f, $n); fread($f, 4); } elseif ($type == "\x74\x52\x4e\123") { goto G1tFB; G1tFB: $t = TCPDF_STATIC::rfread($f, $n); goto hWtHc; sEWq8: fread($f, 4); goto comNg; hWtHc: if ($ct == 0) { $trns = array(ord($t[1])); } elseif ($ct == 2) { $trns = array(ord($t[1]), ord($t[3]), ord($t[5])); } else { if ($n > 0) { $trns = array(); for ($i = 0; $i < $n; ++$i) { $trns[] = ord($t[$i]); } } } goto sEWq8; comNg: } elseif ($type == "\x49\104\101\x54") { $data .= TCPDF_STATIC::rfread($f, $n); fread($f, 4); } elseif ($type == "\x69\x43\103\120") { goto Az8ux; Az8ux: $len = 0; goto msR9N; I0nfN: if (ord(fread($f, 1)) != 0) { fclose($f); return false; } goto py5ED; py5ED: $icc = TCPDF_STATIC::rfread($f, $n - $len - 2); goto hRNPu; msR9N: while (ord(fread($f, 1)) != 0 and $len < 80) { ++$len; } goto I0nfN; hRNPu: $icc = gzuncompress($icc); goto M1SIo; M1SIo: fread($f, 4); goto erQ2R; erQ2R: } elseif ($type == "\111\105\116\x44") { break; } else { TCPDF_STATIC::rfread($f, $n + 4); } $n = TCPDF_STATIC::_freadint($f); } while ($n); goto OUWuT; bMRpy: $h = TCPDF_STATIC::_freadint($f); goto PAs5W; DUc5k: if (ord(fread($f, 1)) != 0) { fclose($f); return false; } goto NOZzf; GCBVX: $data = ''; goto O4Dl7; vNwEp: fread($f, 4); goto HzShV; OSMz8: if (ord(fread($f, 1)) != 0) { fclose($f); return false; } goto DUc5k; mngNU: if (fread($f, 8) != chr(137) . "\120\x4e\x47" . chr(13) . chr(10) . chr(26) . chr(10)) { return false; } goto pam2f; KlFRX: return array("\167" => $w, "\x68" => $h, "\143\150" => $channels, "\151\143\143" => $icc, "\x63\x73" => $colspace, "\142\x70\x63" => $bpc, "\x66" => "\106\154\141\164\x65\x44\145\x63\157\144\x65", "\x70\141\x72\x6d\163" => $parms, "\160\141\x6c" => $pal, "\x74\162\x6e\163" => $trns, "\x64\141\164\x61" => $data); goto KIy8G; KIy8G: } }
