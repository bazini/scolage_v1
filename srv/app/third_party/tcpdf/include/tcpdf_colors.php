<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:19              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class TCPDF_COLORS { public static $webcolor = array("\x61\154\151\x63\x65\142\x6c\x75\x65" => "\x66\x30\146\70\146\x66", "\x61\156\x74\151\161\x75\145\x77\150\151\164\x65" => "\146\141\x65\x62\x64\x37", "\x61\161\x75\141" => "\x30\x30\x66\x66\x66\146", "\141\x71\x75\x61\x6d\x61\x72\151\156\145" => "\67\146\x66\146\x64\x34", "\141\x7a\165\x72\x65" => "\x66\x30\x66\x66\146\146", "\142\145\151\147\145" => "\146\x35\146\65\144\x63", "\142\151\163\x71\x75\145" => "\x66\146\x65\64\x63\64", "\x62\x6c\x61\143\x6b" => "\x30\x30\x30\x30\60\x30", "\x62\x6c\x61\x6e\143\x68\145\144\x61\154\155\x6f\156\x64" => "\x66\146\x65\142\x63\x64", "\142\x6c\x75\145" => "\x30\x30\60\x30\x66\x66", "\x62\154\x75\145\x76\x69\157\x6c\145\164" => "\70\x61\x32\x62\x65\62", "\142\162\157\x77\156" => "\x61\x35\62\141\x32\x61", "\142\x75\162\154\171\x77\x6f\157\x64" => "\144\x65\142\x38\x38\67", "\143\x61\144\x65\x74\x62\154\x75\145" => "\x35\146\71\145\x61\x30", "\x63\150\x61\162\x74\x72\145\x75\x73\145" => "\67\x66\x66\x66\60\60", "\143\150\x6f\143\x6f\x6c\141\x74\x65" => "\x64\x32\66\x39\x31\x65", "\143\157\x72\141\154" => "\x66\146\67\x66\x35\60", "\x63\157\162\156\146\154\x6f\x77\x65\162\142\x6c\165\145" => "\x36\x34\71\65\145\x64", "\143\157\x72\156\x73\151\154\153" => "\146\146\146\x38\144\x63", "\143\162\x69\155\163\157\x6e" => "\x64\143\x31\x34\x33\143", "\x63\x79\x61\156" => "\x30\x30\x66\x66\x66\x66", "\144\x61\x72\x6b\142\x6c\x75\145" => "\60\x30\60\x30\70\142", "\144\141\x72\153\x63\x79\x61\156" => "\x30\60\x38\142\70\142", "\144\x61\x72\x6b\147\157\154\x64\145\156\162\157\x64" => "\x62\x38\x38\x36\x30\x62", "\x64\153\x67\162\x61\171" => "\x61\71\x61\x39\x61\x39", "\x64\141\162\153\147\162\141\x79" => "\x61\71\141\x39\x61\71", "\144\141\x72\153\147\162\145\x79" => "\141\x39\141\x39\x61\71", "\144\141\162\153\147\x72\x65\x65\156" => "\60\x30\66\x34\60\60", "\x64\x61\x72\153\x6b\150\141\153\x69" => "\142\x64\142\67\66\142", "\144\141\x72\153\155\141\147\x65\156\x74\x61" => "\70\x62\x30\60\70\x62", "\x64\x61\x72\x6b\157\154\x69\x76\145\147\x72\x65\145\156" => "\65\x35\66\x62\62\146", "\144\x61\x72\153\157\x72\x61\x6e\147\x65" => "\146\146\70\x63\60\60", "\144\141\162\153\x6f\x72\143\x68\x69\x64" => "\71\x39\x33\x32\x63\x63", "\x64\141\162\x6b\x72\145\144" => "\x38\x62\x30\60\x30\x30", "\x64\x61\x72\153\x73\141\154\x6d\157\x6e" => "\145\71\71\66\x37\x61", "\x64\x61\x72\153\163\x65\x61\147\x72\x65\x65\x6e" => "\70\x66\142\x63\70\146", "\x64\141\162\153\163\x6c\141\x74\145\x62\154\165\x65" => "\x34\x38\63\144\x38\142", "\144\141\x72\153\163\154\141\x74\145\147\x72\141\171" => "\62\x66\64\x66\64\x66", "\144\x61\162\x6b\x73\x6c\x61\164\145\x67\x72\x65\x79" => "\x32\x66\64\x66\x34\x66", "\x64\x61\162\153\164\x75\162\x71\x75\157\151\x73\x65" => "\60\60\143\145\144\x31", "\x64\141\x72\x6b\166\x69\157\x6c\145\x74" => "\x39\x34\60\60\144\63", "\x64\145\145\160\x70\151\x6e\x6b" => "\146\146\x31\64\x39\x33", "\144\x65\145\160\x73\x6b\171\142\154\x75\145" => "\60\x30\x62\146\x66\146", "\144\151\x6d\147\x72\141\x79" => "\x36\x39\x36\71\66\71", "\144\151\155\147\162\145\x79" => "\x36\71\66\x39\66\71", "\x64\157\x64\x67\x65\x72\142\x6c\165\x65" => "\x31\x65\x39\x30\x66\x66", "\x66\151\x72\145\x62\162\x69\143\x6b" => "\x62\62\62\x32\x32\x32", "\146\x6c\157\x72\x61\x6c\167\150\151\164\145" => "\146\146\146\141\x66\60", "\x66\157\162\145\163\x74\x67\162\145\x65\156" => "\x32\62\x38\142\x32\x32", "\146\165\x63\150\x73\151\141" => "\x66\x66\60\60\x66\146", "\x67\x61\x69\156\x73\142\157\x72\157" => "\144\x63\144\x63\x64\143", "\x67\150\x6f\x73\164\x77\x68\x69\164\145" => "\x66\x38\x66\x38\x66\146", "\147\157\x6c\144" => "\x66\146\x64\67\60\60", "\x67\x6f\154\x64\x65\x6e\162\157\144" => "\144\141\141\x35\62\x30", "\147\x72\141\x79" => "\70\60\x38\60\x38\x30", "\x67\x72\145\171" => "\x38\60\x38\60\x38\60", "\147\162\145\145\156" => "\x30\60\70\x30\60\60", "\147\x72\145\145\156\171\145\154\154\157\167" => "\141\144\x66\x66\x32\x66", "\x68\157\x6e\x65\171\144\145\x77" => "\146\x30\x66\146\146\x30", "\150\x6f\164\x70\x69\x6e\x6b" => "\x66\x66\66\x39\142\x34", "\x69\x6e\144\x69\x61\x6e\x72\145\x64" => "\143\144\65\x63\65\x63", "\x69\156\x64\151\x67\157" => "\x34\x62\x30\x30\70\62", "\151\x76\157\x72\x79" => "\x66\x66\146\146\x66\x30", "\153\x68\x61\153\x69" => "\x66\x30\145\66\70\x63", "\x6c\x61\x76\x65\x6e\x64\145\x72" => "\x65\x36\145\x36\146\141", "\154\141\166\x65\156\144\145\x72\x62\x6c\165\x73\x68" => "\146\146\x66\60\x66\65", "\x6c\x61\167\x6e\x67\162\x65\x65\x6e" => "\67\143\x66\x63\x30\x30", "\154\x65\x6d\x6f\x6e\143\150\x69\x66\x66\x6f\x6e" => "\146\x66\x66\x61\143\144", "\154\x69\x67\x68\x74\142\x6c\165\x65" => "\141\144\144\x38\145\x36", "\154\151\147\x68\x74\143\157\162\x61\x6c" => "\146\60\70\60\70\60", "\154\x69\147\x68\164\x63\171\141\156" => "\x65\x30\146\146\146\x66", "\x6c\x69\x67\x68\164\147\x6f\x6c\x64\145\x6e\162\x6f\x64\171\145\x6c\154\157\x77" => "\146\141\x66\x61\x64\62", "\154\x74\147\x72\x61\171" => "\x64\63\144\x33\x64\63", "\x6c\x69\147\x68\164\147\162\x61\x79" => "\144\63\144\63\144\63", "\x6c\x69\x67\x68\x74\x67\162\145\x79" => "\144\x33\x64\x33\x64\63", "\x6c\x69\147\150\164\147\x72\x65\x65\156" => "\71\x30\x65\x65\71\x30", "\x6c\x69\147\150\x74\x70\x69\x6e\x6b" => "\146\146\x62\66\143\61", "\x6c\151\x67\x68\164\x73\141\154\155\x6f\156" => "\146\x66\141\60\67\141", "\154\x69\x67\x68\x74\x73\x65\x61\x67\x72\x65\145\x6e" => "\62\x30\142\x32\x61\x61", "\154\x69\x67\150\164\x73\x6b\x79\x62\x6c\165\x65" => "\x38\67\x63\x65\x66\x61", "\154\151\147\150\x74\x73\154\141\x74\x65\147\x72\x61\x79" => "\67\67\x38\x38\x39\71", "\x6c\x69\x67\150\x74\163\154\x61\164\x65\147\162\x65\x79" => "\x37\67\x38\x38\71\71", "\x6c\151\147\x68\164\163\x74\x65\145\x6c\142\154\165\145" => "\x62\60\x63\x34\x64\145", "\154\x69\147\x68\x74\x79\145\154\154\157\x77" => "\x66\146\x66\146\145\x30", "\x6c\151\155\145" => "\60\60\x66\146\60\60", "\x6c\x69\155\x65\x67\162\145\145\x6e" => "\x33\62\143\x64\63\62", "\154\151\x6e\145\156" => "\146\141\146\x30\145\x36", "\x6d\x61\147\145\x6e\x74\x61" => "\x66\146\60\60\146\x66", "\x6d\141\162\x6f\x6f\156" => "\x38\x30\60\x30\x30\60", "\x6d\145\x64\151\x75\x6d\141\161\x75\x61\155\x61\x72\x69\x6e\145" => "\x36\66\x63\x64\x61\x61", "\x6d\145\144\151\165\x6d\142\x6c\165\145" => "\60\x30\60\60\x63\144", "\x6d\x65\144\x69\165\155\157\162\x63\150\151\x64" => "\142\141\x35\x35\x64\x33", "\155\145\x64\151\165\155\160\165\x72\160\154\145" => "\x39\x33\67\x30\x64\70", "\x6d\x65\144\151\165\155\x73\x65\141\x67\162\145\x65\x6e" => "\x33\x63\142\x33\x37\61", "\155\x65\144\x69\x75\x6d\x73\x6c\x61\x74\145\142\154\x75\145" => "\x37\142\66\70\145\x65", "\155\x65\144\x69\165\x6d\163\x70\162\x69\156\147\147\x72\x65\145\156" => "\60\x30\x66\141\x39\x61", "\x6d\145\x64\151\x75\x6d\x74\165\x72\161\x75\x6f\x69\163\x65" => "\64\70\144\61\x63\x63", "\x6d\145\x64\x69\x75\155\166\151\x6f\154\x65\164\x72\x65\x64" => "\143\67\x31\x35\70\x35", "\x6d\151\x64\156\x69\x67\x68\x74\142\154\165\145" => "\x31\71\x31\71\x37\x30", "\x6d\151\156\164\143\x72\145\x61\155" => "\x66\65\x66\x66\146\x61", "\155\151\163\164\x79\162\x6f\x73\145" => "\146\146\x65\64\x65\x31", "\155\157\x63\143\x61\163\x69\x6e" => "\x66\x66\x65\64\142\65", "\x6e\x61\166\x61\152\157\x77\x68\x69\164\x65" => "\146\x66\144\145\141\x64", "\x6e\x61\x76\171" => "\60\x30\x30\60\70\60", "\157\154\x64\x6c\141\x63\x65" => "\146\144\x66\65\x65\66", "\x6f\x6c\x69\166\x65" => "\x38\x30\x38\x30\60\60", "\157\154\x69\x76\x65\x64\x72\x61\x62" => "\66\x62\x38\x65\x32\x33", "\157\162\141\156\x67\145" => "\146\x66\141\65\60\60", "\x6f\x72\x61\x6e\x67\145\x72\145\x64" => "\146\x66\x34\65\60\x30", "\157\162\143\150\151\144" => "\144\141\x37\60\x64\66", "\160\141\x6c\x65\147\157\154\x64\x65\x6e\162\x6f\x64" => "\145\145\x65\70\x61\141", "\160\x61\154\145\147\x72\145\x65\x6e" => "\x39\x38\x66\142\71\70", "\160\141\x6c\145\x74\165\162\161\x75\157\151\x73\145" => "\x61\146\x65\x65\145\145", "\160\141\x6c\145\x76\151\x6f\x6c\145\164\x72\145\x64" => "\144\x38\67\x30\71\63", "\160\x61\160\141\x79\x61\x77\150\151\x70" => "\x66\x66\145\x66\x64\65", "\160\145\x61\x63\150\160\x75\146\146" => "\146\x66\x64\x61\x62\x39", "\160\145\162\x75" => "\143\144\x38\x35\x33\146", "\x70\x69\156\153" => "\146\x66\x63\60\x63\142", "\x70\154\165\155" => "\x64\144\141\60\x64\144", "\x70\157\x77\144\145\162\x62\x6c\x75\x65" => "\142\60\x65\x30\x65\66", "\x70\165\162\x70\x6c\x65" => "\x38\60\60\x30\x38\60", "\x72\145\x64" => "\x66\146\x30\60\x30\x30", "\x72\x6f\163\171\142\x72\157\x77\x6e" => "\x62\143\x38\146\x38\146", "\x72\157\171\141\x6c\x62\x6c\x75\x65" => "\64\61\x36\71\145\61", "\x73\141\144\x64\x6c\145\x62\x72\x6f\x77\156" => "\x38\x62\64\65\x31\63", "\x73\141\154\x6d\157\156" => "\146\141\70\x30\x37\62", "\163\x61\x6e\x64\171\142\162\x6f\167\x6e" => "\146\64\141\64\x36\x30", "\163\145\x61\147\162\145\x65\156" => "\62\x65\70\142\x35\67", "\x73\x65\x61\x73\x68\x65\x6c\x6c" => "\x66\x66\146\x35\145\145", "\x73\151\145\x6e\x6e\141" => "\x61\60\x35\62\x32\x64", "\x73\151\x6c\x76\x65\x72" => "\x63\60\x63\x30\143\x30", "\163\153\x79\142\154\x75\145" => "\70\67\143\x65\x65\142", "\163\154\x61\164\145\142\154\x75\x65" => "\x36\x61\65\x61\143\x64", "\x73\x6c\x61\x74\x65\x67\162\141\x79" => "\67\60\x38\60\x39\x30", "\x73\154\141\x74\x65\x67\162\145\171" => "\67\60\70\x30\x39\x30", "\x73\156\157\x77" => "\x66\x66\x66\141\x66\x61", "\x73\160\x72\151\x6e\x67\147\162\x65\145\156" => "\60\60\x66\146\67\x66", "\x73\x74\x65\145\154\142\x6c\165\x65" => "\x34\x36\x38\x32\142\64", "\x74\x61\156" => "\144\62\142\64\70\143", "\x74\x65\x61\154" => "\x30\60\70\x30\x38\60", "\x74\x68\x69\163\164\x6c\145" => "\x64\70\142\x66\144\x38", "\x74\157\x6d\141\x74\157" => "\146\146\66\x33\64\x37", "\164\165\162\x71\165\157\x69\x73\145" => "\64\60\x65\x30\144\x30", "\166\151\157\x6c\145\x74" => "\x65\145\70\x32\x65\145", "\x77\x68\x65\x61\164" => "\x66\x35\144\x65\142\63", "\x77\x68\x69\164\145" => "\x66\x66\x66\146\x66\146", "\x77\150\151\x74\145\163\x6d\x6f\153\x65" => "\146\65\146\x35\146\x35", "\x79\x65\x6c\x6c\x6f\x77" => "\x66\x66\146\x66\60\60", "\x79\145\154\154\x6f\167\x67\162\x65\x65\156" => "\x39\141\143\144\63\x32"); public static $jscolor = array("\x74\162\141\x6e\x73\x70\x61\x72\x65\x6e\164", "\x62\x6c\141\143\x6b", "\167\x68\151\x74\145", "\162\x65\144", "\x67\162\x65\145\156", "\142\154\165\145", "\143\x79\141\156", "\155\x61\147\x65\156\x74\x61", "\171\145\154\154\x6f\x77", "\144\153\x47\x72\x61\x79", "\147\x72\x61\x79", "\154\164\107\x72\141\171"); public static $spotcolor = array("\x6e\157\156\145" => array(0, 0, 0, 0, "\116\157\156\x65"), "\141\154\x6c" => array(100, 100, 100, 100, "\101\154\x6c"), "\143\x79\x61\156" => array(100, 0, 0, 0, "\x43\171\141\x6e"), "\155\x61\147\x65\156\x74\141" => array(0, 100, 0, 0, "\115\141\147\x65\x6e\x74\141"), "\171\145\154\154\x6f\167" => array(0, 0, 100, 0, "\x59\145\x6c\x6c\157\167"), "\153\x65\171" => array(0, 0, 0, 100, "\113\x65\171"), "\167\150\151\x74\x65" => array(0, 0, 0, 0, "\x57\x68\151\x74\145"), "\x62\x6c\x61\x63\153" => array(0, 0, 0, 100, "\102\154\141\x63\x6b"), "\x72\x65\x64" => array(0, 100, 100, 0, "\x52\145\x64"), "\147\162\x65\145\x6e" => array(100, 0, 100, 0, "\x47\x72\x65\145\156"), "\142\x6c\165\145" => array(100, 100, 0, 0, "\102\154\x75\145")); public static function getSpotColor($name, &$spotc) { goto QEn94; zss5W: $color = strtolower($color); goto z6MX8; R3Gcp: $color = preg_replace("\57\133\134\163\135\52\57", '', $name); goto zss5W; fGGZN: return false; goto tciES; z6MX8: if (isset(self::$spotcolor[$color])) { if (!isset($spotc[$name])) { $i = 1 + count($spotc); $spotc[$name] = array("\x43" => self::$spotcolor[$color][0], "\115" => self::$spotcolor[$color][1], "\131" => self::$spotcolor[$color][2], "\113" => self::$spotcolor[$color][3], "\x6e\x61\x6d\145" => self::$spotcolor[$color][4], "\151" => $i); } return $spotc[self::$spotcolor[$color][4]]; } goto fGGZN; QEn94: if (isset($spotc[$name])) { return $spotc[$name]; } goto R3Gcp; tciES: } public static function convertHTMLColorToDec($hcolor, &$spotc, $defcol = array("\122" => 128, "\x47" => 128, "\x42" => 128)) { goto lqb5l; Oz3k7: if (strpos($color, "\133") !== false) { if (preg_match("\57\x5b\134\x5b\135\x5b\x5c\x22\x27\x5d\x28\164\x7c\x67\x7c\162\147\142\x7c\143\155\171\x6b\51\x5b\134\x22\x27\135\133\134\54\x5d\x3f\50\x5b\x30\x2d\x39\134\56\x5d\52\51\133\x5c\x2c\135\77\50\133\60\x2d\x39\134\x2e\x5d\x2a\51\x5b\x5c\x2c\x5d\x3f\x28\x5b\60\x2d\x39\134\56\x5d\x2a\x29\133\x5c\54\x5d\x3f\50\x5b\x30\55\x39\x5c\x2e\135\x2a\51\x5b\x5c\x5d\x5d\x2f", $color, $m) > 0) { goto oZYy0; tRtkI: switch ($m[1]) { case "\x63\155\x79\x6b": goto xYTTQ; xYTTQ: $returncolor["\103"] = max(0, min(100, floatval($m[2]) * 100)); goto m5cnN; Hv92C: $returncolor["\x4b"] = max(0, min(100, floatval($m[5]) * 100)); goto jZ1Ml; m5cnN: $returncolor["\115"] = max(0, min(100, floatval($m[3]) * 100)); goto dwltS; jZ1Ml: break; goto i0wj3; dwltS: $returncolor["\131"] = max(0, min(100, floatval($m[4]) * 100)); goto Hv92C; i0wj3: case "\x72\147\x62": goto QpPRC; QpPRC: $returncolor["\x52"] = max(0, min(255, floatval($m[2]) * 255)); goto n4Ntv; n4Ntv: $returncolor["\107"] = max(0, min(255, floatval($m[3]) * 255)); goto q2VyJ; q2VyJ: $returncolor["\102"] = max(0, min(255, floatval($m[4]) * 255)); goto oAilu; oAilu: break; goto y_vz4; y_vz4: case "\x67": $returncolor["\107"] = max(0, min(255, floatval($m[2]) * 255)); break; case "\x74": default: break; } goto L2O3Q; oZYy0: $returncolor = array(); goto tRtkI; L2O3Q: return $returncolor; goto LWvLo; LWvLo: } } elseif (substr($color, 0, 4) != "\143\x6d\x79\153" and substr($color, 0, 3) != "\x72\147\142" and ($dotpos = strpos($color, "\56")) !== false) { $color = substr($color, $dotpos + 1); if ($color == "\164\162\141\156\163\160\x61\x72\x65\156\x74") { return array(); } } goto P1Qd3; P1Qd3: if (strlen($color) == 0) { return $defcol; } goto slNnT; qNk3A: if (substr($color, 0, 4) == "\143\x6d\171\153") { goto GMR7M; vHRi3: return $returncolor; goto fnalX; XD4vg: $returncolor = explode("\54", $codes); goto YSUYk; E8N3E: $codes = str_replace("\51", '', $codes); goto XD4vg; YSUYk: foreach ($returncolor as $key => $val) { if (strpos($val, "\45") !== false) { $returncolor[$key] = 100 * intval($val) / 100; } else { $returncolor[$key] = intval($val); } $returncolor[$key] = max(0, min(100, $returncolor[$key])); } goto vHRi3; GMR7M: $codes = substr($color, 5); goto E8N3E; fnalX: } goto OhlSR; slNnT: if (substr($color, 0, 3) == "\x72\147\142") { goto X7PDq; KZgcG: return $returncolor; goto maMTq; X7PDq: $codes = substr($color, 4); goto k4358; O716y: $returncolor = explode("\x2c", $codes); goto RDlbX; k4358: $codes = str_replace("\x29", '', $codes); goto O716y; RDlbX: foreach ($returncolor as $key => $val) { if (strpos($val, "\45") > 0) { $returncolor[$key] = 255 * intval($val) / 100; } else { $returncolor[$key] = intval($val); } $returncolor[$key] = max(0, min(255, $returncolor[$key])); } goto KZgcG; maMTq: } goto qNk3A; rqPI_: switch (strlen($color_code)) { case 3: goto gKxUs; D7BOk: break; goto cnt_k; lQHCC: $returncolor["\x47"] = max(0, min(255, hexdec($g . $g))); goto clWZH; gKxUs: $r = substr($color_code, 0, 1); goto mx2Iw; KNA56: $returncolor["\x52"] = max(0, min(255, hexdec($r . $r))); goto lQHCC; D5sEq: $returncolor = array(); goto KNA56; clWZH: $returncolor["\102"] = max(0, min(255, hexdec($b . $b))); goto D7BOk; ZOnxr: $b = substr($color_code, 2, 1); goto D5sEq; mx2Iw: $g = substr($color_code, 1, 1); goto ZOnxr; cnt_k: case 6: goto R8HFC; R8HFC: $returncolor = array(); goto cwxZ2; TqdGe: $returncolor["\x42"] = max(0, min(255, hexdec(substr($color_code, 4, 2)))); goto ugxFK; ugxFK: break; goto SwE8Z; PF3JV: $returncolor["\107"] = max(0, min(255, hexdec(substr($color_code, 2, 2)))); goto TqdGe; cwxZ2: $returncolor["\122"] = max(0, min(255, hexdec(substr($color_code, 0, 2)))); goto PF3JV; SwE8Z: case 8: goto eZ3fC; b5IKG: break; goto HrwgV; eZ3fC: $returncolor = array(); goto MZENl; MZENl: $returncolor["\x43"] = max(0, min(100, round(hexdec(substr($color_code, 0, 2)) / 2.55))); goto mFgDk; b0cm1: $returncolor["\x59"] = max(0, min(100, round(hexdec(substr($color_code, 4, 2)) / 2.55))); goto iG5vA; iG5vA: $returncolor["\x4b"] = max(0, min(100, round(hexdec(substr($color_code, 6, 2)) / 2.55))); goto b5IKG; mFgDk: $returncolor["\x4d"] = max(0, min(100, round(hexdec(substr($color_code, 2, 2)) / 2.55))); goto b0cm1; HrwgV: default: $returncolor = $defcol; break; } goto E7zIK; E7zIK: return $returncolor; goto tL0T0; lqb5l: $color = preg_replace("\x2f\133\134\163\135\52\57", '', $hcolor); goto kGQfu; OhlSR: if ($color[0] != "\43") { if (isset(self::$webcolor[$color])) { $color_code = self::$webcolor[$color]; } else { goto R_bsV; R_bsV: $returncolor = self::getSpotColor($hcolor, $spotc); goto Vmget; Vmget: if ($returncolor === false) { $returncolor = $defcol; } goto ABjYU; ABjYU: return $returncolor; goto C9uGa; C9uGa: } } else { $color_code = substr($color, 1); } goto rqPI_; kGQfu: $color = strtolower($color); goto Oz3k7; tL0T0: } public static function getColorStringFromArray($c) { goto Gr3iU; Gr3iU: $c = array_values($c); goto kAyPY; kAyPY: $color = "\x5b"; goto ivn4G; pzEgZ: return $color; goto FUHly; yji86: $color .= "\135"; goto pzEgZ; ivn4G: switch (count($c)) { case 4: $color .= sprintf("\x25\106\40\x25\106\40\x25\106\x20\x25\x46", max(0, min(100, floatval($c[0]))) / 100, max(0, min(100, floatval($c[1]))) / 100, max(0, min(100, floatval($c[2]))) / 100, max(0, min(100, floatval($c[3]))) / 100); break; case 3: $color .= sprintf("\x25\106\40\45\x46\40\x25\106", max(0, min(255, floatval($c[0]))) / 255, max(0, min(255, floatval($c[1]))) / 255, max(0, min(255, floatval($c[2]))) / 255); break; case 1: $color .= sprintf("\45\106", max(0, min(255, floatval($c[0]))) / 255); break; } goto yji86; FUHly: } public static function _JScolor($color) { goto TCz4W; TCz4W: if (substr($color, 0, 1) == "\x23") { return sprintf("\x5b\x27\122\107\x42\x27\x2c\45\x46\x2c\x25\x46\54\45\106\135", hexdec(substr($color, 1, 2)) / 255, hexdec(substr($color, 3, 2)) / 255, hexdec(substr($color, 5, 2)) / 255); } goto U0rG4; U0rG4: if (!in_array($color, self::$jscolor)) { $color = $jscolor[0]; } goto isBGS; isBGS: return "\x63\x6f\x6c\x6f\x72\56" . $color; goto DXAZ_; DXAZ_: } }
