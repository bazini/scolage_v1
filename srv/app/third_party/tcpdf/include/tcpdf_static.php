<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:11:19              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class TCPDF_STATIC { private static $tcpdf_version = "\66\x2e\x33\56\x35"; public static $alias_tot_pages = "\173\x3a\160\x74\160\72\x7d"; public static $alias_num_page = "\x7b\x3a\x70\156\x70\x3a\x7d"; public static $alias_group_tot_pages = "\x7b\72\160\164\147\x3a\x7d"; public static $alias_group_num_page = "\x7b\x3a\x70\156\x67\x3a\x7d"; public static $alias_right_shift = "\173\162\x73\143\72"; public static $enc_padding = "\50\277\116\136\116\165\212\101\x64\x0\x4e\126\xff\xfa\1\10\56\x2e\0\xb6\xd0\150\x3e\x80\x2f\14\251\xfe\x64\123\x69\x7a"; public static $byterange_string = "\57\x42\x79\x74\x65\x52\x61\156\x67\x65\x5b\60\x20\x2a\x2a\52\52\x2a\52\52\52\x2a\x2a\x20\x2a\52\52\52\52\x2a\52\x2a\x2a\x2a\40\52\x2a\x2a\x2a\52\x2a\x2a\x2a\52\x2a\x5d"; public static $pageboxes = array("\115\145\144\151\x61\x42\157\x78", "\x43\x72\157\x70\102\157\170", "\x42\154\x65\x65\x64\x42\157\x78", "\124\162\x69\155\102\157\170", "\101\162\164\102\x6f\x78"); public static function getTCPDFVersion() { return self::$tcpdf_version; } public static function getTCPDFProducer() { return "\124\103\120\104\106\x20" . self::getTCPDFVersion() . "\x20\x28\x68\x74\164\x70\x3a\57\57\x77\x77\167\x2e\164\143\x70\x64\146\56\x6f\162\147\51"; } public static function set_mqr($mqr) { if (!defined("\120\110\120\x5f\126\105\x52\123\111\117\116\137\x49\104")) { $version = PHP_VERSION; define("\x50\110\120\137\126\105\x52\x53\111\x4f\116\x5f\x49\104", $version[0] * 10000 + $version[2] * 100 + $version[4]); } if (PHP_VERSION_ID < 50300) { @set_magic_quotes_runtime($mqr); } } public static function get_mqr() { goto FvlJ4; FvlJ4: if (!defined("\x50\x48\120\x5f\x56\x45\122\x53\111\117\116\137\111\x44")) { $version = PHP_VERSION; define("\120\x48\x50\x5f\x56\x45\122\x53\x49\x4f\116\137\111\x44", $version[0] * 10000 + $version[2] * 100 + $version[4]); } goto XXCRU; KjJT1: return 0; goto Nvdgz; XXCRU: if (PHP_VERSION_ID < 50300) { return @get_magic_quotes_runtime(); } goto KjJT1; Nvdgz: } public static function isValidURL($url) { $headers = @get_headers($url); return strpos($headers[0], "\x32\x30\60") !== false; } public static function removeSHY($txt = '', $unicode = true) { goto uPS8n; Dkbb6: if (!$unicode) { $txt = preg_replace("\x2f\x28\133\134\170\141\144\x5d\x7b\61\175\x29\x2f", '', $txt); } goto oLM0T; oLM0T: return $txt; goto EeIHE; uPS8n: $txt = preg_replace("\57\x28\133\134\170\x63\62\x5d\x7b\61\x7d\x5b\134\170\141\144\x5d\x7b\x31\175\51\57", '', $txt); goto Dkbb6; EeIHE: } public static function getBorderMode($brd, $position = "\163\x74\141\x72\164", $opencell = true) { goto dfStE; dfStE: if (!$opencell or empty($brd)) { return $brd; } goto fox8g; fox8g: if ($brd == 1) { $brd = "\114\124\x52\102"; } goto M6dRy; FPfPR: foreach ($brd as $border => $style) { switch ($position) { case "\x73\x74\141\162\x74": if (strpos($border, "\102") !== false) { goto VqVzO; x6H2m: if (strlen($newkey) > 0) { $brd[$newkey] = $style; } goto sFDqM; VqVzO: $newkey = str_replace("\102", '', $border); goto x6H2m; sFDqM: unset($brd[$border]); goto W0Jq4; W0Jq4: } break; case "\155\x69\144\x64\154\x65": goto ePG1e; hX0Ii: if (strpos($border, "\124") !== false) { goto v1tVE; V01Tb: if (strlen($newkey) > 0) { $brd[$newkey] = $style; } goto sFryc; v1tVE: $newkey = str_replace("\124", '', $border); goto V01Tb; sFryc: unset($brd[$border]); goto QKQzU; QKQzU: } goto UGhn2; ePG1e: if (strpos($border, "\102") !== false) { goto P9Yzg; ZVXF_: $border = $newkey; goto naK2o; P9Yzg: $newkey = str_replace("\x42", '', $border); goto Nzkk3; D0gY6: unset($brd[$border]); goto ZVXF_; Nzkk3: if (strlen($newkey) > 0) { $brd[$newkey] = $style; } goto D0gY6; naK2o: } goto hX0Ii; UGhn2: break; goto Sbbh4; Sbbh4: case "\145\156\x64": if (strpos($border, "\124") !== false) { goto QgISX; QgISX: $newkey = str_replace("\x54", '', $border); goto RhKQi; RhKQi: if (strlen($newkey) > 0) { $brd[$newkey] = $style; } goto nxfCl; nxfCl: unset($brd[$border]); goto PFbh2; PFbh2: } break; } } goto yhVZ_; M6dRy: if (is_string($brd)) { goto S3gUB; MhIRF: for ($i = 0; $i < $slen; ++$i) { $newbrd[$brd[$i]] = array("\x63\141\160" => "\x73\x71\165\141\x72\x65", "\x6a\x6f\x69\156" => "\155\151\x74\145\x72"); } goto gCwrh; gCwrh: $brd = $newbrd; goto abWdy; S3gUB: $slen = strlen($brd); goto ckTTV; ckTTV: $newbrd = array(); goto MhIRF; abWdy: } goto FPfPR; yhVZ_: return $brd; goto GHinx; GHinx: } public static function empty_string($str) { return is_null($str) or is_string($str) and strlen($str) == 0; } public static function getObjFilename($type = "\x74\x6d\160", $file_id = '') { return tempnam(K_PATH_CACHE, "\x5f\x5f\164\143\x70\x64\x66\x5f" . $file_id . "\x5f" . $type . "\137" . md5(TCPDF_STATIC::getRandomSeed()) . "\x5f"); } public static function _escape($s) { return strtr($s, array("\x29" => "\x5c\51", "\50" => "\134\x28", "\134" => "\134\x5c", chr(13) => "\134\x72")); } public static function _escapeXML($str) { goto Qb4Kc; XjoDs: return $str; goto hiBN8; liul5: $str = strtr($str, $replaceTable); goto XjoDs; Qb4Kc: $replaceTable = array("\0" => '', "\46" => "\x26\x61\155\x70\x3b", "\x3c" => "\46\x6c\x74\x3b", "\x3e" => "\46\147\x74\x3b"); goto liul5; hiBN8: } public static function objclone($object) { if ($object instanceof Imagick and version_compare(phpversion("\x69\155\141\147\x69\143\x6b"), "\x33\56\60\x2e\x31") !== 1) { return @$object->clone(); } return @clone $object; } public static function sendOutputData($data, $length) { if (!isset($_SERVER["\x48\124\x54\x50\137\101\x43\x43\x45\x50\x54\x5f\105\x4e\103\117\104\x49\x4e\107"]) or empty($_SERVER["\110\x54\x54\x50\x5f\101\103\x43\105\x50\124\x5f\105\x4e\103\x4f\x44\x49\116\x47"])) { header("\103\157\x6e\x74\x65\x6e\164\x2d\x4c\x65\x6e\147\164\150\72\x20" . $length); } echo $data; } public static function replacePageNumAliases($page, $replace, $diff = 0) { foreach ($replace as $rep) { foreach ($rep[3] as $a) { if (strpos($page, $a) !== false) { $page = str_replace($a, $rep[0], $page); $diff += $rep[2] - $rep[1]; } } } return array($page, $diff); } public static function getTimestamp($date) { if ($date[0] == "\104" and $date[1] == "\x3a") { $date = substr($date, 2); } return strtotime($date); } public static function getFormattedDate($time) { return substr_replace(date("\x59\x6d\x64\110\x69\163\117", intval($time)), "\47", 0 - 2, 0) . "\47"; } public static function getRandomSeed($seed = '') { goto n0Vn7; n0Vn7: $rnd = uniqid(rand() . microtime(true), true); goto Bgg8A; k8SCg: if (function_exists("\x6f\x70\x65\x6e\x73\x73\154\x5f\162\x61\x6e\144\x6f\x6d\137\x70\x73\145\165\x64\157\137\x62\171\x74\x65\x73") and strtoupper(substr(PHP_OS, 0, 3)) !== "\x57\111\x4e") { $rnd .= openssl_random_pseudo_bytes(512); } else { for ($i = 0; $i < 23; ++$i) { $rnd .= uniqid('', true); } } goto FtVHO; FtVHO: return $rnd . $seed . __FILE__ . serialize($_SERVER) . microtime(true); goto dNxWo; Bgg8A: if (function_exists("\x70\157\163\151\x78\137\147\x65\x74\x70\151\144")) { $rnd .= posix_getpid(); } goto k8SCg; dNxWo: } public static function _md5_16($str) { return pack("\x48\52", md5($str)); } public static function _AES($key, $text) { goto Owrac; lwEm4: $text .= str_repeat(chr($padding), $padding); goto rvP8s; Xids2: $text = $iv . $text; goto LRWy3; Owrac: $padding = 16 - strlen($text) % 16; goto lwEm4; rvP8s: if (extension_loaded("\157\160\145\156\x73\163\x6c")) { goto yM5WR; sbTBc: return $iv . substr($text, 0, -16); goto h4wE5; y4Kp7: $text = openssl_encrypt($text, "\x61\x65\163\55\x32\65\66\55\143\142\x63", $key, OPENSSL_RAW_DATA, $iv); goto sbTBc; yM5WR: $iv = openssl_random_pseudo_bytes(openssl_cipher_iv_length("\141\145\x73\x2d\62\x35\x36\x2d\143\x62\143")); goto y4Kp7; h4wE5: } goto BdOcY; BdOcY: $iv = mcrypt_create_iv(mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC), MCRYPT_RAND); goto lGI7d; lGI7d: $text = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key, $text, MCRYPT_MODE_CBC, $iv); goto Xids2; LRWy3: return $text; goto G0xc2; G0xc2: } public static function _AESnopad($key, $text) { goto We94C; We94C: if (extension_loaded("\157\x70\x65\156\163\163\154")) { goto fdL2D; CmSZ6: return substr($text, 0, -16); goto K9cT6; fdL2D: $iv = str_repeat("\x0", openssl_cipher_iv_length("\x61\x65\163\x2d\x32\65\66\x2d\x63\x62\x63")); goto Wogz4; Wogz4: $text = openssl_encrypt($text, "\x61\145\x73\x2d\62\65\x36\x2d\143\x62\x63", $key, OPENSSL_RAW_DATA, $iv); goto CmSZ6; K9cT6: } goto b2uK1; Fgngm: return $text; goto gvzgb; b2uK1: $iv = str_repeat("\x0", mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC)); goto Ferfv; Ferfv: $text = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key, $text, MCRYPT_MODE_CBC, $iv); goto Fgngm; gvzgb: } public static function _RC4($key, $text, &$last_enc_key, &$last_enc_key_c) { goto m_1X3; vmhU7: $out = ''; goto xiiLS; m_1X3: if (function_exists("\x6d\143\162\x79\x70\x74\x5f\x65\x6e\x63\x72\171\x70\164") and $out = @mcrypt_encrypt(MCRYPT_ARCFOUR, $key, $text, MCRYPT_MODE_STREAM, '')) { return $out; } goto ToNHY; Jjh8f: $len = strlen($text); goto iNyQk; hHINn: $b = 0; goto vmhU7; ToNHY: if ($last_enc_key != $key) { goto cmagK; PU5AS: $rc4 = range(0, 255); goto g9fw9; g9fw9: $j = 0; goto yShjB; wAcx8: $last_enc_key = $key; goto VERFn; cmagK: $k = str_repeat($key, 256 / strlen($key) + 1); goto PU5AS; VERFn: $last_enc_key_c = $rc4; goto nUdm2; yShjB: for ($i = 0; $i < 256; ++$i) { $t = $rc4[$i]; $j = ($j + $t + ord($k[$i])) % 256; $rc4[$i] = $rc4[$j]; $rc4[$j] = $t; } goto wAcx8; nUdm2: } else { $rc4 = $last_enc_key_c; } goto Jjh8f; xiiLS: for ($i = 0; $i < $len; ++$i) { $a = ($a + 1) % 256; $t = $rc4[$a]; $b = ($b + $t) % 256; $rc4[$a] = $rc4[$b]; $rc4[$b] = $t; $k = $rc4[($rc4[$a] + $rc4[$b]) % 256]; $out .= chr(ord($text[$i]) ^ $k); } goto EfFQ8; EfFQ8: return $out; goto GVRD9; iNyQk: $a = 0; goto hHINn; GVRD9: } public static function getUserPermissionCode($permissions, $mode = 0) { goto kw6c5; kw6c5: $options = array("\x6f\167\x6e\x65\x72" => 2, "\x70\x72\151\156\x74" => 4, "\x6d\x6f\144\x69\146\x79" => 8, "\x63\157\x70\171" => 16, "\141\x6e\x6e\x6f\164\x2d\x66\x6f\x72\155\163" => 32, "\x66\x69\154\x6c\x2d\146\157\x72\155\x73" => 256, "\145\170\x74\x72\141\x63\164" => 512, "\x61\163\x73\145\x6d\142\x6c\x65" => 1024, "\160\162\x69\156\164\55\x68\151\x67\150" => 2048); goto GSEHE; GSEHE: $protection = 2147422012; goto j10UW; mRJZE: return $protection; goto Cdv1H; j10UW: foreach ($permissions as $permission) { if (isset($options[$permission])) { if ($mode > 0 or $options[$permission] <= 32) { if ($options[$permission] == 2) { $protection += $options[$permission]; } else { $protection -= $options[$permission]; } } } } goto mRJZE; Cdv1H: } public static function convertHexStringToString($bs) { goto T1pPU; T1pPU: $string = ''; goto vcVbj; lveXA: for ($i = 0; $i < $bslength; $i += 2) { $string .= chr(hexdec($bs[$i] . $bs[$i + 1])); } goto P2ZP4; vcVbj: $bslength = strlen($bs); goto fcvS9; P2ZP4: return $string; goto B4VB3; fcvS9: if ($bslength % 2 != 0) { $bs .= "\60"; ++$bslength; } goto lveXA; B4VB3: } public static function convertStringToHexString($s) { goto ff8jY; THp97: $chars = preg_split("\x2f\57", $s, -1, PREG_SPLIT_NO_EMPTY); goto eqtsU; eqtsU: foreach ($chars as $c) { $bs .= sprintf("\x25\60\x32\x73", dechex(ord($c))); } goto l35Gj; ff8jY: $bs = ''; goto THp97; l35Gj: return $bs; goto TsP5X; TsP5X: } public static function getEncPermissionsString($protection) { goto d0s_4; d0s_4: $binprot = sprintf("\x25\60\x33\62\x62", $protection); goto Hgtih; e29wR: return $str; goto IXK4j; WH81J: $str .= chr(bindec(substr($binprot, 0, 8))); goto e29wR; HcVuR: $str .= chr(bindec(substr($binprot, 16, 8))); goto FC92d; FC92d: $str .= chr(bindec(substr($binprot, 8, 8))); goto WH81J; Hgtih: $str = chr(bindec(substr($binprot, 24, 8))); goto HcVuR; IXK4j: } public static function encodeNameObject($name) { goto Z80Vm; eWGOB: return $escname; goto L3mKw; ARC2V: $length = strlen($name); goto JitrA; Z80Vm: $escname = ''; goto ARC2V; JitrA: for ($i = 0; $i < $length; ++$i) { $chr = $name[$i]; if (preg_match("\x2f\133\x30\x2d\71\x61\x2d\x7a\x41\x2d\x5a\x23\x5f\x3d\x2d\135\57", $chr) == 1) { $escname .= $chr; } else { $escname .= sprintf("\x23\45\x30\x32\130", ord($chr)); } } goto eWGOB; L3mKw: } public static function getAnnotOptFromJSProp($prop, &$spot_colors, $rtl = false) { goto db3GL; Aukne: if (isset($prop["\x4e\157\x54\x6f\147\147\x6c\x65\124\157\x4f\x66\146"]) and $prop["\116\157\124\x6f\x67\x67\x6c\x65\124\x6f\x4f\x66\x66"] == "\x74\162\x75\x65") { $ff += 1 << 14; } goto ATTUN; i3DQV: $opt = array(); goto rn5DX; btBYf: if (isset($prop["\x64\157\116\x6f\164\123\x70\x65\154\x6c\x43\x68\x65\x63\153"]) and $prop["\144\x6f\x4e\157\x74\x53\x70\x65\154\154\103\150\145\143\153"] == "\x74\162\165\145") { $ff += 1 << 22; } goto erLGR; QJCZ0: if (isset($prop["\x64\x69\163\x70\x6c\x61\x79"])) { if ($prop["\144\151\x73\x70\x6c\141\171"] == "\x64\x69\163\160\154\x61\x79\x2e\x76\x69\163\151\142\x6c\145") { } elseif ($prop["\144\151\163\x70\154\x61\x79"] == "\144\151\x73\160\x6c\141\x79\x2e\150\x69\x64\144\145\156") { $f += 1 << 1; } elseif ($prop["\x64\x69\x73\x70\154\x61\x79"] == "\144\151\163\160\154\x61\x79\56\156\x6f\x50\x72\151\x6e\164") { $f -= 1 << 2; } elseif ($prop["\x64\151\x73\x70\154\x61\171"] == "\x64\151\x73\160\x6c\141\171\56\x6e\x6f\x56\x69\145\x77") { $f += 1 << 5; } } goto kjyl1; YTrr1: if (isset($prop["\x72\x61\x64\x69\157\x73\x49\156\x55\156\x69\x73\157\x6e"]) and $prop["\162\141\144\x69\157\x73\111\x6e\x55\156\x69\x73\x6f\x6e"] == "\x74\x72\165\x65") { $ff += 1 << 25; } goto xg_8e; vkNX2: if (!isset($ff)) { $ff = 0; } goto PbHu3; vVNVJ: if (isset($prop["\143\165\x72\x72\145\x6e\164\126\141\154\x75\145\x49\156\x64\x69\143\145\163"]) and is_array($prop["\x63\x75\162\x72\x65\x6e\164\x56\x61\x6c\x75\145\x49\x6e\144\x69\143\x65\163"])) { $opt["\x69"] = $prop["\x63\165\162\162\x65\156\164\126\x61\x6c\x75\145\x49\x6e\144\x69\143\x65\163"]; } goto YYusZ; q4zlh: if (isset($prop["\x70\x61\163\163\167\x6f\162\x64"]) and $prop["\x70\141\163\x73\x77\x6f\162\144"] == "\164\x72\x75\145") { $ff += 1 << 13; } goto Aukne; awzgQ: if (isset($prop["\x62\157\162\144\x65\162\x53\164\x79\x6c\145"])) { switch ($prop["\x62\x6f\162\144\x65\162\123\164\x79\154\x65"]) { case "\142\x6f\162\x64\145\x72\56\144": case "\144\x61\x73\150\x65\144": goto nPkf6; nPkf6: $opt["\142\x6f\162\144\x65\162"] = array(0, 0, $linewidth, array(3, 2)); goto nVyJW; nVyJW: $opt["\142\x73"] = array("\167" => $linewidth, "\163" => "\104", "\144" => array(3, 2)); goto jakcs; jakcs: break; goto F3PcV; F3PcV: case "\142\157\x72\x64\145\162\x2e\x62": case "\142\145\166\x65\x6c\x65\144": goto LqkxD; F0bp6: break; goto rYcjJ; Xv7V9: $opt["\142\x73"] = array("\167" => $linewidth, "\163" => "\102"); goto F0bp6; LqkxD: $opt["\142\157\162\144\x65\x72"] = array(0, 0, $linewidth); goto Xv7V9; rYcjJ: case "\142\x6f\x72\x64\145\162\x2e\x69": case "\x69\156\x73\145\164": goto uIokE; kBcky: break; goto jv4j5; uIokE: $opt["\142\157\x72\144\145\x72"] = array(0, 0, $linewidth); goto XqNee; XqNee: $opt["\x62\x73"] = array("\x77" => $linewidth, "\x73" => "\x49"); goto kBcky; jv4j5: case "\142\x6f\162\144\x65\x72\x2e\x75": case "\x75\x6e\x64\x65\x72\x6c\151\156\x65": goto srDJg; O08rt: break; goto JDBiT; srDJg: $opt["\142\157\162\x64\x65\x72"] = array(0, 0, $linewidth); goto MMbsr; MMbsr: $opt["\142\x73"] = array("\x77" => $linewidth, "\x73" => "\x55"); goto O08rt; JDBiT: case "\x62\157\162\144\x65\x72\56\163": case "\163\157\x6c\151\x64": goto VWXKC; pbLCV: $opt["\142\x73"] = array("\167" => $linewidth, "\163" => "\x53"); goto Cpy0Y; VWXKC: $opt["\142\x6f\x72\144\x65\162"] = array(0, 0, $linewidth); goto pbLCV; Cpy0Y: break; goto eMRIl; eMRIl: default: break; } } goto fNwij; D_M0f: if (isset($prop["\142\165\164\164\x6f\x6e\120\x6f\x73\151\x74\151\157\x6e"])) { switch ($prop["\142\165\x74\164\x6f\156\x50\x6f\163\x69\164\x69\x6f\156"]) { case 0: case "\x70\157\163\x69\164\151\157\x6e\x2e\164\x65\x78\164\117\x6e\154\171": $opt["\x6d\153"]["\164\160"] = 0; break; case 1: case "\160\157\x73\x69\x74\151\x6f\x6e\56\151\143\x6f\156\x4f\156\154\x79": $opt["\155\153"]["\164\160"] = 1; break; case 2: case "\160\x6f\163\151\164\151\x6f\x6e\x2e\151\x63\x6f\156\124\x65\x78\164\x56": $opt["\x6d\153"]["\x74\160"] = 2; break; case 3: case "\160\157\x73\x69\x74\151\157\x6e\56\164\x65\170\164\x49\x63\157\x6e\126": $opt["\155\153"]["\x74\160"] = 3; break; case 4: case "\x70\157\163\x69\x74\x69\x6f\156\x2e\151\143\x6f\156\x54\x65\170\164\x48": $opt["\155\153"]["\x74\x70"] = 4; break; case 5: case "\x70\157\x73\151\164\151\157\156\56\164\x65\170\164\111\x63\157\x6e\x48": $opt["\155\153"]["\x74\x70"] = 5; break; case 6: case "\160\x6f\x73\x69\164\x69\x6f\156\56\x6f\x76\x65\162\x6c\x61\171": $opt["\155\153"]["\x74\160"] = 6; break; } } goto zwf5R; XvQyd: if (isset($prop["\x73\x75\142\x6d\x69\164\116\x61\x6d\x65"])) { $opt["\164\155"] = $prop["\x73\165\x62\x6d\151\x74\116\141\x6d\145"]; } goto ntUfd; LIlOH: if (isset($prop["\163\164\162\x6f\153\145\103\x6f\x6c\x6f\162"])) { if (is_array($prop["\163\x74\x72\x6f\x6b\145\103\157\x6c\157\162"])) { $opt["\x6d\153"]["\x62\x63"] = $prop["\x73\164\x72\157\153\x65\103\x6f\154\x6f\162"]; } else { $opt["\x6d\x6b"]["\142\143"] = TCPDF_COLORS::convertHTMLColorToDec($prop["\163\x74\162\157\x6b\x65\103\x6f\x6c\x6f\x72"], $spot_colors); } } goto vqiav; zwf5R: if (isset($prop["\x66\x69\154\154\103\157\154\x6f\162"])) { if (is_array($prop["\146\151\x6c\x6c\x43\x6f\154\157\x72"])) { $opt["\155\153"]["\142\147"] = $prop["\146\151\154\x6c\x43\x6f\154\x6f\162"]; } else { $opt["\155\x6b"]["\x62\x67"] = TCPDF_COLORS::convertHTMLColorToDec($prop["\146\151\x6c\x6c\x43\x6f\154\157\x72"], $spot_colors); } } goto LIlOH; xg_8e: if (isset($prop["\162\x69\x63\150\124\x65\170\x74"]) and $prop["\x72\151\x63\x68\124\145\x78\164"] == "\164\162\x75\145") { $ff += 1 << 25; } goto O6Ja8; El5Tt: $opt["\x66\x66"] = $ff; goto CDKlq; O6Ja8: if (isset($prop["\143\x6f\155\x6d\151\164\117\156\x53\145\154\103\150\x61\x6e\147\145"]) and $prop["\143\157\x6d\x6d\151\164\117\156\123\x65\x6c\103\x68\x61\x6e\147\x65"] == "\164\x72\165\145") { $ff += 1 << 26; } goto El5Tt; bU3Ki: return $opt; goto u0VFa; wLH0O: if (isset($prop["\142\x75\x74\x74\157\x6e\106\x69\164\x42\x6f\165\156\x64\x73"]) and $prop["\x62\165\164\x74\157\x6e\x46\151\164\102\x6f\x75\156\144\163"] == "\164\x72\165\x65") { $opt["\x6d\153"]["\151\x66"]["\x66\142"] = true; } goto mUaFJ; Q5rUj: if (isset($prop["\142\x75\x74\164\157\156\101\154\x69\147\x6e\x59"])) { $opt["\155\x6b"]["\151\146"]["\141"][1] = $prop["\142\x75\164\164\157\x6e\x41\154\x69\x67\156\131"]; } goto wLH0O; LJaLD: if (isset($prop["\162\x65\x71\x75\x69\x72\x65\144"]) and $prop["\x72\x65\x71\x75\151\x72\145\144"] == "\164\162\x75\x65") { $ff += 1 << 1; } goto pXrPL; LAye5: if (isset($prop["\150\151\x67\x68\x6c\151\147\x68\164"])) { switch ($prop["\150\x69\147\x68\x6c\x69\x67\150\x74"]) { case "\x6e\157\x6e\x65": case "\x68\151\x67\x68\x6c\151\147\150\164\56\x6e": $opt["\150"] = "\116"; break; case "\x69\156\166\x65\162\x74": case "\150\x69\x67\x68\154\151\x67\x68\164\x2e\x69": $opt["\x68"] = "\x69"; break; case "\x70\x75\163\150": case "\150\151\x67\x68\154\x69\147\150\164\56\x70": $opt["\x68"] = "\120"; break; case "\x6f\x75\164\x6c\x69\x6e\x65": case "\x68\151\x67\150\154\151\147\150\164\56\157": $opt["\150"] = "\117"; break; } } goto bU3Ki; fNwij: if (isset($prop["\142\x6f\x72\x64\145\x72"]) and is_array($prop["\x62\x6f\x72\144\145\x72"])) { $opt["\142\157\x72\144\145\x72"] = $prop["\x62\x6f\162\x64\145\x72"]; } goto D9RgI; uWp9G: if (isset($prop["\146\x69\154\145\x53\x65\x6c\x65\143\164"]) and $prop["\x66\151\x6c\x65\123\145\154\x65\x63\164"] == "\x74\x72\x75\x65") { $ff += 1 << 20; } goto h9N0p; W3_xl: $f = 4; goto VGq0G; Gnut5: if (isset($prop["\162\x69\143\150\x56\x61\154\x75\x65"])) { $opt["\x72\166"] = $prop["\162\151\x63\150\126\x61\x6c\165\x65"]; } goto XvQyd; vqiav: if (isset($prop["\162\x6f\x74\x61\x74\151\157\156"])) { $opt["\x6d\x6b"]["\162"] = $prop["\x72\x6f\x74\141\164\151\x6f\156"]; } goto fAtAW; YYusZ: if (isset($prop["\166\141\x6c\x75\145"])) { if (is_array($prop["\166\x61\x6c\165\145"])) { $opt["\x6f\160\164"] = array(); foreach ($prop["\166\x61\x6c\x75\x65"] as $key => $optval) { if (isset($prop["\x65\170\x70\157\x72\164\126\141\x6c\165\145\163"][$key])) { $opt["\157\x70\x74"][$key] = array($prop["\145\x78\x70\x6f\x72\164\x56\x61\154\x75\x65\x73"][$key], $prop["\166\141\x6c\165\145"][$key]); } else { $opt["\x6f\160\164"][$key] = $prop["\166\141\x6c\165\x65"][$key]; } } } else { $opt["\166"] = $prop["\x76\141\x6c\x75\145"]; } } goto Gnut5; VGq0G: if (isset($prop["\x72\145\x61\144\x6f\156\x6c\x79"]) and $prop["\x72\145\141\x64\x6f\156\154\x79"] == "\x74\x72\165\145") { $f += 1 << 6; } goto QJCZ0; PWPRr: if (isset($prop["\x65\x64\x69\x74\141\142\x6c\x65"]) and $prop["\145\144\x69\x74\141\x62\x6c\x65"] == "\x74\162\x75\145") { $ff += 1 << 18; } goto wRJvN; CDKlq: if (isset($prop["\144\x65\146\141\x75\x6c\x74\x56\141\154\x75\145"])) { $opt["\144\166"] = $prop["\x64\145\x66\x61\x75\x6c\x74\126\x61\x6c\165\145"]; } goto W3_xl; pXrPL: if (isset($prop["\x6d\165\x6c\164\151\x6c\151\x6e\145"]) and $prop["\155\x75\154\x74\151\154\x69\156\x65"] == "\164\162\165\145") { $ff += 1 << 12; } goto q4zlh; db3GL: if (isset($prop["\x61\x6f\160\164"]) and is_array($prop["\x61\x6f\160\164"])) { return $prop["\141\x6f\160\164"]; } goto i3DQV; wRJvN: if (isset($prop["\123\157\x72\164"]) and $prop["\123\x6f\162\164"] == "\164\x72\165\x65") { $ff += 1 << 19; } goto uWp9G; erLGR: if (isset($prop["\144\157\116\157\x74\123\x63\162\157\154\154"]) and $prop["\144\x6f\116\157\164\123\x63\x72\x6f\x6c\154"] == "\164\x72\x75\145") { $ff += 1 << 23; } goto Z3rFL; kjyl1: $opt["\x66"] = $f; goto vVNVJ; D9RgI: if (!isset($opt["\x6d\153"])) { $opt["\155\x6b"] = array(); } goto b91r7; jUjhy: if (isset($prop["\142\x75\x74\x74\x6f\x6e\101\x6c\x69\x67\x6e\130"])) { $opt["\155\153"]["\x69\x66"]["\x61"][0] = $prop["\142\x75\164\164\157\x6e\101\154\151\x67\x6e\x58"]; } goto Q5rUj; L6aNx: if (isset($prop["\142\x75\164\164\157\156\x53\x63\x61\x6c\x65\x57\150\145\156"])) { switch ($prop["\x62\165\x74\x74\x6f\156\123\x63\141\154\145\x57\150\145\x6e"]) { case "\x73\143\x61\154\x65\127\x68\145\x6e\56\141\x6c\x77\x61\x79\x73": $opt["\155\x6b"]["\x69\x66"]["\163\167"] = "\101"; break; case "\x73\x63\x61\x6c\145\x57\150\145\156\56\x6e\145\x76\145\x72": $opt["\155\x6b"]["\x69\x66"]["\163\x77"] = "\x4e"; break; case "\163\x63\x61\154\x65\x57\150\145\x6e\x2e\x74\157\157\x42\151\147": $opt["\155\x6b"]["\151\146"]["\163\x77"] = "\x42"; break; case "\x73\x63\141\x6c\145\x57\150\x65\156\56\164\157\x6f\x53\x6d\x61\154\154": $opt["\155\x6b"]["\151\146"]["\x73\x77"] = "\123"; break; } } goto D_M0f; vre0J: if (isset($prop["\x43\x6f\155\142\x6f"]) and $prop["\x43\x6f\x6d\142\157"] == "\164\162\x75\145") { $ff += 1 << 17; } goto PWPRr; aQ7VL: $opt["\155\x6b"]["\x69\146"]["\141"] = array(0.5, 0.5); goto jUjhy; UrU4B: if (isset($prop["\165\163\145\162\x4e\141\155\145"])) { $opt["\x74\x75"] = $prop["\165\163\145\x72\116\x61\155\x65"]; } goto LAye5; rn5DX: if (isset($prop["\x61\x6c\x69\147\x6e\155\145\156\164"])) { switch ($prop["\x61\154\x69\147\x6e\155\x65\156\x74"]) { case "\154\x65\146\x74": $opt["\161"] = 0; break; case "\143\x65\x6e\x74\x65\x72": $opt["\x71"] = 1; break; case "\x72\151\147\x68\164": $opt["\161"] = 2; break; default: $opt["\x71"] = $rtl ? 2 : 0; break; } } goto FFTBN; Z3rFL: if (isset($prop["\143\x6f\x6d\x62"]) and $prop["\143\x6f\x6d\142"] == "\164\x72\165\x65") { $ff += 1 << 24; } goto YTrr1; fAtAW: if (isset($prop["\x63\150\141\x72\114\151\x6d\x69\x74"])) { $opt["\x6d\141\170\x6c\145\156"] = intval($prop["\143\150\x61\162\x4c\151\x6d\151\164"]); } goto vkNX2; ATTUN: if (isset($prop["\122\x61\144\151\x6f"]) and $prop["\122\141\x64\151\157"] == "\164\162\165\x65") { $ff += 1 << 15; } goto pjY83; mUaFJ: if (isset($prop["\x62\x75\164\x74\x6f\x6e\x53\143\141\x6c\x65\x48\157\167"])) { switch ($prop["\x62\165\164\164\x6f\x6e\x53\143\141\154\x65\110\157\x77"]) { case "\163\x63\x61\x6c\x65\110\157\167\x2e\x70\162\x6f\x70\157\x72\164\x69\x6f\156\x61\154": $opt["\155\x6b"]["\151\146"]["\163"] = "\x50"; break; case "\x73\x63\x61\x6c\145\110\157\167\x2e\141\x6e\141\155\x6f\x72\160\150\151\143": $opt["\x6d\153"]["\151\146"]["\163"] = "\x41"; break; } } goto L6aNx; FFTBN: if (isset($prop["\x6c\x69\x6e\x65\127\x69\x64\164\150"])) { $linewidth = intval($prop["\x6c\151\156\145\127\x69\x64\164\x68"]); } else { $linewidth = 1; } goto awzgQ; h9N0p: if (isset($prop["\155\x75\x6c\164\x69\160\x6c\x65\x53\x65\x6c\145\143\164\x69\157\x6e"]) and $prop["\155\x75\154\x74\151\160\154\x65\123\145\x6c\x65\x63\164\151\157\x6e"] == "\164\162\165\x65") { $ff += 1 << 21; } goto btBYf; ntUfd: if (isset($prop["\156\x61\155\145"])) { $opt["\x74"] = $prop["\156\141\x6d\145"]; } goto UrU4B; pjY83: if (isset($prop["\120\x75\x73\x68\142\x75\164\164\x6f\x6e"]) and $prop["\x50\x75\163\150\142\165\x74\164\157\156"] == "\x74\162\x75\x65") { $ff += 1 << 16; } goto vre0J; PbHu3: if (isset($prop["\x72\145\x61\144\157\156\x6c\x79"]) and $prop["\162\x65\x61\x64\157\156\154\171"] == "\164\162\165\x65") { $ff += 1 << 0; } goto LJaLD; b91r7: if (!isset($opt["\155\153"]["\x69\x66"])) { $opt["\x6d\153"]["\x69\146"] = array(); } goto aQ7VL; u0VFa: } public static function formatPageNumber($num) { return number_format((float) $num, 0, '', "\x2e"); } public static function formatTOCPageNumber($num) { return number_format((float) $num, 0, '', "\56"); } public static function extractCSSproperties($cssdata) { goto uRtw1; RYg3N: $cssdata = preg_replace("\57\134\57\x5c\x2a\x5b\x5e\134\x2a\135\52\x5c\x2a\134\x2f\57", '', $cssdata); goto S98hZ; aV714: $cssdata = preg_replace("\57\x5b\134\x73\x5d\52\x28\133\x3b\72\x5c\x7b\x5c\175\135\x7b\x31\x7d\x29\x5b\134\x73\135\x2a\57", "\x5c\61", $cssdata); goto VQ_S6; uRtw1: if (empty($cssdata)) { return array(); } goto RYg3N; MP4kS: $cssblocks = array(); goto n2CeR; haHzH: $cssdata = array(); goto AG26Y; VQ_S6: $cssdata = preg_replace("\57\50\x5b\x5e\x5c\x7d\134\173\x5d\x2b\x29\x5c\173\134\175\57", '', $cssdata); goto O5CQ6; uDIxT: $matches = array(); goto z06Xf; FFnyc: if (isset($cssblocks["\x70\162\x69\156\164"]) and !empty($cssblocks["\160\162\x69\x6e\164"])) { $cssdata .= $cssblocks["\x70\x72\x69\x6e\164"]; } goto MP4kS; AG26Y: foreach ($cssblocks as $block) { goto xvyST; KVcpQ: $c = intval(preg_match_all("\57\x5b\134\133\x5c\56\x5d\x2f", $selector, $matches)); goto bbJ7f; yYKYl: $specificity = $a . $b . $c . $d; goto uARUg; uARUg: $cssdata[$specificity . "\40" . $selector] = $block[1]; goto z_0zq; bbJ7f: $c += intval(preg_match_all("\57\133\134\72\x5d\x6c\151\156\153\174\166\x69\x73\151\164\x65\144\174\x68\x6f\x76\145\162\x7c\141\x63\164\151\x76\x65\174\x66\157\143\165\x73\174\164\141\162\x67\145\x74\x7c\154\x61\156\147\174\x65\x6e\141\142\154\145\x64\174\x64\151\163\141\142\154\145\x64\x7c\143\x68\145\143\x6b\x65\x64\x7c\x69\156\144\145\164\145\162\155\x69\x6e\x61\164\x65\174\x72\157\x6f\x74\174\x6e\164\150\174\x66\x69\x72\163\164\174\x6c\141\163\x74\174\x6f\x6e\x6c\171\x7c\x65\x6d\160\x74\171\x7c\143\x6f\156\x74\141\151\x6e\163\174\x6e\157\x74\x2f\151", $selector, $matches)); goto cpZlU; usJRe: $d += intval(preg_match_all("\57\x5b\x5c\x3a\135\133\134\x3a\135\x2f", $selector, $matches)); goto yYKYl; lQie9: $matches = array(); goto ZGb64; ZGb64: $a = 0; goto mCGON; mCGON: $b = intval(preg_match_all("\57\x5b\134\x23\x5d\x2f", $selector, $matches)); goto KVcpQ; xvyST: $selector = $block[0]; goto lQie9; cpZlU: $d = intval(preg_match_all("\x2f\x5b\x5c\x3e\x5c\53\134\x7e\134\163\x5d\173\61\175\x5b\141\x2d\x7a\101\x2d\x5a\x30\55\x39\x5d\x2b\57", "\x20" . $selector, $matches)); goto usJRe; z_0zq: } goto vt0wf; Rczc6: $cssdata = trim($cssdata); goto AwI2J; AwI2J: $cssblocks = array(); goto uDIxT; TV7Yo: foreach ($cssblocks as $key => $block) { if (strpos($block[0], "\x2c") > 0) { goto w95Ch; w95Ch: $selectors = explode("\x2c", $block[0]); goto OMomj; OMomj: foreach ($selectors as $sel) { $cssblocks[] = array(0 => trim($sel), 1 => $block[1]); } goto CfYYZ; CfYYZ: unset($cssblocks[$key]); goto FwMGN; FwMGN: } } goto haHzH; n2CeR: $matches = array(); goto RFopy; S98hZ: $cssdata = preg_replace("\57\133\134\163\135\x2b\57", "\x20", $cssdata); goto aV714; RLIz1: foreach ($matches as $key => $block) { $cssblocks[$key] = explode("\x7b", $block); if (!isset($cssblocks[$key][1])) { unset($cssblocks[$key]); } } goto TV7Yo; z06Xf: if (preg_match_all("\x2f\100\x6d\145\x64\151\141\x5b\x5c\163\135\53\50\133\136\x5c\xc2\247\x5d\x2a\51\302\xa7\50\133\x5e\302\xa7\135\x2a\51\302\xa7\57\x69", $cssdata, $matches) > 0) { foreach ($matches[1] as $key => $type) { $cssblocks[$type] = $matches[2][$key]; } $cssdata = preg_replace("\57\x40\155\145\x64\151\x61\133\x5c\163\135\x2b\x28\x5b\136\134\xc2\247\135\x2a\51\302\247\x28\133\x5e\302\247\135\52\x29\xc2\247\57\151", '', $cssdata); } goto rJdyP; O5CQ6: $cssdata = preg_replace("\57\x40\155\x65\144\x69\x61\x5b\x5c\163\135\53\x28\x5b\x5e\134\173\x5d\52\x29\x5c\x7b\x2f\151", "\x40\x6d\145\144\151\141\x20\134\61\xc2\xa7", $cssdata); goto VvOId; VvOId: $cssdata = preg_replace("\57\134\x7d\x5c\x7d\x2f\163\151", "\175\302\xa7", $cssdata); goto Rczc6; FZvkZ: return $cssdata; goto BV6Kd; rJdyP: if (isset($cssblocks["\141\x6c\x6c"]) and !empty($cssblocks["\141\x6c\154"])) { $cssdata .= $cssblocks["\141\x6c\154"]; } goto FFnyc; JgRhk: $matches = explode("\x7d", $cssdata); goto RLIz1; vt0wf: ksort($cssdata, SORT_STRING); goto FZvkZ; RFopy: if (substr($cssdata, -1) == "\x7d") { $cssdata = substr($cssdata, 0, -1); } goto JgRhk; BV6Kd: } public static function fixHTMLCode($html, $default_css = '', $tagvs = '', $tidy_options = '', &$tagvspaces) { goto CUh6T; A6HZD: return $css . $html; goto M8LUa; ZT_Bj: $tidy->cleanRepair(); goto k2wv7; ZqcO8: $css = str_replace("\57\x2a\74\x21\x5b\103\104\x41\x54\101\133\52\x2f", '', $css); goto ICet0; B9Gau: if ($tagvs !== '') { $tagvspaces = $tagvs; } goto A6HZD; tqsSs: $html = preg_replace("\57\74\160\x28\133\x5e\x5c\x3e\x5d\x2a\x29\x3e\74\x5c\x2f\160\x3e\x2f", '', $html); goto B9Gau; GIEvQ: $tidy_body = tidy_get_body($tidy); goto VdCS8; Yg19j: $tidy = tidy_parse_string($html, $tidy_options); goto ZT_Bj; p9UEl: $css = $tidy_head->value; goto dgq6z; onCbh: $css = preg_replace("\x2f\74\x5c\57\163\164\171\154\145\76\50\x2e\52\x29\74\163\x74\171\x6c\145\x3e\x2f\151\155\x73", "\12", $css); goto ZqcO8; YmK0b: $html = preg_replace("\57\74\144\x69\x76\x28\133\136\x5c\x3e\135\52\51\76\x3c\134\57\x64\x69\166\76\57", '', $html); goto tqsSs; CUh6T: if ($tidy_options === '') { $tidy_options = array("\x63\154\x65\x61\x6e" => 1, "\x64\162\157\x70\55\145\155\x70\164\171\55\160\x61\162\141\x73" => 0, "\144\x72\x6f\x70\55\x70\162\157\x70\x72\151\x65\164\x61\162\x79\55\141\164\x74\162\151\142\165\x74\145\x73" => 1, "\x66\x69\x78\55\x62\x61\x63\x6b\163\154\141\163\x68" => 1, "\x68\151\144\145\x2d\x63\x6f\x6d\155\145\x6e\164\163" => 1, "\x6a\157\x69\x6e\x2d\163\164\x79\154\x65\x73" => 1, "\x6c\157\x77\145\x72\55\x6c\x69\164\x65\x72\x61\154\163" => 1, "\155\145\x72\x67\x65\55\144\151\166\163" => 1, "\155\x65\x72\x67\145\55\163\160\141\x6e\x73" => 1, "\157\x75\164\x70\165\164\x2d\x78\150\x74\x6d\154" => 1, "\x77\157\x72\x64\x2d\62\60\x30\60" => 1, "\167\162\x61\160" => 0, "\157\165\164\160\x75\x74\55\142\157\x6d" => 0); } goto Yg19j; sHxTb: $html = str_replace("\x3c\142\x72\x3e", "\74\x62\162\40\x2f\x3e", $html); goto YmK0b; k2wv7: $tidy_head = tidy_get_head($tidy); goto p9UEl; Ed7Py: $css = "\x3c\163\x74\x79\x6c\x65\76" . $default_css . $css . "\74\x2f\x73\x74\x79\x6c\145\x3e"; goto GIEvQ; ICet0: $css = str_replace("\57\52\135\x5d\76\52\x2f", '', $css); goto ja0HE; VdCS8: $html = $tidy_body->value; goto sHxTb; ja0HE: preg_match("\57\x3c\163\164\171\154\x65\x3e\50\x2e\x2a\51\x3c\134\57\163\x74\171\154\x65\x3e\x2f\x69\155\x73", $css, $matches); goto sLErC; dgq6z: $css = preg_replace("\57\x3c\x73\164\x79\x6c\x65\x28\133\x5e\x3e\135\x2b\51\76\x2f\151\155\x73", "\74\x73\164\171\x6c\145\76", $css); goto onCbh; sLErC: if (isset($matches[1])) { $css = strtolower($matches[1]); } else { $css = ''; } goto Ed7Py; M8LUa: } public static function isValidCSSSelectorForTag($dom, $key, $selector) { goto Bojnm; RMnBq: if (preg_match_all("\x2f\50\x5b\134\x3e\134\53\134\176\134\x73\135\x7b\61\x7d\x29\50\133\141\x2d\172\x41\x2d\x5a\60\55\71\x5c\52\135\53\x29\50\x5b\136\x5c\76\134\x2b\x5c\176\134\x73\135\x2a\51\57\x73\151", $selector, $matches, PREG_PATTERN_ORDER | PREG_OFFSET_CAPTURE) > 0) { goto phqXo; zDKd2: $lasttag = strtolower(trim($lasttag[0])); goto tRnrM; tRnrM: if ($lasttag == "\52" or $lasttag == $tag) { goto d4bFZ; d4bFZ: $attrib = array_pop($matches[3]); goto file8; file8: $attrib = strtolower(trim($attrib[0])); goto e2JLN; S08Mf: if ($valid and $offset > 0) { goto b_KUw; b_KUw: $valid = false; goto j9nOD; pvijR: switch ($operator) { case "\40": while ($dom[$key]["\x70\141\162\x65\156\x74"] > 0) { if (self::isValidCSSSelectorForTag($dom, $dom[$key]["\x70\x61\x72\x65\x6e\x74"], $selector)) { $valid = true; break; } else { $key = $dom[$key]["\160\141\x72\x65\x6e\x74"]; } } break; case "\76": $valid = self::isValidCSSSelectorForTag($dom, $dom[$key]["\160\x61\162\145\x6e\164"], $selector); break; case "\x2b": for ($i = $key - 1; $i > $dom[$key]["\x70\141\162\x65\156\164"]; --$i) { if ($dom[$i]["\164\141\x67"] and $dom[$i]["\x6f\160\145\156\151\x6e\147"]) { $valid = self::isValidCSSSelectorForTag($dom, $i, $selector); break; } } break; case "\x7e": for ($i = $key - 1; $i > $dom[$key]["\x70\141\162\x65\156\164"]; --$i) { if ($dom[$i]["\164\x61\147"] and $dom[$i]["\157\160\x65\156\x69\x6e\147"]) { if (self::isValidCSSSelectorForTag($dom, $i, $selector)) { break; } } } break; } goto k9_Jj; j9nOD: $selector = substr($selector, 0, $offset); goto pvijR; k9_Jj: } goto CTjIs; e2JLN: if (!empty($attrib)) { switch ($attrib[0]) { case "\x2e": if (in_array(substr($attrib, 1), $class)) { $valid = true; } break; case "\x23": if (substr($attrib, 1) == $id) { $valid = true; } break; case "\x5b": goto F6mS0; F6mS0: $attrmatch = array(); goto p3QlW; GceMN: break; goto LdqMg; p3QlW: if (preg_match("\x2f\x5c\x5b\50\133\x61\x2d\172\x41\x2d\x5a\x30\x2d\71\135\52\51\133\134\x73\135\52\50\x5b\134\176\x5c\x5e\x5c\44\134\x2a\134\x7c\x5c\75\x5d\52\x29\133\x5c\163\x5d\52\x5b\x22\135\x3f\x28\x5b\136\x22\x5c\x5d\135\52\51\133\42\x5d\x3f\134\135\57\151", $attrib, $attrmatch) > 0) { goto SuNXr; WgG_j: if (isset($dom[$key]["\x61\164\x74\x72\x69\x62\x75\164\145"][$att])) { switch ($attrmatch[2]) { case "\75": if ($dom[$key]["\141\164\x74\x72\151\x62\165\x74\145"][$att] == $val) { $valid = true; } break; case "\176\75": if (in_array($val, explode("\40", $dom[$key]["\141\x74\x74\162\x69\x62\x75\x74\145"][$att]))) { $valid = true; } break; case "\x5e\75": if ($val == substr($dom[$key]["\x61\x74\x74\x72\x69\x62\x75\164\145"][$att], 0, strlen($val))) { $valid = true; } break; case "\44\x3d": if ($val == substr($dom[$key]["\x61\164\164\x72\x69\142\165\164\x65"][$att], -strlen($val))) { $valid = true; } break; case "\x2a\75": if (strpos($dom[$key]["\x61\164\x74\162\x69\x62\x75\164\x65"][$att], $val) !== false) { $valid = true; } break; case "\174\75": if ($dom[$key]["\141\x74\164\x72\x69\x62\165\164\x65"][$att] == $val) { $valid = true; } elseif (preg_match("\57" . $val . "\133\134\55\x5d\173\61\x7d\57\151", $dom[$key]["\x61\x74\164\x72\151\x62\x75\164\x65"][$att]) > 0) { $valid = true; } break; default: $valid = true; } } goto tAsKK; XGHwT: $val = $attrmatch[3]; goto WgG_j; SuNXr: $att = strtolower($attrmatch[1]); goto XGHwT; tAsKK: } goto GceMN; LdqMg: case "\x3a": if ($attrib[1] == "\72") { } else { } break; } } else { $valid = true; } goto S08Mf; CTjIs: } goto jrgTH; MkkpK: $offset = $parentop[1]; goto fYzIf; B40m2: $operator = $parentop[0]; goto MkkpK; phqXo: $parentop = array_pop($matches[1]); goto B40m2; fYzIf: $lasttag = array_pop($matches[2]); goto zDKd2; jrgTH: } goto yOAjR; LwRY8: if (isset($dom[$key]["\141\x74\x74\162\x69\142\165\164\x65"]["\x69\x64"]) and !empty($dom[$key]["\141\x74\164\x72\x69\x62\x75\x74\x65"]["\x69\144"])) { $id = strtolower($dom[$key]["\x61\164\164\162\151\142\x75\164\145"]["\151\x64"]); } goto alc6F; vm1Su: $id = ''; goto LwRY8; alc6F: $selector = preg_replace("\57\50\x5b\x5c\x3e\x5c\53\x5c\x7e\x5c\x73\135\x7b\61\175\51\x28\x5b\x5c\56\135\x7b\61\175\51\50\133\x5e\134\x3e\134\x2b\x5c\x7e\134\163\135\x2a\51\57\163\151", "\x5c\x31\52\56\134\x33", $selector); goto EcMCz; EcMCz: $matches = array(); goto RMnBq; tjze6: $tag = $dom[$key]["\x76\141\x6c\x75\x65"]; goto UeSfN; Ufnsz: if (isset($dom[$key]["\x61\164\x74\x72\151\142\x75\164\145"]["\143\x6c\141\x73\x73"]) and !empty($dom[$key]["\x61\164\x74\x72\x69\x62\165\x74\145"]["\x63\x6c\x61\x73\163"])) { $class = explode("\40", strtolower($dom[$key]["\141\x74\164\x72\x69\x62\x75\164\145"]["\143\154\141\163\163"])); } goto vm1Su; UeSfN: $class = array(); goto Ufnsz; Bojnm: $valid = false; goto tjze6; yOAjR: return $valid; goto dJPsm; dJPsm: } public static function getCSSdataArray($dom, $key, $css) { goto lHkUL; XWMTY: ksort($cssordered, SORT_STRING); goto bTN7g; Rwokc: $cssordered = array(); goto v9GAG; s6py1: $selectors = array(); goto GNEnT; EQMFa: if (isset($dom[$key]["\141\164\x74\x72\151\x62\165\x74\x65"]["\163\x74\171\x6c\145"])) { $cssarray[] = array("\153" => '', "\x73" => "\x31\x30\x30\x30", "\x63" => $dom[$key]["\141\x74\x74\162\x69\x62\x75\x74\x65"]["\163\164\171\x6c\145"]); } goto Rwokc; bMgpN: foreach ($css as $selector => $style) { goto e25KQ; e25KQ: $pos = strpos($selector, "\x20"); goto FE8NU; TrLz0: $selector = substr($selector, $pos); goto zdFri; zdFri: if (self::isValidCSSSelectorForTag($dom, $key, $selector)) { if (!in_array($selector, $selectors)) { $cssarray[] = array("\x6b" => $selector, "\x73" => $specificity, "\143" => $style); $selectors[] = $selector; } } goto sXVcY; FE8NU: $specificity = substr($selector, 0, $pos); goto TrLz0; sXVcY: } goto EQMFa; lHkUL: $cssarray = array(); goto s6py1; v9GAG: foreach ($cssarray as $key => $val) { $skey = sprintf("\x25\60\64\x64", $key); $cssordered[$val["\163"] . "\x5f" . $skey] = $val; } goto XWMTY; bTN7g: return array($selectors, $cssordered); goto pkHcY; GNEnT: if (isset($dom[$dom[$key]["\160\x61\x72\x65\156\164"]]["\143\163\163\163\145\x6c"])) { $selectors = $dom[$dom[$key]["\x70\141\162\x65\156\x74"]]["\143\x73\163\163\145\154"]; } goto bMgpN; pkHcY: } public static function getTagStyleFromCSSarray($css) { goto MKqR2; CiHmc: foreach ($css as $style) { goto kRo1c; M4wxF: foreach ($csscmds as $cmd) { if (!empty($cmd)) { $pos = strpos($cmd, "\x3a"); if ($pos !== false) { $cmd = substr($cmd, 0, $pos + 1); if (strpos($tagstyle, $cmd) !== false) { $tagstyle = preg_replace("\57" . $cmd . "\x5b\136\73\x5d\53\57\x69", '', $tagstyle); } } } } goto T0oE1; T0oE1: $tagstyle .= "\73" . $style["\x63"]; goto Uf2Go; kRo1c: $csscmds = explode("\73", $style["\x63"]); goto M4wxF; Uf2Go: } goto e7aH6; MKqR2: $tagstyle = ''; goto CiHmc; e7aH6: $tagstyle = preg_replace("\57\x5b\73\x5d\53\57", "\73", $tagstyle); goto kFhW3; kFhW3: return $tagstyle; goto RWcOv; RWcOv: } public static function intToRoman($number) { goto TZ8nJ; yQTEA: while ($number >= 9) { $roman .= "\x49\130"; $number -= 9; } goto ZNob2; uvQlo: while ($number >= 50) { $roman .= "\114"; $number -= 50; } goto DRKoV; dDSTT: while ($number >= 1) { $roman .= "\111"; --$number; } goto JsrLb; ZNob2: while ($number >= 5) { $roman .= "\x56"; $number -= 5; } goto OxT06; ejYIi: while ($number >= 500) { $roman .= "\104"; $number -= 500; } goto Ypijf; QAukK: while ($number >= 90) { $roman .= "\130\x43"; $number -= 90; } goto uvQlo; OxT06: while ($number >= 4) { $roman .= "\111\x56"; $number -= 4; } goto dDSTT; FfWYZ: while ($number >= 10) { $roman .= "\130"; $number -= 10; } goto yQTEA; G4oO9: while ($number >= 100) { $roman .= "\103"; $number -= 100; } goto QAukK; Ypijf: while ($number >= 400) { $roman .= "\x43\104"; $number -= 400; } goto G4oO9; TZ8nJ: $roman = ''; goto KX7kj; JsrLb: return $roman; goto a96EM; DRKoV: while ($number >= 40) { $roman .= "\130\114"; $number -= 40; } goto FfWYZ; KX7kj: while ($number >= 1000) { $roman .= "\115"; $number -= 1000; } goto blx2e; blx2e: while ($number >= 900) { $roman .= "\x43\x4d"; $number -= 900; } goto ejYIi; a96EM: } public static function revstrpos($haystack, $needle, $offset = 0) { goto BOflf; BOflf: $length = strlen($haystack); goto bYCgM; nfKFU: $pos = strpos(strrev($haystack), strrev($needle), $offset); goto CM8Fv; CM8Fv: return $pos === false ? false : $length - $pos - strlen($needle); goto WEPOo; bYCgM: $offset = $offset > 0 ? $length - $offset : abs($offset); goto nfKFU; WEPOo: } public static function getHyphenPatternsFromTEX($file) { goto Cgg1x; QR55a: return $patterns; goto MOu8P; cuiIg: $data = trim(substr($matches[0], 10, -1)); goto k1TtA; iYkho: $data = preg_replace("\57\x5c\45\x5b\136\134\156\x5d\52\x2f", '', $data); goto as1sB; k1TtA: $patterns_array = preg_split("\x2f\133\134\x73\x5d\x2b\57", $data); goto T9jOx; as1sB: preg_match("\x2f\x5c\134\x70\141\x74\x74\x65\x72\156\163\x5c\x7b\x28\133\136\134\175\135\52\51\134\175\x2f\x69", $data, $matches); goto cuiIg; FBL55: foreach ($patterns_array as $val) { if (!TCPDF_STATIC::empty_string($val)) { goto LZPTh; dCLbJ: $patterns[$key] = $val; goto e1jg3; LZPTh: $val = trim($val); goto YhnaN; YhnaN: $val = str_replace("\47", "\x5c\47", $val); goto SWrHq; SWrHq: $key = preg_replace("\57\x5b\60\55\71\x5d\53\57", '', $val); goto dCLbJ; e1jg3: } } goto QR55a; T9jOx: $patterns = array(); goto FBL55; vjj4S: $patterns = array(); goto iYkho; Cgg1x: $data = file_get_contents($file); goto vjj4S; MOu8P: } public static function getPathPaintOperator($style, $default = "\x53") { goto Xf9eX; uOxmj: return $op; goto jfyUb; Hmbqz: switch ($style) { case "\x53": case "\x44": $op = "\123"; break; case "\163": case "\144": $op = "\163"; break; case "\146": case "\106": $op = "\146"; break; case "\146\x2a": case "\106\52": $op = "\146\52"; break; case "\102": case "\106\104": case "\x44\106": $op = "\102"; break; case "\102\52": case "\x46\52\104": case "\104\106\52": $op = "\102\52"; break; case "\142": case "\146\x64": case "\144\x66": $op = "\142"; break; case "\142\52": case "\146\52\x64": case "\x64\x66\52": $op = "\142\52"; break; case "\103\x4e\x5a": $op = "\127\40\156"; break; case "\x43\x45\117": $op = "\127\52\40\156"; break; case "\x6e": $op = "\x6e"; break; default: if (!empty($default)) { $op = self::getPathPaintOperator($default, ''); } else { $op = ''; } } goto uOxmj; Xf9eX: $op = ''; goto Hmbqz; jfyUb: } public static function getTransformationMatrixProduct($ta, $tb) { goto ezP_p; DSYTH: $tm[1] = $ta[1] * $tb[0] + $ta[3] * $tb[1]; goto GvS6p; Q3gJV: $tm[5] = $ta[1] * $tb[4] + $ta[3] * $tb[5] + $ta[5]; goto QLPZ7; Y02jC: $tm[4] = $ta[0] * $tb[4] + $ta[2] * $tb[5] + $ta[4]; goto Q3gJV; CWX0c: $tm[3] = $ta[1] * $tb[2] + $ta[3] * $tb[3]; goto Y02jC; QLPZ7: return $tm; goto HCa_b; GvS6p: $tm[2] = $ta[0] * $tb[2] + $ta[2] * $tb[3]; goto CWX0c; ezP_p: $tm = array(); goto tRty1; tRty1: $tm[0] = $ta[0] * $tb[0] + $ta[2] * $tb[1]; goto DSYTH; HCa_b: } public static function getSVGTransformMatrix($attribute) { goto KHaiz; KNzfA: return $tm; goto m113p; djLzh: $transform = array(); goto i_dnB; i_dnB: if (preg_match_all("\57\50\x6d\141\x74\x72\151\170\174\x74\x72\x61\156\163\x6c\141\x74\145\174\163\x63\x61\154\x65\174\162\x6f\164\x61\x74\145\174\163\153\x65\167\130\x7c\163\x6b\145\167\x59\x29\x5b\134\163\x5d\x2a\x5c\x28\50\133\x5e\134\51\x5d\x2b\x29\134\51\57\x73\x69", $attribute, $transform, PREG_SET_ORDER) > 0) { foreach ($transform as $key => $data) { if (!empty($data[2])) { goto Fc19q; m5aMV: $c = 0; goto VXeMD; faEmm: $b = 0; goto m5aMV; VXeMD: $d = 1; goto O9YUG; mv0qD: $tm = self::getTransformationMatrixProduct($tm, array($a, $b, $c, $d, $e, $f)); goto wHGRq; Fc19q: $a = 1; goto faEmm; DBBkV: switch ($data[1]) { case "\x6d\x61\164\162\151\170": if (preg_match("\x2f\50\133\x61\55\172\60\55\71\x5c\x2d\x5c\56\x5d\53\x29\x5b\134\54\134\x73\135\53\x28\133\x61\55\x7a\x30\55\x39\134\55\x5c\56\135\53\x29\x5b\x5c\54\134\163\x5d\x2b\x28\133\141\55\172\x30\55\x39\x5c\x2d\x5c\56\135\53\x29\133\134\x2c\x5c\x73\135\53\x28\133\x61\55\172\60\55\71\x5c\x2d\134\56\x5d\53\51\x5b\134\54\134\163\135\x2b\50\133\141\x2d\x7a\x30\55\71\x5c\x2d\134\56\135\53\x29\133\x5c\x2c\134\x73\135\53\50\x5b\x61\x2d\x7a\60\55\71\134\x2d\x5c\56\135\x2b\51\57\x73\x69", $data[2], $regs)) { goto LXQCR; MyMz0: $d = $regs[4]; goto h3zry; PHnvX: $f = $regs[6]; goto INdyN; XNvHn: $c = $regs[3]; goto MyMz0; LXQCR: $a = $regs[1]; goto gXuhv; gXuhv: $b = $regs[2]; goto XNvHn; h3zry: $e = $regs[5]; goto PHnvX; INdyN: } break; case "\x74\162\x61\156\x73\154\x61\164\x65": if (preg_match("\57\50\x5b\x61\x2d\x7a\60\55\x39\x5c\55\x5c\x2e\x5d\x2b\51\133\134\x2c\x5c\x73\x5d\x2b\50\x5b\x61\x2d\x7a\60\55\71\134\55\x5c\x2e\x5d\x2b\x29\57\x73\151", $data[2], $regs)) { $e = $regs[1]; $f = $regs[2]; } elseif (preg_match("\57\x28\x5b\141\55\x7a\60\x2d\71\134\x2d\134\x2e\135\x2b\51\57\163\x69", $data[2], $regs)) { $e = $regs[1]; } break; case "\163\x63\141\x6c\x65": if (preg_match("\x2f\x28\x5b\141\55\172\x30\55\71\x5c\55\x5c\x2e\x5d\x2b\51\133\134\54\134\x73\x5d\x2b\50\133\x61\55\x7a\x30\x2d\71\x5c\x2d\134\56\x5d\x2b\x29\x2f\x73\151", $data[2], $regs)) { $a = $regs[1]; $d = $regs[2]; } elseif (preg_match("\x2f\x28\133\141\x2d\x7a\60\55\x39\134\x2d\134\56\135\x2b\x29\57\163\x69", $data[2], $regs)) { $a = $regs[1]; $d = $a; } break; case "\x72\x6f\164\x61\164\145": if (preg_match("\57\50\x5b\x30\x2d\71\x5c\55\134\x2e\x5d\x2b\x29\x5b\134\x2c\134\x73\x5d\53\50\133\141\x2d\x7a\x30\x2d\71\x5c\x2d\134\x2e\135\53\51\133\x5c\x2c\134\163\135\x2b\x28\x5b\141\55\x7a\60\55\x39\134\55\134\x2e\135\53\51\57\x73\151", $data[2], $regs)) { goto fmsYW; uk467: $b = sin($ang); goto Ho376; ybBZ5: $f = $y * (1 - $d) - $x * $b; goto u5I8w; fmsYW: $ang = deg2rad($regs[1]); goto Du6hw; cLd_T: $e = $x * (1 - $a) - $y * $c; goto ybBZ5; ozsaL: $y = $regs[3]; goto feh98; feh98: $a = cos($ang); goto uk467; Ho376: $c = -$b; goto sbDyF; sbDyF: $d = $a; goto cLd_T; Du6hw: $x = $regs[2]; goto ozsaL; u5I8w: } elseif (preg_match("\57\50\x5b\60\x2d\x39\x5c\55\x5c\56\x5d\x2b\x29\57\163\151", $data[2], $regs)) { goto IcXlV; L2y84: $c = -$b; goto lkSHh; lkSHh: $d = $a; goto B0aCQ; TUWRy: $b = sin($ang); goto L2y84; IcXlV: $ang = deg2rad($regs[1]); goto GYvG2; B0aCQ: $e = 0; goto L2R5C; L2R5C: $f = 0; goto rrbJ2; GYvG2: $a = cos($ang); goto TUWRy; rrbJ2: } break; case "\x73\153\145\x77\130": if (preg_match("\x2f\50\x5b\x30\55\x39\134\55\134\x2e\x5d\x2b\x29\x2f\163\x69", $data[2], $regs)) { $c = tan(deg2rad($regs[1])); } break; case "\163\x6b\x65\167\131": if (preg_match("\x2f\50\133\x30\x2d\71\x5c\55\x5c\x2e\135\x2b\51\57\163\151", $data[2], $regs)) { $b = tan(deg2rad($regs[1])); } break; } goto mv0qD; DyXPY: $regs = array(); goto DBBkV; t2Y1c: $f = 0; goto DyXPY; O9YUG: $e = 0; goto t2Y1c; wHGRq: } } } goto KNzfA; KHaiz: $tm = array(1, 0, 0, 1, 0, 0); goto djLzh; m113p: } public static function getVectorsAngle($x1, $y1, $x2, $y2) { goto rUEKp; G0U_P: $dist1 = sqrt($x1 * $x1 + $y1 * $y1); goto dQKp1; dQKp1: $dist2 = sqrt($x2 * $x2 + $y2 * $y2); goto a8nkX; rUEKp: $dprod = $x1 * $x2 + $y1 * $y2; goto G0U_P; a8nkX: $angle = acos($dprod / ($dist1 * $dist2)); goto Z58rU; zTS2f: return $angle; goto xJ_tS; CCQpp: if ($x1 * $y2 - $x2 * $y1 < 0) { $angle *= -1; } goto zTS2f; Z58rU: if (is_nan($angle)) { $angle = M_PI; } goto CCQpp; xJ_tS: } public static function pregSplit($pattern, $modifiers, $subject, $limit = NULL, $flags = NULL) { goto ofG1r; Qlj8Q: $ret = array(); goto BS1SP; ofG1r: if (strpos($modifiers, "\x75") === FALSE or count(preg_split("\x2f\57\165", "\12\x9", -1, PREG_SPLIT_NO_EMPTY)) == 2) { return preg_split($pattern . $modifiers, $subject, $limit, $flags); } goto Qlj8Q; BS1SP: while (($nl = strpos($subject, "\12")) !== FALSE) { $ret = array_merge($ret, preg_split($pattern . $modifiers, substr($subject, 0, $nl), $limit, $flags)); $ret[] = "\xa"; $subject = substr($subject, $nl + 1); } goto hVwvt; lHCiV: return $ret; goto m1dYR; hVwvt: if (strlen($subject) > 0) { $ret = array_merge($ret, preg_split($pattern . $modifiers, $subject, $limit, $flags)); } goto lHCiV; m1dYR: } public static function fopenLocal($filename, $mode) { if (strpos($filename, "\72\57\57") === false) { $filename = "\146\x69\x6c\x65\72\57\x2f" . $filename; } elseif (stream_is_local($filename) !== true) { return false; } return fopen($filename, $mode); } public static function url_exists($url) { goto HKdiq; HeBC_: curl_setopt($crs, CURLOPT_SSL_VERIFYHOST, false); goto WmxEi; WmxEi: curl_setopt($crs, CURLOPT_USERAGENT, "\x74\x63\55\x6c\x69\142\55\146\151\x6c\x65"); goto b1ymB; kWsQc: return $code == 200; goto VI5uk; K45d1: $url = self::encodeUrlQuery($url); goto oXJHR; sZ1Rq: curl_setopt($crs, CURLOPT_CONNECTTIMEOUT, 5); goto YDf4i; HKdiq: $crs = curl_init(); goto K45d1; c6ez8: $code = curl_getinfo($crs, CURLINFO_HTTP_CODE); goto aY8RJ; SkYo1: curl_setopt($crs, CURLOPT_NOBODY, true); goto OmsUa; oxKcW: if (ini_get("\157\x70\x65\156\137\x62\x61\x73\x65\144\x69\162") == '' && !ini_get("\x73\141\146\145\137\x6d\157\144\x65")) { curl_setopt($crs, CURLOPT_FOLLOWLOCATION, true); } goto sZ1Rq; oXJHR: curl_setopt($crs, CURLOPT_URL, $url); goto SkYo1; OmsUa: curl_setopt($crs, CURLOPT_FAILONERROR, true); goto oxKcW; YDf4i: curl_setopt($crs, CURLOPT_TIMEOUT, 30); goto o14wQ; aY8RJ: curl_close($crs); goto kWsQc; o14wQ: curl_setopt($crs, CURLOPT_SSL_VERIFYPEER, false); goto HeBC_; b1ymB: curl_exec($crs); goto c6ez8; VI5uk: } public static function encodeUrlQuery($url) { goto d7rBS; d7rBS: $urlData = parse_url($url); goto aOCVc; aOCVc: if (isset($urlData["\x71\165\145\162\x79"]) && $urlData["\161\165\x65\x72\171"]) { goto SDElM; lzvx1: $updatedUrl = $urlData["\163\x63\150\x65\155\x65"] . "\x3a\57\x2f" . $urlData["\150\x6f\163\164"] . $urlData["\x70\141\164\150"] . "\x3f" . http_build_query($urlQueryData); goto SN3q4; SDElM: $urlQueryData = []; goto JKT9u; JKT9u: parse_str(urldecode($urlData["\161\165\x65\x72\x79"]), $urlQueryData); goto lzvx1; SN3q4: } else { $updatedUrl = $url; } goto y7fpC; y7fpC: return $updatedUrl; goto OGeM4; OGeM4: } public static function file_exists($filename) { goto LqMsM; uqYeW: return @file_exists($filename); goto pCvTl; LqMsM: if (preg_match("\174\136\x68\164\x74\x70\x73\x3f\72\57\57\174", $filename) == 1) { return self::url_exists($filename); } goto NK2Ci; NK2Ci: if (strpos($filename, "\x3a\x2f\57")) { return false; } goto uqYeW; pCvTl: } public static function fileGetContents($file) { goto RW8m0; Kd0Bp: foreach ($alt as $path) { goto mFnxY; bJ4O_: if ($ret != false) { return $ret; } goto r7o_8; ORq61: $ret = @file_get_contents($path); goto bJ4O_; mFnxY: if (!self::file_exists($path)) { continue; } goto ORq61; r7o_8: if (!ini_get("\x61\154\154\157\x77\137\x75\x72\x6c\x5f\146\157\x70\x65\x6e") && function_exists("\x63\165\x72\x6c\137\x69\x6e\x69\x74") && preg_match("\45\136\50\x68\x74\x74\160\x73\x3f\174\x66\164\160\x29\x3a\x2f\x2f\x25", $path)) { goto aeSxb; aeSxb: $crs = curl_init(); goto cv1QC; l7Fs8: if ($ret !== false) { return $ret; } goto MLi0W; xoSQh: curl_setopt($crs, CURLOPT_CONNECTTIMEOUT, 5); goto PBiK6; H9mOt: curl_setopt($crs, CURLOPT_SSL_VERIFYPEER, false); goto mWTyR; PBiK6: curl_setopt($crs, CURLOPT_TIMEOUT, 30); goto H9mOt; Avngd: curl_setopt($crs, CURLOPT_BINARYTRANSFER, true); goto qF6wA; S93kJ: $ret = curl_exec($crs); goto OgPql; EDPzn: curl_setopt($crs, CURLOPT_USERAGENT, "\x74\143\55\154\x69\x62\x2d\146\151\154\145"); goto S93kJ; OgPql: curl_close($crs); goto l7Fs8; Qsk6J: if (ini_get("\x6f\160\145\x6e\x5f\142\x61\x73\145\x64\x69\x72") == '' && !ini_get("\163\x61\x66\x65\137\x6d\x6f\144\145")) { curl_setopt($crs, CURLOPT_FOLLOWLOCATION, true); } goto xoSQh; cv1QC: curl_setopt($crs, CURLOPT_URL, $path); goto Avngd; mWTyR: curl_setopt($crs, CURLOPT_SSL_VERIFYHOST, false); goto EDPzn; qF6wA: curl_setopt($crs, CURLOPT_FAILONERROR, true); goto wjEeo; wjEeo: curl_setopt($crs, CURLOPT_RETURNTRANSFER, true); goto Qsk6J; MLi0W: } goto vEKhE; vEKhE: } goto q_XJh; q9iP0: if (preg_match("\45\136\50\150\164\164\160\163\77\x29\x3a\x2f\57\45", $url) && empty($_SERVER["\110\124\x54\120\137\110\117\x53\x54"]) && empty($_SERVER["\104\x4f\x43\x55\115\x45\x4e\x54\137\122\x4f\x4f\x54"])) { $urldata = parse_url($url); if (empty($urldata["\x71\165\x65\162\171"])) { $host = $protocol . "\x3a\57\57" . $_SERVER["\x48\x54\124\x50\137\x48\117\123\124"]; if (strpos($url, $host) === 0) { $tmp = str_replace($host, $_SERVER["\x44\x4f\103\125\x4d\105\116\x54\137\122\117\x4f\x54"], $url); $alt[] = htmlspecialchars_decode(urldecode($tmp)); } } } goto TT9pm; RW8m0: $alt = array($file); goto iGHB0; ptRGJ: $url = $file; goto Wcfeh; TT9pm: if (isset($_SERVER["\x53\103\x52\111\x50\x54\x5f\125\122\111"]) && !preg_match("\x25\136\x28\150\x74\x74\160\163\77\174\x66\x74\x70\x29\x3a\57\x2f\x25", $file) && !preg_match("\x25\x5e\x2f\x2f\x25", $file)) { $urldata = @parse_url($_SERVER["\x53\103\122\111\120\124\x5f\125\x52\111"]); $alt[] = $urldata["\x73\x63\150\x65\155\145"] . "\72\57\57" . $urldata["\x68\x6f\x73\164"] . ($file[0] == "\x2f" ? '' : "\57") . $file; } goto ywxU5; c7ODh: $protocol = "\150\x74\164\160"; goto fd7Zb; fd7Zb: if (!empty($_SERVER["\x48\x54\124\120\123"]) && strtolower($_SERVER["\110\x54\124\x50\x53"]) != "\x6f\x66\146") { $protocol .= "\163"; } goto ptRGJ; dfoB5: $url = htmlspecialchars_decode($url); goto x1gBq; x1gBq: $alt[] = $url; goto q9iP0; q_XJh: return false; goto DRVz6; iGHB0: if (strlen($file) > 1 && $file[0] === "\x2f" && $file[1] !== "\x2f" && !empty($_SERVER["\104\117\x43\x55\115\x45\x4e\124\137\x52\117\x4f\x54"]) && $_SERVER["\x44\117\103\125\x4d\x45\x4e\124\137\122\117\117\x54"] !== "\57") { $findroot = strpos($file, $_SERVER["\x44\117\103\125\x4d\105\x4e\124\137\122\x4f\117\124"]); if ($findroot === false || $findroot > 1) { $alt[] = htmlspecialchars_decode(urldecode($_SERVER["\x44\117\103\x55\115\x45\x4e\x54\137\x52\117\x4f\x54"] . $file)); } } goto c7ODh; Wcfeh: if (preg_match("\45\x5e\57\x2f\x25", $url) && !empty($_SERVER["\x48\x54\x54\120\x5f\x48\x4f\x53\x54"])) { $url = $protocol . "\x3a" . str_replace("\40", "\x25\x32\60", $url); } goto dfoB5; ywxU5: $alt = array_unique($alt); goto Kd0Bp; DRVz6: } public static function _getULONG($str, $offset) { $v = unpack("\x4e\151", substr($str, $offset, 4)); return $v["\x69"]; } public static function _getUSHORT($str, $offset) { $v = unpack("\x6e\151", substr($str, $offset, 2)); return $v["\x69"]; } public static function _getSHORT($str, $offset) { $v = unpack("\163\151", substr($str, $offset, 2)); return $v["\151"]; } public static function _getFWORD($str, $offset) { goto Wennh; ujzc0: if ($v > 0x7fff) { $v -= 0x10000; } goto uwOs6; uwOs6: return $v; goto bucDW; Wennh: $v = self::_getUSHORT($str, $offset); goto ujzc0; bucDW: } public static function _getUFWORD($str, $offset) { $v = self::_getUSHORT($str, $offset); return $v; } public static function _getFIXED($str, $offset) { goto ZB5go; PAqqd: $f = self::_getUSHORT($str, $offset + 2); goto uNkWh; jPfVf: return $v; goto esXvi; ZB5go: $m = self::_getFWORD($str, $offset); goto PAqqd; uNkWh: $v = floatval('' . $m . "\56" . $f . ''); goto jPfVf; esXvi: } public static function _getBYTE($str, $offset) { $v = unpack("\103\151", substr($str, $offset, 1)); return $v["\151"]; } public static function rfread($handle, $length) { goto hG9Uo; zpMPR: return $data; goto hMd4W; lsjSn: if ($rest > 0 && !feof($handle)) { $data .= self::rfread($handle, $rest); } goto zpMPR; Qgf7N: if ($data === false) { return false; } goto rD9em; hG9Uo: $data = fread($handle, $length); goto Qgf7N; rD9em: $rest = $length - strlen($data); goto lsjSn; hMd4W: } public static function _freadint($f) { $a = unpack("\116\x69", fread($f, 4)); return $a["\x69"]; } public static $page_formats = array("\101\x30" => array(2383.937, 3370.394), "\101\x31" => array(1683.78, 2383.937), "\101\x32" => array(1190.551, 1683.78), "\x41\x33" => array(841.89, 1190.551), "\x41\x34" => array(595.276, 841.89), "\x41\65" => array(419.528, 595.276), "\x41\x36" => array(297.638, 419.528), "\101\x37" => array(209.764, 297.638), "\101\70" => array(147.402, 209.764), "\101\x39" => array(104.882, 147.402), "\x41\61\60" => array(73.70099999999999, 104.882), "\101\61\61" => array(51.024, 73.70099999999999), "\101\x31\62" => array(36.85, 51.024), "\x42\x30" => array(2834.646, 4008.189), "\x42\61" => array(2004.094, 2834.646), "\x42\62" => array(1417.323, 2004.094), "\102\63" => array(1000.63, 1417.323), "\102\64" => array(708.6609999999999, 1000.63), "\x42\x35" => array(498.898, 708.6609999999999), "\x42\x36" => array(354.331, 498.898), "\x42\x37" => array(249.449, 354.331), "\x42\70" => array(175.748, 249.449), "\102\x39" => array(124.724, 175.748), "\102\x31\60" => array(87.874, 124.724), "\x42\x31\x31" => array(62.362, 87.874), "\x42\x31\62" => array(42.52, 62.362), "\103\x30" => array(2599.37, 3676.535), "\x43\61" => array(1836.85, 2599.37), "\103\x32" => array(1298.268, 1836.85), "\103\x33" => array(918.425, 1298.268), "\x43\x34" => array(649.134, 918.425), "\x43\65" => array(459.213, 649.134), "\103\x36" => array(323.15, 459.213), "\x43\x37" => array(229.606, 323.15), "\x43\x38" => array(161.575, 229.606), "\x43\x39" => array(113.386, 161.575), "\103\x31\x30" => array(79.37, 113.386), "\103\61\61" => array(56.693, 79.37), "\103\61\x32" => array(39.685, 56.693), "\103\x37\66" => array(229.606, 459.213), "\104\114" => array(311.811, 623.622), "\x44\x4c\105" => array(323.15, 637.795), "\x44\114\x58" => array(340.158, 666.1420000000001), "\104\x4c\120" => array(280.63, 595.276), "\105\60" => array(2491.654, 3517.795), "\x45\61" => array(1757.48, 2491.654), "\105\x32" => array(1247.244, 1757.48), "\105\x33" => array(878.74, 1247.244), "\105\64" => array(623.622, 878.74), "\105\65" => array(439.37, 623.622), "\105\66" => array(311.811, 439.37), "\105\x37" => array(221.102, 311.811), "\105\70" => array(155.906, 221.102), "\x45\71" => array(110.551, 155.906), "\105\x31\60" => array(76.535, 110.551), "\105\61\61" => array(53.858, 76.535), "\x45\x31\x32" => array(36.85, 53.858), "\107\60" => array(2715.591, 3838.11), "\107\x31" => array(1919.055, 2715.591), "\x47\62" => array(1357.795, 1919.055), "\x47\x33" => array(958.11, 1357.795), "\x47\64" => array(677.48, 958.11), "\107\65" => array(479.055, 677.48), "\107\66" => array(337.323, 479.055), "\x47\67" => array(238.11, 337.323), "\x47\70" => array(167.244, 238.11), "\107\71" => array(119.055, 167.244), "\x47\x31\x30" => array(82.205, 119.055), "\107\61\x31" => array(59.528, 82.205), "\107\x31\x32" => array(39.685, 59.528), "\122\101\x30" => array(2437.795, 3458.268), "\x52\101\61" => array(1729.134, 2437.795), "\x52\101\x32" => array(1218.898, 1729.134), "\x52\x41\63" => array(864.567, 1218.898), "\x52\x41\x34" => array(609.449, 864.567), "\x53\x52\101\60" => array(2551.181, 3628.346), "\123\x52\101\x31" => array(1814.173, 2551.181), "\x53\122\x41\62" => array(1275.591, 1814.173), "\x53\122\101\63" => array(907.087, 1275.591), "\x53\x52\x41\64" => array(637.795, 907.087), "\64\x41\60" => array(4767.874, 6740.787), "\62\101\60" => array(3370.394, 4767.874), "\101\62\x5f\x45\130\124\122\101" => array(1261.417, 1754.646), "\x41\x33\x2b" => array(932.598, 1369.134), "\101\63\x5f\x45\x58\x54\122\101" => array(912.756, 1261.417), "\101\x33\x5f\x53\125\120\105\x52" => array(864.567, 1440.0), "\x53\x55\x50\x45\122\137\101\x33" => array(864.567, 1380.472), "\x41\x34\x5f\x45\130\x54\x52\x41" => array(666.1420000000001, 912.756), "\x41\64\137\123\125\x50\x45\122" => array(649.134, 912.756), "\123\x55\x50\x45\122\x5f\101\x34" => array(643.465, 1009.134), "\101\x34\x5f\114\x4f\x4e\107" => array(595.276, 986.457), "\106\x34" => array(595.276, 935.433), "\x53\x4f\137\x42\65\137\105\130\x54\122\101" => array(572.598, 782.362), "\x41\65\x5f\105\130\x54\x52\x41" => array(490.394, 666.1420000000001), "\101\116\123\111\137\x45" => array(2448.0, 3168.0), "\101\116\x53\111\x5f\x44" => array(1584.0, 2448.0), "\101\x4e\123\111\x5f\103" => array(1224.0, 1584.0), "\x41\116\123\x49\137\x42" => array(792.0, 1224.0), "\101\x4e\x53\x49\137\101" => array(612.0, 792.0), "\125\123\x4c\x45\104\107\105\122" => array(1224.0, 792.0), "\114\105\x44\107\105\x52" => array(1224.0, 792.0), "\x4f\x52\107\101\116\x49\x5a\105\122\x4b" => array(792.0, 1224.0), "\102\x49\x42\x4c\x45" => array(792.0, 1224.0), "\x55\x53\x54\x41\102\114\x4f\111\x44" => array(792.0, 1224.0), "\124\101\x42\x4c\x4f\111\x44" => array(792.0, 1224.0), "\x4f\x52\107\x41\116\x49\132\x45\122\x4d" => array(612.0, 792.0), "\x55\123\x4c\105\124\x54\x45\122" => array(612.0, 792.0), "\x4c\105\x54\x54\105\x52" => array(612.0, 792.0), "\125\123\114\105\x47\x41\x4c" => array(612.0, 1008.0), "\x4c\x45\107\101\114" => array(612.0, 1008.0), "\107\117\126\x45\x52\116\x4d\x45\116\124\114\105\124\124\105\x52" => array(576.0, 756.0), "\107\114\105\x54\x54\x45\122" => array(576.0, 756.0), "\112\x55\116\111\x4f\122\x4c\x45\x47\101\x4c" => array(576.0, 360.0), "\112\x4c\105\x47\x41\114" => array(576.0, 360.0), "\121\125\101\104\x44\x45\115\131" => array(2520.0, 3240.0), "\123\x55\120\105\122\x5f\x42" => array(936.0, 1368.0), "\x51\125\101\x52\124\117" => array(648.0, 792.0), "\107\x4f\126\105\122\116\115\105\116\x54\x4c\105\x47\x41\x4c" => array(612.0, 936.0), "\106\x4f\114\111\117" => array(612.0, 936.0), "\115\x4f\x4e\101\x52\103\110" => array(522.0, 756.0), "\105\130\105\103\125\124\111\126\105" => array(522.0, 756.0), "\x4f\x52\107\x41\116\x49\x5a\x45\x52\114" => array(396.0, 612.0), "\x53\124\x41\x54\x45\x4d\x45\x4e\x54" => array(396.0, 612.0), "\x4d\105\x4d\x4f" => array(396.0, 612.0), "\106\117\x4f\x4c\x53\x43\x41\x50" => array(595.4400000000001, 936.0), "\103\x4f\115\x50\x41\x43\x54" => array(306.0, 486.0), "\x4f\122\107\101\116\x49\132\x45\x52\112" => array(198.0, 360.0), "\x50\x31" => array(1587.402, 2437.795), "\x50\x32" => array(1218.898, 1587.402), "\120\x33" => array(793.701, 1218.898), "\120\x34" => array(609.449, 793.701), "\x50\x35" => array(396.85, 609.449), "\x50\66" => array(303.307, 396.85), "\x41\x52\x43\110\x5f\x45" => array(2592.0, 3456.0), "\x41\122\x43\110\x5f\105\61" => array(2160.0, 3024.0), "\101\x52\103\110\x5f\x44" => array(1728.0, 2592.0), "\x42\x52\117\x41\104\123\110\x45\105\124" => array(1296.0, 1728.0), "\x41\122\x43\110\137\x43" => array(1296.0, 1728.0), "\101\x52\x43\110\137\x42" => array(864.0, 1296.0), "\x41\x52\x43\110\x5f\101" => array(648.0, 864.0), "\101\x4e\x4e\105\116\x56\x5f\x41\62" => array(314.64, 414.0), "\x41\116\x4e\x45\x4e\126\137\x41\66" => array(342.0, 468.0), "\x41\116\116\x45\x4e\126\x5f\101\67" => array(378.0, 522.0), "\101\x4e\116\105\116\126\137\x41\70" => array(396.0, 584.64), "\x41\x4e\x4e\x45\x4e\x56\x5f\x41\x31\x30" => array(450.0, 692.64), "\x41\x4e\x4e\x45\116\x56\137\x53\x4c\x49\115" => array(278.64, 638.64), "\103\x4f\x4d\115\105\116\x56\x5f\x4e\x36\x5f\61\57\x34" => array(252.0, 432.0), "\x43\117\115\x4d\x45\x4e\x56\137\x4e\x36\x5f\x33\57\64" => array(260.64, 468.0), "\103\117\x4d\115\x45\x4e\x56\x5f\116\x38" => array(278.64, 540.0), "\103\117\115\115\105\x4e\126\x5f\x4e\71" => array(278.64, 638.64), "\x43\117\115\x4d\x45\116\x56\137\116\61\x30" => array(296.64, 684.0), "\103\117\115\115\x45\x4e\x56\137\116\x31\61" => array(324.0, 746.64), "\x43\x4f\115\x4d\x45\116\126\137\116\61\x32" => array(342.0, 792.0), "\x43\x4f\x4d\115\x45\x4e\x56\x5f\116\61\64" => array(360.0, 828.0), "\x43\101\x54\x45\116\126\x5f\x4e\61" => array(432.0, 648.0), "\x43\x41\x54\105\116\126\137\116\61\x5f\63\57\x34" => array(468.0, 684.0), "\103\x41\124\105\x4e\x56\x5f\x4e\62" => array(468.0, 720.0), "\103\x41\124\105\116\x56\137\x4e\x33" => array(504.0, 720.0), "\103\x41\124\105\116\126\137\116\x36" => array(540.0, 756.0), "\x43\101\x54\105\x4e\x56\x5f\116\x37" => array(576.0, 792.0), "\x43\101\x54\x45\116\x56\x5f\x4e\x38" => array(594.0, 810.0), "\103\101\124\105\116\x56\137\116\71\x5f\61\x2f\x32" => array(612.0, 756.0), "\103\101\x54\105\x4e\x56\137\116\x39\x5f\63\57\x34" => array(630.0, 810.0), "\103\x41\124\105\x4e\126\x5f\x4e\61\60\137\x31\57\62" => array(648.0, 864.0), "\x43\x41\x54\105\x4e\126\137\x4e\61\62\x5f\x31\x2f\x32" => array(684.0, 900.0), "\103\x41\124\x45\116\x56\137\x4e\x31\x33\137\61\x2f\62" => array(720.0, 936.0), "\x43\101\124\105\x4e\126\x5f\116\61\64\137\x31\57\64" => array(810.0, 882.0), "\103\x41\124\x45\116\x56\137\x4e\61\x34\137\61\x2f\x32" => array(828.0, 1044.0), "\112\x49\123\137\102\x30" => array(2919.685, 4127.244), "\112\x49\x53\x5f\x42\x31" => array(2063.622, 2919.685), "\112\x49\x53\x5f\102\x32" => array(1459.843, 2063.622), "\x4a\111\x53\137\102\63" => array(1031.811, 1459.843), "\x4a\x49\x53\x5f\102\64" => array(728.504, 1031.811), "\x4a\x49\x53\x5f\102\x35" => array(515.9059999999999, 728.504), "\112\x49\123\x5f\102\x36" => array(362.835, 515.9059999999999), "\x4a\x49\x53\x5f\102\x37" => array(257.953, 362.835), "\x4a\111\123\137\x42\70" => array(181.417, 257.953), "\x4a\111\123\137\x42\x39" => array(127.559, 181.417), "\x4a\x49\123\137\102\61\x30" => array(90.709, 127.559), "\x4a\x49\123\137\x42\x31\x31" => array(62.362, 90.709), "\112\111\123\137\x42\61\62" => array(45.354, 62.362), "\120\x41\x30" => array(2381.102, 3174.803), "\120\101\61" => array(1587.402, 2381.102), "\x50\101\x32" => array(1190.551, 1587.402), "\x50\x41\63" => array(793.701, 1190.551), "\x50\101\x34" => array(595.276, 793.701), "\x50\101\x35" => array(396.85, 595.276), "\120\x41\66" => array(297.638, 396.85), "\120\x41\x37" => array(198.425, 297.638), "\x50\x41\x38" => array(147.402, 198.425), "\120\101\71" => array(99.21299999999999, 147.402), "\x50\101\61\x30" => array(73.70099999999999, 99.21299999999999), "\x50\x41\123\123\120\x4f\x52\x54\x5f\x50\110\x4f\124\x4f" => array(99.21299999999999, 127.559), "\x45" => array(233.858, 340.157), "\114" => array(252.283, 360.0), "\x33\122" => array(252.283, 360.0), "\x4b\107" => array(289.134, 430.866), "\x34\122" => array(289.134, 430.866), "\x34\104" => array(340.157, 430.866), "\62\x4c" => array(360.0, 504.567), "\65\122" => array(360.0, 504.567), "\x38\x50" => array(430.866, 575.433), "\66\122" => array(430.866, 575.433), "\x36\x50" => array(575.433, 720.0), "\70\122" => array(575.433, 720.0), "\66\x50\x57" => array(575.433, 864.567), "\x53\70\122" => array(575.433, 864.567), "\64\120" => array(720.0, 864.567), "\x31\x30\122" => array(720.0, 864.567), "\64\x50\127" => array(720.0, 1080.0), "\x53\x31\60\x52" => array(720.0, 1080.0), "\61\61\x52" => array(790.866, 1009.134), "\123\61\x31\122" => array(790.866, 1224.567), "\x31\x32\x52" => array(864.567, 1080.0), "\123\x31\62\x52" => array(864.567, 1292.598), "\x4e\x45\127\x53\x50\x41\120\105\122\137\102\x52\117\x41\x44\123\x48\x45\x45\x54" => array(2125.984, 1700.787), "\x4e\x45\x57\x53\x50\101\120\x45\x52\x5f\x42\x45\x52\x4c\111\x4e\x45\x52" => array(1332.283, 892.913), "\116\x45\127\x53\120\x41\120\x45\x52\x5f\124\101\x42\x4c\117\x49\104" => array(1218.898, 793.701), "\x4e\x45\x57\x53\x50\101\120\x45\x52\137\x43\x4f\115\120\x41\x43\x54" => array(1218.898, 793.701), "\x43\x52\x45\x44\111\124\137\x43\x41\122\104" => array(153.014, 242.646), "\102\125\x53\111\x4e\x45\x53\x53\137\x43\101\x52\104" => array(153.014, 242.646), "\102\125\123\111\116\105\123\123\137\103\x41\122\x44\137\x49\x53\x4f\x37\x38\x31\x30" => array(153.014, 242.646), "\x42\x55\x53\x49\x4e\105\123\123\x5f\103\101\122\104\137\x49\123\x4f\62\x31\66" => array(147.402, 209.764), "\102\x55\x53\111\116\x45\x53\123\x5f\103\x41\x52\104\137\111\x54" => array(155.906, 240.945), "\x42\x55\x53\x49\x4e\105\x53\123\x5f\x43\x41\x52\x44\x5f\125\113" => array(155.906, 240.945), "\102\125\123\x49\116\x45\x53\x53\x5f\103\101\122\104\137\106\122" => array(155.906, 240.945), "\x42\x55\123\x49\x4e\105\123\x53\x5f\103\x41\x52\x44\137\104\x45" => array(155.906, 240.945), "\102\125\x53\111\x4e\x45\123\123\x5f\x43\101\x52\104\x5f\x45\123" => array(155.906, 240.945), "\x42\125\x53\x49\116\x45\x53\123\137\x43\x41\x52\104\137\x43\x41" => array(144.567, 252.283), "\102\x55\123\x49\x4e\x45\123\x53\x5f\103\x41\122\x44\137\x55\123" => array(144.567, 252.283), "\x42\125\x53\x49\x4e\105\123\123\137\x43\x41\x52\104\137\112\120" => array(155.906, 257.953), "\x42\x55\123\111\x4e\105\123\123\x5f\x43\x41\122\x44\137\110\113" => array(153.071, 255.118), "\102\x55\x53\x49\x4e\x45\x53\x53\x5f\x43\x41\122\104\137\101\125" => array(155.906, 255.118), "\x42\x55\x53\111\x4e\105\123\x53\137\x43\101\x52\x44\137\104\x4b" => array(155.906, 255.118), "\102\x55\123\x49\x4e\x45\123\x53\x5f\103\101\x52\104\x5f\123\x45" => array(155.906, 255.118), "\102\x55\123\111\116\105\123\123\137\x43\x41\122\104\x5f\122\125" => array(141.732, 255.118), "\102\x55\123\111\x4e\x45\123\x53\137\103\101\122\104\x5f\103\x5a" => array(141.732, 255.118), "\x42\125\123\111\116\105\123\123\137\x43\x41\122\104\x5f\106\x49" => array(141.732, 255.118), "\x42\x55\x53\x49\116\x45\x53\x53\137\103\101\x52\x44\x5f\110\x55" => array(141.732, 255.118), "\102\x55\x53\x49\116\105\x53\123\x5f\103\x41\x52\x44\x5f\111\114" => array(141.732, 255.118), "\64\x53\x48\x45\105\124" => array(2880.0, 4320.0), "\x36\123\110\105\x45\x54" => array(3401.575, 5102.362), "\x31\62\123\x48\105\105\124" => array(8640.0, 4320.0), "\x31\66\123\x48\x45\x45\x54" => array(5760.0, 8640.0), "\63\62\x53\110\x45\105\124" => array(11520.0, 8640.0), "\64\70\123\x48\105\105\124" => array(17280.0, 8640.0), "\66\x34\x53\110\105\x45\x54" => array(23040.0, 8640.0), "\71\x36\x53\x48\x45\105\124" => array(34560.0, 8640.0), "\105\116\137\x45\x4d\120\105\x52\x4f\x52" => array(3456.0, 5184.0), "\105\116\137\x41\x4e\124\x49\121\125\x41\122\x49\x41\x4e" => array(2232.0, 3816.0), "\x45\116\137\107\x52\101\x4e\x44\x5f\x45\101\x47\114\x45" => array(2070.0, 3024.0), "\x45\116\137\104\117\x55\102\x4c\105\x5f\x45\114\105\120\110\x41\116\124" => array(1926.0, 2880.0), "\105\x4e\x5f\101\x54\114\101\x53" => array(1872.0, 2448.0), "\105\116\137\103\117\114\117\115\x42\x49\x45\122" => array(1692.0, 2484.0), "\105\x4e\x5f\105\114\x45\x50\110\x41\x4e\124" => array(1656.0, 2016.0), "\x45\116\137\x44\x4f\x55\x42\x4c\105\x5f\104\105\x4d\x59" => array(1620.0, 2556.0), "\x45\x4e\x5f\x49\115\x50\x45\x52\111\101\114" => array(1584.0, 2160.0), "\x45\x4e\137\120\122\x49\x4e\x43\105\123\x53" => array(1548.0, 2016.0), "\105\x4e\x5f\103\x41\122\124\x52\x49\104\107\105" => array(1512.0, 1872.0), "\x45\x4e\x5f\x44\117\x55\102\x4c\105\137\114\101\122\x47\105\137\x50\x4f\x53\124" => array(1512.0, 2376.0), "\x45\116\137\122\117\131\101\x4c" => array(1440.0, 1800.0), "\105\116\137\123\x48\x45\x45\x54" => array(1404.0, 1692.0), "\x45\x4e\137\x48\101\114\x46\x5f\x50\117\123\124" => array(1404.0, 1692.0), "\x45\116\x5f\x53\125\x50\105\122\137\122\x4f\x59\x41\114" => array(1368.0, 1944.0), "\105\x4e\137\104\x4f\x55\102\114\105\x5f\120\x4f\x53\124" => array(1368.0, 2196.0), "\x45\x4e\x5f\115\105\x44\111\x55\115" => array(1260.0, 1656.0), "\105\116\137\x44\105\x4d\x59" => array(1260.0, 1620.0), "\105\116\137\114\x41\122\107\105\137\120\117\x53\x54" => array(1188.0, 1512.0), "\105\x4e\137\x43\117\x50\x59\137\x44\122\101\x55\107\110\x54" => array(1152.0, 1440.0), "\x45\x4e\x5f\x50\x4f\x53\x54" => array(1116.0, 1386.0), "\x45\x4e\137\x43\122\x4f\x57\x4e" => array(1080.0, 1440.0), "\x45\116\137\x50\x49\x4e\x43\x48\x45\x44\137\120\117\x53\x54" => array(1062.0, 1332.0), "\105\116\137\102\x52\111\105\106" => array(972.0, 1152.0), "\105\x4e\137\106\117\117\114\123\103\101\x50" => array(972.0, 1224.0), "\105\x4e\137\x53\x4d\101\114\114\137\x46\117\x4f\114\123\103\x41\120" => array(954.0, 1188.0), "\x45\x4e\x5f\120\x4f\x54\x54" => array(900.0, 1080.0), "\x42\x45\x5f\x47\x52\x41\116\104\137\101\111\x47\114\x45" => array(1984.252, 2948.031), "\x42\105\x5f\x43\x4f\x4c\117\x4d\x42\111\x45\x52" => array(1757.48, 2409.449), "\x42\x45\137\x44\117\125\x42\x4c\105\137\x43\x41\x52\x52\x45" => array(1757.48, 2607.874), "\x42\105\x5f\x45\x4c\105\x50\x48\x41\x4e\x54" => array(1746.142, 2182.677), "\102\105\137\x50\105\x54\x49\x54\137\101\111\x47\114\x45" => array(1700.787, 2381.102), "\102\105\137\107\122\x41\x4e\104\x5f\112\x45\123\125\123" => array(1559.055, 2069.291), "\x42\x45\x5f\x4a\x45\x53\125\x53" => array(1530.709, 2069.291), "\x42\105\137\x52\101\111\x53\111\x4e" => array(1417.323, 1842.52), "\102\x45\137\x47\122\x41\x4e\x44\x5f\x4d\105\x44\111\x41\x4e" => array(1303.937, 1714.961), "\x42\105\x5f\x44\117\x55\102\114\105\137\120\x4f\123\124\105" => array(1233.071, 1601.575), "\x42\x45\x5f\x43\x4f\x51\x55\111\114\x4c\105" => array(1218.898, 1587.402), "\102\105\137\x50\x45\x54\x49\124\137\115\105\104\x49\101\x4e" => array(1176.378, 1502.362), "\102\105\x5f\x52\x55\103\x48\x45" => array(1020.472, 1303.937), "\x42\105\137\x50\122\x4f\x50\101\124\x52\x49\101" => array(977.953, 1218.898), "\102\105\x5f\x4c\131\x53" => array(898.583, 1125.354), "\x42\x45\137\120\117\x54" => array(870.236, 1088.504), "\x42\105\x5f\122\x4f\123\105\x54\x54\105" => array(765.354, 983.622), "\x46\122\x5f\x55\116\111\126\105\x52\123" => array(2834.646, 3685.039), "\106\x52\x5f\x44\x4f\x55\102\114\x45\137\103\117\x4c\117\115\x42\x49\105\x52" => array(2551.181, 3571.654), "\106\x52\x5f\107\122\x41\116\104\x45\137\x4d\117\116\104\105" => array(2551.181, 3571.654), "\x46\x52\137\x44\x4f\125\x42\x4c\105\x5f\x53\117\114\105\111\114" => array(2267.717, 3401.575), "\x46\x52\x5f\104\117\125\102\x4c\105\137\112\105\x53\x55\x53" => array(2154.331, 3174.803), "\x46\122\137\x47\122\x41\116\x44\x5f\x41\111\x47\x4c\x45" => array(2125.984, 3004.724), "\106\x52\x5f\120\x45\124\111\124\x5f\101\111\107\x4c\x45" => array(1984.252, 2664.567), "\106\x52\137\104\x4f\125\x42\x4c\x45\137\122\101\x49\x53\x49\x4e" => array(1842.52, 2834.646), "\x46\122\x5f\x4a\x4f\125\122\x4e\101\x4c" => array(1842.52, 2664.567), "\x46\122\137\103\x4f\114\117\115\x42\x49\105\122\x5f\x41\106\106\111\103\110\105" => array(1785.827, 2551.181), "\x46\x52\137\x44\117\x55\102\x4c\105\x5f\x43\x41\126\101\114\x49\x45\122" => array(1757.48, 2607.874), "\x46\x52\x5f\103\x4c\117\x43\x48\105" => array(1700.787, 2267.717), "\x46\x52\137\x53\117\114\105\x49\114" => array(1700.787, 2267.717), "\x46\122\x5f\x44\x4f\x55\x42\x4c\105\137\103\101\122\122\x45" => array(1587.402, 2551.181), "\x46\x52\x5f\x44\x4f\x55\x42\114\105\137\x43\117\x51\x55\111\x4c\x4c\105" => array(1587.402, 2494.488), "\x46\122\137\x4a\105\123\x55\123" => array(1587.402, 2154.331), "\x46\122\137\x52\101\111\x53\x49\116" => array(1417.323, 1842.52), "\x46\122\x5f\103\101\126\101\114\111\x45\x52" => array(1303.937, 1757.48), "\x46\x52\137\x44\x4f\x55\102\114\x45\x5f\103\117\125\x52\117\116\x4e\105" => array(1303.937, 2040.945), "\x46\122\137\x43\x41\x52\122\105" => array(1275.591, 1587.402), "\x46\x52\137\x43\117\121\125\111\x4c\x4c\105" => array(1247.244, 1587.402), "\x46\122\137\x44\117\125\x42\x4c\x45\x5f\x54\x45\x4c\x4c\111\105\x52\105" => array(1247.244, 1927.559), "\106\122\x5f\104\117\125\x42\x4c\x45\137\103\114\117\103\x48\x45" => array(1133.858, 1700.787), "\x46\x52\137\x44\117\125\x42\x4c\105\x5f\120\117\x54" => array(1133.858, 1757.48), "\x46\122\x5f\x45\x43\x55" => array(1133.858, 1474.016), "\106\x52\x5f\x43\117\125\x52\x4f\116\116\x45" => array(1020.472, 1303.937), "\106\122\x5f\x54\x45\x4c\x4c\x49\105\122\x45" => array(963.78, 1247.244), "\x46\x52\137\120\x4f\x54" => array(878.74, 1133.858)); public static function getPageSizeFromFormat($format) { if (isset(self::$page_formats[$format])) { return self::$page_formats[$format]; } return self::$page_formats["\x41\x34"]; } public static function setPageBoxes($page, $type, $llx, $lly, $urx, $ury, $points = false, $k, $pagedim = array()) { goto tZM1i; tZM1i: if (!isset($pagedim[$page])) { $pagedim[$page] = array(); } goto n97FU; bSrzm: $pagedim[$page][$type]["\x6c\x6c\x79"] = $lly * $k; goto Wd487; T6zq1: $pagedim[$page][$type]["\154\154\x78"] = $llx * $k; goto bSrzm; Wd487: $pagedim[$page][$type]["\x75\162\x78"] = $urx * $k; goto wwLgm; n97FU: if (!in_array($type, self::$pageboxes)) { return; } goto Cfd52; Cfd52: if ($points) { $k = 1; } goto T6zq1; wwLgm: $pagedim[$page][$type]["\x75\x72\171"] = $ury * $k; goto Z99qK; Z99qK: return $pagedim; goto M9IPf; M9IPf: } public static function swapPageBoxCoordinates($page, $pagedim) { foreach (self::$pageboxes as $type) { if (isset($pagedim[$page][$type])) { goto oOVaW; uWkSJ: $pagedim[$page][$type]["\154\154\170"] = $pagedim[$page][$type]["\154\154\171"]; goto auMIG; oOVaW: $tmp = $pagedim[$page][$type]["\x6c\154\170"]; goto uWkSJ; ZeY2J: $tmp = $pagedim[$page][$type]["\165\162\170"]; goto MIxXD; MIxXD: $pagedim[$page][$type]["\165\162\x78"] = $pagedim[$page][$type]["\x75\x72\171"]; goto obkpd; auMIG: $pagedim[$page][$type]["\x6c\x6c\171"] = $tmp; goto ZeY2J; obkpd: $pagedim[$page][$type]["\165\162\171"] = $tmp; goto AkIU8; AkIU8: } } return $pagedim; } public static function getPageLayoutMode($layout = "\x53\x69\x6e\147\154\145\120\x61\147\x65") { switch ($layout) { case "\x64\145\x66\x61\x75\154\164": case "\163\151\156\147\154\145": case "\x53\151\156\x67\154\x65\120\x61\147\145": $layout_mode = "\123\151\x6e\147\154\145\120\141\x67\x65"; break; case "\x63\x6f\156\164\151\x6e\x75\157\165\x73": case "\117\x6e\145\103\x6f\154\165\x6d\156": $layout_mode = "\x4f\x6e\x65\x43\157\x6c\x75\155\x6e"; break; case "\164\167\x6f": case "\x54\167\x6f\103\x6f\x6c\x75\155\156\x4c\145\x66\x74": $layout_mode = "\124\167\x6f\x43\x6f\x6c\165\x6d\x6e\x4c\x65\x66\x74"; break; case "\124\167\x6f\x43\x6f\154\x75\155\x6e\x52\151\x67\150\164": $layout_mode = "\124\x77\x6f\x43\157\x6c\165\x6d\x6e\122\151\x67\x68\x74"; break; case "\x54\x77\x6f\x50\141\x67\145\114\145\146\164": $layout_mode = "\x54\167\157\x50\x61\x67\x65\114\x65\x66\164"; break; case "\124\x77\157\120\x61\x67\145\x52\151\x67\150\x74": $layout_mode = "\x54\x77\157\x50\141\147\145\122\x69\147\x68\164"; break; default: $layout_mode = "\123\x69\156\x67\x6c\145\120\x61\147\x65"; } return $layout_mode; } public static function getPageMode($mode = "\125\x73\x65\x4e\157\x6e\145") { switch ($mode) { case "\x55\163\x65\x4e\x6f\156\x65": $page_mode = "\125\x73\x65\116\x6f\x6e\145"; break; case "\x55\163\145\x4f\x75\x74\154\x69\x6e\x65\163": $page_mode = "\x55\163\x65\117\x75\x74\154\151\x6e\x65\x73"; break; case "\x55\x73\145\x54\x68\165\x6d\142\163": $page_mode = "\125\x73\145\124\150\165\155\142\x73"; break; case "\106\x75\x6c\x6c\x53\x63\162\145\x65\156": $page_mode = "\106\x75\154\154\x53\x63\x72\145\x65\x6e"; break; case "\125\x73\145\117\x43": $page_mode = "\125\x73\145\117\103"; break; case '': $page_mode = "\x55\x73\145\101\164\164\x61\143\150\x6d\x65\156\x74\x73"; break; default: $page_mode = "\x55\163\x65\116\x6f\156\145"; } return $page_mode; } }
