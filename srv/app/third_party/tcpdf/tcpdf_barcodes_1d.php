<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:03              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class TCPDFBarcode { protected $barcode_array; public function __construct($code, $type) { $this->setBarcode($code, $type); } public function getBarcodeArray() { return $this->barcode_array; } public function getBarcodeSVG($w = 2, $h = 30, $color = "\x62\x6c\141\143\153") { goto imDQO; cTtac: header("\x43\x61\x63\150\x65\55\x43\x6f\156\164\x72\157\154\x3a\40\x70\x75\x62\154\x69\143\54\40\155\x75\163\x74\55\162\145\166\x61\x6c\151\144\141\x74\145\54\40\x6d\141\x78\55\x61\x67\x65\x3d\x30"); goto CelKu; veauf: echo $code; goto wsv5l; NmSiv: header("\105\170\160\151\x72\x65\163\x3a\40\x53\141\x74\54\x20\x32\x36\x20\x4a\165\x6c\40\61\71\71\67\x20\60\65\x3a\60\x30\x3a\60\60\40\107\x4d\124"); goto fWgiy; imDQO: $code = $this->getBarcodeSVGcode($w, $h, $color); goto gdPrC; CelKu: header("\x50\162\141\x67\155\x61\72\40\x70\x75\142\x6c\151\x63"); goto NmSiv; BQdtk: header("\103\157\156\x74\145\x6e\x74\55\x44\x69\163\160\x6f\163\151\x74\x69\x6f\156\x3a\40\151\x6e\x6c\x69\x6e\x65\x3b\40\146\151\154\x65\x6e\141\x6d\145\x3d\42" . md5($code) . "\x2e\163\166\x67\x22\73"); goto veauf; gdPrC: header("\103\157\156\164\145\156\164\55\x54\171\160\145\72\x20\141\x70\x70\x6c\151\x63\141\164\x69\157\x6e\57\x73\166\x67\53\170\x6d\x6c"); goto cTtac; fWgiy: header("\x4c\x61\x73\x74\x2d\x4d\157\x64\151\x66\151\145\144\x3a\40" . gmdate("\x44\54\x20\x64\40\x4d\40\x59\40\110\x3a\x69\72\163") . "\40\x47\115\x54"); goto BQdtk; wsv5l: } public function getBarcodeSVGcode($w = 2, $h = 30, $color = "\142\x6c\x61\x63\153") { goto AZL86; L1hFr: $svg .= "\74\41\x44\117\x43\x54\131\120\105\40\163\166\x67\40\120\x55\102\114\111\x43\40\x22\x2d\x2f\x2f\127\x33\103\57\x2f\104\124\104\40\x53\126\x47\x20\61\x2e\x31\x2f\x2f\105\116\x22\x20\42\x68\164\164\x70\72\x2f\57\x77\x77\167\x2e\167\63\x2e\157\162\x67\x2f\x47\162\x61\x70\x68\151\x63\x73\x2f\x53\x56\x47\x2f\x31\x2e\x31\x2f\104\124\x44\x2f\x73\x76\147\61\61\56\144\x74\144\x22\x3e" . "\12"; goto g2KVu; BMvLL: $svg .= "\11" . "\74\147\x20\x69\x64\75\x22\142\141\x72\x73\x22\40\146\151\154\x6c\75\42" . $color . "\42\x20\163\x74\162\157\x6b\x65\x3d\x22\x6e\x6f\156\145\42\76" . "\12"; goto Jlkeq; FLuKF: $svg = "\74" . "\77" . "\170\x6d\154\x20\x76\145\162\x73\x69\157\156\x3d\42\x31\x2e\x30\x22\x20\x73\x74\x61\156\144\141\x6c\x6f\x6e\145\x3d\x22\x6e\157\42" . "\77" . "\76" . "\xa"; goto L1hFr; cIUnp: return $svg; goto SMWsP; g2KVu: $svg .= "\74\163\166\x67\x20\x77\151\x64\x74\150\x3d\x22" . round($this->barcode_array["\x6d\x61\x78\167"] * $w, 3) . "\42\x20\150\x65\151\x67\x68\x74\75\42" . $h . "\42\x20\x76\145\x72\x73\x69\157\156\75\x22\x31\56\x31\42\x20\170\155\154\x6e\x73\75\x22\150\164\x74\160\x3a\57\x2f\x77\x77\167\56\167\x33\x2e\x6f\162\147\x2f\62\60\60\x30\x2f\x73\x76\147\42\x3e" . "\xa"; goto w9VPC; Jlkeq: $x = 0; goto fVWou; AZL86: $repstr = array("\x0" => '', "\x26" => "\x26\141\155\160\73", "\74" => "\46\x6c\164\x3b", "\76" => "\x26\x67\x74\x3b"); goto FLuKF; fVWou: foreach ($this->barcode_array["\142\x63\x6f\x64\145"] as $k => $v) { goto kWMQF; ooX43: $bh = round($v["\x68"] * $h / $this->barcode_array["\x6d\x61\170\150"], 3); goto BbjIs; lc3QE: $x += $bw; goto pVz5k; BbjIs: if ($v["\x74"]) { $y = round($v["\160"] * $h / $this->barcode_array["\155\141\x78\150"], 3); $svg .= "\x9\11" . "\74\x72\145\x63\x74\x20\170\75\42" . $x . "\x22\x20\171\75\42" . $y . "\x22\40\x77\151\144\x74\x68\x3d\42" . $bw . "\42\x20\150\x65\151\147\x68\164\x3d\x22" . $bh . "\42\x20\57\76" . "\12"; } goto lc3QE; kWMQF: $bw = round($v["\167"] * $w, 3); goto ooX43; pVz5k: } goto R4qL3; R4qL3: $svg .= "\x9" . "\74\x2f\147\76" . "\xa"; goto Cc8VE; w9VPC: $svg .= "\11" . "\74\144\x65\x73\143\x3e" . strtr($this->barcode_array["\x63\157\x64\x65"], $repstr) . "\74\57\x64\145\x73\x63\x3e" . "\12"; goto BMvLL; Cc8VE: $svg .= "\74\57\x73\166\147\x3e" . "\12"; goto cIUnp; SMWsP: } public function getBarcodeHTML($w = 2, $h = 30, $color = "\x62\154\x61\143\x6b") { goto Zi2_K; Zi2_K: $html = "\74\144\151\x76\40\163\x74\171\154\145\75\42\146\157\156\164\x2d\163\151\172\x65\72\x30\73\x70\x6f\163\151\164\151\x6f\x6e\72\162\x65\154\141\x74\x69\x76\145\x3b\167\x69\x64\164\150\x3a" . $this->barcode_array["\x6d\x61\x78\167"] * $w . "\160\170\73\x68\145\151\x67\150\164\72" . $h . "\160\x78\73\42\76" . "\xa"; goto RIYXK; TcDsv: foreach ($this->barcode_array["\142\143\157\144\145"] as $k => $v) { goto SiRac; pAks9: $bh = round($v["\x68"] * $h / $this->barcode_array["\x6d\141\170\150"], 3); goto nDGMf; nDGMf: if ($v["\x74"]) { $y = round($v["\x70"] * $h / $this->barcode_array["\x6d\141\x78\150"], 3); $html .= "\74\x64\151\x76\40\163\x74\171\154\x65\x3d\x22\x62\x61\x63\x6b\147\x72\x6f\165\x6e\144\55\x63\x6f\x6c\x6f\162\x3a" . $color . "\73\x77\x69\144\x74\x68\x3a" . $bw . "\160\x78\x3b\x68\145\x69\x67\150\x74\x3a" . $bh . "\160\170\73\160\x6f\163\151\164\x69\x6f\x6e\72\x61\142\163\x6f\154\x75\164\145\73\154\145\146\164\72" . $x . "\x70\170\x3b\164\157\x70\72" . $y . "\x70\170\73\x22\x3e\46\156\142\x73\160\73\x3c\57\x64\x69\x76\x3e" . "\12"; } goto iiNMJ; SiRac: $bw = round($v["\x77"] * $w, 3); goto pAks9; iiNMJ: $x += $bw; goto xvKqk; xvKqk: } goto GWDg7; W8o32: return $html; goto nTbRY; GWDg7: $html .= "\x3c\x2f\x64\151\166\76" . "\xa"; goto W8o32; RIYXK: $x = 0; goto TcDsv; nTbRY: } public function getBarcodePNG($w = 2, $h = 30, $color = array(0, 0, 0)) { goto s0VLP; q8Pnl: echo $data; goto ZtNzh; l8ist: header("\x4c\x61\x73\164\55\115\157\x64\x69\146\151\x65\x64\x3a\x20" . gmdate("\104\x2c\40\144\40\x4d\40\131\x20\x48\x3a\151\72\x73") . "\x20\x47\x4d\124"); goto q8Pnl; qOUhK: header("\105\170\160\151\162\145\163\72\x20\123\x61\x74\x2c\x20\62\66\x20\x4a\x75\154\40\x31\x39\71\x37\40\x30\65\x3a\60\x30\72\60\x30\x20\x47\x4d\x54"); goto l8ist; mLci0: header("\x43\157\156\164\x65\x6e\164\55\124\x79\160\145\x3a\x20\x69\x6d\141\x67\x65\x2f\160\x6e\147"); goto J0V4z; s0VLP: $data = $this->getBarcodePngData($w, $h, $color); goto mLci0; c5cqj: header("\120\x72\x61\x67\155\x61\x3a\40\160\x75\x62\x6c\151\143"); goto qOUhK; J0V4z: header("\103\141\x63\x68\x65\55\x43\x6f\x6e\164\162\157\x6c\72\40\x70\165\142\x6c\x69\x63\x2c\x20\155\165\x73\164\55\162\145\166\141\154\x69\x64\x61\x74\x65\x2c\x20\155\141\x78\55\x61\147\145\75\60"); goto c5cqj; ZtNzh: } public function getBarcodePngData($w = 2, $h = 30, $color = array(0, 0, 0)) { goto C530b; C530b: $width = $this->barcode_array["\x6d\x61\170\x77"] * $w; goto BPCgq; XfwKI: foreach ($this->barcode_array["\x62\143\157\144\x65"] as $k => $v) { goto c8PzF; nLKfh: $bh = round($v["\150"] * $h / $this->barcode_array["\155\141\x78\150"], 3); goto Bpcc1; c8PzF: $bw = round($v["\x77"] * $w, 3); goto nLKfh; Bpcc1: if ($v["\164"]) { $y = round($v["\160"] * $h / $this->barcode_array["\x6d\141\170\150"], 3); if ($imagick) { $bar->rectangle($x, $y, $x + $bw - 1, $y + $bh - 1); } else { imagefilledrectangle($png, $x, $y, $x + $bw - 1, $y + $bh - 1, $fgcol); } } goto aAGNp; aAGNp: $x += $bw; goto jhzMF; jhzMF: } goto OHbH1; BPCgq: $height = $h; goto WTUBn; OHbH1: if ($imagick) { $png->drawimage($bar); return $png; } else { goto IzSw6; GbUo_: imagedestroy($png); goto HfwXf; Grqtv: $imagedata = ob_get_clean(); goto GbUo_; i3rSc: imagepng($png); goto Grqtv; HfwXf: return $imagedata; goto TlrIK; IzSw6: ob_start(); goto i3rSc; TlrIK: } goto EguZA; Owe5T: $x = 0; goto XfwKI; WTUBn: if (function_exists("\x69\155\x61\x67\x65\143\x72\x65\141\164\x65")) { goto SbiYl; SbiYl: $imagick = false; goto AgZYl; ZcL3p: $fgcol = imagecolorallocate($png, $color[0], $color[1], $color[2]); goto lx4aB; AgZYl: $png = imagecreate($width, $height); goto zXLDt; aiBPj: imagecolortransparent($png, $bgcol); goto ZcL3p; zXLDt: $bgcol = imagecolorallocate($png, 255, 255, 255); goto aiBPj; lx4aB: } elseif (extension_loaded("\x69\x6d\x61\147\x69\x63\153")) { goto jfBir; cHjKG: $png->newImage($width, $height, "\156\157\156\145", "\x70\x6e\x67"); goto De_Tz; De_Tz: $bar = new imagickdraw(); goto RpwPm; flkn4: $bgcol = new imagickpixel("\162\x67\x62\x28\62\x35\65\54\62\65\x35\x2c\x32\x35\x35"); goto B31Xb; RpwPm: $bar->setfillcolor($fgcol); goto IbRYa; jfBir: $imagick = true; goto flkn4; LQ0cj: $png = new Imagick(); goto cHjKG; B31Xb: $fgcol = new imagickpixel("\x72\x67\142\x28" . $color[0] . "\54" . $color[1] . "\54" . $color[2] . "\x29"); goto LQ0cj; IbRYa: } else { return false; } goto Owe5T; EguZA: } public function setBarcode($code, $type) { switch (strtoupper($type)) { case "\103\x33\x39": $arrcode = $this->barcode_code39($code, false, false); break; case "\x43\x33\x39\x2b": $arrcode = $this->barcode_code39($code, false, true); break; case "\103\x33\71\105": $arrcode = $this->barcode_code39($code, true, false); break; case "\103\x33\x39\x45\x2b": $arrcode = $this->barcode_code39($code, true, true); break; case "\x43\x39\63": $arrcode = $this->barcode_code93($code); break; case "\123\62\x35": $arrcode = $this->barcode_s25($code, false); break; case "\x53\x32\x35\53": $arrcode = $this->barcode_s25($code, true); break; case "\x49\x32\65": $arrcode = $this->barcode_i25($code, false); break; case "\x49\62\65\53": $arrcode = $this->barcode_i25($code, true); break; case "\103\61\x32\x38": $arrcode = $this->barcode_c128($code, ''); break; case "\103\61\x32\x38\x41": $arrcode = $this->barcode_c128($code, "\101"); break; case "\x43\61\x32\x38\x42": $arrcode = $this->barcode_c128($code, "\102"); break; case "\103\61\x32\x38\x43": $arrcode = $this->barcode_c128($code, "\x43"); break; case "\105\101\116\x32": $arrcode = $this->barcode_eanext($code, 2); break; case "\105\101\x4e\65": $arrcode = $this->barcode_eanext($code, 5); break; case "\105\x41\116\x38": $arrcode = $this->barcode_eanupc($code, 8); break; case "\x45\x41\116\61\63": $arrcode = $this->barcode_eanupc($code, 13); break; case "\125\x50\x43\x41": $arrcode = $this->barcode_eanupc($code, 12); break; case "\125\120\103\x45": $arrcode = $this->barcode_eanupc($code, 6); break; case "\115\123\x49": $arrcode = $this->barcode_msi($code, false); break; case "\x4d\123\111\x2b": $arrcode = $this->barcode_msi($code, true); break; case "\x50\117\123\124\116\105\x54": $arrcode = $this->barcode_postnet($code, false); break; case "\120\114\101\116\x45\x54": $arrcode = $this->barcode_postnet($code, true); break; case "\x52\x4d\x53\x34\103\x43": $arrcode = $this->barcode_rms4cc($code, false); break; case "\113\x49\130": $arrcode = $this->barcode_rms4cc($code, true); break; case "\x49\x4d\102": $arrcode = $this->barcode_imb($code); break; case "\111\x4d\102\x50\122\x45": $arrcode = $this->barcode_imb_pre($code); break; case "\103\117\104\101\102\x41\122": $arrcode = $this->barcode_codabar($code); break; case "\x43\117\x44\105\61\x31": $arrcode = $this->barcode_code11($code); break; case "\120\110\x41\x52\x4d\101": $arrcode = $this->barcode_pharmacode($code); break; case "\x50\x48\x41\122\115\101\x32\124": $arrcode = $this->barcode_pharmacode2t($code); break; default: goto YoRxW; YoRxW: $this->barcode_array = false; goto kxwwY; kxwwY: $arrcode = false; goto uxk47; uxk47: break; goto yuGHm; yuGHm: } $this->barcode_array = $arrcode; } protected function barcode_code39($code, $extended = false, $checksum = false) { goto VB9_N; TDiu2: $chr["\117"] = "\x33\x31\61\x31\x33\61\61\x33\x31"; goto Ld_f_; WzY0c: $chr["\x43"] = "\63\61\x33\x31\x31\x33\x31\x31\x31"; goto m13S3; MnH0C: $chr["\x2a"] = "\61\63\61\61\63\x31\63\x31\x31"; goto Ot4FY; ZnclM: $k = 0; goto Zxl13; m13S3: $chr["\x44"] = "\x31\61\61\61\x33\63\61\61\x33"; goto gOMOc; ZM3Zg: $chr["\101"] = "\x33\61\61\x31\61\x33\61\x31\x33"; goto VFyPJ; Ld_f_: $chr["\120"] = "\61\x31\x33\61\63\x31\x31\x33\61"; goto JPRmD; lT_Ra: $chr["\x35"] = "\x33\61\61\x33\63\x31\x31\61\61"; goto pXqIF; tiDsC: $chr["\x4a"] = "\61\61\x31\x31\63\63\63\61\x31"; goto dzcaZ; lPw4A: $chr["\127"] = "\63\63\63\61\x31\61\61\61\x31"; goto TyZkI; TzU5J: $chr["\122"] = "\63\x31\x31\x31\x31\61\63\x33\x31"; goto CzQBr; nrAKv: $chr["\x31"] = "\x33\x31\x31\x33\x31\61\x31\61\63"; goto Vz06O; XzJs7: $chr["\124"] = "\61\x31\x31\x31\63\61\x33\63\x31"; goto YAIBY; hhxxx: $chr["\x46"] = "\61\x31\x33\61\x33\x33\x31\61\61"; goto Lb4nE; dzcaZ: $chr["\x4b"] = "\x33\61\x31\61\x31\61\61\x33\x33"; goto vfeBb; gOMOc: $chr["\105"] = "\x33\x31\x31\x31\63\63\61\61\x31"; goto hhxxx; Ot4FY: $code = strtoupper($code); goto lfn4b; kNeSN: $chr["\x20"] = "\61\63\63\61\x31\61\63\61\61"; goto um6mW; um6mW: $chr["\44"] = "\61\63\61\x33\61\x33\x31\x31\61"; goto shWRr; nTurj: $chr["\67"] = "\61\x31\x31\63\x31\x31\x33\x31\x33"; goto TyPiZ; mjhNa: $chr["\x56"] = "\61\63\x33\61\61\x31\61\x31\x33"; goto lPw4A; min6h: $chr["\110"] = "\63\x31\x31\x31\x31\63\63\61\x31"; goto aZhEG; UYSbP: $chr["\x2d"] = "\61\63\61\x31\61\x31\63\x31\63"; goto EHI10; Zxl13: $clen = strlen($code); goto RH_jv; gt0hR: $chr["\63"] = "\63\x31\63\63\61\61\x31\x31\x31"; goto ghjRm; lfn4b: if ($extended) { $code = $this->encode_code39_ext($code); } goto b39Ak; ghjRm: $chr["\64"] = "\61\61\61\x33\63\x31\61\x31\x33"; goto lT_Ra; aJIex: return $bararray; goto Kh9GA; aZhEG: $chr["\x49"] = "\61\x31\x33\61\x31\63\63\61\x31"; goto tiDsC; CzQBr: $chr["\x53"] = "\x31\61\63\61\61\x31\x33\63\x31"; goto XzJs7; mLOaa: $code = "\x2a" . $code . "\x2a"; goto Y3iKE; pXqIF: $chr["\x36"] = "\x31\61\63\63\x33\61\61\x31\61"; goto nTurj; RH_jv: for ($i = 0; $i < $clen; ++$i) { $char = $code[$i]; if (!isset($chr[$char])) { return false; } for ($j = 0; $j < 9; ++$j) { if ($j % 2 == 0) { $t = true; } else { $t = false; } $w = $chr[$char][$j]; $bararray["\142\x63\157\144\x65"][$k] = array("\164" => $t, "\x77" => $w, "\150" => 1, "\160" => 0); $bararray["\x6d\141\x78\x77"] += $w; ++$k; } $bararray["\x62\x63\157\x64\x65"][$k] = array("\164" => false, "\167" => 1, "\x68" => 1, "\x70" => 0); $bararray["\155\x61\170\167"] += 1; ++$k; } goto aJIex; TyPiZ: $chr["\x38"] = "\63\x31\61\63\61\61\x33\x31\61"; goto L1rAz; RZ3iw: $chr["\116"] = "\61\x31\61\61\63\61\61\x33\x33"; goto TDiu2; EHI10: $chr["\56"] = "\63\63\61\61\x31\x31\x33\x31\x31"; goto kNeSN; KRVLm: $chr["\x59"] = "\x33\x33\61\61\x33\x31\x31\x31\61"; goto Dc71A; VFyPJ: $chr["\x42"] = "\61\61\x33\x31\x31\63\61\61\x33"; goto WzY0c; ciZ9n: $chr["\115"] = "\x33\61\63\x31\x31\61\x31\63\61"; goto RZ3iw; Vz06O: $chr["\62"] = "\x31\x31\x33\63\61\x31\x31\61\x33"; goto gt0hR; yt5ue: $chr["\x25"] = "\61\x31\61\x33\x31\63\61\x33\x31"; goto MnH0C; YAIBY: $chr["\x55"] = "\x33\x33\x31\x31\61\61\x31\x31\63"; goto mjhNa; b39Ak: if ($code === false) { return false; } goto ak_vC; ak_vC: if ($checksum) { $code .= $this->checksum_code39($code); } goto mLOaa; VmvT9: $chr["\x2b"] = "\x31\63\x31\x31\61\63\x31\63\x31"; goto yt5ue; shWRr: $chr["\57"] = "\x31\63\61\63\x31\61\x31\x33\x31"; goto VmvT9; L1rAz: $chr["\71"] = "\61\61\x33\63\x31\61\x33\61\x31"; goto ZM3Zg; vfeBb: $chr["\114"] = "\61\61\x33\61\x31\x31\x31\x33\x33"; goto ciZ9n; TyZkI: $chr["\130"] = "\x31\x33\x31\x31\x33\x31\61\61\63"; goto KRVLm; Y3iKE: $bararray = array("\x63\x6f\x64\x65" => $code, "\x6d\x61\x78\x77" => 0, "\x6d\141\x78\150" => 1, "\x62\x63\157\x64\145" => array()); goto ZnclM; Dc71A: $chr["\x5a"] = "\x31\63\63\61\63\x31\x31\x31\x31"; goto UYSbP; JPRmD: $chr["\x51"] = "\x31\x31\x31\x31\61\x31\x33\63\63"; goto TzU5J; VB9_N: $chr["\60"] = "\x31\61\x31\x33\63\x31\63\x31\61"; goto nrAKv; Lb4nE: $chr["\107"] = "\x31\x31\x31\x31\61\63\x33\61\63"; goto min6h; Kh9GA: } protected function encode_code39_ext($code) { goto OG0Zt; ZZI31: $clen = strlen($code); goto HRsLE; OG0Zt: $encode = array(chr(0) => "\x25\x55", chr(1) => "\44\x41", chr(2) => "\44\x42", chr(3) => "\x24\103", chr(4) => "\44\104", chr(5) => "\44\x45", chr(6) => "\44\106", chr(7) => "\x24\x47", chr(8) => "\44\110", chr(9) => "\x24\x49", chr(10) => "\x24\x4a", chr(11) => "\xc2\243\113", chr(12) => "\x24\x4c", chr(13) => "\x24\115", chr(14) => "\x24\116", chr(15) => "\44\x4f", chr(16) => "\x24\120", chr(17) => "\x24\x51", chr(18) => "\x24\122", chr(19) => "\x24\123", chr(20) => "\44\x54", chr(21) => "\44\125", chr(22) => "\44\126", chr(23) => "\44\x57", chr(24) => "\44\x58", chr(25) => "\44\x59", chr(26) => "\x24\132", chr(27) => "\45\x41", chr(28) => "\45\x42", chr(29) => "\45\x43", chr(30) => "\x25\104", chr(31) => "\x25\x45", chr(32) => "\40", chr(33) => "\x2f\x41", chr(34) => "\x2f\102", chr(35) => "\x2f\x43", chr(36) => "\57\104", chr(37) => "\x2f\105", chr(38) => "\x2f\x46", chr(39) => "\57\x47", chr(40) => "\57\x48", chr(41) => "\x2f\x49", chr(42) => "\x2f\x4a", chr(43) => "\x2f\x4b", chr(44) => "\57\114", chr(45) => "\55", chr(46) => "\x2e", chr(47) => "\x2f\x4f", chr(48) => "\60", chr(49) => "\61", chr(50) => "\x32", chr(51) => "\x33", chr(52) => "\x34", chr(53) => "\x35", chr(54) => "\66", chr(55) => "\67", chr(56) => "\70", chr(57) => "\71", chr(58) => "\x2f\x5a", chr(59) => "\45\x46", chr(60) => "\x25\x47", chr(61) => "\45\110", chr(62) => "\45\111", chr(63) => "\45\x4a", chr(64) => "\45\x56", chr(65) => "\101", chr(66) => "\102", chr(67) => "\103", chr(68) => "\104", chr(69) => "\105", chr(70) => "\106", chr(71) => "\x47", chr(72) => "\110", chr(73) => "\111", chr(74) => "\x4a", chr(75) => "\113", chr(76) => "\114", chr(77) => "\x4d", chr(78) => "\116", chr(79) => "\x4f", chr(80) => "\x50", chr(81) => "\x51", chr(82) => "\122", chr(83) => "\x53", chr(84) => "\124", chr(85) => "\125", chr(86) => "\x56", chr(87) => "\x57", chr(88) => "\130", chr(89) => "\131", chr(90) => "\132", chr(91) => "\x25\x4b", chr(92) => "\x25\x4c", chr(93) => "\45\x4d", chr(94) => "\45\116", chr(95) => "\x25\117", chr(96) => "\x25\x57", chr(97) => "\53\x41", chr(98) => "\x2b\x42", chr(99) => "\x2b\103", chr(100) => "\53\104", chr(101) => "\53\105", chr(102) => "\x2b\x46", chr(103) => "\53\107", chr(104) => "\53\x48", chr(105) => "\53\111", chr(106) => "\53\x4a", chr(107) => "\x2b\x4b", chr(108) => "\x2b\114", chr(109) => "\x2b\115", chr(110) => "\x2b\116", chr(111) => "\x2b\x4f", chr(112) => "\53\x50", chr(113) => "\53\x51", chr(114) => "\53\122", chr(115) => "\53\x53", chr(116) => "\x2b\124", chr(117) => "\x2b\x55", chr(118) => "\x2b\x56", chr(119) => "\x2b\127", chr(120) => "\x2b\130", chr(121) => "\53\x59", chr(122) => "\x2b\132", chr(123) => "\45\x50", chr(124) => "\45\x51", chr(125) => "\45\122", chr(126) => "\x25\x53", chr(127) => "\45\x54"); goto coBRn; HRsLE: for ($i = 0; $i < $clen; ++$i) { if (ord($code[$i]) > 127) { return false; } $code_ext .= $encode[$code[$i]]; } goto uWWpn; uWWpn: return $code_ext; goto HveMw; coBRn: $code_ext = ''; goto ZZI31; HveMw: } protected function checksum_code39($code) { goto SRGGd; r4NSD: for ($i = 0; $i < $clen; ++$i) { $k = array_keys($chars, $code[$i]); $sum += $k[0]; } goto OnhQG; GUEGg: $clen = strlen($code); goto r4NSD; SRGGd: $chars = array("\60", "\x31", "\62", "\x33", "\x34", "\x35", "\x36", "\67", "\x38", "\x39", "\x41", "\102", "\x43", "\x44", "\x45", "\x46", "\107", "\110", "\111", "\x4a", "\113", "\x4c", "\115", "\x4e", "\x4f", "\120", "\121", "\x52", "\123", "\124", "\x55", "\126", "\127", "\x58", "\x59", "\132", "\55", "\x2e", "\40", "\44", "\x2f", "\x2b", "\x25"); goto XTwXj; OnhQG: $j = $sum % 43; goto jObmD; jObmD: return $chars[$j]; goto w2fvj; XTwXj: $sum = 0; goto GUEGg; w2fvj: } protected function barcode_code93($code) { goto j971t; pE0bT: $chr[72] = "\x31\x31\x32\62\61\x32"; goto TGkbB; FE3J_: $bararray = array("\x63\x6f\x64\145" => $code, "\x6d\141\x78\x77" => 0, "\x6d\x61\170\x68" => 1, "\x62\143\x6f\144\145" => array()); goto xAgqY; lqkfz: for ($i = 0; $i < $clen; ++$i) { $char = ord($code[$i]); if (!isset($chr[$char])) { return false; } for ($j = 0; $j < 6; ++$j) { if ($j % 2 == 0) { $t = true; } else { $t = false; } $w = $chr[$char][$j]; $bararray["\142\143\157\144\x65"][$k] = array("\x74" => $t, "\x77" => $w, "\150" => 1, "\160" => 0); $bararray["\x6d\x61\x78\x77"] += $w; ++$k; } } goto HzHm5; LbuV1: $chr[70] = "\62\x33\61\61\61\x31"; goto nEH9q; I012H: $code = strtoupper($code); goto nl02H; jVFdv: $chr[90] = "\61\x32\63\x31\x31\61"; goto y4PHD; kFBJd: $chr[50] = "\61\61\x31\63\61\x32"; goto PQklN; qGOzb: $chr[78] = "\61\x31\61\63\62\x31"; goto y2z7W; PesES: $chr[85] = "\x32\62\61\61\62\61"; goto vdBq0; fW1_k: $chr[36] = "\x33\x32\x31\61\61\61"; goto tLqJw; xAgqY: $k = 0; goto syFYY; F9RGn: return $bararray; goto bxLXa; U5_9_: $chr[75] = "\x31\x33\x32\x31\61\61"; goto Zpq76; y2z7W: $chr[79] = "\61\x32\x31\61\62\62"; goto jA2RK; OfW1E: $chr[128] = "\x31\62\61\x32\x32\61"; goto daXUA; rApkC: $chr[84] = "\x32\61\x31\x32\62\x31"; goto PesES; R2srT: $chr[42] = "\61\61\61\61\64\61"; goto I012H; UniFq: $chr[67] = "\x32\x31\x31\63\x31\x31"; goto ltHha; TD9qy: $chr[81] = "\62\x31\x32\61\x31\x32"; goto fPHfo; j971t: $chr[48] = "\x31\x33\61\61\61\x32"; goto YO7dI; fPHfo: $chr[82] = "\62\x31\x32\x32\61\61"; goto vWP_U; zU6JY: $chr[66] = "\x32\x31\61\x32\x31\62"; goto UniFq; bq2lx: $chr[55] = "\x31\x31\61\61\x31\x34"; goto aL_mP; m5cPj: $chr[37] = "\62\61\61\x31\x33\61"; goto OfW1E; TGkbB: $chr[73] = "\x31\61\x32\x33\x31\61"; goto mZpjO; Zpq76: $chr[76] = "\x31\x31\61\61\62\x33"; goto EInsh; ENgft: $chr[52] = "\x31\62\x31\61\61\x33"; goto DZO2w; jA2RK: $chr[80] = "\x31\63\x31\x31\x32\61"; goto TD9qy; r22Gz: $bararray["\x6d\141\170\167"] += 1; goto aplW3; EInsh: $chr[77] = "\61\x31\x31\x32\62\x32"; goto qGOzb; xtgVt: $chr[88] = "\x31\x31\62\x32\62\x31"; goto V5T_f; PQklN: $chr[51] = "\61\61\61\x34\x31\x31"; goto ENgft; DZO2w: $chr[53] = "\x31\62\61\x32\x31\62"; goto po9Ny; Uw6cS: for ($i = 0; $i < $clen; ++$i) { if (ord($code[$i]) > 127) { return false; } $code_ext .= $encode[$code[$i]]; } goto IaPAD; IaPAD: $code_ext .= $this->checksum_code93($code_ext); goto ZskJ6; ZskJ6: $code = "\x2a" . $code_ext . "\52"; goto FE3J_; vdBq0: $chr[86] = "\x32\x32\62\61\x31\61"; goto Zcn7X; po9Ny: $chr[54] = "\61\x32\61\63\61\61"; goto bq2lx; daXUA: $chr[129] = "\63\61\61\x31\x32\61"; goto eXAca; tLqJw: $chr[47] = "\61\61\x32\61\x33\61"; goto hp75K; SFR52: $chr[69] = "\x32\62\61\62\61\61"; goto LbuV1; h4W95: $chr[65] = "\62\x31\61\61\61\x33"; goto zU6JY; wZL1S: $code_ext = ''; goto qVQnX; SdXuE: $chr[46] = "\63\61\x31\x31\61\62"; goto xmhfO; Sff9W: $chr[57] = "\61\64\61\61\x31\61"; goto h4W95; nEH9q: $chr[71] = "\61\61\x32\x31\x31\63"; goto pE0bT; V5T_f: $chr[89] = "\61\62\x32\61\x32\x31"; goto jVFdv; Zcn7X: $chr[87] = "\61\x31\62\x31\x32\62"; goto xtgVt; aplW3: ++$k; goto F9RGn; YO7dI: $chr[49] = "\x31\61\61\62\x31\63"; goto kFBJd; syFYY: $clen = strlen($code); goto lqkfz; hp75K: $chr[43] = "\x31\x31\x33\61\x32\x31"; goto m5cPj; eXAca: $chr[130] = "\x31\x32\x32\62\x31\61"; goto U0cuZ; xmhfO: $chr[32] = "\63\x31\x31\62\61\61"; goto fW1_k; U0cuZ: $chr[131] = "\x33\x31\62\61\61\x31"; goto R2srT; mZpjO: $chr[74] = "\x31\62\x32\61\61\62"; goto U5_9_; vWP_U: $chr[83] = "\62\x31\61\x31\62\x32"; goto rApkC; aL_mP: $chr[56] = "\61\x33\61\62\61\61"; goto Sff9W; qVQnX: $clen = strlen($code); goto Uw6cS; nl02H: $encode = array(chr(0) => chr(131) . "\x55", chr(1) => chr(128) . "\x41", chr(2) => chr(128) . "\102", chr(3) => chr(128) . "\103", chr(4) => chr(128) . "\104", chr(5) => chr(128) . "\x45", chr(6) => chr(128) . "\x46", chr(7) => chr(128) . "\x47", chr(8) => chr(128) . "\x48", chr(9) => chr(128) . "\x49", chr(10) => chr(128) . "\x4a", chr(11) => "\302\xa3\113", chr(12) => chr(128) . "\114", chr(13) => chr(128) . "\115", chr(14) => chr(128) . "\116", chr(15) => chr(128) . "\x4f", chr(16) => chr(128) . "\x50", chr(17) => chr(128) . "\x51", chr(18) => chr(128) . "\x52", chr(19) => chr(128) . "\123", chr(20) => chr(128) . "\x54", chr(21) => chr(128) . "\125", chr(22) => chr(128) . "\126", chr(23) => chr(128) . "\127", chr(24) => chr(128) . "\x58", chr(25) => chr(128) . "\131", chr(26) => chr(128) . "\x5a", chr(27) => chr(131) . "\101", chr(28) => chr(131) . "\102", chr(29) => chr(131) . "\x43", chr(30) => chr(131) . "\x44", chr(31) => chr(131) . "\105", chr(32) => "\40", chr(33) => chr(129) . "\x41", chr(34) => chr(129) . "\x42", chr(35) => chr(129) . "\103", chr(36) => chr(129) . "\x44", chr(37) => chr(129) . "\105", chr(38) => chr(129) . "\x46", chr(39) => chr(129) . "\107", chr(40) => chr(129) . "\110", chr(41) => chr(129) . "\x49", chr(42) => chr(129) . "\112", chr(43) => chr(129) . "\x4b", chr(44) => chr(129) . "\x4c", chr(45) => "\55", chr(46) => "\56", chr(47) => chr(129) . "\x4f", chr(48) => "\60", chr(49) => "\x31", chr(50) => "\x32", chr(51) => "\x33", chr(52) => "\x34", chr(53) => "\65", chr(54) => "\66", chr(55) => "\67", chr(56) => "\x38", chr(57) => "\71", chr(58) => chr(129) . "\132", chr(59) => chr(131) . "\x46", chr(60) => chr(131) . "\x47", chr(61) => chr(131) . "\110", chr(62) => chr(131) . "\x49", chr(63) => chr(131) . "\112", chr(64) => chr(131) . "\126", chr(65) => "\x41", chr(66) => "\102", chr(67) => "\103", chr(68) => "\104", chr(69) => "\x45", chr(70) => "\106", chr(71) => "\x47", chr(72) => "\x48", chr(73) => "\111", chr(74) => "\x4a", chr(75) => "\x4b", chr(76) => "\114", chr(77) => "\115", chr(78) => "\116", chr(79) => "\117", chr(80) => "\120", chr(81) => "\x51", chr(82) => "\122", chr(83) => "\x53", chr(84) => "\124", chr(85) => "\x55", chr(86) => "\126", chr(87) => "\x57", chr(88) => "\130", chr(89) => "\131", chr(90) => "\x5a", chr(91) => chr(131) . "\x4b", chr(92) => chr(131) . "\x4c", chr(93) => chr(131) . "\115", chr(94) => chr(131) . "\x4e", chr(95) => chr(131) . "\117", chr(96) => chr(131) . "\127", chr(97) => chr(130) . "\101", chr(98) => chr(130) . "\x42", chr(99) => chr(130) . "\103", chr(100) => chr(130) . "\x44", chr(101) => chr(130) . "\x45", chr(102) => chr(130) . "\106", chr(103) => chr(130) . "\107", chr(104) => chr(130) . "\110", chr(105) => chr(130) . "\x49", chr(106) => chr(130) . "\112", chr(107) => chr(130) . "\x4b", chr(108) => chr(130) . "\114", chr(109) => chr(130) . "\115", chr(110) => chr(130) . "\x4e", chr(111) => chr(130) . "\117", chr(112) => chr(130) . "\120", chr(113) => chr(130) . "\x51", chr(114) => chr(130) . "\x52", chr(115) => chr(130) . "\x53", chr(116) => chr(130) . "\x54", chr(117) => chr(130) . "\125", chr(118) => chr(130) . "\126", chr(119) => chr(130) . "\x57", chr(120) => chr(130) . "\x58", chr(121) => chr(130) . "\131", chr(122) => chr(130) . "\132", chr(123) => chr(131) . "\120", chr(124) => chr(131) . "\121", chr(125) => chr(131) . "\x52", chr(126) => chr(131) . "\123", chr(127) => chr(131) . "\124"); goto wZL1S; y4PHD: $chr[45] = "\61\62\x31\x31\63\x31"; goto SdXuE; HzHm5: $bararray["\x62\143\157\144\x65"][$k] = array("\x74" => true, "\167" => 1, "\x68" => 1, "\x70" => 0); goto r22Gz; ltHha: $chr[68] = "\x32\62\61\61\x31\x32"; goto SFR52; bxLXa: } protected function checksum_code93($code) { goto j2zkc; qhJnT: $code = strtr($code, chr(128) . chr(131) . chr(129) . chr(130), "\74\75\x3e\x3f"); goto hK3se; eJyr4: $check = 0; goto JSYmG; bHM7t: for ($i = $len - 1; $i >= 0; --$i) { $k = array_keys($chars, $code[$i]); $check += $k[0] * $p; ++$p; if ($p > 20) { $p = 1; } } goto AczBo; q1Ik0: $k = $chars[$check]; goto PfJw_; PfJw_: $checksum = $c . $k; goto zW1YD; G10mO: $check = 0; goto bHM7t; AczBo: $check %= 47; goto u5kr0; JSYmG: for ($i = $len; $i >= 0; --$i) { $k = array_keys($chars, $code[$i]); $check += $k[0] * $p; ++$p; if ($p > 15) { $p = 1; } } goto F3VkE; VKCCR: $p = 1; goto G10mO; MfsUz: $code .= $c; goto YLGUg; j2zkc: $chars = array("\x30", "\x31", "\x32", "\x33", "\64", "\x35", "\x36", "\x37", "\70", "\x39", "\x41", "\102", "\x43", "\x44", "\x45", "\x46", "\x47", "\x48", "\x49", "\112", "\x4b", "\x4c", "\x4d", "\116", "\x4f", "\x50", "\x51", "\x52", "\123", "\124", "\125", "\x56", "\x57", "\x58", "\131", "\132", "\55", "\56", "\40", "\44", "\x2f", "\53", "\45", "\74", "\x3d", "\x3e", "\x3f"); goto qhJnT; zW1YD: $checksum = strtr($checksum, "\x3c\75\x3e\x3f", chr(128) . chr(131) . chr(129) . chr(130)); goto XIEzr; hK3se: $len = strlen($code); goto VKCCR; F3VkE: $check %= 47; goto q1Ik0; XIEzr: return $checksum; goto SHHWs; u5kr0: $c = $chars[$check]; goto MfsUz; YLGUg: $p = 1; goto eJyr4; SHHWs: } protected function checksum_s25($code) { goto slCVm; kpqUO: for ($i = 0; $i < $len; $i += 2) { $sum += $code[$i]; } goto ZiMK_; bckAz: for ($i = 1; $i < $len; $i += 2) { $sum += $code[$i]; } goto w0FUk; w0FUk: $r = $sum % 10; goto Vv90J; ZiMK_: $sum *= 3; goto bckAz; slCVm: $len = strlen($code); goto ZmhUR; Vv90J: if ($r > 0) { $r = 10 - $r; } goto SR66d; ZmhUR: $sum = 0; goto kpqUO; SR66d: return $r; goto V600l; V600l: } protected function barcode_msi($code, $checksum = false) { goto ffoC5; P3c11: $chr["\x34"] = "\61\60\x30\x31\x31\x30\x31\x30\60\x31\x30\60"; goto g8ss7; T5ECl: $chr["\x45"] = "\x31\61\x30\x31\x31\x30\x31\x31\60\61\60\x30"; goto oFWpL; ffoC5: $chr["\x30"] = "\x31\60\60\x31\x30\x30\x31\60\60\x31\x30\x30"; goto NoK3s; HkjxE: $chr["\63"] = "\61\60\60\x31\60\60\x31\61\x30\61\x31\x30"; goto P3c11; Qb1Pj: $clen = strlen($code); goto nRt8O; oFWpL: $chr["\x46"] = "\x31\61\60\x31\61\60\x31\61\x30\x31\x31\60"; goto DvvvT; SdW27: $chr["\x39"] = "\61\x31\60\61\x30\x30\x31\60\x30\61\x31\60"; goto GCKBu; NoK3s: $chr["\x31"] = "\x31\x30\60\61\x30\60\x31\x30\60\x31\x31\60"; goto raW4Z; vXdEW: $seq .= "\61\60\60\x31"; goto LsVtB; i_Pkz: $chr["\70"] = "\x31\x31\60\61\x30\x30\x31\x30\60\61\60\60"; goto SdW27; DvvvT: if ($checksum) { goto Hv0u_; Hv0u_: $clen = strlen($code); goto yGMwD; Oulzx: if ($check > 0) { $check = 11 - $check; } goto wOIok; ugOsp: $check = 0; goto PCGJR; wOIok: $code .= $check; goto ALwWx; PCGJR: for ($i = $clen - 1; $i >= 0; --$i) { $check += hexdec($code[$i]) * $p; ++$p; if ($p > 7) { $p = 2; } } goto I5J1x; I5J1x: $check %= 11; goto Oulzx; yGMwD: $p = 2; goto ugOsp; ALwWx: } goto NBhYB; nRt8O: for ($i = 0; $i < $clen; ++$i) { $digit = $code[$i]; if (!isset($chr[$digit])) { return false; } $seq .= $chr[$digit]; } goto vXdEW; WHupI: return $this->binseq_to_array($seq, $bararray); goto uMZUr; lRkuG: $chr["\103"] = "\x31\x31\60\61\61\x30\x31\x30\x30\61\60\60"; goto GIRQm; LsVtB: $bararray = array("\x63\x6f\144\145" => $code, "\x6d\x61\170\167" => 0, "\x6d\x61\170\150" => 1, "\142\143\x6f\x64\145" => array()); goto WHupI; NBhYB: $seq = "\x31\x31\x30"; goto Qb1Pj; GCKBu: $chr["\101"] = "\x31\61\x30\61\x30\x30\x31\x31\x30\61\60\x30"; goto VUGMn; p4P8e: $chr["\66"] = "\x31\60\x30\61\61\60\x31\x31\x30\x31\x30\60"; goto KRg2D; g8ss7: $chr["\65"] = "\x31\60\x30\x31\61\60\61\x30\x30\61\x31\60"; goto p4P8e; KRg2D: $chr["\x37"] = "\x31\x30\x30\61\x31\60\x31\61\x30\x31\61\60"; goto i_Pkz; raW4Z: $chr["\x32"] = "\61\x30\x30\x31\60\60\x31\x31\x30\x31\x30\60"; goto HkjxE; GIRQm: $chr["\104"] = "\61\61\x30\x31\61\x30\61\60\60\61\x31\60"; goto T5ECl; VUGMn: $chr["\102"] = "\x31\61\60\x31\x30\60\61\x31\x30\61\61\60"; goto lRkuG; uMZUr: } protected function barcode_s25($code, $checksum = false) { goto YB4Ny; BJtXY: $clen = strlen($code); goto VSMNi; chj42: $chr["\x35"] = "\61\x31\x31\60\61\60\x31\x31\61\60\x31\x30\61\x30"; goto gb99d; EtrhZ: if ($checksum) { $code .= $this->checksum_s25($code); } goto T3teM; Di3AS: $chr["\62"] = "\x31\60\x31\61\x31\x30\61\x30\x31\60\x31\61\x31\x30"; goto v0cWk; T3teM: if (strlen($code) % 2 != 0) { $code = "\60" . $code; } goto SE9d3; X1tn2: $chr["\70"] = "\x31\x30\x31\x30\x31\61\61\60\61\61\61\x30\61\60"; goto VuQJ5; C2EmG: $chr["\64"] = "\x31\x30\x31\60\61\x31\x31\x30\61\x30\x31\x31\61\x30"; goto chj42; O78Sr: $bararray = array("\x63\x6f\144\x65" => $code, "\x6d\141\x78\x77" => 0, "\x6d\x61\170\150" => 1, "\x62\143\x6f\x64\x65" => array()); goto nJCwy; nJCwy: return $this->binseq_to_array($seq, $bararray); goto aC_2w; YB4Ny: $chr["\x30"] = "\x31\60\x31\60\61\x31\x31\x30\61\x31\x31\x30\x31\60"; goto eq91O; VSMNi: for ($i = 0; $i < $clen; ++$i) { $digit = $code[$i]; if (!isset($chr[$digit])) { return false; } $seq .= $chr[$digit]; } goto U4fkd; gb99d: $chr["\x36"] = "\61\60\61\61\61\x30\x31\x31\61\x30\x31\60\x31\x30"; goto POqyf; SE9d3: $seq = "\x31\61\x30\x31\x31\60\61\x30"; goto BJtXY; POqyf: $chr["\67"] = "\x31\x30\x31\60\61\x30\61\61\x31\x30\x31\61\61\60"; goto X1tn2; U4fkd: $seq .= "\61\61\x30\61\60\x31\x31"; goto O78Sr; v0cWk: $chr["\63"] = "\x31\x31\x31\x30\x31\x31\x31\x30\x31\60\x31\x30\61\x30"; goto C2EmG; VuQJ5: $chr["\x39"] = "\61\x30\61\x31\61\x30\x31\x30\61\x31\61\60\61\x30"; goto EtrhZ; eq91O: $chr["\x31"] = "\x31\61\x31\x30\61\60\x31\60\61\60\x31\x31\x31\x30"; goto Di3AS; aC_2w: } protected function binseq_to_array($seq, $bararray) { goto Vhu9f; XyOpq: return $bararray; goto MKcRm; Vhu9f: $len = strlen($seq); goto Lu2PX; d1gkj: $k = 0; goto OAm4a; OAm4a: for ($i = 0; $i < $len; ++$i) { $w += 1; if ($i == $len - 1 or $i < $len - 1 and $seq[$i] != $seq[$i + 1]) { goto g8qsf; g8qsf: if ($seq[$i] == "\61") { $t = true; } else { $t = false; } goto q1Xzz; V0p6Z: ++$k; goto YLFyZ; q1Xzz: $bararray["\142\143\x6f\x64\x65"][$k] = array("\x74" => $t, "\x77" => $w, "\x68" => 1, "\160" => 0); goto KqqSw; KqqSw: $bararray["\155\x61\x78\x77"] += $w; goto V0p6Z; YLFyZ: $w = 0; goto m45ED; m45ED: } } goto XyOpq; Lu2PX: $w = 0; goto d1gkj; MKcRm: } protected function barcode_i25($code, $checksum = false) { goto QWTUq; d0Ze1: if (strlen($code) % 2 != 0) { $code = "\x30" . $code; } goto OFvfO; QWTUq: $chr["\60"] = "\x31\x31\62\62\x31"; goto EWDXX; nMRXB: if ($checksum) { $code .= $this->checksum_s25($code); } goto d0Ze1; Dj9yZ: $chr["\x5a"] = "\x32\x31"; goto nMRXB; leG9i: for ($i = 0; $i < $clen; $i = $i + 2) { $char_bar = $code[$i]; $char_space = $code[$i + 1]; if (!isset($chr[$char_bar]) or !isset($chr[$char_space])) { return false; } $seq = ''; $chrlen = strlen($chr[$char_bar]); for ($s = 0; $s < $chrlen; $s++) { $seq .= $chr[$char_bar][$s] . $chr[$char_space][$s]; } $seqlen = strlen($seq); for ($j = 0; $j < $seqlen; ++$j) { if ($j % 2 == 0) { $t = true; } else { $t = false; } $w = $seq[$j]; $bararray["\x62\x63\x6f\x64\145"][$k] = array("\x74" => $t, "\x77" => $w, "\x68" => 1, "\160" => 0); $bararray["\155\141\x78\167"] += $w; ++$k; } } goto pp9mR; X2hob: $k = 0; goto h8Syn; KFleE: $chr["\62"] = "\x31\x32\61\61\x32"; goto Zvaon; QQU8e: $chr["\x35"] = "\62\61\x32\x31\61"; goto zGRns; Zvaon: $chr["\63"] = "\62\x32\61\x31\x31"; goto Hf94n; q1dYe: $chr["\67"] = "\x31\x31\x31\x32\62"; goto JbGuA; JbGuA: $chr["\70"] = "\62\61\x31\62\x31"; goto Tcl2Z; zGRns: $chr["\x36"] = "\61\x32\x32\61\x31"; goto q1dYe; pp9mR: return $bararray; goto ffFil; dfFbE: $bararray = array("\x63\157\x64\145" => $code, "\x6d\x61\x78\x77" => 0, "\x6d\141\x78\150" => 1, "\142\x63\157\x64\145" => array()); goto X2hob; rpa8w: $chr["\x41"] = "\61\x31"; goto Dj9yZ; h8Syn: $clen = strlen($code); goto leG9i; OFvfO: $code = "\x41\x41" . strtolower($code) . "\x5a\101"; goto dfFbE; EWDXX: $chr["\61"] = "\x32\61\x31\61\x32"; goto KFleE; Tcl2Z: $chr["\71"] = "\x31\x32\61\x32\61"; goto rpa8w; Hf94n: $chr["\x34"] = "\x31\x31\x32\x31\62"; goto QQU8e; ffFil: } protected function barcode_c128($code, $type = '') { goto BMb13; T8qI4: $code_data[] = $sum % 103; goto Vsj3W; wlAvL: foreach ($code_data as $val) { $seq = $chr[$val]; for ($j = 0; $j < 6; ++$j) { if ($j % 2 == 0) { $t = true; } else { $t = false; } $w = $seq[$j]; $bararray["\142\x63\x6f\x64\145"][] = array("\x74" => $t, "\x77" => $w, "\150" => 1, "\160" => 0); $bararray["\155\141\170\x77"] += $w; } } goto Kpjeh; zytij: $keys_a = "\x20\41\x22\x23\44\x25\46\x27\x28\x29\52\x2b\54\55\x2e\x2f\x30\61\x32\63\64\65\66\x37\x38\x39\72\x3b\x3c\x3d\x3e\x3f\100\x41\x42\103\x44\105\106\107\110\x49\112\x4b\x4c\115\116\117\120\x51\122\x53\x54\125\126\x57\x58\x59\x5a\133\134\135\136\137"; goto SnWsr; UH6cd: $code_data[] = 107; goto LcCim; PsDIO: foreach ($code_data as $key => $val) { $sum += $val * ($key + 1); } goto T8qI4; RXgcy: switch (strtoupper($type)) { case "\x41": goto wQ5lV; wQ5lV: $startid = 103; goto uRMq9; uRMq9: for ($i = 0; $i < $len; ++$i) { $char = $code[$i]; $char_id = ord($char); if ($char_id >= 241 and $char_id <= 244) { $code_data[] = $fnc_a[$char_id]; } elseif ($char_id >= 0 and $char_id <= 95) { $code_data[] = strpos($keys_a, $char); } else { return false; } } goto s0RdN; s0RdN: break; goto Ql2ft; Ql2ft: case "\x42": goto Aqf3T; eh7NC: break; goto AUv87; wg5zG: for ($i = 0; $i < $len; ++$i) { $char = $code[$i]; $char_id = ord($char); if ($char_id >= 241 and $char_id <= 244) { $code_data[] = $fnc_b[$char_id]; } elseif ($char_id >= 32 and $char_id <= 127) { $code_data[] = strpos($keys_b, $char); } else { return false; } } goto eh7NC; Aqf3T: $startid = 104; goto wg5zG; AUv87: case "\x43": goto m6jDs; dp7y3: break; goto sT4U4; rj_Yq: if (ord($code[0]) == 241) { goto D12ph; D12ph: $code_data[] = 102; goto IRZMx; UEddl: --$len; goto bH_w_; IRZMx: $code = substr($code, 1); goto UEddl; bH_w_: } goto RoFyO; m6jDs: $startid = 105; goto rj_Yq; umjrj: for ($i = 0; $i < $len; $i += 2) { $chrnum = $code[$i] . $code[$i + 1]; if (preg_match("\57\x28\133\60\x2d\71\135\173\x32\175\51\57", $chrnum) > 0) { $code_data[] = intval($chrnum); } else { return false; } } goto dp7y3; RoFyO: if ($len % 2 != 0) { return false; } goto umjrj; sT4U4: default: goto mDP0Z; mDP0Z: $sequence = array(); goto PoW7C; rL5bJ: if (isset($numseq[1]) and !empty($numseq[1])) { goto QsChw; DsOoD: if ($end_offset < $len) { $sequence = array_merge($sequence, $this->get128ABsequence(substr($code, $end_offset))); } goto xpwQo; XVWx0: foreach ($numseq[1] as $val) { goto Fp9gr; Fp9gr: $offset = $val[1]; goto j2MQ_; Zp040: $sequence[] = array("\103", substr($code, $offset, $slen), $slen); goto civtP; HPA5O: $slen = strlen($val[0]); goto uWLUd; j2MQ_: if ($offset > $end_offset) { $sequence = array_merge($sequence, $this->get128ABsequence(substr($code, $end_offset, $offset - $end_offset))); } goto HPA5O; uWLUd: if ($slen % 2 != 0) { --$slen; } goto Zp040; civtP: $end_offset = $offset + $slen; goto bel02; bel02: } goto DsOoD; QsChw: $end_offset = 0; goto XVWx0; xpwQo: } else { $sequence = array_merge($sequence, $this->get128ABsequence($code)); } goto lngJQ; lngJQ: foreach ($sequence as $key => $seq) { switch ($seq[0]) { case "\x41": goto EaROc; EaROc: if ($key == 0) { $startid = 103; } elseif ($sequence[$key - 1][0] != "\x41") { if ($seq[2] == 1 and $key > 0 and $sequence[$key - 1][0] == "\x42" and !isset($sequence[$key - 1][3])) { $code_data[] = 98; $sequence[$key][3] = true; } elseif (!isset($sequence[$key - 1][3])) { $code_data[] = 101; } } goto yX03e; SdN2N: break; goto LJxka; yX03e: for ($i = 0; $i < $seq[2]; ++$i) { $char = $seq[1][$i]; $char_id = ord($char); if ($char_id >= 241 and $char_id <= 244) { $code_data[] = $fnc_a[$char_id]; } else { $code_data[] = strpos($keys_a, $char); } } goto SdN2N; LJxka: case "\x42": goto l0ZbI; l0ZbI: if ($key == 0) { $tmpchr = ord($seq[1][0]); if ($seq[2] == 1 and $tmpchr >= 241 and $tmpchr <= 244 and isset($sequence[$key + 1]) and $sequence[$key + 1][0] != "\x42") { switch ($sequence[$key + 1][0]) { case "\101": goto JM1QX; yzML8: break; goto m0aqG; zBRtk: $sequence[$key][0] = "\101"; goto pCmYy; pCmYy: $code_data[] = $fnc_a[$tmpchr]; goto yzML8; JM1QX: $startid = 103; goto zBRtk; m0aqG: case "\x43": goto Bp6Pu; Xhc8e: $sequence[$key][0] = "\103"; goto T_APv; Gmc97: break; goto oeQDm; T_APv: $code_data[] = $fnc_a[$tmpchr]; goto Gmc97; Bp6Pu: $startid = 105; goto Xhc8e; oeQDm: } break; } else { $startid = 104; } } elseif ($sequence[$key - 1][0] != "\102") { if ($seq[2] == 1 and $key > 0 and $sequence[$key - 1][0] == "\x41" and !isset($sequence[$key - 1][3])) { $code_data[] = 98; $sequence[$key][3] = true; } elseif (!isset($sequence[$key - 1][3])) { $code_data[] = 100; } } goto usQpq; nS30Q: break; goto wXg1i; usQpq: for ($i = 0; $i < $seq[2]; ++$i) { $char = $seq[1][$i]; $char_id = ord($char); if ($char_id >= 241 and $char_id <= 244) { $code_data[] = $fnc_b[$char_id]; } else { $code_data[] = strpos($keys_b, $char); } } goto nS30Q; wXg1i: case "\103": goto OljW2; lXleq: for ($i = 0; $i < $seq[2]; $i += 2) { $chrnum = $seq[1][$i] . $seq[1][$i + 1]; $code_data[] = intval($chrnum); } goto oHDOP; OljW2: if ($key == 0) { $startid = 105; } elseif ($sequence[$key - 1][0] != "\103") { $code_data[] = 99; } goto lXleq; oHDOP: break; goto ficO_; ficO_: } } goto sb3GG; DmCz7: preg_match_all("\57\x28\x5b\x30\x2d\71\x5d\x7b\x34\54\x7d\51\x2f", $code, $numseq, PREG_OFFSET_CAPTURE); goto rL5bJ; PoW7C: $numseq = array(); goto DmCz7; sb3GG: } goto f3Skl; cieXO: $code_data = array(); goto eWMnq; ZXuNr: $fnc_b = array(241 => 102, 242 => 97, 243 => 96, 244 => 100); goto cieXO; Vsj3W: $code_data[] = 106; goto UH6cd; G4f2J: $keys_a .= chr(30) . chr(31); goto AN4vU; O_zyy: $bararray = array("\143\x6f\x64\145" => $code, "\x6d\141\170\x77" => 0, "\155\141\170\x68" => 1, "\142\143\157\144\x65" => array()); goto wlAvL; SnWsr: $keys_a .= chr(0) . chr(1) . chr(2) . chr(3) . chr(4) . chr(5) . chr(6) . chr(7) . chr(8) . chr(9); goto l1XFI; BMb13: $chr = array("\x32\x31\62\x32\x32\62", "\62\62\x32\61\62\x32", "\x32\62\62\x32\62\61", "\61\x32\x31\x32\x32\63", "\61\62\61\x33\62\x32", "\x31\63\x31\x32\x32\62", "\x31\x32\62\x32\61\63", "\61\62\x32\x33\61\x32", "\x31\x33\62\x32\61\x32", "\x32\x32\61\x32\61\63", "\x32\x32\x31\63\x31\x32", "\62\x33\x31\x32\61\x32", "\x31\x31\x32\62\x33\x32", "\x31\62\62\61\x33\62", "\x31\x32\62\x32\63\x31", "\x31\x31\63\x32\x32\62", "\61\62\63\61\62\x32", "\61\62\63\x32\62\x31", "\62\62\x33\x32\x31\61", "\62\x32\x31\61\x33\62", "\x32\x32\x31\x32\63\x31", "\x32\61\x33\x32\61\x32", "\62\x32\63\61\61\x32", "\63\61\x32\61\x33\x31", "\63\x31\61\62\x32\62", "\x33\62\61\x31\62\x32", "\63\x32\x31\x32\x32\x31", "\x33\x31\62\62\x31\62", "\63\62\62\x31\61\62", "\63\x32\x32\62\x31\61", "\x32\x31\x32\61\x32\63", "\x32\x31\x32\x33\62\61", "\x32\63\62\x31\62\x31", "\61\61\61\63\x32\63", "\61\x33\61\x31\62\x33", "\x31\x33\x31\x33\62\x31", "\x31\x31\x32\x33\x31\63", "\61\x33\x32\x31\x31\63", "\x31\63\62\x33\61\x31", "\x32\x31\x31\63\61\63", "\x32\x33\x31\61\61\63", "\x32\x33\x31\63\61\x31", "\61\61\x32\x31\63\63", "\x31\x31\x32\63\63\x31", "\x31\x33\x32\x31\63\61", "\x31\61\x33\61\x32\x33", "\61\61\63\x33\x32\x31", "\x31\x33\x33\x31\62\x31", "\63\61\x33\61\x32\x31", "\x32\61\61\63\63\x31", "\x32\x33\x31\x31\x33\x31", "\x32\61\x33\61\61\x33", "\62\x31\x33\x33\61\x31", "\62\x31\63\61\x33\61", "\63\61\x31\61\x32\x33", "\63\x31\x31\x33\62\x31", "\63\x33\61\x31\x32\x31", "\63\x31\x32\61\61\63", "\63\61\62\63\x31\x31", "\63\63\62\61\x31\61", "\x33\x31\x34\x31\x31\61", "\62\x32\x31\x34\61\61", "\64\x33\61\61\61\x31", "\61\61\61\x32\62\x34", "\x31\61\61\x34\62\62", "\61\x32\x31\x31\62\x34", "\x31\x32\x31\x34\x32\61", "\61\x34\61\x31\62\x32", "\x31\x34\61\x32\62\x31", "\x31\61\62\62\x31\x34", "\61\61\x32\64\61\62", "\61\x32\62\x31\x31\x34", "\x31\62\62\x34\61\x31", "\x31\x34\62\x31\x31\x32", "\61\64\62\62\x31\x31", "\x32\x34\61\62\x31\61", "\x32\x32\x31\61\61\64", "\x34\61\x33\61\61\x31", "\62\64\61\61\x31\x32", "\61\x33\64\61\x31\x31", "\61\x31\61\62\x34\62", "\61\62\x31\x31\64\x32", "\x31\62\x31\x32\x34\61", "\x31\x31\x34\x32\x31\x32", "\61\62\64\x31\x31\x32", "\61\x32\64\62\61\x31", "\64\x31\x31\x32\61\62", "\64\62\61\61\x31\x32", "\x34\62\61\62\x31\61", "\62\x31\x32\61\x34\61", "\62\61\x34\x31\62\x31", "\64\61\62\61\62\x31", "\61\x31\61\x31\x34\63", "\x31\x31\x31\63\64\x31", "\61\x33\x31\x31\x34\x31", "\x31\61\64\x31\x31\x33", "\61\x31\x34\x33\61\x31", "\x34\61\61\61\x31\x33", "\x34\x31\x31\63\61\61", "\61\61\63\x31\x34\x31", "\x31\x31\64\61\63\61", "\63\x31\x31\61\64\x31", "\x34\61\x31\x31\x33\61", "\x32\x31\x31\64\x31\62", "\x32\61\61\62\61\64", "\62\61\61\x32\x33\x32", "\x32\63\63\61\61\x31", "\x32\x30\x30\60\x30\x30"); goto zytij; f3Skl: $sum = $startid; goto PsDIO; l1XFI: $keys_a .= chr(10) . chr(11) . chr(12) . chr(13) . chr(14) . chr(15) . chr(16) . chr(17) . chr(18) . chr(19); goto vTGeO; V7WeA: $fnc_a = array(241 => 102, 242 => 97, 243 => 96, 244 => 101); goto ZXuNr; AN4vU: $keys_b = "\x20\x21\42\43\x24\45\x26\47\x28\x29\x2a\53\x2c\x2d\56\x2f\x30\61\x32\x33\64\x35\66\x37\70\71\x3a\x3b\x3c\75\76\x3f\x40\101\x42\103\104\105\x46\107\110\111\112\113\x4c\115\116\x4f\x50\121\122\123\x54\x55\x56\127\130\x59\132\133\134\x5d\136\137\x60\x61\x62\143\144\x65\x66\147\x68\x69\x6a\x6b\154\155\x6e\x6f\160\161\x72\163\x74\165\x76\x77\170\x79\x7a\x7b\x7c\175\x7e" . chr(127); goto V7WeA; eWMnq: $len = strlen($code); goto RXgcy; vTGeO: $keys_a .= chr(20) . chr(21) . chr(22) . chr(23) . chr(24) . chr(25) . chr(26) . chr(27) . chr(28) . chr(29); goto G4f2J; LcCim: array_unshift($code_data, $startid); goto O_zyy; Kpjeh: return $bararray; goto r8gKS; r8gKS: } protected function get128ABsequence($code) { goto bln3T; e6SXC: if (isset($numseq[1]) and !empty($numseq[1])) { goto IW2_Q; zQ1ze: if ($end_offset < $len) { $sequence[] = array("\102", substr($code, $end_offset), $len - $end_offset); } goto YTTZl; IW2_Q: $end_offset = 0; goto YXz5X; YXz5X: foreach ($numseq[1] as $val) { goto etG_H; kiMVK: $slen = strlen($val[0]); goto evjGi; is5t4: $end_offset = $offset + $slen; goto W4xHg; etG_H: $offset = $val[1]; goto ecdU8; ecdU8: if ($offset > $end_offset) { $sequence[] = array("\102", substr($code, $end_offset, $offset - $end_offset), $offset - $end_offset); } goto kiMVK; evjGi: $sequence[] = array("\101", substr($code, $offset, $slen), $slen); goto is5t4; W4xHg: } goto zQ1ze; YTTZl: } else { $sequence[] = array("\102", $code, $len); } goto LsR7b; LsR7b: return $sequence; goto RdCwV; Tpua2: $sequence = array(); goto iq7sc; bln3T: $len = strlen($code); goto Tpua2; iq7sc: $numseq = array(); goto C98am; C98am: preg_match_all("\57\x28\x5b\134\60\55\134\63\61\x5d\x29\57", $code, $numseq, PREG_OFFSET_CAPTURE); goto e6SXC; RdCwV: } protected function barcode_eanupc($code, $len = 13) { goto P2mJs; UQ1QM: return $bararray; goto yiGje; XQH1Z: if ($code_len == $data_len) { $code .= $r; } elseif ($r !== intval($code[$data_len])) { return false; } goto hiZKQ; FA9rG: $w = 0; goto DoJrZ; P2mJs: $upce = false; goto O5qur; dNgDU: if ($r > 0) { $r = 10 - $r; } goto XQH1Z; cB6wH: $upce_parities[1] = array("\60" => array("\x41", "\x41", "\101", "\x42", "\x42", "\x42"), "\x31" => array("\x41", "\x41", "\x42", "\x41", "\102", "\x42"), "\62" => array("\x41", "\101", "\x42", "\x42", "\x41", "\x42"), "\x33" => array("\101", "\101", "\102", "\102", "\102", "\101"), "\x34" => array("\101", "\102", "\x41", "\101", "\102", "\x42"), "\x35" => array("\x41", "\x42", "\x42", "\x41", "\101", "\102"), "\x36" => array("\101", "\102", "\x42", "\x42", "\x41", "\101"), "\67" => array("\x41", "\x42", "\x41", "\102", "\x41", "\x42"), "\70" => array("\x41", "\x42", "\x41", "\x42", "\102", "\x41"), "\x39" => array("\101", "\102", "\x42", "\x41", "\x42", "\101")); goto eK0aC; uBtd0: $clen = strlen($seq); goto FA9rG; gZVhB: $code = str_pad($code, $data_len, "\x30", STR_PAD_LEFT); goto HfjMn; OOuOF: if ($len < 13) { $sum_b *= 3; } goto R29vj; vmKNG: $codes = array("\101" => array("\x30" => "\x30\x30\60\x31\61\60\x31", "\x31" => "\60\x30\61\x31\x30\x30\61", "\62" => "\60\x30\61\x30\60\x31\x31", "\63" => "\60\x31\61\x31\x31\60\61", "\x34" => "\x30\61\60\60\x30\x31\x31", "\x35" => "\60\61\x31\x30\60\x30\61", "\66" => "\x30\x31\60\61\61\61\61", "\x37" => "\60\x31\61\61\60\x31\x31", "\70" => "\x30\x31\61\x30\61\x31\x31", "\x39" => "\60\60\x30\61\x30\x31\x31"), "\102" => array("\60" => "\x30\x31\60\x30\x31\x31\61", "\61" => "\60\61\x31\x30\x30\x31\61", "\62" => "\x30\60\x31\x31\x30\61\61", "\x33" => "\x30\x31\x30\60\x30\x30\61", "\64" => "\x30\x30\x31\61\x31\60\x31", "\x35" => "\x30\x31\x31\61\x30\60\61", "\66" => "\60\x30\60\60\x31\60\x31", "\x37" => "\60\60\61\x30\x30\x30\x31", "\x38" => "\60\60\x30\61\60\x30\61", "\x39" => "\60\60\x31\x30\x31\61\61"), "\x43" => array("\x30" => "\61\61\61\x30\60\61\x30", "\61" => "\x31\61\x30\60\x31\61\60", "\x32" => "\61\x31\60\x31\x31\60\x30", "\x33" => "\x31\60\x30\60\x30\61\60", "\64" => "\x31\60\x31\x31\x31\60\x30", "\65" => "\61\x30\x30\61\61\61\60", "\66" => "\x31\60\x31\60\x30\x30\x30", "\67" => "\61\60\x30\60\61\60\x30", "\70" => "\x31\60\60\61\60\60\x30", "\x39" => "\61\61\x31\x30\x31\60\60")); goto NEc0C; spJay: $sum_b = 0; goto iJqeI; DoJrZ: for ($i = 0; $i < $clen; ++$i) { $w += 1; if ($i == $clen - 1 or $i < $clen - 1 and $seq[$i] != $seq[$i + 1]) { goto TcAET; ZFlAI: ++$k; goto RKpkS; UgqQ7: $bararray["\x6d\x61\x78\167"] += $w; goto ZFlAI; TcAET: if ($seq[$i] == "\61") { $t = true; } else { $t = false; } goto BJMPq; BJMPq: $bararray["\x62\143\157\144\145"][$k] = array("\x74" => $t, "\x77" => $w, "\x68" => 1, "\160" => 0); goto UgqQ7; RKpkS: $w = 0; goto f2eT0; f2eT0: } } goto UQ1QM; G2KyJ: $data_len = $len - 1; goto gZVhB; f7JOl: $seq = "\61\60\61"; goto ef8jO; hiZKQ: if ($len == 12) { $code = "\60" . $code; ++$len; } goto d3Qp2; R29vj: $r = ($sum_a + $sum_b) % 10; goto dNgDU; HfjMn: $code_len = strlen($code); goto hS9Ik; iYjrX: for ($i = 1; $i < $data_len; $i += 2) { $sum_a += $code[$i]; } goto dn4Si; eK0aC: $k = 0; goto f7JOl; O5qur: if ($len == 6) { $len = 12; $upce = true; } goto G2KyJ; iJqeI: for ($i = 0; $i < $data_len; $i += 2) { $sum_b += $code[$i]; } goto OOuOF; hS9Ik: $sum_a = 0; goto iYjrX; dn4Si: if ($len > 12) { $sum_a *= 3; } goto spJay; ef8jO: if ($upce) { goto C49rW; C49rW: $bararray = array("\x63\157\x64\x65" => $upce_code, "\155\141\170\167" => 0, "\x6d\141\170\150" => 1, "\142\143\157\x64\145" => array()); goto TNNiY; NymKI: for ($i = 0; $i < 6; ++$i) { $seq .= $codes[$p[$i]][$upce_code[$i]]; } goto JueaL; JueaL: $seq .= "\60\x31\x30\x31\60\x31"; goto WaZnO; TNNiY: $p = $upce_parities[$code[1]][$r]; goto NymKI; WaZnO: } else { goto bVxX6; i0Anc: for ($i = $half_len; $i < $len; ++$i) { $seq .= $codes["\103"][$code[$i]]; } goto jNArP; bVxX6: $bararray = array("\143\157\144\145" => $code, "\155\141\170\167" => 0, "\x6d\141\x78\150" => 1, "\x62\x63\x6f\x64\x65" => array()); goto FUomQ; jNArP: $seq .= "\61\x30\x31"; goto RzvDd; FUomQ: $half_len = intval(ceil($len / 2)); goto Uajad; Uajad: if ($len == 8) { for ($i = 0; $i < $half_len; ++$i) { $seq .= $codes["\101"][$code[$i]]; } } else { $p = $parities[$code[0]]; for ($i = 1; $i < $half_len; ++$i) { $seq .= $codes[$p[$i - 1]][$code[$i]]; } } goto OBm2u; OBm2u: $seq .= "\x30\61\x30\61\x30"; goto i0Anc; RzvDd: } goto uBtd0; NEc0C: $parities = array("\60" => array("\101", "\x41", "\101", "\x41", "\101", "\x41"), "\61" => array("\101", "\101", "\102", "\x41", "\102", "\x42"), "\62" => array("\x41", "\101", "\x42", "\102", "\101", "\102"), "\63" => array("\x41", "\101", "\x42", "\102", "\x42", "\x41"), "\64" => array("\x41", "\x42", "\101", "\101", "\102", "\x42"), "\65" => array("\x41", "\x42", "\x42", "\101", "\101", "\102"), "\x36" => array("\x41", "\x42", "\x42", "\102", "\x41", "\x41"), "\67" => array("\101", "\102", "\x41", "\x42", "\101", "\102"), "\x38" => array("\101", "\x42", "\x41", "\102", "\x42", "\x41"), "\x39" => array("\101", "\102", "\x42", "\101", "\102", "\x41")); goto rYDyR; rYDyR: $upce_parities = array(); goto vxNsh; d3Qp2: if ($upce) { $tmp = substr($code, 4, 3); if ($tmp == "\x30\x30\60" or $tmp == "\61\x30\60" or $tmp == "\62\x30\60") { $upce_code = substr($code, 2, 2) . substr($code, 9, 3) . substr($code, 4, 1); } else { $tmp = substr($code, 5, 2); if ($tmp == "\60\60") { $upce_code = substr($code, 2, 3) . substr($code, 10, 2) . "\63"; } else { $tmp = substr($code, 6, 1); if ($tmp == "\60") { $upce_code = substr($code, 2, 4) . substr($code, 11, 1) . "\64"; } else { $upce_code = substr($code, 2, 5) . substr($code, 11, 1); } } } } goto vmKNG; vxNsh: $upce_parities[0] = array("\x30" => array("\102", "\102", "\x42", "\x41", "\x41", "\x41"), "\x31" => array("\102", "\102", "\x41", "\x42", "\101", "\101"), "\x32" => array("\102", "\x42", "\101", "\x41", "\102", "\101"), "\x33" => array("\x42", "\x42", "\101", "\101", "\x41", "\102"), "\64" => array("\x42", "\101", "\102", "\x42", "\x41", "\101"), "\x35" => array("\102", "\x41", "\101", "\102", "\102", "\101"), "\x36" => array("\102", "\x41", "\x41", "\101", "\102", "\102"), "\67" => array("\102", "\x41", "\x42", "\x41", "\x42", "\x41"), "\x38" => array("\x42", "\x41", "\x42", "\x41", "\x41", "\x42"), "\71" => array("\102", "\101", "\x41", "\102", "\101", "\102")); goto cB6wH; yiGje: } protected function barcode_eanext($code, $len = 5) { goto tDKaJ; tDKaJ: $code = str_pad($code, $len, "\60", STR_PAD_LEFT); goto kFbUF; izXI3: $seq = "\61\x30\61\x31"; goto faZf1; faZf1: $seq .= $codes[$p[0]][$code[0]]; goto fgxu6; kFbUF: if ($len == 2) { $r = $code % 4; } elseif ($len == 5) { $r = 3 * ($code[0] + $code[2] + $code[4]) + 9 * ($code[1] + $code[3]); $r %= 10; } else { return false; } goto hcOvj; fgxu6: for ($i = 1; $i < $len; ++$i) { $seq .= "\x30\61"; $seq .= $codes[$p[$i]][$code[$i]]; } goto SBRyW; GDeOY: return $this->binseq_to_array($seq, $bararray); goto y6R0M; f209I: $parities = array(); goto dzZgq; Z5wUJ: $p = $parities[$len][$r]; goto izXI3; v3dkB: $parities[5] = array("\60" => array("\x42", "\x42", "\x41", "\101", "\101"), "\x31" => array("\x42", "\x41", "\102", "\x41", "\x41"), "\62" => array("\x42", "\x41", "\101", "\102", "\101"), "\x33" => array("\102", "\x41", "\x41", "\101", "\x42"), "\x34" => array("\101", "\102", "\102", "\x41", "\x41"), "\65" => array("\101", "\x41", "\102", "\102", "\x41"), "\x36" => array("\x41", "\101", "\101", "\102", "\x42"), "\x37" => array("\101", "\x42", "\x41", "\102", "\101"), "\70" => array("\101", "\102", "\x41", "\101", "\102"), "\71" => array("\x41", "\101", "\x42", "\101", "\x42")); goto Z5wUJ; hcOvj: $codes = array("\101" => array("\x30" => "\60\x30\60\61\x31\60\x31", "\61" => "\x30\60\61\61\60\60\x31", "\62" => "\60\60\61\x30\x30\61\x31", "\63" => "\60\61\x31\61\x31\60\x31", "\x34" => "\x30\61\x30\x30\x30\61\x31", "\x35" => "\60\x31\x31\x30\x30\x30\61", "\66" => "\x30\x31\x30\x31\61\x31\x31", "\67" => "\x30\x31\x31\61\x30\61\x31", "\70" => "\60\61\x31\60\x31\x31\x31", "\x39" => "\x30\x30\60\x31\60\x31\61"), "\x42" => array("\x30" => "\60\x31\60\60\x31\61\61", "\61" => "\60\61\61\x30\x30\x31\x31", "\x32" => "\60\x30\61\x31\60\61\x31", "\x33" => "\60\61\60\x30\60\60\x31", "\x34" => "\60\60\x31\61\61\x30\x31", "\65" => "\60\61\61\x31\60\60\x31", "\x36" => "\x30\60\60\x30\61\x30\x31", "\67" => "\x30\60\x31\x30\x30\x30\x31", "\70" => "\60\60\x30\x31\60\60\61", "\71" => "\x30\x30\61\60\x31\x31\x31")); goto f209I; dzZgq: $parities[2] = array("\x30" => array("\101", "\101"), "\61" => array("\x41", "\102"), "\62" => array("\x42", "\101"), "\x33" => array("\102", "\102")); goto v3dkB; SBRyW: $bararray = array("\x63\157\x64\145" => $code, "\155\x61\x78\167" => 0, "\x6d\x61\x78\x68" => 1, "\142\143\157\x64\x65" => array()); goto GDeOY; y6R0M: } protected function barcode_postnet($code, $planet = false) { goto mlR3e; y8IYn: $bararray = array("\x63\x6f\144\x65" => $code, "\x6d\x61\170\x77" => 0, "\155\141\x78\x68" => 2, "\142\x63\x6f\144\x65" => array()); goto OAwkh; PUESX: $len = strlen($code); goto QJczH; SXVSR: if ($chkd > 0) { $chkd = 10 - $chkd; } goto aieF1; aieF1: $code .= $chkd; goto Vq4hw; xo4d8: $bararray["\142\x63\157\144\145"][$k++] = array("\x74" => 0, "\x77" => 1, "\150" => 2, "\x70" => 0); goto z9qR8; dAbZ1: $code = str_replace("\40", '', $code); goto PUESX; z9qR8: $bararray["\155\x61\x78\x77"] += 2; goto PJW39; OAwkh: $k = 0; goto NHVaf; qKzCm: for ($i = 0; $i < $len; ++$i) { $sum += intval($code[$i]); } goto aeR3p; QJczH: $sum = 0; goto qKzCm; koDDw: $bararray["\155\141\x78\x77"] += 1; goto attEH; NAQIy: $bararray["\x62\x63\x6f\144\x65"][$k++] = array("\x74" => 1, "\167" => 1, "\150" => 2, "\x70" => 0); goto koDDw; mO6KQ: $bararray["\x62\x63\157\144\145"][$k++] = array("\164" => 1, "\167" => 1, "\x68" => 2, "\160" => 0); goto xo4d8; NHVaf: $code = str_replace("\55", '', $code); goto dAbZ1; attEH: return $bararray; goto yDL39; PJW39: for ($i = 0; $i < $len; ++$i) { for ($j = 0; $j < 5; ++$j) { $h = $barlen[$code[$i]][$j]; $p = floor(1 / $h); $bararray["\x62\x63\157\x64\x65"][$k++] = array("\x74" => 1, "\167" => 1, "\x68" => $h, "\x70" => $p); $bararray["\142\x63\157\144\145"][$k++] = array("\164" => 0, "\x77" => 1, "\150" => 2, "\x70" => 0); $bararray["\x6d\141\x78\x77"] += 2; } } goto NAQIy; mlR3e: if ($planet) { $barlen = array(0 => array(1, 1, 2, 2, 2), 1 => array(2, 2, 2, 1, 1), 2 => array(2, 2, 1, 2, 1), 3 => array(2, 2, 1, 1, 2), 4 => array(2, 1, 2, 2, 1), 5 => array(2, 1, 2, 1, 2), 6 => array(2, 1, 1, 2, 2), 7 => array(1, 2, 2, 2, 1), 8 => array(1, 2, 2, 1, 2), 9 => array(1, 2, 1, 2, 2)); } else { $barlen = array(0 => array(2, 2, 1, 1, 1), 1 => array(1, 1, 1, 2, 2), 2 => array(1, 1, 2, 1, 2), 3 => array(1, 1, 2, 2, 1), 4 => array(1, 2, 1, 1, 2), 5 => array(1, 2, 1, 2, 1), 6 => array(1, 2, 2, 1, 1), 7 => array(2, 1, 1, 1, 2), 8 => array(2, 1, 1, 2, 1), 9 => array(2, 1, 2, 1, 1)); } goto y8IYn; Vq4hw: $len = strlen($code); goto mO6KQ; aeR3p: $chkd = $sum % 10; goto SXVSR; yDL39: } protected function barcode_rms4cc($code, $kix = false) { goto m7i3P; YWr_S: $len = strlen($code); goto VFf7r; nq70b: for ($i = 0; $i < $len; ++$i) { for ($j = 0; $j < 4; ++$j) { switch ($barmode[$code[$i]][$j]) { case 1: goto x3F6v; x3F6v: $p = 0; goto EkEN0; EkEN0: $h = 2; goto hNjQD; hNjQD: break; goto L4ypy; L4ypy: case 2: goto jGOz1; GxktV: break; goto rHDza; jGOz1: $p = 0; goto pxMo2; pxMo2: $h = 3; goto GxktV; rHDza: case 3: goto j83Pb; EjkGp: break; goto pylRR; j83Pb: $p = 1; goto cfDA8; cfDA8: $h = 1; goto EjkGp; pylRR: case 4: goto jG5ya; IKxAL: break; goto qaLby; vD6Ay: $h = 2; goto IKxAL; jG5ya: $p = 1; goto vD6Ay; qaLby: } $bararray["\x62\143\x6f\144\x65"][$k++] = array("\x74" => 1, "\x77" => 1, "\x68" => $h, "\160" => $p); $bararray["\142\x63\157\x64\x65"][$k++] = array("\164" => 0, "\167" => 1, "\x68" => 2, "\160" => 0); $bararray["\155\141\170\167"] += 2; } } goto YyZ0D; eYB2K: $barmode = array("\60" => array(3, 3, 2, 2), "\x31" => array(3, 4, 1, 2), "\x32" => array(3, 4, 2, 1), "\x33" => array(4, 3, 1, 2), "\x34" => array(4, 3, 2, 1), "\x35" => array(4, 4, 1, 1), "\x36" => array(3, 1, 4, 2), "\x37" => array(3, 2, 3, 2), "\x38" => array(3, 2, 4, 1), "\x39" => array(4, 1, 3, 2), "\101" => array(4, 1, 4, 1), "\x42" => array(4, 2, 3, 1), "\x43" => array(3, 1, 2, 4), "\x44" => array(3, 2, 1, 4), "\105" => array(3, 2, 2, 3), "\x46" => array(4, 1, 1, 4), "\x47" => array(4, 1, 2, 3), "\110" => array(4, 2, 1, 3), "\x49" => array(1, 3, 4, 2), "\112" => array(1, 4, 3, 2), "\x4b" => array(1, 4, 4, 1), "\x4c" => array(2, 3, 3, 2), "\x4d" => array(2, 3, 4, 1), "\x4e" => array(2, 4, 3, 1), "\117" => array(1, 3, 2, 4), "\120" => array(1, 4, 1, 4), "\121" => array(1, 4, 2, 3), "\122" => array(2, 3, 1, 4), "\123" => array(2, 3, 2, 3), "\124" => array(2, 4, 1, 3), "\x55" => array(1, 1, 4, 4), "\x56" => array(1, 2, 3, 4), "\x57" => array(1, 2, 4, 3), "\130" => array(2, 1, 3, 4), "\131" => array(2, 1, 4, 3), "\x5a" => array(2, 2, 3, 3)); goto EzBA9; PScU9: if ($notkix) { goto XsmRe; i6Okv: $chk = array_keys($checktable, array($row, $col)); goto yAmRt; FVIZZ: ++$len; goto WoocA; o3bnF: $col %= 6; goto i6Okv; gnfRS: $row %= 6; goto o3bnF; XsmRe: $checktable = array("\x30" => array(1, 1), "\x31" => array(1, 2), "\x32" => array(1, 3), "\63" => array(1, 4), "\64" => array(1, 5), "\x35" => array(1, 0), "\66" => array(2, 1), "\x37" => array(2, 2), "\x38" => array(2, 3), "\71" => array(2, 4), "\x41" => array(2, 5), "\x42" => array(2, 0), "\x43" => array(3, 1), "\x44" => array(3, 2), "\x45" => array(3, 3), "\x46" => array(3, 4), "\107" => array(3, 5), "\110" => array(3, 0), "\111" => array(4, 1), "\x4a" => array(4, 2), "\x4b" => array(4, 3), "\114" => array(4, 4), "\x4d" => array(4, 5), "\116" => array(4, 0), "\117" => array(5, 1), "\x50" => array(5, 2), "\x51" => array(5, 3), "\x52" => array(5, 4), "\x53" => array(5, 5), "\x54" => array(5, 0), "\x55" => array(0, 1), "\x56" => array(0, 2), "\x57" => array(0, 3), "\x58" => array(0, 4), "\131" => array(0, 5), "\x5a" => array(0, 0)); goto eiULu; yAmRt: $code .= $chk[0]; goto FVIZZ; eiULu: $row = 0; goto g47nX; g47nX: $col = 0; goto hZ67H; hZ67H: for ($i = 0; $i < $len; ++$i) { $row += $checktable[$code[$i]][0]; $col += $checktable[$code[$i]][1]; } goto gnfRS; WoocA: } goto Mg9Yr; YyZ0D: if ($notkix) { $bararray["\x62\143\x6f\144\145"][$k++] = array("\164" => 1, "\167" => 1, "\150" => 3, "\160" => 0); $bararray["\x6d\x61\x78\167"] += 1; } goto g3WNZ; Mg9Yr: $k = 0; goto w29S4; m7i3P: $notkix = !$kix; goto eYB2K; g3WNZ: return $bararray; goto vxksQ; EzBA9: $code = strtoupper($code); goto YWr_S; VFf7r: $bararray = array("\143\x6f\x64\x65" => $code, "\x6d\141\170\167" => 0, "\x6d\x61\170\x68" => 3, "\x62\143\157\x64\x65" => array()); goto PScU9; w29S4: if ($notkix) { goto EVWnH; FxeWT: $bararray["\x62\x63\157\x64\145"][$k++] = array("\x74" => 0, "\x77" => 1, "\x68" => 2, "\160" => 0); goto oJ7zF; EVWnH: $bararray["\x62\143\157\144\x65"][$k++] = array("\x74" => 1, "\x77" => 1, "\x68" => 2, "\160" => 0); goto FxeWT; oJ7zF: $bararray["\x6d\141\x78\x77"] += 2; goto RsKa0; RsKa0: } goto nq70b; vxksQ: } protected function barcode_codabar($code) { goto pPybt; FIjgV: $seq = ''; goto q3G2K; q3G2K: $code = "\x41" . strtoupper($code) . "\101"; goto z3K9G; JdQrJ: for ($i = 0; $i < $len; ++$i) { if (!isset($chr[$code[$i]])) { return false; } $seq = $chr[$code[$i]]; for ($j = 0; $j < 8; ++$j) { if ($j % 2 == 0) { $t = true; } else { $t = false; } $w = $seq[$j]; $bararray["\x62\143\x6f\144\x65"][$k] = array("\x74" => $t, "\x77" => $w, "\150" => 1, "\160" => 0); $bararray["\x6d\x61\x78\167"] += $w; ++$k; } } goto plpv1; NmdbO: $w = 0; goto FIjgV; z3K9G: $len = strlen($code); goto JdQrJ; plpv1: return $bararray; goto eeYA_; pPybt: $chr = array("\x30" => "\61\61\x31\x31\x31\62\62\61", "\x31" => "\61\61\x31\61\x32\x32\x31\61", "\x32" => "\x31\61\x31\62\x31\x31\62\61", "\x33" => "\x32\62\61\x31\61\x31\x31\61", "\x34" => "\x31\x31\x32\x31\61\62\61\61", "\65" => "\62\61\x31\61\61\x32\x31\61", "\x36" => "\x31\62\61\x31\x31\x31\x32\61", "\67" => "\x31\x32\61\x31\62\x31\x31\61", "\x38" => "\61\x32\62\x31\x31\61\x31\x31", "\x39" => "\x32\61\x31\62\61\61\61\61", "\55" => "\x31\61\x31\62\62\61\x31\x31", "\x24" => "\x31\x31\62\62\x31\x31\61\61", "\72" => "\62\61\61\61\x32\61\x32\61", "\x2f" => "\x32\x31\x32\x31\x31\x31\x32\61", "\56" => "\x32\x31\62\61\x32\x31\x31\61", "\53" => "\61\x31\62\62\62\x32\62\61", "\x41" => "\x31\x31\x32\x32\61\x32\x31\61", "\x42" => "\x31\x32\x31\x32\61\61\x32\x31", "\x43" => "\x31\61\x31\x32\61\62\x32\x31", "\x44" => "\61\61\61\62\62\x32\x31\61"); goto kcEsV; kcEsV: $bararray = array("\143\x6f\144\145" => $code, "\155\141\x78\167" => 0, "\x6d\x61\x78\150" => 1, "\142\x63\x6f\144\145" => array()); goto zSSBO; zSSBO: $k = 0; goto NmdbO; eeYA_: } protected function barcode_code11($code) { goto nZPwi; LWzsW: $code = "\123" . $code . "\x53"; goto iq4bP; i4tk_: return $bararray; goto A9YmY; nZPwi: $chr = array("\60" => "\61\x31\61\x31\x32\61", "\x31" => "\62\x31\x31\x31\62\x31", "\x32" => "\x31\62\61\x31\x32\x31", "\x33" => "\x32\62\61\x31\x31\61", "\x34" => "\x31\61\62\61\x32\61", "\65" => "\62\61\x32\61\61\61", "\x36" => "\61\62\62\x31\x31\x31", "\x37" => "\x31\61\61\62\x32\x31", "\70" => "\x32\61\x31\62\x31\x31", "\71" => "\x32\61\x31\61\61\61", "\x2d" => "\61\61\x32\x31\x31\61", "\x53" => "\x31\61\62\x32\61\61"); goto LEOwT; LEOwT: $bararray = array("\143\157\144\145" => $code, "\155\141\x78\x77" => 0, "\x6d\141\170\x68" => 1, "\142\x63\x6f\x64\145" => array()); goto ZPP1k; iq4bP: $len += 3; goto WUzJo; h0tfQ: $seq = ''; goto qvTWT; KflHx: $check %= 11; goto T3xjh; ZPP1k: $k = 0; goto FH1rq; T3xjh: if ($check == 10) { $check = "\55"; } goto qBm1q; nnT4L: if ($len > 10) { goto sTs2X; ibys5: $check = 0; goto uTfYG; Dt1Zt: $check %= 11; goto VMeHs; UO_Oj: ++$len; goto v2IfH; sTs2X: $p = 1; goto ibys5; uTfYG: for ($i = $len; $i >= 0; --$i) { $digit = $code[$i]; if ($digit == "\x2d") { $dval = 10; } else { $dval = intval($digit); } $check += $dval * $p; ++$p; if ($p > 9) { $p = 1; } } goto Dt1Zt; VMeHs: $code .= $check; goto UO_Oj; v2IfH: } goto LWzsW; FH1rq: $w = 0; goto h0tfQ; QooxJ: $check = 0; goto bNTEl; Tj7h7: $p = 1; goto QooxJ; qvTWT: $len = strlen($code); goto Tj7h7; qBm1q: $code .= $check; goto nnT4L; WUzJo: for ($i = 0; $i < $len; ++$i) { if (!isset($chr[$code[$i]])) { return false; } $seq = $chr[$code[$i]]; for ($j = 0; $j < 6; ++$j) { if ($j % 2 == 0) { $t = true; } else { $t = false; } $w = $seq[$j]; $bararray["\x62\143\x6f\x64\145"][$k] = array("\164" => $t, "\167" => $w, "\150" => 1, "\160" => 0); $bararray["\x6d\141\x78\x77"] += $w; ++$k; } } goto i4tk_; bNTEl: for ($i = $len - 1; $i >= 0; --$i) { $digit = $code[$i]; if ($digit == "\55") { $dval = 10; } else { $dval = intval($digit); } $check += $dval * $p; ++$p; if ($p > 10) { $p = 1; } } goto KflHx; A9YmY: } protected function barcode_pharmacode($code) { goto OJndn; rJZ5Z: while ($code > 0) { if ($code % 2 == 0) { $seq .= "\61\x31\61\60\x30"; $code -= 2; } else { $seq .= "\x31\60\60"; $code -= 1; } $code /= 2; } goto otNG2; MsnmT: $code = intval($code); goto rJZ5Z; KvrAV: $bararray = array("\x63\x6f\144\145" => $code, "\x6d\141\x78\x77" => 0, "\x6d\141\170\150" => 1, "\142\143\157\144\x65" => array()); goto ueM8V; Yf6FZ: $seq = strrev($seq); goto KvrAV; OJndn: $seq = ''; goto MsnmT; ueM8V: return $this->binseq_to_array($seq, $bararray); goto oPMwz; otNG2: $seq = substr($seq, 0, -2); goto Yf6FZ; oPMwz: } protected function barcode_pharmacode2t($code) { goto qBpmR; dUeus: return $bararray; goto aM3Zi; SgtY9: $seq = strrev($seq); goto GktXi; cCYOA: do { switch ($code % 3) { case 0: goto xVIK2; LzouA: $code = ($code - 3) / 3; goto pjZXc; pjZXc: break; goto DouST; xVIK2: $seq .= "\63"; goto LzouA; DouST: case 1: goto kMbyb; RlhzS: $code = ($code - 1) / 3; goto XXTbs; XXTbs: break; goto QXggv; kMbyb: $seq .= "\x31"; goto RlhzS; QXggv: case 2: goto CXCIj; CXCIj: $seq .= "\x32"; goto lsc1Q; GBgQ9: break; goto ceWeL; lsc1Q: $code = ($code - 2) / 3; goto GBgQ9; ceWeL: } } while ($code != 0); goto SgtY9; qBpmR: $seq = ''; goto VBdSx; S0kod: --$bararray["\x6d\141\170\167"]; goto dUeus; VBdSx: $code = intval($code); goto cCYOA; NLoL9: $len = strlen($seq); goto IdWBq; IdWBq: for ($i = 0; $i < $len; ++$i) { switch ($seq[$i]) { case "\x31": goto XmN9T; XmN9T: $p = 1; goto C7Iq1; C7Iq1: $h = 1; goto rCHow; rCHow: break; goto pMzY_; pMzY_: case "\62": goto yQ_22; BGVnJ: $h = 1; goto X3DHA; X3DHA: break; goto FQzHo; yQ_22: $p = 0; goto BGVnJ; FQzHo: case "\63": goto lqLVY; OZg2P: break; goto S1XDg; lqLVY: $p = 0; goto w3bld; w3bld: $h = 2; goto OZg2P; S1XDg: } $bararray["\142\x63\157\x64\x65"][$k++] = array("\164" => 1, "\x77" => 1, "\150" => $h, "\x70" => $p); $bararray["\x62\143\157\x64\x65"][$k++] = array("\x74" => 0, "\167" => 1, "\x68" => 2, "\x70" => 0); $bararray["\x6d\x61\x78\167"] += 2; } goto GRAXf; GktXi: $k = 0; goto vOqmO; vOqmO: $bararray = array("\143\x6f\144\145" => $code, "\155\x61\x78\x77" => 0, "\155\141\170\150" => 2, "\142\x63\157\144\x65" => array()); goto NLoL9; GRAXf: unset($bararray["\142\x63\x6f\x64\x65"][$k - 1]); goto S0kod; aM3Zi: } protected function barcode_imb($code) { goto TVHyt; Ry0rz: $binary_code_102bit = $first_byte . substr($binary_code, 2); goto zCc6F; upzcH: $binary_code = bcmul($binary_code, 5); goto Fo60V; zCc6F: $codewords = array(); goto C7F0v; i1_kQ: foreach ($codewords as $k => $val) { goto kanY1; BQGl6: if (($fcs & $bitmask) > 0) { $chrcode = ~$chrcode & 8191; } goto B3w35; kanY1: if ($val <= 1286) { $chrcode = $table5of13[$val]; } else { $chrcode = $table2of13[$val - 1287]; } goto BQGl6; B3w35: $characters[] = $chrcode; goto MEaNn; MEaNn: $bitmask /= 2; goto CJ6c7; CJ6c7: } goto rN5E0; l66o6: if (isset($code_arr[1])) { $routing_code = $code_arr[1]; } else { $routing_code = ''; } goto Ea_hH; xh4Jt: $binary_code .= substr($tracking_number, 2, 18); goto rgIlo; Lz3pc: for ($i = 0; $i < 65; ++$i) { $asc = ($characters[$asc_chr[$i]] & pow(2, $asc_pos[$i])) > 0; $dsc = ($characters[$dsc_chr[$i]] & pow(2, $dsc_pos[$i])) > 0; if ($asc and $dsc) { $p = 0; $h = 3; } elseif ($asc) { $p = 0; $h = 2; } elseif ($dsc) { $p = 1; $h = 2; } else { $p = 1; $h = 1; } $bararray["\142\143\157\x64\145"][$k++] = array("\x74" => 1, "\x77" => 1, "\150" => $h, "\160" => $p); $bararray["\142\143\157\144\x65"][$k++] = array("\164" => 0, "\x77" => 1, "\150" => 2, "\x70" => 0); $bararray["\155\141\x78\x77"] += 2; } goto sZwT4; VD8u1: $dsc_pos = array(2, 10, 12, 5, 9, 1, 5, 4, 3, 9, 11, 5, 10, 1, 6, 3, 4, 1, 10, 0, 2, 11, 8, 6, 1, 12, 3, 8, 6, 4, 4, 11, 0, 6, 1, 9, 11, 5, 3, 7, 3, 10, 7, 11, 8, 2, 10, 3, 5, 8, 0, 3, 12, 11, 8, 4, 5, 1, 3, 0, 7, 12, 9, 8, 10); goto xrIjY; XdwRd: $binary_code = bcmul($binary_code, 10); goto hipd2; HR10y: $characters = array(); goto Cj_1v; sZwT4: unset($bararray["\142\143\x6f\144\x65"][$k - 1]); goto Kg4_M; Ea_hH: switch (strlen($routing_code)) { case 0: $binary_code = 0; break; case 5: $binary_code = bcadd($routing_code, "\61"); break; case 9: $binary_code = bcadd($routing_code, "\x31\x30\60\x30\60\x31"); break; case 11: $binary_code = bcadd($routing_code, "\61\x30\x30\x30\61\60\x30\x30\60\x31"); break; default: return false; break; } goto XdwRd; xrIjY: $code_arr = explode("\55", $code); goto ANnBq; buk4D: return $bararray; goto y1zRp; dm8TB: $binary_code_arr = explode("\15", $binary_code_arr); goto AJlIm; KazGE: if ($fcs >> 10 == 1) { $codewords[9] += 659; } goto ABZID; C7F0v: $data = $this->hex_to_dec($binary_code_102bit); goto mVV1u; ABZID: $table2of13 = $this->imb_tables(2, 78); goto gLxbK; I522J: $bararray = array("\x63\x6f\x64\x65" => $code, "\x6d\141\170\167" => 0, "\155\141\x78\150" => 3, "\x62\143\157\x64\x65" => array()); goto Lz3pc; rN5E0: $characters = array_reverse($characters); goto sYTXY; mVV1u: $codewords[0] = bcmod($data, 636) * 2; goto qVKwq; hipd2: $binary_code = bcadd($binary_code, $tracking_number[0]); goto upzcH; gLxbK: $table5of13 = $this->imb_tables(5, 1287); goto HR10y; Kg4_M: --$bararray["\155\x61\x78\167"]; goto buk4D; abYz8: $binary_code = str_pad($binary_code, 26, "\x30", STR_PAD_LEFT); goto TZQa5; XMizx: for ($i = 1; $i < 9; ++$i) { $codewords[$i] = bcmod($data, 1365); $data = bcdiv($data, 1365); } goto WPx1a; Cj_1v: $bitmask = 512; goto i1_kQ; rgIlo: $binary_code = $this->dec_to_hex($binary_code); goto abYz8; OuIWm: $first_byte = sprintf("\45\x32\163", dechex(hexdec($binary_code_arr[0]) << 2 >> 2)); goto Ry0rz; XdzuO: $binary_code_arr = substr($binary_code_arr, 0, -1); goto dm8TB; ANnBq: $tracking_number = $code_arr[0]; goto l66o6; sYTXY: $k = 0; goto I522J; WPx1a: $codewords[9] = $data; goto KazGE; qVKwq: $data = bcdiv($data, 636); goto XMizx; TVHyt: $asc_chr = array(4, 0, 2, 6, 3, 5, 1, 9, 8, 7, 1, 2, 0, 6, 4, 8, 2, 9, 5, 3, 0, 1, 3, 7, 4, 6, 8, 9, 2, 0, 5, 1, 9, 4, 3, 8, 6, 7, 1, 2, 4, 3, 9, 5, 7, 8, 3, 0, 2, 1, 4, 0, 9, 1, 7, 0, 2, 4, 6, 3, 7, 1, 9, 5, 8); goto KOzC1; Fo60V: $binary_code = bcadd($binary_code, $tracking_number[1]); goto xh4Jt; TZQa5: $binary_code_arr = chunk_split($binary_code, 2, "\xd"); goto XdzuO; y0rqN: $asc_pos = array(3, 0, 8, 11, 1, 12, 8, 11, 10, 6, 4, 12, 2, 7, 9, 6, 7, 9, 2, 8, 4, 0, 12, 7, 10, 9, 0, 7, 10, 5, 7, 9, 6, 8, 2, 12, 1, 4, 2, 0, 1, 5, 4, 6, 12, 1, 0, 9, 4, 7, 5, 10, 2, 6, 9, 11, 2, 12, 6, 7, 5, 11, 0, 3, 2); goto VD8u1; AJlIm: $fcs = $this->imb_crc11fcs($binary_code_arr); goto OuIWm; KOzC1: $dsc_chr = array(7, 1, 9, 5, 8, 0, 2, 4, 6, 3, 5, 8, 9, 7, 3, 0, 6, 1, 7, 4, 6, 8, 9, 2, 5, 1, 7, 5, 4, 3, 8, 7, 6, 0, 2, 5, 4, 9, 3, 0, 1, 6, 8, 2, 0, 4, 5, 9, 6, 7, 5, 2, 6, 3, 8, 5, 1, 9, 8, 7, 4, 0, 2, 6, 3); goto y0rqN; y1zRp: } protected function barcode_imb_pre($code) { goto QFOsD; qIu1a: $k = 0; goto doCet; g0vRW: return $bararray; goto m6MnH; M4ezq: $characters = str_split(strtolower($code), 1); goto qIu1a; QFOsD: if (!preg_match("\x2f\x5e\133\146\x61\x64\x74\x46\101\x44\x54\x5d\173\66\65\175\44\57", $code) == 1) { return false; } goto M4ezq; E6GD0: for ($i = 0; $i < 65; ++$i) { switch ($characters[$i]) { case "\x66": goto iH6UZ; FVWKo: break; goto fGOfm; MGxyO: $h = 3; goto FVWKo; iH6UZ: $p = 0; goto MGxyO; fGOfm: case "\x61": goto Lpssl; aNUAj: $h = 2; goto WhSPI; Lpssl: $p = 0; goto aNUAj; WhSPI: break; goto ZAzQj; ZAzQj: case "\x64": goto jRdcd; HJ81n: $h = 2; goto YqyGF; jRdcd: $p = 1; goto HJ81n; YqyGF: break; goto YWhni; YWhni: case "\164": goto Niw1m; sqOa0: break; goto wn7aZ; Niw1m: $p = 1; goto ABodm; ABodm: $h = 1; goto sqOa0; wn7aZ: } $bararray["\x62\143\157\x64\x65"][$k++] = array("\x74" => 1, "\x77" => 1, "\150" => $h, "\160" => $p); $bararray["\x62\x63\x6f\144\x65"][$k++] = array("\164" => 0, "\x77" => 1, "\150" => 2, "\160" => 0); $bararray["\x6d\141\x78\x77"] += 2; } goto XrLuM; doCet: $bararray = array("\x63\157\144\x65" => $code, "\x6d\141\170\x77" => 0, "\x6d\x61\170\150" => 3, "\142\143\x6f\x64\x65" => array()); goto E6GD0; I5C88: --$bararray["\155\141\170\x77"]; goto g0vRW; XrLuM: unset($bararray["\x62\x63\157\144\x65"][$k - 1]); goto I5C88; m6MnH: } public function dec_to_hex($number) { goto HMvt2; hJly0: $hex = array(); goto j9d8q; tOfTO: while ($number > 0) { if ($number == 0) { array_push($hex, "\60"); } else { array_push($hex, strtoupper(dechex(bcmod($number, "\x31\66")))); $number = bcdiv($number, "\61\x36", 0); } } goto MT9mh; j9d8q: if ($number == 0) { return "\x30\60"; } goto tOfTO; MT9mh: $hex = array_reverse($hex); goto Zz86l; HMvt2: $i = 0; goto hJly0; Zz86l: return implode($hex); goto z8aWs; z8aWs: } public function hex_to_dec($hex) { goto TCZQ3; sjcD8: $bitval = 1; goto zUpLh; zUpLh: $len = strlen($hex); goto v0KFv; TCZQ3: $dec = 0; goto sjcD8; O96Hg: return $dec; goto b3ZoS; v0KFv: for ($pos = $len - 1; $pos >= 0; --$pos) { $dec = bcadd($dec, bcmul(hexdec($hex[$pos]), $bitval)); $bitval = bcmul($bitval, 16); } goto O96Hg; b3ZoS: } protected function imb_crc11fcs($code_arr) { goto VjX37; W85ip: $fcs = 0x7ff; goto tlvaS; VSxoX: return $fcs; goto Utm51; tGPu0: for ($byte = 1; $byte < 13; ++$byte) { $data = hexdec($code_arr[$byte]) << 3; for ($bit = 0; $bit < 8; ++$bit) { if (($fcs ^ $data) & 0x400) { $fcs = $fcs << 1 ^ $genpoly; } else { $fcs = $fcs << 1; } $fcs &= 0x7ff; $data <<= 1; } } goto VSxoX; tlvaS: $data = hexdec($code_arr[0]) << 5; goto oclI1; oclI1: for ($bit = 2; $bit < 8; ++$bit) { if (($fcs ^ $data) & 0x400) { $fcs = $fcs << 1 ^ $genpoly; } else { $fcs = $fcs << 1; } $fcs &= 0x7ff; $data <<= 1; } goto tGPu0; VjX37: $genpoly = 0xf35; goto W85ip; Utm51: } protected function imb_reverse_us($num) { goto oCgwP; Epj5f: for ($i = 0; $i < 16; ++$i) { $rev <<= 1; $rev |= $num & 1; $num >>= 1; } goto oDy9C; oCgwP: $rev = 0; goto Epj5f; oDy9C: return $rev; goto HBD7B; HBD7B: } protected function imb_tables($n, $size) { goto UGl17; Sg5op: $lli = 0; goto hOBLl; cZEGr: return $table; goto kXQ2q; hOBLl: $lui = $size - 1; goto uFZOh; UGl17: $table = array(); goto Sg5op; uFZOh: for ($count = 0; $count < 8192; ++$count) { $bit_count = 0; for ($bit_index = 0; $bit_index < 13; ++$bit_index) { $bit_count += intval(($count & 1 << $bit_index) != 0); } if ($bit_count == $n) { $reverse = $this->imb_reverse_us($count) >> 3; if ($reverse >= $count) { if ($reverse == $count) { $table[$lui] = $count; --$lui; } else { goto Qjx2K; Hgwnq: $table[$lli] = $reverse; goto i_uvh; i_uvh: ++$lli; goto QfSl2; RpFGH: ++$lli; goto Hgwnq; Qjx2K: $table[$lli] = $count; goto RpFGH; QfSl2: } } } } goto cZEGr; kXQ2q: } }
