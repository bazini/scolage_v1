<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-09-11 13:12:09              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*

*/
 class QRtools { public static function binarize($frame) { goto TQCuG; KEM8t: foreach ($frame as &$frameLine) { for ($i = 0; $i < $len; $i++) { $frameLine[$i] = ord($frameLine[$i]) & 1 ? "\61" : "\60"; } } goto RSPLR; RSPLR: return $frame; goto I0DWf; TQCuG: $len = count($frame); goto KEM8t; I0DWf: } public static function tcpdfBarcodeArray($code, $mode = "\121\x52\54\114", $tcPdfVersion = "\64\x2e\65\x2e\x30\x33\x37") { goto e_jNd; GDVjh: if (!is_array($mode)) { $mode = explode("\x2c", $mode); } goto tNcCD; tNcCD: $eccLevel = "\x4c"; goto GpMBM; GpMBM: if (count($mode) > 1) { $eccLevel = $mode[1]; } goto EQdbg; j8wIt: $barcode_array["\x6e\x75\x6d\137\162\x6f\x77\163"] = $size; goto x7nUn; EQdbg: $qrTab = QRcode::text($code, false, $eccLevel); goto XmLd9; YjkXm: foreach ($qrTab as $line) { goto ZsoII; FcXKj: $barcode_array["\142\143\157\144\x65"][] = $arrAdd; goto YVTqo; ZsoII: $arrAdd = array(); goto evzji; evzji: foreach (str_split($line) as $char) { $arrAdd[] = $char == "\x31" ? 1 : 0; } goto FcXKj; YVTqo: } goto sCmBh; e_jNd: $barcode_array = array(); goto GDVjh; x7nUn: $barcode_array["\x6e\x75\155\137\143\157\x6c\x73"] = $size; goto mknye; sCmBh: return $barcode_array; goto LdRap; XmLd9: $size = count($qrTab); goto j8wIt; mknye: $barcode_array["\x62\x63\157\144\x65"] = array(); goto YjkXm; LdRap: } public static function clearCache() { self::$frames = array(); } public static function buildCache() { goto Ze_Ma; ttAgQ: for ($a = 1; $a <= QRSPEC_VERSION_MAX; $a++) { $frame = QRspec::newFrame($a); if (QR_IMAGE) { $fileName = QR_CACHE_DIR . "\146\x72\x61\x6d\145\137" . $a . "\56\160\x6e\147"; QRimage::png(self::binarize($frame), $fileName, 1, 0); } $width = count($frame); $bitMask = array_fill(0, $width, array_fill(0, $width, 0)); for ($maskNo = 0; $maskNo < 8; $maskNo++) { $mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true); } } goto hTwpL; Ze_Ma: QRtools::markTime("\142\x65\146\157\162\145\137\142\165\x69\154\144\x5f\x63\x61\x63\x68\x65"); goto GKXUu; hTwpL: QRtools::markTime("\141\x66\164\x65\162\137\x62\x75\x69\x6c\144\137\143\x61\143\150\145"); goto yntb9; GKXUu: $mask = new QRmask(); goto ttAgQ; yntb9: } public static function log($outfile, $err) { if (QR_LOG_DIR !== false) { if ($err != '') { if ($outfile !== false) { file_put_contents(QR_LOG_DIR . basename($outfile) . "\55\x65\x72\162\157\162\163\56\x74\x78\164", date("\x59\x2d\155\55\x64\40\x48\72\151\x3a\163") . "\72\40" . $err, FILE_APPEND); } else { file_put_contents(QR_LOG_DIR . "\145\162\162\x6f\x72\163\x2e\164\x78\x74", date("\x59\x2d\x6d\55\x64\x20\x48\72\x69\x3a\x73") . "\x3a\40" . $err, FILE_APPEND); } } } } public static function dumpMask($frame) { $width = count($frame); for ($y = 0; $y < $width; $y++) { for ($x = 0; $x < $width; $x++) { echo ord($frame[$y][$x]) . "\54"; } } } public static function markTime($markerId) { goto Z8BzP; db4J6: $time = (float) $usec + (float) $sec; goto akmtU; Z8BzP: list($usec, $sec) = explode("\40", microtime()); goto db4J6; XxNch: $GLOBALS["\x71\x72\x5f\x74\x69\x6d\x65\x5f\142\145\x6e\x63\x68"][$markerId] = $time; goto QeSY6; akmtU: if (!isset($GLOBALS["\161\162\x5f\x74\x69\x6d\x65\137\x62\145\x6e\143\150"])) { $GLOBALS["\161\162\x5f\164\151\x6d\x65\x5f\142\145\x6e\143\150"] = array(); } goto XxNch; QeSY6: } public static function timeBenchmark() { goto I1M9F; cWZ6R: $lastTime = 0; goto sFEzZ; sFEzZ: $startTime = 0; goto nhXBd; QgRT9: foreach ($GLOBALS["\x71\162\x5f\164\x69\155\145\137\x62\145\156\x63\150"] as $markerId => $thisTime) { goto Xd0Hr; Xd0Hr: if ($p > 0) { echo "\74\x74\x72\76\74\x74\x68\x20\163\164\171\154\x65\75\42\164\145\x78\164\55\x61\154\151\x67\x6e\x3a\x72\151\x67\x68\164\x22\76\x74\x69\154\x6c\40" . $markerId . "\72\x20\74\x2f\164\x68\x3e\74\x74\x64\x3e" . number_format($thisTime - $lastTime, 6) . "\x73\74\57\x74\x64\x3e\74\57\164\x72\x3e"; } else { $startTime = $thisTime; } goto hEwU_; FuokZ: $lastTime = $thisTime; goto c5hQP; hEwU_: $p++; goto FuokZ; c5hQP: } goto s7W90; s7W90: echo "\74\57\x74\x62\157\x64\x79\x3e\x3c\164\x66\x6f\157\164\x3e\15\12\40\x20\40\x20\x20\40\40\x20\x20\40\40\x20\x20\40\x20\x20\74\x74\x72\40\x73\164\171\154\145\x3d\42\142\157\162\x64\145\x72\55\x74\157\x70\x3a\x32\160\x78\x20\163\x6f\x6c\151\144\x20\142\154\141\x63\153\x22\76\74\164\150\x20\x73\x74\171\x6c\145\75\x22\164\145\x78\x74\55\x61\x6c\x69\147\x6e\x3a\x72\x69\147\x68\164\42\x3e\x54\x4f\124\x41\x4c\72\40\x3c\x2f\164\x68\76\x3c\164\144\x3e" . number_format($lastTime - $startTime, 6) . "\x73\74\57\x74\144\x3e\x3c\x2f\x74\x72\x3e\15\12\40\40\40\x20\x20\x20\40\x20\x20\x20\x20\40\x3c\57\164\x66\157\x6f\x74\76\15\12\x20\x20\x20\x20\40\40\40\40\x20\x20\x20\40\x3c\57\x74\141\142\154\x65\76"; goto z4RsT; C0aeI: echo "\74\x74\141\142\154\x65\x20\x63\x65\x6c\x6c\x70\x61\144\x64\151\x6e\147\x3d\42\x33\42\40\x63\145\x6c\x6c\163\160\141\x63\151\156\x67\x3d\x22\61\x22\x3e\15\xa\40\40\x20\x20\40\40\40\x20\x20\40\x20\x20\40\x20\40\40\40\40\40\40\74\x74\150\x65\141\144\x3e\74\x74\162\40\x73\x74\171\x6c\x65\75\42\x62\x6f\162\x64\145\x72\55\142\157\x74\x74\x6f\x6d\72\x31\x70\170\x20\163\x6f\x6c\x69\x64\x20\163\x69\154\x76\x65\162\42\x3e\74\164\x64\x20\x63\157\154\x73\160\141\x6e\x3d\42\62\42\x20\x73\x74\171\x6c\x65\75\x22\164\x65\170\164\x2d\141\x6c\x69\147\x6e\x3a\x63\145\156\x74\x65\x72\42\x3e\x42\x45\x4e\x43\110\115\x41\122\113\74\57\x74\144\x3e\74\x2f\x74\162\76\74\57\x74\x68\x65\x61\x64\76\15\xa\40\40\40\40\40\40\x20\x20\40\x20\40\40\40\x20\40\x20\40\40\x20\40\x3c\164\142\157\144\171\x3e"; goto QgRT9; nhXBd: $p = 0; goto C0aeI; I1M9F: self::markTime("\146\x69\x6e\151\163\x68"); goto cWZ6R; z4RsT: } } QRtools::markTime("\x73\x74\141\162\x74");
